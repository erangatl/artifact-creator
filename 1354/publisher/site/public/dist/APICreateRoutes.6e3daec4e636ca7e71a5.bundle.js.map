{"version":3,"sources":["webpack:///./source/src/app/components/Apis/Create/Components/APICreateBase.jsx","webpack:///./source/src/app/components/Apis/Create/Components/DefaultAPIForm.jsx","webpack:///./source/src/app/components/Apis/Create/Default/APICreateDefault.jsx","webpack:///./source/src/app/components/Apis/Create/Components/APICreateProductBase.jsx","webpack:///./source/src/app/components/Apis/Create/APIProduct/APIProductCreateWrapper.jsx","webpack:///./source/src/app/components/Apis/Create/OpenAPI/ApiCreateOpenAPI.jsx","webpack:///./source/src/app/components/Apis/Create/WSDL/ApiCreateWSDL.jsx","webpack:///./source/src/app/components/Apis/Create/GraphQL/ApiCreateGraphQL.jsx","webpack:///./source/src/app/components/Apis/Create/WebSocket/ApiCreateWebSocket.jsx","webpack:///./source/src/app/components/Apis/Create/APICreateRoutes.jsx"],"names":["APICreateBase","props","title","children","react_default","a","createElement","Grid","container","spacing","item","xs","sm","md","Paper","elevation","propTypes","PropTypes","element","isRequired","useStyles","makeStyles","theme","mandatoryStar","color","palette","error","main","marginLeft","helperTextContext","& p","textOverflow","width","display","whiteSpace","overflow","endpointValidChip","border","endpointInvalidChip","endpointErrorChip","iconButton","padding","iconButtonValid","green","actualContext","_ref","context","version","initialContext","indexOf","replace","DefaultAPIForm","onChange","onValidate","api","isAPIProduct","isWebSocket","classes","validity","setValidity","useState","isEndpointValid","setIsEndpointValid","statusCode","setStatusCode","isUpdating","setUpdating","isErrorCode","setIsErrorCode","useEffect","Boolean","name","policies","updateValidity","newState","isFormValid","Object","entries","length","map","_ref2","value","reduce","acc","cVal","policy","validate","field","nameValidity","APIValidation","apiName","required","abortEarly","apiParameter","then","result","body","list","toLowerCase","_objectSpread","details","message","contextValidity","apiContext","includes","contextVal","slice","lastIndexOf","checkContext","versionValidity","apiVersion","undefined","policyValidity","noValidate","autoComplete","TextField","autoFocus","fullWidth","id","label","Fragment","lib","defaultMessage","className","helperText","detail","index","style","marginTop","InputProps","onBlur","_ref3","target","InputLabelProps","for","margin","variant","_ref6","concat","_ref4","root","_ref5","endpoint","endpointURL","rel","href","endAdornment","InputAdornment","position","Chip","condition","otherwise","iff","IconButton","aria-label","onClick","API","testEndpoint","statusMessage","finally","disabled","CircularProgress","size","Icon","SelectPolicies","isValid","direction","justify","alignItems","Typography","gutterBottom","defaultProps","shape","func","APICreateDefault","history","intl","settings","useAppContext","pageError","setPageError","isCreating","setIsCreating","isPublishing","setIsPublishing","apiInputs","inputsDispatcher","useReducer","currentState","inputAction","action","APICreateDefault_objectSpread","[object Object]","formValidity","isPublishable","isAPICreateDisabled","createAPI","promisedCreatedAPI","apiData","endpointConfig","endpoint_type","sandbox_endpoints","url","production_endpoints","gatewayEnvironments","environment","env","type","APIProduct","saveProduct","apiProduct","Alert","info","push","catch","response","description","console","save","pageTitle","component","Banner","onClose","disableActions","dense","paperProps","event","Button","AuthManager","isNotPublisher","publish","workflowStatus","WORKFLOW_STATUS","CREATED","formatMessage","react_router_dom","to","withRouter","injectIntl","APICreateProductBase","height","saveButton","titleWrapper","flexDirection","paddingBottom","buttonWrapper","alternativeLabel","ApiProductCreateWrapper","wizardStep","setWizardStep","apiResources","setApiResources","APIProductCreateWrapper_objectSpread","inputValue","setCreating","setPublishing","steps","Box","Stepper","activeStep","Step","key","StepLabel","ProductResourcesEditWorkspace","isStateCreate","step","apis","state","transport","ApiCreateOpenAPI","ApiCreateOpenAPI_objectSpread","endpoints","inputType","handleOnValidate","ProvideOpenAPI","additionalProperties","Array","isArray","newAPI","importOpenAPIByFile","importOpenAPIByUrl","ApiCreateWSDL","ApiCreateWSDL_objectSpread","mode","ProvideWSDL","promisedWSDLImport","Wsdl","importByUrl","importByFileOrArchive","ApiCreateGraphQL","ApiCreateGraphQL_objectSpread","ProvideGraphQL","implementationType","graphQLInfo","operations","newApi","JSON","stringify","file","importGraphQL","uuid","obj","ApiCreateWebSocket","Default_APICreateDefault","APICreateRoutes","content","react_router","path","APIProductCreateWrapper","ApiCreateSwagger","ResourceNotFound","string","withStyles","flexGrow"],"mappings":"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","file":"APICreateRoutes.6e3daec4e636ca7e71a5.bundle.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\n\n\n/**\n * Base component for all API create forms\n *\n * @param {Object} props title and children components are expected\n * @returns {React.Component} Base element\n */\nexport default function APICreateBase(props) {\n    const { title, children } = props;\n    return (\n        <Grid container spacing={3}>\n            <Grid item xs={12} />\n            {/*\n            Following two grids control the placement of whole create page\n            For centering the content better use `container` props, but instead used an empty grid item for flexibility\n             */}\n            <Grid item sm={0} md={3} />\n            <Grid item sm={12} md={6}>\n                <Grid container spacing={5}>\n                    <Grid item md={12}>\n                        {title}\n                    </Grid>\n                    <Grid item xs={12} md={12}>\n                        <Paper elevation={0}>{children}</Paper>\n                    </Grid>\n                </Grid>\n            </Grid>\n        </Grid>\n    );\n}\nAPICreateBase.propTypes = {\n    title: PropTypes.element.isRequired,\n    children: PropTypes.element.isRequired,\n};\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport TextField from '@material-ui/core/TextField';\nimport Grid from '@material-ui/core/Grid';\nimport { InputAdornment, IconButton, Icon } from '@material-ui/core';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Chip from '@material-ui/core/Chip';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { FormattedMessage } from 'react-intl';\nimport green from '@material-ui/core/colors/green';\nimport APIValidation from 'AppData/APIValidation';\nimport API from 'AppData/api';\n\nimport SelectPolicies from './SelectPolicies';\n\nconst useStyles = makeStyles((theme) => ({\n    mandatoryStar: {\n        color: theme.palette.error.main,\n        marginLeft: theme.spacing(0.1),\n    },\n    helperTextContext: {\n        '& p': {\n            textOverflow: 'ellipsis',\n            width: 400,\n            display: 'block',\n            whiteSpace: 'nowrap',\n            overflow: 'hidden',\n        },\n    },\n    endpointValidChip: {\n        color: 'green',\n        border: '1px solid green',\n    },\n    endpointInvalidChip: {\n        color: '#ffd53a',\n        border: '1px solid #ffd53a',\n    },\n    endpointErrorChip: {\n        color: 'red',\n        border: '1px solid red',\n    },\n    iconButton: {\n        padding: theme.spacing(1),\n    },\n    iconButtonValid: {\n        padding: theme.spacing(1),\n        color: green[500],\n    },\n}));\n\n/**\n *\n * Return the actual API context that will be exposed in the gateway.\n * If the context value contains `{version}` placeholder text it will be replaced with the actual version value.\n * If there is no such placeholder text in the context, The version will be appended to the context\n * i:e /context/version\n * Parameter expect an object containing `context` and `version` properties.\n * @param {String} context API Context\n * @param {String} version API Version string\n * @returns {String} Derived actual context string\n */\nfunction actualContext({ context, version }) {\n    let initialContext = '{context}/{version}';\n    if (context) {\n        initialContext = context;\n        if (context.indexOf('{version}') < 0) {\n            initialContext = context + '/{version}';\n        }\n    }\n    if (version) {\n        initialContext = initialContext.replace('{version}', version);\n    }\n    return initialContext;\n}\n\n/**\n * This method used to  compare the context values\n * @param {*} value  input value\n * @param {*} result resulted value\n * @returns {Boolean} true or false\n */\nfunction checkContext(value, result) {\n    const contextVal = value.includes('/') ? value.toLowerCase() : '/' + value.toLowerCase();\n    if (contextVal === '/' + result.toLowerCase().slice(result.toLowerCase().lastIndexOf('/') + 1)\n     || contextVal === result.toLowerCase()) {\n        return true;\n    }\n    return false;\n}\n\n/**\n * Improved API create default form\n *\n * @export\n * @param {*} props\n * @returns\n */\nexport default function DefaultAPIForm(props) {\n    const {\n        onChange, onValidate, api, isAPIProduct, isWebSocket,\n    } = props;\n    const classes = useStyles();\n    const [validity, setValidity] = useState({});\n    const [isEndpointValid, setIsEndpointValid] = useState();\n    const [statusCode, setStatusCode] = useState('');\n    const [isUpdating, setUpdating] = useState(false);\n    const [isErrorCode, setIsErrorCode] = useState(false);\n    const iff = (condition, then, otherwise) => (condition ? then : otherwise);\n\n    // Check the provided API validity on mount, TODO: Better to use Joi schema here ~tmkb\n    useEffect(() => {\n        onValidate(Boolean(api.name)\n                && (isAPIProduct || Boolean(api.version))\n                && Boolean(api.context)\n                && Boolean(api.policies));\n    }, []);\n\n    const updateValidity = (newState) => {\n        let isFormValid = Object.entries(newState).length > 0\n            && Object.entries(newState)\n                .map(([, value]) => value === null || value === undefined)\n                .reduce((acc, cVal) => acc && cVal); // Aggregate the individual validation states\n        // TODO: refactor following redundant validation.\n        // The valid state should available in the above reduced state ~tmkb\n        // if isAPIProduct gets true version validation has been skipped\n        isFormValid = isFormValid\n            && Boolean(api.name)\n            && (isAPIProduct || Boolean(api.version))\n            && Boolean(api.context)\n            && (!isAPIProduct || newState.policy === null);\n        onValidate(isFormValid, validity);\n        setValidity(newState);\n    };\n    /**\n     * Trigger the provided onValidate call back on each input validation run\n     * Do the validation state aggregation and call the onValidate method with aggregated value\n     * @param {string} field The input field.\n     * @param {string} value Validation state object\n     */\n    function validate(field, value) {\n        switch (field) {\n            case 'name': {\n                const nameValidity = APIValidation.apiName.required().validate(value, { abortEarly: false }).error;\n                if (nameValidity === null) {\n                    APIValidation.apiParameter.validate(field + ':' + value).then((result) => {\n                        if (result.body.list.length > 0 && value.toLowerCase() === result.body.list[0]\n                            .name.toLowerCase()) {\n                            updateValidity({\n                                ...validity,\n                                name: { details: [{ message: 'Name ' + value + ' already exists' }] },\n                            });\n                        } else {\n                            updateValidity({ ...validity, name: nameValidity });\n                        }\n                    });\n                } else {\n                    updateValidity({ ...validity, name: nameValidity });\n                }\n                break;\n            }\n            case 'context': {\n                const contextValidity = APIValidation.apiContext.required().validate(value, { abortEarly: false })\n                    .error;\n                const apiContext = value.includes('/') ? value : '/' + value;\n                if (contextValidity === null) {\n                    APIValidation.apiParameter.validate(field + ':' + apiContext).then((result) => {\n                        if (result.body.list.length > 0 && checkContext(value, result.body.list[0].context)) {\n                            updateValidity({\n                                ...validity,\n                                context: { details: [{ message: apiContext + ' context already exists' }] },\n                            });\n                        } else {\n                            updateValidity({ ...validity, context: contextValidity, version: null });\n                        }\n                    });\n                } else {\n                    updateValidity({ ...validity, context: contextValidity });\n                }\n                break;\n            }\n            case 'version': {\n                const versionValidity = APIValidation.apiVersion.required().validate(value).error;\n                if (versionValidity === null) {\n                    const apiVersion = api.context.includes('/') ? api.context + '/' + value : '/'\n                    + api.context + '/' + value;\n                    APIValidation.apiParameter.validate('context:' + api.context\n                        + '/' + value).then((result) => {\n                        // version of APIProduct equals to 1.0.0\n                        if (result.body.list.length > 0 && (\n                            (result.body.list[0].version !== undefined\n                            && (result.body.list[0].version.toLowerCase()\n                                === value.toLowerCase())) || value === '1.0.0')) {\n                            updateValidity({\n                                ...validity,\n                                version: { message: apiVersion + ' context with version already exists' },\n                            });\n                        } else {\n                            updateValidity({ ...validity, version: versionValidity });\n                        }\n                    });\n                } else {\n                    updateValidity({ ...validity, version: versionValidity });\n                }\n                break;\n            }\n            case 'policies': {\n                const policyValidity = value && value.length > 0;\n                updateValidity({\n                    ...validity,\n                    policy:\n                        policyValidity || !isAPIProduct\n                            ? null\n                            : { message: 'Need to select at least one policy to create an API Product' },\n                });\n                break;\n            }\n            default: {\n                break;\n            }\n        }\n    }\n\n    function testEndpoint(endpoint) {\n        setUpdating(true);\n        const restApi = new API();\n        restApi.testEndpoint(endpoint)\n            .then((result) => {\n                if (result.body.error !== null) {\n                    setStatusCode(result.body.error);\n                    setIsErrorCode(true);\n                } else {\n                    setStatusCode(result.body.statusCode + ' ' + result.body.statusMessage);\n                    setIsErrorCode(false);\n                }\n                if (result.body.statusCode >= 200 && result.body.statusCode < 300) {\n                    setIsEndpointValid(true);\n                    setIsErrorCode(false);\n                } else {\n                    setIsEndpointValid(false);\n                }\n            }).finally(() => {\n                setUpdating(false);\n            });\n    }\n\n    return (\n        <Grid item md={11}>\n            <form noValidate autoComplete='off'>\n                <TextField\n                    autoFocus\n                    fullWidth\n                    id='api-name'\n                    error={Boolean(validity.name)}\n                    label={(\n                        <>\n                            <FormattedMessage id='Apis.Create.Components.DefaultAPIForm.name' defaultMessage='Name' />\n                            <sup className={classes.mandatoryStar}>*</sup>\n                        </>\n                    )}\n                    helperText={\n                        validity.name\n                        && validity.name.details.map((detail, index) => {\n                            return <div style={{ marginTop: index !== 0 && '10px' }}>{detail.message}</div>;\n                        })\n                    }\n                    value={api.name}\n                    name='name'\n                    onChange={onChange}\n                    InputProps={{\n                        id: 'itest-id-apiname-input',\n                        onBlur: ({ target: { value } }) => {\n                            validate('name', value);\n                        },\n                    }}\n                    InputLabelProps={{\n                        for: 'itest-id-apiname-input',\n                    }}\n                    margin='normal'\n                    variant='outlined'\n                />\n                <Grid container spacing={2}>\n                    {!isAPIProduct ? (\n                        <>\n                            <Grid item md={8} xs={6}>\n                                <TextField\n                                    fullWidth\n                                    id='context'\n                                    error={Boolean(validity.context)}\n                                    label={(\n                                        <>\n                                            <FormattedMessage\n                                                id='Apis.Create.Components.DefaultAPIForm.api.context'\n                                                defaultMessage='Context'\n                                            />\n                                            <sup className={classes.mandatoryStar}>*</sup>\n                                        </>\n                                    )}\n                                    name='context'\n                                    value={api.context}\n                                    onChange={onChange}\n                                    InputProps={{\n                                        id: 'itest-id-apicontext-input',\n                                        onBlur: ({ target: { value } }) => {\n                                            validate('context', value);\n                                        },\n                                    }}\n                                    InputLabelProps={{\n                                        for: 'itest-id-apicontext-input',\n                                    }}\n                                    helperText={\n                                        (validity.context\n                                            && validity.context.details.map((detail, index) => {\n                                                return (\n                                                    <div style={{ marginTop: index !== 0 && '10px' }}>\n                                                        {detail.message}\n                                                    </div>\n                                                );\n                                            }))\n                                        || `API will be exposed in ${actualContext(api)} context at the gateway`\n                                    }\n                                    classes={{ root: classes.helperTextContext }}\n                                    margin='normal'\n                                    variant='outlined'\n                                />\n                            </Grid>\n                            <Grid item md={4} xs={6}>\n                                <TextField\n                                    fullWidth\n                                    id='version'\n                                    error={Boolean(validity.version)}\n                                    label={(\n                                        <>\n                                            <FormattedMessage\n                                                id='Apis.Create.Components.DefaultAPIForm.version'\n                                                defaultMessage='Version'\n                                            />\n                                            <sup className={classes.mandatoryStar}>*</sup>\n                                        </>\n                                    )}\n                                    name='version'\n                                    value={api.version}\n                                    onChange={onChange}\n                                    InputProps={{\n                                        id: 'itest-id-apiversion-input',\n                                        onBlur: ({ target: { value } }) => {\n                                            validate('version', value);\n                                        },\n                                    }}\n                                    InputLabelProps={{\n                                        for: 'itest-id-apiversion-input',\n                                    }}\n                                    helperText={validity.version && validity.version.message}\n                                    margin='normal'\n                                    variant='outlined'\n                                />\n                            </Grid>\n                        </>\n                    ) : (\n                        <>\n                            <Grid item md={12}>\n                                <TextField\n                                    fullWidth\n                                    id='context'\n                                    error={Boolean(validity.context)}\n                                    label={(\n                                        <>\n                                            <FormattedMessage\n                                                id='Apis.Create.Components.DefaultAPIForm.api.product.context'\n                                                defaultMessage='Context'\n                                            />\n                                            <sup className={classes.mandatoryStar}>*</sup>\n                                        </>\n                                    )}\n                                    name='context'\n                                    value={api.context}\n                                    onChange={onChange}\n                                    InputProps={{\n                                        onBlur: ({ target: { value } }) => {\n                                            validate('context', value);\n                                        },\n                                    }}\n                                    helperText={\n                                        (validity.context\n                                            && validity.context.details.map((detail, index) => {\n                                                return (\n                                                    <div style={{ marginTop: index !== 0 && '10px' }}>\n                                                        {detail.message}\n                                                    </div>\n                                                );\n                                            }))\n                                        || `API Product will be exposed in ${actualContext(api)} context at the gateway`\n                                    }\n                                    margin='normal'\n                                    variant='outlined'\n                                />\n                            </Grid>\n                        </>\n                    )}\n                </Grid>\n                {!isAPIProduct && (\n                    <TextField\n                        fullWidth\n                        id='itest-id-apiendpoint-input'\n                        label='Endpoint'\n                        name='endpoint'\n                        value={api.endpoint}\n                        onChange={onChange}\n                        helperText={\n                            validity.endpointURL && (\n                                <span>\n                                    Enter a valid\n                                    <a\n                                        rel='noopener noreferrer'\n                                        target='_blank'\n                                        href='http://tools.ietf.org/html/rfc3986'\n                                    >\n                                        RFC 3986\n                                    </a>\n                                    {' '}\n                                    URI\n                                </span>\n                            )\n                        }\n                        error={Boolean(validity.endpointURL)}\n                        margin='normal'\n                        variant='outlined'\n                        InputProps={{\n                            endAdornment: (\n                                <InputAdornment position='end'>\n                                    {statusCode && (\n                                        <Chip\n                                            label={statusCode}\n                                            className={isEndpointValid ? classes.endpointValidChip : iff(\n                                                isErrorCode,\n                                                classes.endpointErrorChip, classes.endpointInvalidChip,\n                                            )}\n                                            variant='outlined'\n                                        />\n                                    )}\n                                    {!isWebSocket && (\n                                        <IconButton\n                                            className={isEndpointValid ? classes.iconButtonValid : classes.iconButton}\n                                            aria-label='TestEndpoint'\n                                            onClick={() => testEndpoint(api.endpoint)}\n                                            disabled={isUpdating}\n                                        >\n                                            {isUpdating\n                                                ? <CircularProgress size={20} />\n                                                : (\n                                                    <Icon>\n                                                check_circle\n                                                    </Icon>\n                                                )}\n                                        </IconButton>\n                                    )}\n                                </InputAdornment>\n                            ),\n                        }}\n                    />\n                )}\n\n                <SelectPolicies\n                    policies={api.policies}\n                    isAPIProduct={isAPIProduct}\n                    onChange={onChange}\n                    validate={validate}\n                    isValid={validity.policies}\n                />\n            </form>\n            <Grid container direction='row' justify='flex-end' alignItems='center'>\n                <Grid item>\n                    <Typography variant='caption' display='block' gutterBottom>\n                        <sup style={{ color: 'red' }}>*</sup>\n                        {' '}\nMandatory fields\n                    </Typography>\n                </Grid>\n            </Grid>\n        </Grid>\n    );\n}\n\nDefaultAPIForm.defaultProps = {\n    onValidate: () => {},\n    api: {}, // Uncontrolled component\n    isWebSocket: false,\n};\nDefaultAPIForm.propTypes = {\n    api: PropTypes.shape({}),\n    isAPIProduct: PropTypes.shape({}).isRequired,\n    isWebSocket: PropTypes.shape({}),\n    onChange: PropTypes.func.isRequired,\n    onValidate: PropTypes.func,\n};\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useReducer, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport Button from '@material-ui/core/Button';\nimport { Link } from 'react-router-dom';\nimport { withRouter } from 'react-router';\nimport Alert from 'AppComponents/Shared/Alert';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport API from 'AppData/api';\nimport { useAppContext } from 'AppComponents/Shared/AppContext';\nimport Banner from 'AppComponents/Shared/Banner';\n\nimport APICreateBase from 'AppComponents/Apis/Create/Components/APICreateBase';\nimport DefaultAPIForm from 'AppComponents/Apis/Create/Components/DefaultAPIForm';\nimport APIProduct from 'AppData/APIProduct';\nimport AuthManager from 'AppData/AuthManager';\n\n/**\n * Handle API creation from WSDL.\n *\n * @export\n * @param {*} props\n * @returns\n */\nfunction APICreateDefault(props) {\n    const {\n        isWebSocket, isAPIProduct, history, intl,\n    } = props;\n    const { settings } = useAppContext();\n    const [pageError, setPageError] = useState(null);\n    const [isCreating, setIsCreating] = useState();\n    const [isPublishing, setIsPublishing] = useState(false);\n    /**\n     *\n     * Reduce the events triggered from API input fields to current state\n     */\n    function apiInputsReducer(currentState, inputAction) {\n        const { action, value } = inputAction;\n        switch (action) {\n            case 'name':\n            case 'version':\n            case 'endpoint':\n            case 'context':\n            case 'policies':\n            case 'isFormValid':\n                return { ...currentState, [action]: value };\n            default:\n                return currentState;\n        }\n    }\n    const [apiInputs, inputsDispatcher] = useReducer(apiInputsReducer, {\n        formValidity: false,\n    });\n    const isPublishable = apiInputs.endpoint && apiInputs.policies && apiInputs.policies.length !== 0;\n    const isAPICreateDisabled = !(apiInputs.name && apiInputs.version && apiInputs.context) || isCreating\n                                 || isPublishing;\n\n    /**\n     *\n     *\n     * @param {*} event\n     */\n    function handleOnChange(event) {\n        const { name: action, value } = event.target;\n        inputsDispatcher({ action, value });\n    }\n\n    /**\n     *\n     * Set the validity of the API Inputs form\n     * @param {*} isValidForm\n     * @param {*} validationState\n     */\n    function handleOnValidate(isFormValid) {\n        inputsDispatcher({\n            action: 'isFormValid',\n            value: isFormValid,\n        });\n    }\n\n    /**\n     *\n     *\n     * @param {*} params\n     */\n    function createAPI() {\n        setIsCreating(true);\n        const {\n            name, version, context, endpoint, policies,\n        } = apiInputs;\n        let promisedCreatedAPI;\n        const apiData = {\n            name,\n            version,\n            context,\n            policies,\n        };\n        if (endpoint) {\n            apiData.endpointConfig = {\n                endpoint_type: 'http',\n                sandbox_endpoints: {\n                    url: endpoint,\n                },\n                production_endpoints: {\n                    url: endpoint,\n                },\n            };\n        }\n        apiData.gatewayEnvironments = settings.environment.map((env) => env.name);\n        if (isWebSocket) {\n            apiData.type = 'WS';\n        }\n        if (isAPIProduct) {\n            const newAPIProduct = new APIProduct(apiData);\n            promisedCreatedAPI = newAPIProduct\n                .saveProduct(apiData)\n                .then((apiProduct) => {\n                    Alert.info('API Product created successfully');\n                    history.push(`/api-products/${apiProduct.id}/overview`);\n                    return apiProduct;\n                })\n                .catch((error) => {\n                    if (error.response) {\n                        Alert.error(error.response.body.description);\n                        setPageError(error.response.body);\n                    } else {\n                        // TODO add i18n ~tmkb\n                        const message = 'Something went wrong while adding the API Product';\n                        Alert.error(message);\n                        setPageError(message);\n                    }\n                    console.error(error);\n                });\n        } else {\n            const newAPI = new API(apiData);\n            promisedCreatedAPI = newAPI\n                .save()\n                .then((api) => {\n                    Alert.info('API created successfully');\n                    return api;\n                })\n                .catch((error) => {\n                    if (error.response) {\n                        Alert.error(error.response.body.description);\n                        setPageError(error.response.body);\n                    } else {\n                        const message = 'Something went wrong while adding the API';\n                        Alert.error(message);\n                        setPageError(message);\n                    }\n                    console.error(error);\n                    setIsPublishing(false); // We don't publish if something when wrong\n                })\n                .finally(() => {\n                    setIsCreating(false);\n                });\n        }\n        return promisedCreatedAPI.finally(() => setIsCreating(false));\n    }\n\n    /**\n     *\n     *\n     */\n    function createAndPublish() {\n        setIsPublishing(true);\n        createAPI().then((api) => api\n            .publish()\n            .then((response) => {\n                const { workflowStatus } = response.body;\n                if (workflowStatus === APICreateDefault.WORKFLOW_STATUS.CREATED) {\n                    Alert.info(intl.formatMessage({\n                        id: 'Apis.Create.Default.APICreateDefault.success.publishStatus',\n                        defaultMessage: 'Lifecycle state change request has been sent',\n                    }));\n                } else {\n                    Alert.info(intl.formatMessage({\n                        id: 'Apis.Create.Default.APICreateDefault.success.otherStatus',\n                        defaultMessage: 'API updated successfully',\n                    }));\n                }\n                history.push(`/apis/${api.id}/overview`);\n            })\n            .catch((error) => {\n                if (error.response) {\n                    Alert.error(error.response.body.description);\n                    setPageError(error.response.body);\n                } else {\n                    const message = 'Something went wrong while publishing the API';\n                    Alert.error(intl.formatMessage({\n                        id: 'Apis.Create.Default.APICreateDefault.error.errorMessage',\n                        defaultMessage: message,\n                    }));\n                    setPageError(message);\n                }\n                console.error(error);\n            })\n            .finally(() => {\n                setIsPublishing(false);\n            }));\n    }\n\n    /**\n     *\n     *\n     */\n    function createAPIOnly() {\n        createAPI().then((api) => {\n            history.push(`/apis/${api.id}/overview`);\n        });\n    }\n    let pageTitle = (\n        <>\n            <Typography variant='h5' component='h1'>\n                <FormattedMessage\n                    id='Apis.Create.Default.APICreateDefault.api.heading'\n                    defaultMessage='Create an API'\n                />\n            </Typography>\n            <Typography variant='caption'>\n                <FormattedMessage\n                    id='Apis.Create.Default.APICreateDefault.api.sub.heading'\n                    defaultMessage={\n                        'Create an API by providing a Name, a Version, a Context,'\n                        + ' Backend Endpoint(s) (optional), and Business Plans (optional).'\n                    }\n                />\n            </Typography>\n        </>\n    );\n    if (isAPIProduct) {\n        pageTitle = (\n            <>\n                <Typography variant='h5' component='h1'>\n                    <FormattedMessage\n                        id='Apis.Create.Default.APICreateDefault.apiProduct.heading'\n                        defaultMessage='Create an API Product'\n                    />\n                </Typography>\n                <Typography variant='caption'>\n                    <FormattedMessage\n                        id='Apis.Create.Default.APICreateDefault.apiProduct.sub.heading'\n                        defaultMessage={\n                            'Create an API Product by providing a Name, a Context,'\n                            + ' and Business Plans (optional).'\n                        }\n                    />\n                </Typography>\n            </>\n        );\n    } else if (isWebSocket) {\n        pageTitle = (\n            <>\n                <Typography variant='h5' component='h1'>\n                    <FormattedMessage\n                        id='Apis.Create.Default.APICreateDefault.webSocket.heading'\n                        defaultMessage='Create a WebSocket API'\n                    />\n                </Typography>\n                <Typography variant='caption'>\n                    <FormattedMessage\n                        id='Apis.Create.Default.APICreateDefault.webSocket.sub.heading'\n                        defaultMessage={\n                            'Create a WebSocket API by providing a Name, a Context,'\n                            + ' and Business Plans (optional).'\n                        }\n                    />\n                </Typography>\n            </>\n        );\n    }\n\n    return (\n        <APICreateBase title={pageTitle}>\n            <Grid container direction='row' justify='center' alignItems='center' spacing={3}>\n                {/* Page error banner */}\n                {pageError && (\n                    <Grid item xs={11}>\n                        <Banner\n                            onClose={() => setPageError(null)}\n                            disableActions\n                            dense\n                            paperProps={{ elevation: 1 }}\n                            type='error'\n                            message={pageError}\n                        />\n                    </Grid>\n                )}\n                {/* end of Page error banner */}\n                <Grid item xs={12} />\n                <Grid item md={1} xs={0} />\n                <Grid item md={11} xs={12}>\n                    <DefaultAPIForm\n                        onValidate={handleOnValidate}\n                        onChange={handleOnChange}\n                        api={apiInputs}\n                        isAPIProduct={isAPIProduct}\n                        isWebSocket={isWebSocket}\n                    />\n                </Grid>\n                <Grid item md={1} xs={0} />\n                <Grid item md={11} xs={12}>\n                    <Grid container direction='row' justify='flex-start' alignItems='center' spacing={2}>\n                        <Grid item>\n                            <Button\n                                variant='contained'\n                                color='primary'\n                                disabled={isAPICreateDisabled || !apiInputs.isFormValid}\n                                onClick={createAPIOnly}\n                            >\n                                Create\n                                {' '}\n                                {isCreating && !isPublishing && <CircularProgress size={24} />}\n                            </Button>\n                        </Grid>\n                        {!AuthManager.isNotPublisher() && (\n                            <Grid item>\n                                <Button\n                                    id='itest-id-apicreatedefault-createnpublish'\n                                    variant='contained'\n                                    color='primary'\n                                    disabled={!isPublishable || isAPICreateDisabled || !apiInputs.isFormValid}\n                                    onClick={createAndPublish}\n                                >\n                                    {!isPublishing && 'Create & Publish'}\n                                    {isPublishing && <CircularProgress size={24} />}\n                                    {isCreating && isPublishing && 'Creating API . . .'}\n                                    {!isCreating && isPublishing && 'Publishing API . . .'}\n                                </Button>\n                            </Grid>\n                        )}\n                        <Grid item>\n                            <Link to='/apis/'>\n                                <Button variant='text'>\n                                    <FormattedMessage\n                                        id='Apis.Create.Default.APICreateDefault.cancel'\n                                        defaultMessage='Cancel'\n                                    />\n                                </Button>\n                            </Link>\n                        </Grid>\n                    </Grid>\n                </Grid>\n            </Grid>\n        </APICreateBase>\n    );\n}\nAPICreateDefault.defaultProps = {\n    isWebSocket: false,\n    isAPIProduct: false,\n};\nAPICreateDefault.WORKFLOW_STATUS = {\n    CREATED: 'CREATED',\n};\nAPICreateDefault.propTypes = {\n    history: PropTypes.shape({ push: PropTypes.func }).isRequired,\n    isAPIProduct: PropTypes.shape({}),\n    isWebSocket: PropTypes.shape({}),\n    intl: PropTypes.shape({\n        formatMessage: PropTypes.func,\n    }).isRequired,\n};\nexport default withRouter(injectIntl(APICreateDefault));\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\n\n\n/**\n * Base component for all API create forms\n *\n * @param {Object} props title and children components are expected\n * @returns {React.Component} Base element\n */\nexport default function APICreateProductBase(props) {\n    const { title, children } = props;\n    return (\n        <Grid container spacing={3}>\n            <Grid item sm={12} md={12} />\n            {/*\n            Following two grids control the placement of whole create page\n            For centering the content better use `container` props, but instead used an empty grid item for flexibility\n             */}\n            <Grid item sm={0} md={2} />\n            <Grid item sm={12} md={8}>\n                <Grid container spacing={5}>\n                    <Grid item md={12}>\n                        {title}\n                    </Grid>\n                    <Grid item md={12}>\n                        <Paper elevation={0}>{children}</Paper>\n                    </Grid>\n                </Grid>\n            </Grid>\n            <Grid item sm={0} md={2} />\n        </Grid>\n    );\n}\nAPICreateProductBase.propTypes = {\n    title: PropTypes.element.isRequired,\n    children: PropTypes.element.isRequired,\n};\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useReducer, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport Box from '@material-ui/core/Box';\nimport Grid from '@material-ui/core/Grid';\nimport { FormattedMessage } from 'react-intl';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport { Link } from 'react-router-dom';\nimport APIProduct from 'AppData/APIProduct';\nimport Alert from 'AppComponents/Shared/Alert';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport APICreateProductBase from 'AppComponents/Apis/Create/Components/APICreateProductBase';\nimport DefaultAPIForm from 'AppComponents/Apis/Create/Components/DefaultAPIForm';\nimport { useAppContext } from 'AppComponents/Shared/AppContext';\nimport ProductResourcesEditWorkspace from 'AppComponents/Apis/Details/ProductResources/ProductResourcesEditWorkspace';\n\nconst useStyles = makeStyles((theme) => ({\n    Paper: {\n        height: '40px',\n    },\n    saveButton: {\n        padding: '0px 0px 0px 10px',\n    },\n    titleWrapper: {\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems: 'center',\n        paddingBottom: theme.spacing(2),\n    },\n    buttonWrapper: {\n        marginTop: theme.spacing(4),\n    },\n    alternativeLabel: {\n        marginTop: theme.spacing(1),\n    },\n}));\n\n/**\n * Handle API creation from GraphQL Definition.\n *\n * @export\n * @param {*} props\n * @returns\n */\nexport default function ApiProductCreateWrapper(props) {\n    const { history } = props;\n    const [wizardStep, setWizardStep] = useState(0);\n    const [apiResources, setApiResources] = useState([]);\n    const { settings } = useAppContext();\n\n    const pageTitle = (\n        <>\n            <Typography variant='h5' component='h1'>\n                <FormattedMessage\n                    id='Apis.Create.APIProduct.APIProductCreateWrapper.heading'\n                    defaultMessage='Create an API Product'\n                />\n            </Typography>\n            <Typography variant='caption'>\n                <FormattedMessage\n                    id='Apis.Create.APIProduct.APIProductCreateWrapper.sub.heading'\n                    defaultMessage={\n                        'Create an API Product by providing a Name, a Context, Resources, '\n                        + 'and Business Plans (optional).'\n                    }\n                />\n            </Typography>\n        </>\n    );\n    /**\n     *\n     * Reduce the events triggered from API input fields to current state\n     * @param {*} currentState\n     * @param {*} inputAction\n     * @returns\n     */\n    function apiInputsReducer(currentState, inputAction) {\n        const { action, value } = inputAction;\n        switch (action) {\n            case 'type':\n            case 'name':\n            case 'context':\n            case 'version':\n            case 'policies':\n            case 'isFormValid':\n                return { ...currentState, [action]: value };\n            case 'apiResources':\n                return { ...currentState, [action]: value };\n            case 'preSetAPI':\n                return {\n                    ...currentState,\n                    name: value.name.replace(/[&/\\\\#,+()$~%.'\":*?<>{}\\s]/g, ''),\n                    context: value.context,\n                };\n            default:\n                return currentState;\n        }\n    }\n\n    const [apiInputs, inputsDispatcher] = useReducer(apiInputsReducer, {\n        type: 'ApiProductCreateWrapper',\n        inputValue: '',\n        formValidity: false,\n    });\n\n    /**\n     *\n     *\n     * @param {*} event\n     */\n    function handleOnChange(event) {\n        const { name: action, value } = event.target;\n        inputsDispatcher({ action, value });\n    }\n\n    /**\n     *\n     * Set the validity of the API Inputs form\n     * @param {*} isValidForm\n     * @param {*} validationState\n     */\n    function handleOnValidate(isFormValid) {\n        inputsDispatcher({\n            action: 'isFormValid',\n            value: isFormValid,\n        });\n    }\n    function getSteps() {\n        return [\n            <FormattedMessage\n                variant='caption'\n                id='Apis.Create.APIProduct.APIProductCreateWrapper.defineProvide'\n                defaultMessage='Define API Product'\n            />, <FormattedMessage\n                variant='caption'\n                id='Apis.Create.APIProduct.APIProductCreateWrapper.resources'\n                defaultMessage='Add Resources'\n            />];\n    }\n\n    const [isCreating, setCreating] = useState();\n    const [isPublishing, setPublishing] = useState();\n    const classes = useStyles();\n    const steps = getSteps();\n\n    const publishAPIProduct = () => {\n        setPublishing(true);\n        const {\n            name, context, policies,\n        } = apiInputs;\n        const apiData = {\n            name,\n            context,\n            policies,\n            apis: apiResources,\n        };\n        apiData.gatewayEnvironments = settings.environment.map((env) => env.name);\n        apiData.transport = ['http', 'https'];\n        const newAPIProduct = new APIProduct(apiData);\n        newAPIProduct\n            .saveProduct(apiData)\n            .then((apiProduct) => {\n                Alert.info('API Product created successfully');\n                history.push(`/api-products/${apiProduct.id}/overview`);\n            })\n            .catch((error) => {\n                if (error.response) {\n                    Alert.error(error.response.body.description);\n                } else {\n                    Alert.error('Something went wrong while adding the API Product');\n                }\n            })\n            .finally(() => setPublishing(false));\n    };\n\n    const createAPIProduct = () => {\n        setCreating(true);\n        const {\n            name, context, policies,\n        } = apiInputs;\n        const apiData = {\n            name,\n            context,\n            policies,\n            apis: apiResources,\n            state: 'CREATED',\n        };\n        apiData.gatewayEnvironments = settings.environment.map((env) => env.name);\n        apiData.transport = ['http', 'https'];\n        const newAPIProduct = new APIProduct(apiData);\n        newAPIProduct\n            .saveProduct(apiData)\n            .then((apiProduct) => {\n                Alert.info('API Product created successfully');\n                history.push(`/api-products/${apiProduct.id}/overview`);\n            })\n            .catch((error) => {\n                if (error.response) {\n                    Alert.error(error.response.body.description);\n                } else {\n                    Alert.error('Something went wrong while adding the API Product');\n                }\n            })\n            .finally(() => setCreating(false));\n    };\n\n    return (\n        <>\n            <APICreateProductBase\n                title={pageTitle}\n            >\n                <Box>\n                    {wizardStep === 0 && (\n                        <Stepper alternativeLabel activeStep={0}>\n                            {steps.map((label) => (\n                                <Step key={label}>\n                                    <StepLabel className={classes.alternativeLabel}>{label}</StepLabel>\n                                </Step>\n                            ))}\n\n                        </Stepper>\n                    )}\n                    {wizardStep === 1 && (\n                        <Stepper alternativeLabel activeStep={1}>\n                            {steps.map((label) => (\n                                <Step key={label}>\n                                    <StepLabel>{label}</StepLabel>\n                                </Step>\n                            ))}\n                        </Stepper>\n                    )}\n                </Box>\n                <Grid container spacing={2}>\n                    {wizardStep === 0 && <Grid item md={12} />}\n                    {wizardStep === 0 && <Grid item md={1} />}\n                    <Grid item md={wizardStep === 0 ? 11 : 12}>\n                        {wizardStep === 0 && (\n                            <DefaultAPIForm\n                                onValidate={handleOnValidate}\n                                onChange={handleOnChange}\n                                api={apiInputs}\n                                isAPIProduct\n                            />\n                        )}\n                        {wizardStep === 1 && (\n                            <ProductResourcesEditWorkspace\n                                apiResources={apiResources}\n                                setApiResources={setApiResources}\n                                isStateCreate\n                                api={apiInputs}\n                            />\n                        )}\n                    </Grid>\n                    {wizardStep === 0 && <Grid item md={1} />}\n                    <Grid item md={9}>\n                        <Grid\n                            className={wizardStep === 1 && classes.saveButton}\n                            container\n                            direction='row'\n                            justify='flex-start'\n                            alignItems='center'\n                            spacing={2}\n                        >\n                            <Grid item>\n                                {wizardStep === 1\n                                    && (\n                                        <Button\n                                            onClick={() => setWizardStep((step) => step - 1)}\n                                        >\n                                            <FormattedMessage\n                                                id='Apis.Create.APIProduct.APIProductCreateWrapper.back'\n                                                defaultMessage='Back'\n                                            />\n                                        </Button>\n                                    )}\n                                {wizardStep === 0 && (\n                                    <Link to='/apis/'>\n                                        <Button>\n                                            <FormattedMessage\n                                                id='Apis.Create.APIProduct.APIProductCreateWrapper.cancel'\n                                                defaultMessage='Cancel'\n                                            />\n                                        </Button>\n                                    </Link>\n                                )}\n                            </Grid>\n                            <Grid item>\n                                {wizardStep === 1 && (\n                                    <Button\n                                        variant='contained'\n                                        color='primary'\n                                        disabled={!apiInputs.isFormValid || isCreating || (apiResources.length === 0)}\n                                        onClick={createAPIProduct}\n                                    >\n                                        <FormattedMessage\n                                            id='Apis.Create.APIProduct.APIProductCreateWrapper.create'\n                                            defaultMessage='Create'\n                                        />\n                                        {isCreating && <CircularProgress size={24} />}\n                                    </Button>\n                                )}\n                            </Grid>\n                            <Grid item>\n                                {wizardStep === 1 && (\n                                    <Button\n                                        variant='contained'\n                                        color='primary'\n                                        disabled={!apiInputs.isFormValid || isPublishing || (apiResources.length === 0)}\n                                        onClick={publishAPIProduct}\n                                    >\n                                        <FormattedMessage\n                                            id='Apis.Create.APIProduct.APIProductCreateWrapper.publish'\n                                            defaultMessage='Create & Publish'\n                                        />\n                                        {isPublishing && <CircularProgress size={24} />}\n                                    </Button>\n                                )}\n                                {wizardStep === 0 && (\n                                    <Button\n                                        onClick={() => setWizardStep((step) => step + 1)}\n                                        variant='contained'\n                                        color='primary'\n                                        disabled={!apiInputs.isFormValid}\n                                    >\n                                        <FormattedMessage\n                                            id='Apis.Create.APIProduct.APIProductCreateWrapper.next'\n                                            defaultMessage='Next'\n                                        />\n                                    </Button>\n                                )}\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                </Grid>\n            </APICreateProductBase>\n        </>\n\n    );\n}\n\nApiProductCreateWrapper.propTypes = {\n    history: PropTypes.shape({ push: PropTypes.func }).isRequired,\n};\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useReducer, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport Grid from '@material-ui/core/Grid';\nimport { FormattedMessage } from 'react-intl';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\nimport Button from '@material-ui/core/Button';\nimport { Link } from 'react-router-dom';\nimport API from 'AppData/api';\nimport Alert from 'AppComponents/Shared/Alert';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport DefaultAPIForm from 'AppComponents/Apis/Create/Components/DefaultAPIForm';\nimport APICreateBase from 'AppComponents/Apis/Create/Components/APICreateBase';\nimport { useAppContext } from 'AppComponents/Shared/AppContext';\n\nimport ProvideOpenAPI from './Steps/ProvideOpenAPI';\n\n/**\n * Handle API creation from OpenAPI Definition.\n *\n * @export\n * @param {*} props\n * @returns\n */\nexport default function ApiCreateOpenAPI(props) {\n    const [wizardStep, setWizardStep] = useState(0);\n    const { history } = props;\n    const { settings } = useAppContext();\n\n    /**\n     *\n     * Reduce the events triggered from API input fields to current state\n     * @param {*} currentState\n     * @param {*} inputAction\n     * @returns\n     */\n    function apiInputsReducer(currentState, inputAction) {\n        const { action, value } = inputAction;\n        switch (action) {\n            case 'type':\n            case 'inputValue':\n            case 'name':\n            case 'version':\n            case 'endpoint':\n            case 'context':\n            case 'policies':\n            case 'isFormValid':\n                return { ...currentState, [action]: value };\n            case 'inputType':\n                return { ...currentState, [action]: value, inputValue: value === 'url' ? '' : null };\n            case 'preSetAPI':\n                return {\n                    ...currentState,\n                    name: value.name.replace(/[&/\\\\#,+()$~%.'\":*?<>{}\\s]/g, ''),\n                    version: value.version,\n                    context: value.context,\n                    endpoint: value.endpoints && value.endpoints[0],\n                };\n            default:\n                return currentState;\n        }\n    }\n\n    const [apiInputs, inputsDispatcher] = useReducer(apiInputsReducer, {\n        type: 'ApiCreateOpenAPI',\n        inputType: 'url',\n        inputValue: '',\n        formValidity: false,\n    });\n\n    /**\n     *\n     *\n     * @param {*} event\n     */\n    function handleOnChange(event) {\n        const { name: action, value } = event.target;\n        inputsDispatcher({ action, value });\n    }\n\n    /**\n     *\n     * Set the validity of the API Inputs form\n     * @param {*} isValidForm\n     * @param {*} validationState\n     */\n    function handleOnValidate(isFormValid) {\n        inputsDispatcher({\n            action: 'isFormValid',\n            value: isFormValid,\n        });\n    }\n\n    const [isCreating, setCreating] = useState();\n    /**\n     *\n     *\n     * @param {*} params\n     */\n    function createAPI() {\n        setCreating(true);\n        const {\n            name, version, context, endpoint, policies, inputValue, inputType,\n        } = apiInputs;\n        const additionalProperties = {\n            name,\n            version,\n            context,\n            policies,\n        };\n        if (endpoint) {\n            additionalProperties.endpointConfig = {\n                endpoint_type: 'http',\n                sandbox_endpoints: {\n                    url: endpoint,\n                },\n                production_endpoints: {\n                    url: endpoint,\n                },\n            };\n        }\n        additionalProperties.gatewayEnvironments = Array.isArray(settings.environment)\n            && settings.environment.length > 0 ? [settings.environment[0].name] : [];\n        const newAPI = new API(additionalProperties);\n        const promisedResponse = inputType === 'file'\n            ? newAPI.importOpenAPIByFile(inputValue) : newAPI.importOpenAPIByUrl(inputValue);\n        promisedResponse\n            .then((api) => {\n                Alert.info('API created successfully');\n                history.push(`/apis/${api.id}/overview`);\n            })\n            .catch((error) => {\n                if (error.response) {\n                    Alert.error(error.response.body.description);\n                } else {\n                    Alert.error('Something went wrong while adding the API');\n                }\n                console.error(error);\n            })\n            .finally(() => setCreating(false));\n    }\n\n    return (\n        <APICreateBase\n            title={(\n                <>\n                    <Typography variant='h5'>\n                        <FormattedMessage\n                            id='Apis.Create.OpenAPI.ApiCreateOpenAPI.heading'\n                            defaultMessage='Create an API using an OpenAPI definition.'\n                        />\n                    </Typography>\n                    <Typography variant='caption'>\n                        <FormattedMessage\n                            id='Apis.Create.OpenAPI.ApiCreateOpenAPI.sub.heading'\n                            defaultMessage='Create an API using an existing OpenAPI definition file or URL.'\n                        />\n                    </Typography>\n                </>\n            )}\n        >\n            <Box>\n                <Stepper alternativeLabel activeStep={0}>\n                    <Step>\n                        <StepLabel>\n                            <FormattedMessage\n                                id='Apis.Create.OpenAPI.ApiCreateOpenAPI.wizard.one'\n                                defaultMessage='Provide OpenAPI'\n                            />\n                        </StepLabel>\n                    </Step>\n\n                    <Step>\n                        <StepLabel>\n                            <FormattedMessage\n                                id='Apis.Create.OpenAPI.ApiCreateOpenAPI.wizard.two'\n                                defaultMessage='Create API'\n                            />\n                        </StepLabel>\n                    </Step>\n                </Stepper>\n            </Box>\n\n            <Grid container spacing={3}>\n                <Grid item xs={12} />\n                <Grid item xs={1} />\n                <Grid item xs={11}>\n                    {wizardStep === 0 && (\n                        <ProvideOpenAPI\n                            onValidate={handleOnValidate}\n                            apiInputs={apiInputs}\n                            inputsDispatcher={inputsDispatcher}\n                        />\n                    )}\n                    {wizardStep === 1 && (\n                        <DefaultAPIForm\n                            onValidate={handleOnValidate}\n                            onChange={handleOnChange}\n                            api={apiInputs}\n                            isAPIProduct={false}\n                        />\n                    )}\n                </Grid>\n                <Grid item xs={1} />\n                <Grid item xs={11}>\n                    <Grid container direction='row' justify='flex-start' alignItems='center' spacing={2}>\n                        <Grid item>\n                            {wizardStep === 0 && (\n                                <Link to='/apis/'>\n                                    <Button>\n                                        <FormattedMessage\n                                            id='Apis.Create.OpenAPI.ApiCreateOpenAPI.cancel'\n                                            defaultMessage='Cancel'\n                                        />\n                                    </Button>\n                                </Link>\n                            )}\n                            {wizardStep === 1 && (\n                                <Button onClick={() => setWizardStep((step) => step - 1)}>\n                                    Back\n                                </Button>\n                            )}\n                        </Grid>\n                        <Grid item>\n                            {wizardStep === 0 && (\n                                <Button\n                                    onClick={() => setWizardStep((step) => step + 1)}\n                                    variant='contained'\n                                    color='primary'\n                                    disabled={!apiInputs.isFormValid}\n                                >\n                                    Next\n                                </Button>\n                            )}\n                            {wizardStep === 1 && (\n                                <Button\n                                    variant='contained'\n                                    color='primary'\n                                    disabled={!apiInputs.isFormValid || isCreating}\n                                    onClick={createAPI}\n                                >\n                                    Create\n                                    {' '}\n                                    {isCreating && <CircularProgress size={24} />}\n                                </Button>\n                            )}\n                        </Grid>\n                    </Grid>\n                </Grid>\n            </Grid>\n        </APICreateBase>\n    );\n}\n\nApiCreateOpenAPI.propTypes = {\n    history: PropTypes.shape({ push: PropTypes.func }).isRequired,\n};\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useReducer, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport Grid from '@material-ui/core/Grid';\nimport { FormattedMessage } from 'react-intl';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\nimport Button from '@material-ui/core/Button';\nimport { Link } from 'react-router-dom';\nimport Wsdl from 'AppData/Wsdl';\nimport Alert from 'AppComponents/Shared/Alert';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport DefaultAPIForm from 'AppComponents/Apis/Create/Components/DefaultAPIForm';\nimport APICreateBase from 'AppComponents/Apis/Create/Components/APICreateBase';\nimport { useAppContext } from 'AppComponents/Shared/AppContext';\n\nimport ProvideWSDL from './Steps/ProvideWSDL';\n\n/**\n * Handle API creation from WSDL.\n *\n * @export\n * @param {*} props\n * @returns\n */\nexport default function ApiCreateWSDL(props) {\n    const [wizardStep, setWizardStep] = useState(0);\n    const { history } = props;\n    const { settings } = useAppContext();\n\n    /**\n     *\n     * Reduce the events triggered from API input fields to current state\n     */\n    function apiInputsReducer(currentState, inputAction) {\n        const { action, value } = inputAction;\n        switch (action) {\n            case 'type':\n            case 'inputValue':\n            case 'name':\n            case 'version':\n            case 'endpoint':\n            case 'context':\n            case 'policies':\n            case 'isFormValid':\n                return { ...currentState, [action]: value };\n            case 'inputType':\n                return { ...currentState, [action]: value, inputValue: value === 'url' ? '' : null };\n            default:\n                return currentState;\n        }\n    }\n\n    const [apiInputs, inputsDispatcher] = useReducer(apiInputsReducer, {\n        type: 'SOAP',\n        inputType: 'url',\n        inputValue: '',\n        formValidity: false,\n        mode: 'create',\n    });\n\n    /**\n     *\n     *\n     * @param {*} event\n     */\n    function handleOnChange(event) {\n        const { name: action, value } = event.target;\n        inputsDispatcher({ action, value });\n    }\n\n    /**\n     *\n     * Set the validity of the API Inputs form\n     * @param {*} isValidForm\n     * @param {*} validationState\n     */\n    function handleOnValidate(isFormValid) {\n        inputsDispatcher({\n            action: 'isFormValid',\n            value: isFormValid,\n        });\n    }\n\n    const [isCreating, setCreating] = useState();\n    /**\n     *\n     *\n     * @param {*} params\n     */\n    function createAPI() {\n        setCreating(true);\n        const {\n            name, version, context, endpoint, policies, type,\n        } = apiInputs;\n        const additionalProperties = {\n            name,\n            version,\n            context,\n            policies,\n        };\n        if (endpoint) {\n            additionalProperties.endpointConfig = {\n                endpoint_type: type === 'SOAPTOREST' ? 'address' : 'http',\n                sandbox_endpoints: {\n                    type: type === 'SOAPTOREST' ? 'address' : undefined,\n                    url: endpoint,\n                },\n                production_endpoints: {\n                    type: type === 'SOAPTOREST' ? 'address' : undefined,\n                    url: endpoint,\n                },\n            };\n        }\n        additionalProperties.gatewayEnvironments = settings.environment.map((env) => env.name);\n        let promisedWSDLImport;\n        if (apiInputs.inputType === 'url') {\n            promisedWSDLImport = Wsdl.importByUrl(apiInputs.inputValue, additionalProperties, apiInputs.type);\n        } else {\n            promisedWSDLImport = Wsdl.importByFileOrArchive(apiInputs.inputValue, additionalProperties, apiInputs.type);\n        }\n        promisedWSDLImport\n            .then((api) => {\n                Alert.info('API created successfully');\n                history.push(`/apis/${api.id}/overview`);\n            })\n            .catch((error) => {\n                if (error.response) {\n                    Alert.error(error.response.body.description);\n                } else {\n                    Alert.error('Something went wrong while adding the API');\n                }\n                console.error(error);\n            })\n            .finally(() => setCreating(false));\n    }\n\n    return (\n        <APICreateBase\n            title={(\n                <>\n                    <Typography variant='h5'>\n                        <FormattedMessage\n                            id='Apis.Create.WSDL.ApiCreateWSDL.heading'\n                            defaultMessage='Expose a SOAP Service as a REST API'\n                        />\n                    </Typography>\n                    <Typography variant='caption'>\n                        <FormattedMessage\n                            id='Apis.Create.WSDL.ApiCreateWSDL.sub.heading'\n                            defaultMessage={\n                                'Expose an existing SOAP service as a REST API by importing the WSDL of the '\n                                + 'SOAP service.'\n                            }\n                        />\n                    </Typography>\n                </>\n            )}\n        >\n            <Box>\n                <Stepper alternativeLabel activeStep={wizardStep}>\n                    <Step>\n                        <StepLabel>Provide WSDL</StepLabel>\n                    </Step>\n\n                    <Step>\n                        <StepLabel>Create API</StepLabel>\n                    </Step>\n                </Stepper>\n            </Box>\n\n            <Grid container spacing={3}>\n                <Grid item md={12} />\n                <Grid item md={1} />\n                <Grid item md={11}>\n                    {wizardStep === 0 && (\n                        <ProvideWSDL\n                            onValidate={handleOnValidate}\n                            apiInputs={apiInputs}\n                            inputsDispatcher={inputsDispatcher}\n                        />\n                    )}\n                    {wizardStep === 1 && (\n                        <DefaultAPIForm\n                            onValidate={handleOnValidate}\n                            onChange={handleOnChange}\n                            api={apiInputs}\n                            isAPIProduct={false}\n                        />\n                    )}\n                </Grid>\n                <Grid item md={1} />\n                <Grid item md={9}>\n                    <Grid container direction='row' justify='flex-start' alignItems='center' spacing={2}>\n                        <Grid item>\n                            {wizardStep === 0 && (\n                                <Link to='/apis/'>\n                                    <Button>\n                                        <FormattedMessage\n                                            id='Apis.Create.OpenAPI.ApiCreateOpenAPI.cancel'\n                                            defaultMessage='Cancel'\n                                        />\n                                    </Button>\n                                </Link>\n                            )}\n                            {wizardStep === 1 && (\n                                <Button onClick={\n                                    () => setWizardStep((step) => step - 1)\n                                }\n                                >\n                                    Back\n                                </Button>\n                            )}\n                        </Grid>\n                        <Grid item>\n                            {wizardStep === 0 && (\n                                <Button\n                                    onClick={() => setWizardStep((step) => step + 1)}\n                                    variant='contained'\n                                    color='primary'\n                                    disabled={!apiInputs.isFormValid}\n                                >\n                                    Next\n                                </Button>\n                            )}\n                            {wizardStep === 1 && (\n                                <Button\n                                    variant='contained'\n                                    color='primary'\n                                    disabled={!apiInputs.isFormValid || isCreating}\n                                    onClick={createAPI}\n                                >\n                                    Create\n                                    {' '}\n                                    {isCreating && <CircularProgress size={24} />}\n                                </Button>\n                            )}\n                        </Grid>\n                    </Grid>\n                </Grid>\n            </Grid>\n        </APICreateBase>\n    );\n}\n\nApiCreateWSDL.propTypes = {\n    history: PropTypes.shape({ push: PropTypes.func }).isRequired,\n};\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useReducer, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport Grid from '@material-ui/core/Grid';\nimport { FormattedMessage } from 'react-intl';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\nimport Button from '@material-ui/core/Button';\nimport { Link } from 'react-router-dom';\nimport API from 'AppData/api';\nimport Alert from 'AppComponents/Shared/Alert';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport DefaultAPIForm from 'AppComponents/Apis/Create/Components/DefaultAPIForm';\nimport APICreateBase from 'AppComponents/Apis/Create/Components/APICreateBase';\nimport { useAppContext } from 'AppComponents/Shared/AppContext';\n\nimport ProvideGraphQL from './Steps/ProvideGraphQL';\n\n/**\n * Handle API creation from GraphQL Definition.\n *\n * @export\n * @param {*} props\n * @returns\n */\nexport default function ApiCreateGraphQL(props) {\n    const [wizardStep, setWizardStep] = useState(0);\n    const { history } = props;\n    const { settings } = useAppContext();\n    /**\n     *\n     * Reduce the events triggered from API input fields to current state\n     * @param {*} currentState\n     * @param {*} inputAction\n     * @returns\n     */\n    function apiInputsReducer(currentState, inputAction) {\n        const { action, value } = inputAction;\n        switch (action) {\n            case 'type':\n            case 'inputValue':\n            case 'name':\n            case 'version':\n            case 'endpoint':\n            case 'context':\n            case 'policies':\n            case 'isFormValid':\n                return { ...currentState, [action]: value };\n            case 'inputType':\n                return { ...currentState, [action]: value, inputValue: value === 'url' ? '' : null };\n            case 'graphQLInfo':\n                return { ...currentState, [action]: value };\n            case 'preSetAPI':\n                return {\n                    ...currentState,\n                    name: value.name.replace(/[&/\\\\#,+()$~%.'\":*?<>{}\\s]/g, ''),\n                    version: value.version,\n                    context: value.context,\n                };\n            default:\n                return currentState;\n        }\n    }\n\n    const [apiInputs, inputsDispatcher] = useReducer(apiInputsReducer, {\n        type: 'ApiCreateGraphQL',\n        inputType: 'file',\n        inputValue: '',\n        formValidity: false,\n    });\n\n    /**\n     *\n     *\n     * @param {*} event\n     */\n    function handleOnChange(event) {\n        const { name: action, value } = event.target;\n        inputsDispatcher({ action, value });\n    }\n\n    /**\n     *\n     * Set the validity of the API Inputs form\n     * @param {*} isValidForm\n     * @param {*} validationState\n     */\n    function handleOnValidate(isFormValid) {\n        inputsDispatcher({\n            action: 'isFormValid',\n            value: isFormValid,\n        });\n    }\n\n    const [isCreating, setCreating] = useState();\n    /**\n     *\n     *\n     * @param {*} params\n     */\n    function createAPI() {\n        setCreating(true);\n        const {\n            name,\n            version,\n            context,\n            endpoint,\n            policies,\n            implementationType,\n            inputValue,\n            graphQLInfo: { operations },\n        } = apiInputs;\n        const additionalProperties = {\n            name,\n            version,\n            context,\n            policies,\n            operations,\n        };\n        const uploadMethod = 'file';\n        if (endpoint) {\n            additionalProperties.endpointConfig = {\n                endpoint_type: 'http',\n                sandbox_endpoints: {\n                    url: endpoint,\n                },\n                production_endpoints: {\n                    url: endpoint,\n                },\n            };\n        }\n        additionalProperties.gatewayEnvironments = Array.isArray(settings.environment)\n            && settings.environment.length > 0 ? [settings.environment[0].name] : [];\n        const newApi = new API(additionalProperties);\n        const apiData = {\n            additionalProperties: JSON.stringify(additionalProperties),\n            implementationType,\n            [uploadMethod]: uploadMethod,\n            file: inputValue,\n        };\n\n        newApi\n            .importGraphQL(apiData)\n            .then((response) => {\n                const uuid = response.obj.id;\n                Alert.info(`${name} API created successfully`);\n                history.push(`/apis/${uuid}/overview`);\n            })\n            .catch((error) => {\n                if (error.response) {\n                    Alert.error(error.response.body.description);\n                } else {\n                    Alert.error('Something went wrong while adding the API');\n                }\n                console.error(error);\n            })\n            .finally(() => setCreating(false));\n    }\n\n    return (\n        <APICreateBase\n            title={(\n                <>\n                    <Typography variant='h5'>\n                        <FormattedMessage\n                            id='Apis.Create.GraphQL.ApiCreateGraphQL.heading'\n                            defaultMessage='Create an API using a GraphQL SDL definition'\n                        />\n                    </Typography>\n                    <Typography variant='caption'>\n                        <FormattedMessage\n                            id='Apis.Create.GraphQL.ApiCreateGraphQL.sub.heading'\n                            defaultMessage='Create an API by importing an existing GraphQL SDL definition.'\n                        />\n                    </Typography>\n                </>\n            )}\n        >\n            <Box>\n                {wizardStep === 0 && (\n                    <Stepper alternativeLabel activeStep={0}>\n                        <Step>\n                            <StepLabel>\n                                <FormattedMessage\n                                    id='Apis.Create.GraphQL.ApiCreateGraphQL.wizard.one'\n                                    defaultMessage='Provide GraphQL'\n                                />\n                            </StepLabel>\n                        </Step>\n\n                        <Step>\n                            <StepLabel>\n                                <FormattedMessage\n                                    id='Apis.Create.GraphQL.ApiCreateGraphQL.wizard.two'\n                                    defaultMessage='Create API'\n                                />\n                            </StepLabel>\n                        </Step>\n                    </Stepper>\n                )}\n                {wizardStep === 1 && (\n                    <Stepper alternativeLabel activeStep={1}>\n                        <Step>\n                            <StepLabel>\n                                <FormattedMessage\n                                    id='Apis.Create.GraphQL.ApiCreateGraphQL.wizard.one'\n                                    defaultMessage='Provide GraphQL'\n                                />\n                            </StepLabel>\n                        </Step>\n\n                        <Step>\n                            <StepLabel>\n                                <FormattedMessage\n                                    id='Apis.Create.GraphQL.ApiCreateGraphQL.wizard.two'\n                                    defaultMessage='Create API'\n                                />\n                            </StepLabel>\n                        </Step>\n                    </Stepper>\n                )}\n            </Box>\n\n            <Grid container spacing={3}>\n                <Grid item md={12} />\n                <Grid item md={1} />\n                <Grid item md={11}>\n                    {wizardStep === 0 && (\n                        <ProvideGraphQL\n                            onValidate={handleOnValidate}\n                            apiInputs={apiInputs}\n                            inputsDispatcher={inputsDispatcher}\n                        />\n                    )}\n                    {wizardStep === 1 && (\n                        <DefaultAPIForm\n                            onValidate={handleOnValidate}\n                            onChange={handleOnChange}\n                            api={apiInputs}\n                            isAPIProduct={false}\n                        />\n                    )}\n                </Grid>\n                <Grid item md={1} />\n                <Grid item md={9}>\n                    <Grid container direction='row' justify='flex-start' alignItems='center' spacing={2}>\n                        <Grid item>\n                            {wizardStep === 0 && (\n                                <Link to='/apis/'>\n                                    <Button>\n                                        <FormattedMessage\n                                            id='Apis.Create.OpenAPI.ApiCreateOpenAPI.cancel'\n                                            defaultMessage='Cancel'\n                                        />\n                                    </Button>\n                                </Link>\n                            )}\n                            {wizardStep === 1 && (\n                                <Button onClick={\n                                    () => setWizardStep((step) => step - 1)\n                                }\n                                >\n                                    <FormattedMessage\n                                        id='Apis.Create.GraphQL.ApiCreateGraphQL.back'\n                                        defaultMessage='Back'\n                                    />\n                                </Button>\n                            )}\n                        </Grid>\n                        <Grid item>\n                            {wizardStep === 0 && (\n                                <Button\n                                    onClick={() => setWizardStep((step) => step + 1)}\n                                    variant='contained'\n                                    color='primary'\n                                    disabled={!apiInputs.isFormValid}\n                                >\n                                    <FormattedMessage\n                                        id='Apis.Create.GraphQL.ApiCreateGraphQL.next'\n                                        defaultMessage='Next'\n                                    />\n                                </Button>\n                            )}\n                            {wizardStep === 1 && (\n                                <Button\n                                    variant='contained'\n                                    color='primary'\n                                    disabled={!apiInputs.isFormValid || isCreating}\n                                    onClick={createAPI}\n                                >\n                                    <FormattedMessage\n                                        id='Apis.Create.GraphQL.ApiCreateGraphQL.create'\n                                        defaultMessage='Create'\n                                    />\n                                    {' '}\n                                    {isCreating && <CircularProgress size={24} />}\n                                </Button>\n                            )}\n                        </Grid>\n                    </Grid>\n                </Grid>\n            </Grid>\n        </APICreateBase>\n    );\n}\n\nApiCreateGraphQL.propTypes = {\n    history: PropTypes.shape({ push: PropTypes.func }).isRequired,\n};\n","/**\n * Copyright (c) 2018, WSO2 Inc. (http://wso2.com) All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport React from 'react';\nimport APICreateDefault from 'AppComponents/Apis/Create/Default/APICreateDefault';\n\nconst ApiCreateWebSocket = () => {\n    return (<APICreateDefault isWebSocket />);\n};\nexport default ApiCreateWebSocket;\n","/*\n * Copyright (c) 2017, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\n\nimport { Route, Switch } from 'react-router-dom';\nimport { withStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport ResourceNotFound from 'AppComponents/Base/Errors/ResourceNotFound';\n\nimport APICreateDefault from './Default/APICreateDefault';\nimport APIProductCreateWrapper from './APIProduct/APIProductCreateWrapper';\nimport ApiCreateSwagger from './OpenAPI/ApiCreateOpenAPI';\nimport ApiCreateWSDL from './WSDL/ApiCreateWSDL';\nimport ApiCreateGraphQL from './GraphQL/ApiCreateGraphQL';\nimport ApiCreateWebSocket from './WebSocket/ApiCreateWebSocket';\n\nconst styles = {\n    content: {\n        flexGrow: 1,\n    },\n};\n\n\n/**\n *\n * Handle routing for all types of API create creations, If you want to add new API type create page,\n * Please use `APICreateBase` and `DefaultAPIForm` components to do so , Don't wrap `APICreateDefault` component\n * @param {*} props\n * @returns @inheritdoc\n */\nfunction APICreateRoutes(props) {\n    const { classes } = props;\n    return (\n        <div className={classes.content}>\n            <Switch>\n                <Route path='/apis/create/rest' component={APICreateDefault} />\n                <Route path='/api-products/create' component={APIProductCreateWrapper} />\n                <Route path='/apis/create/graphQL' component={ApiCreateGraphQL} />\n                <Route path='/apis/create/openapi' component={ApiCreateSwagger} />\n                <Route path='/apis/create/wsdl' component={ApiCreateWSDL} />\n                <Route path='/apis/create/ws' component={ApiCreateWebSocket} />\n                <Route component={ResourceNotFound} />\n            </Switch>\n        </div>\n    );\n}\n\nAPICreateRoutes.propTypes = {\n    classes: PropTypes.shape({ content: PropTypes.string }).isRequired,\n};\n\nexport default withStyles(styles)(APICreateRoutes);\n"],"sourceRoot":""}