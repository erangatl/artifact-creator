{"version":3,"sources":["webpack:///./node_modules/moment/locale sync ^\\.\\/.*$","webpack:///./source/src/app/components/Shared/testconsole.css?6ce1","webpack:///./source/src/app/components/Shared/testconsole.css","webpack:///./source/src/app/components/Shared/LeftMenuItem.jsx","webpack:///./source/src/app/components/Apis/Details/components/LastUpdatedTime.jsx","webpack:///./source/src/app/components/Apis/Details/NewOverview/Resources.jsx","webpack:///./source/src/app/components/Apis/Details/NewOverview/Operations.jsx","webpack:///./source/src/app/components/Apis/Details/NewOverview/ProductResources.jsx","webpack:///./source/src/app/data/stringFormatter.js","webpack:///./source/src/app/components/Apis/Details/NewOverview/Policies.jsx","webpack:///./source/src/app/components/Apis/Details/NewOverview/Configuration.jsx","webpack:///./source/src/app/components/Apis/Details/NewOverview/CustomizedStepper.jsx","webpack:///./source/src/app/components/Apis/Details/NewOverview/BusinessInformation.jsx","webpack:///./source/src/app/components/Apis/Details/NewOverview/MetaData.jsx","webpack:///./source/src/app/components/Apis/Details/NewOverview/Endpoints.jsx","webpack:///./source/src/app/components/Apis/Details/NewOverview/Overview.jsx","webpack:///./source/src/app/components/Apis/Listing/components/ImageGenerator/ThumbnailView.jsx","webpack:///./source/src/app/components/Apis/Details/Configuration/components/DefaultVersion.jsx","webpack:///./source/src/app/components/Apis/Details/Configuration/components/Description.jsx","webpack:///./source/src/app/components/Apis/Details/Configuration/components/AccessControl.jsx","webpack:///./source/src/app/components/Apis/Details/Configuration/components/StoreVisibility.jsx","webpack:///./source/src/app/components/Apis/Details/Configuration/components/Tags.jsx","webpack:///./source/src/app/components/Apis/Details/Configuration/components/Social.jsx","webpack:///./source/src/app/components/Apis/Details/Configuration/components/APICategories.jsx","webpack:///./source/src/app/components/Apis/Details/Configuration/DesignConfigurations.jsx","webpack:///./source/src/app/components/Apis/Details/Configuration/components/ResponseCaching.jsx","webpack:///./source/src/app/components/Apis/Details/Configuration/components/CORSConfiguration.jsx","webpack:///./source/src/app/components/Apis/Details/Configuration/components/SchemaValidation.jsx","webpack:///./source/src/app/components/Apis/Details/Configuration/components/MaxBackendTps.jsx","webpack:///./source/src/app/components/Apis/Details/MediationPolicies/EditMediationPolicy.jsx","webpack:///./source/src/app/components/Apis/Details/Configuration/components/Flow.jsx","webpack:///./source/src/app/components/Apis/Details/Configuration/components/Endpoints.jsx","webpack:///./source/src/app/components/Apis/Details/Configuration/components/APISecurity/components/apiSecurityConstants.js","webpack:///./source/src/app/components/Apis/Details/Configuration/components/AuthorizationHeader.jsx","webpack:///./source/src/app/components/Apis/Details/Configuration/components/KeyManager.jsx","webpack:///./source/src/app/components/Apis/Details/Configuration/components/APISecurity/components/ApplicationLevel.jsx","webpack:///./source/src/app/components/Apis/Details/Endpoints/GeneralConfiguration/SelectEndpoint.jsx","webpack:///./source/src/app/components/Apis/Details/Endpoints/GeneralConfiguration/UploadCertificate.jsx","webpack:///./source/src/app/components/Apis/Details/Endpoints/GeneralConfiguration/Certificates.jsx","webpack:///./source/src/app/components/Apis/Details/Configuration/components/Transports.jsx","webpack:///./source/src/app/components/Apis/Details/Configuration/components/APISecurity/components/TransportLevel.jsx","webpack:///./source/src/app/components/Apis/Details/Configuration/components/APISecurity/APISecurity.jsx","webpack:///./source/src/app/components/Apis/Details/QueryAnalysis/UpdateComplexity.jsx","webpack:///./source/src/app/components/Apis/Details/Configuration/components/QueryAnalysis.jsx","webpack:///./source/src/app/components/Apis/Details/Configuration/RuntimeConfiguration.jsx","webpack:///./source/src/app/components/Apis/Details/Configuration/components/APILevelRateLimitingPolicies.jsx","webpack:///./source/src/app/components/Apis/Details/Configuration/RuntimeConfigurationWebSocket.jsx","webpack:///./source/src/app/components/Apis/Details/LifeCycle/LifeCycleImage.jsx","webpack:///./source/src/app/components/Apis/Details/LifeCycle/CheckboxLabels.jsx","webpack:///./source/src/app/components/Apis/Details/LifeCycle/LifecyclePending.jsx","webpack:///./source/src/app/components/Apis/Details/LifeCycle/LifeCycleUpdate.jsx","webpack:///./source/src/app/components/Apis/Details/LifeCycle/LifeCycleHistory.jsx","webpack:///./source/src/app/components/Apis/Details/LifeCycle/LifeCycle.jsx","webpack:///./source/src/app/components/Apis/Details/Documents/CreateEditForm.jsx","webpack:///./source/src/app/components/Apis/Details/Documents/GoToEdit.jsx","webpack:///./source/src/app/components/Apis/Details/Documents/Create.jsx","webpack:///./source/src/app/components/Apis/Details/Documents/MarkdownEditor.jsx","webpack:///./source/src/app/components/Apis/Details/Documents/Edit.jsx","webpack:///./source/src/app/components/Apis/Details/Documents/Delete.jsx","webpack:///./source/src/app/components/Apis/Details/Documents/DeleteMultiple.jsx","webpack:///./source/src/app/components/Apis/Details/Documents/Download.jsx","webpack:///./source/src/app/components/Apis/Details/Documents/Listing.jsx","webpack:///./source/src/app/components/Apis/Details/Documents/View.jsx","webpack:///./source/src/app/components/Apis/Details/Documents/EditContent.jsx","webpack:///./source/src/app/components/Apis/Details/Documents/index.jsx","webpack:///./source/src/app/components/Apis/Details/Resources/components/APIRateLimiting.jsx","webpack:///./source/src/app/components/Apis/Details/Operations/Operation.jsx","webpack:///./source/src/app/components/Apis/Details/Operations/Operations.jsx","webpack:///./source/src/app/components/Apis/Details/Resources/components/operationComponents/DescriptionAndSummary.jsx","webpack:///./source/src/app/components/Apis/Details/Resources/operationUtils.js","webpack:///./source/src/app/components/Apis/Details/Resources/components/operationComponents/OperationGovernance.jsx","webpack:///./source/src/app/components/Apis/Details/Resources/components/operationComponents/AWSLambdaSettings.jsx","webpack:///./source/src/app/components/Apis/Details/Resources/components/operationComponents/parameterUtils.js","webpack:///./source/src/app/components/Apis/Details/Resources/components/operationComponents/AddParameter.jsx","webpack:///./source/src/app/components/Apis/Details/Resources/components/operationComponents/RequestBody.jsx","webpack:///./source/src/app/components/Apis/Details/Resources/components/operationComponents/EditParameter.jsx","webpack:///./source/src/app/components/Apis/Details/Resources/components/operationComponents/ListParameters.jsx","webpack:///./source/src/app/components/Apis/Details/Resources/components/operationComponents/Parameters.jsx","webpack:///./source/src/app/components/Apis/Details/Resources/components/operationComponents/SOAPToREST/CloseConfirmation.jsx","webpack:///./source/src/app/components/Apis/Details/Resources/components/operationComponents/SOAPToREST/PolicyEditor.jsx","webpack:///./source/src/app/components/Apis/Details/Resources/components/operationComponents/SOAPToREST/SOAPToRESTListing.jsx","webpack:///./source/src/app/components/Apis/Details/Resources/components/Operation.jsx","webpack:///./source/src/app/components/Apis/Details/Resources/components/GroupOfOperations.jsx","webpack:///./source/src/app/components/Apis/Details/Resources/components/SpecErrors.jsx","webpack:///./source/src/app/components/Apis/Details/Resources/components/AddOperation.jsx","webpack:///./source/src/app/components/Apis/Details/Resources/components/GoToDefinitionLink.jsx","webpack:///./source/src/app/components/Apis/Details/Resources/components/OperationsSelector.jsx","webpack:///./source/src/app/components/Apis/Details/Resources/components/SaveOperations.jsx","webpack:///./source/src/app/components/Apis/Details/Resources/Resources.jsx","webpack:///./source/src/app/components/Apis/Details/Resources/APIOperations.jsx","webpack:///./source/src/app/components/Apis/Details/ProductResources/APIProductOperations.jsx","webpack:///./source/src/app/components/Apis/Details/ProductResources/ProductResourcesEdit.jsx","webpack:///./source/src/app/components/Apis/Details/Endpoints/NewEndpointCreate.jsx","webpack:///./source/src/app/components/Apis/Details/Endpoints/Prototype/GenericResource.jsx","webpack:///./source/src/app/components/Apis/Details/Endpoints/Prototype/InlineEndpoints.jsx","webpack:///./source/src/app/components/Apis/Details/Endpoints/endpointUtils.js","webpack:///./source/src/app/components/Apis/Details/Endpoints/GeneralConfiguration.jsx","webpack:///./source/src/app/components/Apis/Details/Endpoints/GenericEndpoint.jsx","webpack:///./source/src/app/components/Apis/Details/Endpoints/GenericEndpointAdd.jsx","webpack:///./source/src/app/components/Apis/Details/Endpoints/EndpointListing.jsx","webpack:///./source/src/app/components/Apis/Details/Endpoints/LoadBalanceConfig.jsx","webpack:///./source/src/app/components/Apis/Details/Endpoints/LoadbalanceFailoverConfig.jsx","webpack:///./source/src/app/components/Apis/Details/Endpoints/AdvancedConfig/AdvanceEndpointConfig.jsx","webpack:///./source/src/app/components/Apis/Details/Endpoints/GeneralConfiguration/EditableParameterRow.jsx","webpack:///./source/src/app/components/Apis/Details/Endpoints/GeneralConfiguration/EndpointSecurity.jsx","webpack:///./source/src/app/components/Apis/Details/Endpoints/AWSLambda/Credentials.jsx","webpack:///./source/src/app/components/Apis/Details/Endpoints/EndpointOverview.jsx","webpack:///./source/src/app/components/Apis/Details/Endpoints/Endpoints.jsx","webpack:///./source/src/app/components/Apis/Details/Environments/MicroGateway.jsx","webpack:///./source/src/app/components/Apis/Details/Environments/Kubernetes.jsx","webpack:///./source/src/app/components/Apis/Details/Environments/Environments.jsx","webpack:///./source/src/app/components/Apis/Details/Subscriptions/Invoice.jsx","webpack:///./source/src/app/components/Apis/Details/Subscriptions/SubscriptionsTable.jsx","webpack:///./source/src/app/components/Apis/Details/Subscriptions/SubscriptionPoliciesManage.jsx","webpack:///./source/src/app/components/Apis/Details/Subscriptions/TenantAutocomplete.jsx","webpack:///./source/src/app/components/Apis/Details/Subscriptions/SubscriptionAvailability.jsx","webpack:///./source/src/app/components/Apis/Details/Subscriptions/Subscriptions.jsx","webpack:///./source/src/app/components/Apis/Details/Scopes/CreateScope.jsx","webpack:///./source/src/app/components/Apis/Details/Scopes/EditScope.jsx","webpack:///./source/src/app/components/Apis/Details/Scopes/Delete.jsx","webpack:///./source/src/app/components/Apis/Details/Scopes/Scopes.jsx","webpack:///./source/src/app/components/Apis/Details/Scopes/index.jsx","webpack:///./source/src/app/components/Apis/Details/Security/AddPolicy.jsx","webpack:///./source/src/app/components/Apis/Details/Security/SecurityOverview.jsx","webpack:///./source/src/app/components/Apis/Details/Security/index.jsx","webpack:///./source/src/app/components/Apis/Details/APIDefinition/APISecurityAudit.jsx","webpack:///./source/src/app/components/Apis/Details/APIDefinition/ImportDefinition.jsx","webpack:///./source/src/app/components/Apis/Details/APIDefinition/APIDefinition.jsx","webpack:///./source/src/app/components/Apis/Details/APIDefinition/WSDL.jsx","webpack:///./source/src/app/components/Apis/Details/GoTo/RouteMappings.jsx","webpack:///./source/src/app/components/Apis/Details/GoTo/GoTo.jsx","webpack:///./source/src/app/components/Apis/Details/components/CreateNewVersionButton.jsx","webpack:///./source/src/app/components/Apis/Details/components/APIDetailsTopMenu.jsx","webpack:///./source/src/app/components/Apis/Details/BusinessInformation/BusinessInformation.jsx","webpack:///./source/src/app/components/Apis/Details/Properties/EditableRow.jsx","webpack:///./source/src/app/components/Apis/Details/Properties/Properties.jsx","webpack:///./source/src/app/components/Apis/Details/Monetization/BusinessPlans.jsx","webpack:///./source/src/app/components/Apis/Details/Monetization/index.jsx","webpack:///./source/src/app/components/Apis/Details/ExternalStores/ExternalStores.jsx","webpack:///./source/src/app/components/Apis/Details/NewVersion/NewVersion.jsx","webpack:////home/jenkins/workspace/full/wilkinson/carbon-apimgt-6.7.206/features/apimgt/org.wso2.carbon.apimgt.store.feature/src/main/resources/devportal/source/src/app/components/Shared/Progress.jsx","webpack:////home/jenkins/workspace/full/wilkinson/carbon-apimgt-6.7.206/features/apimgt/org.wso2.carbon.apimgt.store.feature/src/main/resources/devportal/source/src/app/data/Utils.jsx","webpack:////home/jenkins/workspace/full/wilkinson/carbon-apimgt-6.7.206/features/apimgt/org.wso2.carbon.apimgt.store.feature/src/main/resources/devportal/source/src/app/data/User.jsx","webpack:////home/jenkins/workspace/full/wilkinson/carbon-apimgt-6.7.206/features/apimgt/org.wso2.carbon.apimgt.store.feature/src/main/resources/devportal/source/src/app/data/Constants.jsx","webpack:////home/jenkins/workspace/full/wilkinson/carbon-apimgt-6.7.206/features/apimgt/org.wso2.carbon.apimgt.store.feature/src/main/resources/devportal/source/src/app/data/AuthManager.jsx","webpack:////home/jenkins/workspace/full/wilkinson/carbon-apimgt-6.7.206/features/apimgt/org.wso2.carbon.apimgt.store.feature/src/main/resources/devportal/source/src/app/data/APIClient.jsx","webpack:////home/jenkins/workspace/full/wilkinson/carbon-apimgt-6.7.206/features/apimgt/org.wso2.carbon.apimgt.store.feature/src/main/resources/devportal/source/src/app/data/APIClientFactory.jsx","webpack:////home/jenkins/workspace/full/wilkinson/carbon-apimgt-6.7.206/features/apimgt/org.wso2.carbon.apimgt.store.feature/src/main/resources/devportal/source/src/app/data/Resource.jsx","webpack:////home/jenkins/workspace/full/wilkinson/carbon-apimgt-6.7.206/features/apimgt/org.wso2.carbon.apimgt.store.feature/src/main/resources/devportal/source/src/app/data/Wsdl.js","webpack:////home/jenkins/workspace/full/wilkinson/carbon-apimgt-6.7.206/features/apimgt/org.wso2.carbon.apimgt.store.feature/src/main/resources/devportal/source/src/app/data/api.jsx","webpack:////home/jenkins/workspace/full/wilkinson/carbon-apimgt-6.7.206/features/apimgt/org.wso2.carbon.apimgt.store.feature/src/main/resources/devportal/source/src/app/data/Application.jsx","webpack:////home/jenkins/workspace/full/wilkinson/carbon-apimgt-6.7.206/features/apimgt/org.wso2.carbon.apimgt.store.feature/src/main/resources/devportal/source/src/app/components/Apis/Details/ApiConsole/SelectAppPanel.jsx","webpack:////home/jenkins/workspace/full/wilkinson/carbon-apimgt-6.7.206/features/apimgt/org.wso2.carbon.apimgt.store.feature/src/main/resources/devportal/source/src/app/components/Apis/Details/ApiConsole/TryOutController.jsx","webpack:////home/jenkins/workspace/full/wilkinson/carbon-apimgt-6.7.206/features/apimgt/org.wso2.carbon.apimgt.store.feature/src/main/resources/devportal/source/src/app/components/Apis/Details/ApiConsole/SwaggerUI.jsx","webpack:///./source/src/app/components/Apis/Details/TestConsole/TestConsole.jsx","webpack:///./source/src/app/components/Apis/Details/index.jsx"],"names":["map","./af","./af.js","./ar","./ar-dz","./ar-dz.js","./ar-kw","./ar-kw.js","./ar-ly","./ar-ly.js","./ar-ma","./ar-ma.js","./ar-sa","./ar-sa.js","./ar-tn","./ar-tn.js","./ar.js","./az","./az.js","./be","./be.js","./bg","./bg.js","./bm","./bm.js","./bn","./bn.js","./bo","./bo.js","./br","./br.js","./bs","./bs.js","./ca","./ca.js","./cs","./cs.js","./cv","./cv.js","./cy","./cy.js","./da","./da.js","./de","./de-at","./de-at.js","./de-ch","./de-ch.js","./de.js","./dv","./dv.js","./el","./el.js","./en-SG","./en-SG.js","./en-au","./en-au.js","./en-ca","./en-ca.js","./en-gb","./en-gb.js","./en-ie","./en-ie.js","./en-il","./en-il.js","./en-nz","./en-nz.js","./eo","./eo.js","./es","./es-do","./es-do.js","./es-us","./es-us.js","./es.js","./et","./et.js","./eu","./eu.js","./fa","./fa.js","./fi","./fi.js","./fo","./fo.js","./fr","./fr-ca","./fr-ca.js","./fr-ch","./fr-ch.js","./fr.js","./fy","./fy.js","./ga","./ga.js","./gd","./gd.js","./gl","./gl.js","./gom-latn","./gom-latn.js","./gu","./gu.js","./he","./he.js","./hi","./hi.js","./hr","./hr.js","./hu","./hu.js","./hy-am","./hy-am.js","./id","./id.js","./is","./is.js","./it","./it-ch","./it-ch.js","./it.js","./ja","./ja.js","./jv","./jv.js","./ka","./ka.js","./kk","./kk.js","./km","./km.js","./kn","./kn.js","./ko","./ko.js","./ku","./ku.js","./ky","./ky.js","./lb","./lb.js","./lo","./lo.js","./lt","./lt.js","./lv","./lv.js","./me","./me.js","./mi","./mi.js","./mk","./mk.js","./ml","./ml.js","./mn","./mn.js","./mr","./mr.js","./ms","./ms-my","./ms-my.js","./ms.js","./mt","./mt.js","./my","./my.js","./nb","./nb.js","./ne","./ne.js","./nl","./nl-be","./nl-be.js","./nl.js","./nn","./nn.js","./pa-in","./pa-in.js","./pl","./pl.js","./pt","./pt-br","./pt-br.js","./pt.js","./ro","./ro.js","./ru","./ru.js","./sd","./sd.js","./se","./se.js","./si","./si.js","./sk","./sk.js","./sl","./sl.js","./sq","./sq.js","./sr","./sr-cyrl","./sr-cyrl.js","./sr.js","./ss","./ss.js","./sv","./sv.js","./sw","./sw.js","./ta","./ta.js","./te","./te.js","./tet","./tet.js","./tg","./tg.js","./th","./th.js","./tl-ph","./tl-ph.js","./tlh","./tlh.js","./tr","./tr.js","./tzl","./tzl.js","./tzm","./tzm-latn","./tzm-latn.js","./tzm.js","./ug-cn","./ug-cn.js","./uk","./uk.js","./ur","./ur.js","./uz","./uz-latn","./uz-latn.js","./uz.js","./vi","./vi.js","./x-pseudo","./x-pseudo.js","./yo","./yo.js","./zh-cn","./zh-cn.js","./zh-hk","./zh-hk.js","./zh-tw","./zh-tw.js","webpackContext","req","id","webpackContextResolve","__webpack_require__","e","Error","code","keys","Object","resolve","module","exports","content","i","options","transform","locals","push","LeftMenuItem","props","selected","setSelected","useState","classes","theme","Icon","to","history","text","route","routeToCheck","leftMenu","custom","strokeColor","palette","getContrastText","background","iconSize","leftMenuIconSize","ditectCurrentMenu","location","pathname","test1","RegExp","test2","match","useEffect","listen","react_default","a","createElement","react_router_dom","className","classNames","leftLInk","[object Object]","leftLink_IconLeft","style","backgroundColor","appBarSelected","React","cloneElement","leftLink_Icon","noIcon","CustomIcon","width","height","icon","iconText","Typography","leftLInkText","leftLInkText_IconLeft","leftLInkText_NoText","defaultProps","propTypes","PropTypes","shape","divider","string","isRequired","number","func","appBar","element","withRouter","withStyles","color","textTransform","leftMenuTextStyle","textAlign","overflow","textOverflow","whiteSpace","paddingLeft","LeftMenu","leftMenuWidth","fontFamily","typography","position","bottom","left","top","paddingTop","spacing","paddingBottom","paddingRight","fontSize","caption","cursor","textDecoration","display","alignItems","diplay","withTheme","LastUpdatedTime","lastUpdatedTime","float","Tooltip","title","moment","calendar","interactive","variant","lib","defaultMessage","fromNow","RenderMethodBase","method","chipColor","resourceChipColors","chipTextColor","console","log","Chip","label","toUpperCase","marginRight","RenderMethod","Resources","Component","constructor","super","this","state","paths","restApi","Api","componentDidMount","api","getSwagger","then","response","undefined","obj","setState","catch","error","status","notFound","doRedirectToLogin","render","parentClasses","Fragment","titleWrapper","type","component","Box","p","contentWrapper","key","path","root","heading","innerKey","CONSTS","HTTP_METHODS","includes","aria-labelledby","subHeading","Launch_default","marginLeft","flexDirection","marginBottom","maxHeight","overflowY","primary","dark","methodLower","toLowerCase","operationChipColor","Operations","ApiContext","Consumer","_ref","Table","padding","operations","length","item","TableRow","borderStyle","TableCell","target","Operations_RenderMethod","verb","py","marginTop","ProductResources","PureComponent","apiResources","apis","margin","resource","name","version","operation","resourceRow","ProductResources_RenderMethod","capitalizeFirstLetter","charAt","slice","lowerCaseString","Policies","Grid","xs","md","lg","subtitle","policies","index","withAPI","HUMAN_READABLE_SCHEMES","oauth2","basic_auth","mutualssl","api_key","Configuration","useContext","APIContext","container","placement","aria-label","tooltip","htmlTooltip","Button","helpButton","HelpOutline_default","helpIcon","transport","upperCaseString","notConfigured","securityScheme","filter","filteredItem","join","accessControl","accessControlRoles","workflowStatus","visibility","visibleRoles","NewOverview_Policies","apiType","API","APIProduct","tags","tag","font-size","useStyles","makeStyles","button","secondary","gridRequirements","justifyContent","gridSmall","gridEndpoint","iconTrue","green","iconFalse","grey","arrowIcon","right","default","zIndex","overviewArrow","flexBasis","maxWidth","stepper","box","borderRight","pointerStart","overviewStepper","backgrounds","completed","&:before","borderLeft","borderLeftColor","borderTop","borderBottom","pointerMiddle","active","&:after","wrapperBackground","pointerEnd","inactive","pointerMiddleCompleted","pointerEndActive","pointerEndCompleted","stepIcon","viewInStoreLauncher","CustomizedSteppers","updateAPI","useAPI","settings","user","useAppContext","isEndpointAvailable","endpointConfig","isTierAvailable","isPrototypedAvailable","implementation_status","lifecycleState","setlifecycleState","isUpdating","setUpdating","tenantList","userNameSplit","split","tenantDomain","devportalUrl","concat","storeUrl","updateLCStateOfAPI","apiId","updateLcState","Alert","body","description","info","finally","errorResponse","JSON","stringify","message","getLcState","result","activeStep","step2Class","step3Class","Stepper","alternativeLabel","Step","StepLabel","StepIconProps","Check_default","Close_default","rel","href","onClick","disabled","AuthManager","isNotPublisher","CircularProgress","size","finalLifecycleState","BusinessInformation","businessInformation","businessOwner","technicalOwner","contextType","MetaData","provider","word-break","context","createdTime","tabIndex","NewOverview_BusinessInformation","showEndpoint","getProductionEndpoint","getSandboxEndpoint","Endpoints","url","endpointSecurity","Overview","newApi","loadEndpoints","NewOverview_Endpoints","align","mainTitle","s","Paper","NewOverview_MetaData","NewOverview_Configuration","specialGap","NewOverview_Operations","NewOverview_ProductResources","NewOverview_Resources","getResourcesClassForAPIs","_objectSpread","mixins","gutters","buttonSuccess","&:hover","checkItem","chip","& span","imageContainer","imageWrapper","resourceTitle","ListRoot","flex","minWidth","pxToRem","border","& b","fontWeight","fontWeightMedium","lifecycleWrapper","lifecycleIcon","leftSideWrapper","windowURL","window","URL","webkitURL","dropzoneStyles","borderRadius","Transition","Slide","_extends","direction","ThumbnailView","ThumbnailView_defineProperty","action","intl","open","selectedTab","selectedIconUpdate","category","colorUpdate","backgroundIndexUpdate","file","fileObj","formatMessage","newIconJson","backgroundIndex","blob","Blob","File","uploadThumbnail","event","value","hex","thumbnail","MaterialIcons","categories","selectedIcon","uploading","handleClick","bind","handleClose","componentWillUnmount","revokeObjectURL","onDrop","acceptedFile","preview","cState","setImageUpdate","addAPIProductThumbnail","addAPIThumbnail","createObjectURL","saveDisableEnable","isEditable","imageUpdate","colorPairs","BaseThumbnail","Dialog","TransitionComponent","disableBackdropClick","onClose","fullWidth","fullScreen","square","popupHeader","IconButton","Icon_Icon","RadioGroup","group","onChange","handleChange","FormControlLabel","control","Radio","DialogContent","src","Configurations","app","alt","es","multiple","accept","dropzone","activeClassName","acceptDrop","rejectClassName","rejectDrop","dropFile","getRootProps","getInputProps","dropZoneWrapper","dropIcon","imageGenWrapper","ImageGenerator","fixedIcon","subtitleWrapper","Select","native","handleSelectionChange","cat","icons","FindCategoryKeys","iconView","selectIcon","react_color_lib","onChangeComplete","handleChangeComplete","colorPair","backgroundSelection","selectBackground","onKeyDown","Background","DialogActions","actionBox","bool","injectIntl","main","red","& > div","boxShadow","DefaultVersion","configDispatcher","apiFromContext","mt","FormControl","FormLabel","isDefaultVersion","isRestricted","Description","TextField","multiline","rows","AccessControl","roleValidity","setRoleValidity","userRoleValidity","setUserRoleValidity","isNone","invalidRoles","setInvalidRoles","otherValidSystemRoles","setOtherValidSystemRoles","every","val","select","SelectProps","MenuProps","menu","helperText","MenuItem","ChipInput_default","alwaysShowPlaceholder","placeholder","blurBehavior","InputProps","endAdornment","InputAdornment","Error_default","onAdd","role","systemRolePromise","APIValidation","validate","base64url","encode","userRolePromise","userRole","_toConsumableArray","handleRoleValidationFailure","chipRenderer","_ref2","onDelete","existingRole","handleRoleDeletion","StoreVisibility","roleExists","setRoleExists","isRestrictedByRoles","tenants","setTenants","getTenantsByState","TENANT_STATE_ACTIVE","count","StoreVisibility_toConsumableArray","Tags","isTagValid","setIsTagValid","invalidTags","setInvalidTags","isTagWithinLimit","setIsTagWithinLimit","regexPattern","test","Tags_toConsumableArray","currentInvalidTags","existingTag","oldTag","Social","additionalProperties","github_repo","slack_url","APICategories","setCategories","apiCategories","list","dense","disableGutters","ListItemText","renderValue","Array","isArray","Checkbox","checked","paper","paperCenter","itemPadding","arrowForwardIcon","arrowBackIcon","expansionPanel","expansionPanelDetails","lineHeight","btnSpacing","copyAPIConfig","lifeCycleStatus","authorizationHeader","responseCachingEnabled","cacheTimeout","enableSchemaValidation","DesignConfigurations_toConsumableArray","maxTps","wsdlUrl","corsConfiguration","corsConfigurationEnabled","accessControlAllowCredentials","accessControlAllowOrigins","accessControlAllowHeaders","accessControlAllowMethods","DesignConfigurations_objectSpread","DesignConfigurations","setIsUpdating","apiConfig","useReducer","configAction","nextState","invalidTagsExist","find","Container","elevation","px","ImageGenerator_ThumbnailView","components_APICategories","pt","Link","iconSpace","actionSpace","ResponseCaching","isResponseCachingEnabled","ExpansionPanel","ExpansionPanelSummary","expandIcon","ExpandMore_default","Switch","inputProps","ExpansionPanelDetails","CORSConfiguration","isCorsEnabled","isAllowAllOrigins","accessControlAllowOrigin","CORSConfiguration_toConsumableArray","oldOrigin","accessControlAllowHeader","oldHeader","newValue","accessControlAllowMethod","oldMethod","_ref3","SchemaValidation","isOpen","setIsOpen","componentDidUpdate","prevProps","aria-describedby","DialogTitle","DialogContentText","gutterBottom","MaxBackendTps","defaultExpanded","production","sandbox","row","labelPlacement","Collapse","in","MaxBackendTps_objectSpread","FormHelperText","EditMediationPolicy","updateMediationPolicy","selectedMediationPolicy","setEditing","editing","globalMediationPolicies","setGlobalMediationPolicies","seqCustom","setSeqCustom","provideBy","setProvideBy","NONE","localSelectedPolicyFile","setLocalSelectedPolicyFile","updatePoliciesFromBE","globalPromise","getGlobalMediationPolicies","customPromise","getMediationPolicies","Promise","all","values","EditMediationPolicy_toConsumableArray","seq","process","setActivePolicy","policy","assign","shared","policyFile","newPolicy","addMediationPolicy","policyType","saveMediationPolicy","getAttribute","handleDownload","policyToDownload","getGlobalMediationPolicyContent","Utils","forceDownload","downloadGlobalMediationPolicyContent","getMediationPolicyContent","done","document","downloadCustomMediationPolicyContent","handleDelete","policyToDelete","deleteMediationPolicy","deleteCustomMediationPolicy","disableEscapeKeyDown","dividers","inputValue","radioWrapper","EditMediationPolicy_extends","radioGroup","seq_id","seq_name","seq_type","formControl","InFlow","EditRounded_default","MediationPolicies_EditMediationPolicy","flexGrow","itemWrapper","subTitle","subTitleDescription","flowWrapper","wordBreak","textTrim","externalLink","production_endpoints","isDynamicEndpoints","pb","m","DEFAULT_API_SECURITY_OAUTH2","API_SECURITY_BASIC_AUTH","API_SECURITY_API_KEY","API_SECURITY_MUTUAL_SSL","API_SECURITY_OAUTH_BASIC_AUTH_API_KEY_MANDATORY","API_SECURITY_MUTUAL_SSL_MANDATORY","AuthorizationHeader","hasResourceWithSecurity","authorizationHeaderValue","apiList","apiInProduct","prototype","hasOwnProperty","call","findIndex","op","authType","keyManagerSelect","KeyManager","keyManagersConfigured","setKeyManagersConfigured","keyManagers","newKeyManagers","KeyManager_toConsumableArray","indexOf","splice","ml","required","FormGroup","enabled","displayName","mb","bottomSpace","ApplicationLevel","haveMultiLevelSecurity","mandatoryValue","_ref4","arrayOf","SelectEndpoint","endpoint","isEndpointEmpty","endpoints","autoFocus","condition","otherwise","iff","ep","fileinput","& span.material-icons","uploadedFile","certificatesHeader","addCertificateBtn","borderColor","borderWidth","certificateList","certDetailsHeader","uploadCertDialogHeader","UploadCertificate","uploadCertificate","isMutualSSLEnabled","uploadCertificateOpen","setUploadCertificateOpen","aliasList","alias","setAlias","setPolicy","setEndpoint","isSaving","setSaving","certificate","setCertificate","setIsEndpointEmpty","isPoliciesEmpty","setPoliciesEmpty","aliasValidity","setAliasValidity","isRejected","setIsRejected","closeCertificateUpload","SelectPolicies","onBlur","aliasValidation","isValid","details","handleAliasOnBlur","getHelperText","maxLength","certificateFile","extension","InsertDriveFile_default","certificates","alertWrapper","warningIcon","warningColor","& .material-icons","deleteIcon","deleteIconDisable","Certificates","deleteCertificate","setCertificateList","openCertificateDetails","setOpenCertificateDetails","anchor","certificateToDelete","setCertificateToDelete","isDeleting","setDeleting","List_List","ListItem","ListItemAvatar","cert","tier","ListItemSecondaryAction","edge","certAlias","getClientCertificateStatus","currentTarget","getCertificateStatus","err","showCertificateDetails","certificateAlias","deleteCertificateByAlias","subject","Transports","TransportLevel","clientCertificates","setClientCertificates","getAllClientCertificates","resp","GeneralConfiguration_Certificates","addClientCertificate","tmpCertificates","TransportLevel_toConsumableArray","deleteClientCertificate","APISecurity","apiContext","isAPIProduct","isPrototyped","components_TransportLevel","resourcesWithSecurity","searchWrapper","UpdateComplexity","filterKeyWord","setFilter","setList","typelist","setFilterByKeyWord","InputLabelProps","shrink","stickyHeader","TableHead","TableBody","typename","aria-controls","respond","field","complexityValue","newArr","UpdateComplexity_toConsumableArray","summation","editIcon","dialogPaper","minHeight","GraphQLQueryAnalysis","setUpdateComplexityList","setOpen","setTypeList","findSummation","List","QueryAnalysis_toConsumableArray","Set","array","ob","getGraphqlPoliciesComplexity","res","getGraphqlPoliciesComplexityTypes","typeList","fieldList","setInitialComplexity","Shared","fixed","saveButton","RuntimeConfiguration_toConsumableArray","RuntimeConfiguration","updateComplexityList","RuntimeConfiguration_objectSpread","schema","newState","noMandatoryOAuthBasicAuth","noMandatoryMutualSSL","mediationPolicies","cloneDeep","inPolicy","setInPolicy","outPolicy","setOutPolicy","faultPolicy","setFaultPolicy","useIntl","kmNameList","forEach","km","getMediationPoliciesToSave","newMediationPolicies","isEmpty","justify","components_SchemaValidation","Flow","ArrowForward_default","ArrowBack_default","components_Endpoints","updateGraphqlPoliciesComplexity","updateComplexity","APILevelRateLimitingPolicies","apiThrottlingPolicy","apiRateLimits","setApiRateLimits","rateLimit","boxFlex","flexWrap","RuntimeConfigurationWebSocket_toConsumableArray","RuntimeConfigurationWebSocket_objectSpread","pr","SettingsEthernet_default","LifeCycleImage","highLightMe","startsWith","opacity","xmlns","viewBox","aria-hidden","d","isolation","mixBlendMode","fill","strokeWidth","strokeLinejoin","y","x","letterSpacing","wordSpacing","clipRule","fillRule","stroke","strokeLinecap","stateButton","iconWarn","yellow","grid","labelsGrid","CheckboxLabels","isCertAvailable","isAppLayerSecurityMandatory","isBusinessPlanAvailable","isEnvironmentAvailable","gatewayEnvironments","isContainerMngEnvironmentAvailable","deploymentEnvironments","some","env","clusterName","endpointImplementationType","WarningRounded_default","lifecyclePending","currentState","transition","cleanupPendingTask","LifeCycleUpdate","updateLifeCycleState","WORKFLOW_STATUS","CREATED","APPROVED","pageError","apiUUID","promisedUpdate","lifecycleChecklist","checkList","handleUpdate","enableStore","preventDefault","lcState","handleChangeCheckList","certList","lifecycleStates","LifeCycleUpdate_toConsumableArray","availableTransitions","isWorkflowPending","lcMap","Map","set","isPrototype","lifecycleButtons","LifeCycleUpdate_objectSpread","LifecyclePending","lifeCycleImage","LifeCycle_LifeCycleImage","ScopeValidation","resourcePath","API_CHANGE_LC","resourceMethod","POST","buttonsWrapper","transitionState","data-value","Banner","disableActions","paperProps","LifeCycleHistory","table","firstCol","lcHistory","reverse","entry","previousState","postState","scope","Avatar","avatar","Person_default","personIcon","previous","post","updatedTime","LifeCycle","updateData","promisedAPI","get","promisedLcState","promisedLcHistory","getLcHistory","promisedClientCerts","clientCerts","checkItems","privateJetModeEnabled","LifeCycle_toConsumableArray","LifeCycle_LifeCycleUpdate","historyHead","LifeCycle_LifeCycleHistory","contentAreaWidth","CreateEditForm","CreateEditForm_defineProperty","sourceType","summary","sourceUrl","otherTypeName","restAPI","docPromise","addDocument","inlineContent","docId","updateDocument","disableName","nameNotDuplicate","nameMaxLengthExceeds","invalidUrl","nameEmpty","summeryEmpty","urlEmpty","getDocument","doc","apiNotFound","arguments","apiDocument","isDocumentPresent","showNameHelper","getUrlHelperText","setSaveDisabled","settingsContext","addNewOther","FormControlOdd","onKeyUp","docVisibilityEnabled","formControlFirst","changeType","formControlLabel","typeTextWrapper","changeSource","setDisable","_ref5","supportedDocTypes","_ref6","InlineMessage","AppContext","saveDisabled","oneOf","GoToEdit","urlPrefix","listingPath","displayAddContent","docContentEditPath","documentId","Create","newDoc","setNewDoc","createEditForm","useRef","sm","titleLink","Documents_CreateEditForm","innerRef","node","Divider","promiseWrapper","addFileToDocument","Documents_GoToEdit","addNewWrapper","addNewHeader","h6","MonacoEditor","lazy","t","ReactMarkdown","MarkdownEditor_extends","MarkdownEditor","skipHtml","markdown","showAtOnce","setCode","toggleOpen","updateDoc","getInlineContentOfDocument","docName","addInlineContentToDocument","splitWrapper","react","fallback","language","selectOnLineNumbers","newCode","editorDidMount","editor","monaco","focus","markdownViewWrapper","source","Edit_extends","Edit","editMetaButton","getDocumentsList","Delete","runAction","deleteDoc","deleteDocument","apiName","DeleteMultiple","docsToDelete","docs","deleteDocs","docPromises","data","docIndexObj","instanceOf","Download","isFileAvailable","setIsFileAvailable","isSuccessful","setIsSuccessful","getFileForDocument","TextEditor","LinkGenerator","Listing","showAddDocs","toggleAddDocs","getDocuments","errorData","parse","messageTxt","oldState","setFoo","foo","_this","showActionsColumn","print","download","viewColumns","customToolbar","search","onRowsDelete","rowData","rowMeta","that","columns","customBodyRender","tableMeta","sort","actionTable","Documents_MarkdownEditor","Documents_Edit","Documents_Delete","Documents_Download","Documents_DeleteMultiple","AddCircle_default","buttonIcon","Documents_Create","dist_default","head","actions","& td","& td:first-child","messageBox","& button","View","params","setDoc","loadContentForDoc","leftCell","View_ReactMarkdown","react_safe_html_lib_default","html","displayURL","displayURLLink","docTitle","docBadge","replace","EditContent_TextEditor","Documents","react_router","exact","EditContent","DocCreate","ResourceNotFound","RateLimitingLevels","RESOURCE","APIRateLimiting","operationRateLimits","currentApiThrottlingPolicy","setApiThrottlingPolicy","setIsSaving","isResourceLevel","rateLimitingLevel","operationRateLimitMessage","light","userSelection","pl","disabledAction","memo","Operation","isSecurity","handleScopeChange","handlePolicyChange","operationAction","defValue","newoperation","Operation_objectSpread","scopes","Operation_toConsumableArray","handleUpdateList","throttlingPolicy","apiPolicies","isOperationRateLimiting","sharedScopes","dropdownScopes","filteredApiScopes","sharedScope","chipActive","dropDown","fieldName","ListSubheader","apiScope","auth","textField","link","listItem","resourceRoot","deleteButton","pathDisplay","descriptionWrapper","scopeSelect","descriptionWrapperUp","addParamRow","propsForm","deleteLink","verticalAlign","operationCopy","Operations_toConsumableArray","b","apiScopesByName","sharedScopesByName","handleApiThrottlePolicy","updateOperations","apiScopesByNameList","scopeObject","modifiedScope","getAllSharedScopes","getAllScopes","sharedScopesList","sharedScopesByNameList","newOperation","updatedList","selectedScope","updateApiScopes","apiOperations","isScopeExistsInOperation","resourceNotFoundMessage","components_APIRateLimiting","Operations_Operation","buttonMain","addResource","DescriptionAndSummary","operationsDispatcher","disableUpdate","spec","VERSIONS","V3","V2","getVersion","openapi","swagger","getOperationScopes","openAPIVersion","security","mapAPIOperations","temp","rest","_objectWithoutProperties","isRef","isReference","OperationGovernance","operationScopes","autoWidth","IconComponent","ArrowDropDownIcon","renderInput","ref","other","AWSLambdaSettings_objectWithoutProperties","AWSLambdaSettings_extends","AWSLambdaSettings_objectSpread","inputRef","inputRoot","input","inputInput","renderSuggestion","suggestionProps","suggestion","itemProps","highlightedIndex","selectedItem","isHighlighted","isSelected","object","oneOfType","IntegrationDownshift","arns","timeout","setTimeout","downshift_esm","onSelect","changes","clearSelection","getItemProps","getLabelProps","getMenuProps","openMenu","_getInputProps","onFocus","showEmpty","deburr","trim","inputLength","keep","getSuggestions","min","max","step","Math","floor","milliSeconds","parseInt","newTimeout","handleTimeoutMin","handleTimeoutSec","supportedDataTypes","2.0","formData","query","header","3.x","cookie","matched","getSupportedDataTypes","specVersion","paramType","parameterContainer","checkBox","AddParameter","inputLabel","labelWidth","setLabelWidth","initParameter","getParameter","newParameter","newParameterDispatcher","AddParameter_objectSpread","current","offsetWidth","isParameterExist","isParameterExistValue","parameters","clearInputs","addNewParameter","InputLabel","htmlFor","getContentAnchorEl","anchorOrigin","vertical","horizontal","getParameterTypes","paramIn","onKeyPress","Clear_default","RequestBody","contentType","hideParameterEdit","requestBody","Edit_default","Delete_default","form","EditParameter","editingParameter","setEditingParameter","parameter","parameterActionDispatcher","currentParameter","paramAction","nextParameter","EditParameter_objectSpread","isEditing","disableTypography","dataType","format","getDataFormats","overflowX","ListParameters","resolvedSpec","isRefParam","paramCopy","entries","operationComponents_RequestBody","Parameters","haveParameters","operationComponents_AddParameter","CloseConfirmation","closeEditor","forwardRef","Fade","PolicyEditor_extends","PolicyEditor","prefersDarkMode","originalResourcePolicy","selectedPolicy","setPolicyContent","resourcePoliciesDispatcher","setPageError","openConfirmation","setOpenConfirmation","saving","editorOptions","readOnly","smoothScrolling","wordWrap","editorProps","AppBar","Toolbar","updateResourcePolicy","success","disableShrink","PolicyEditor_MonacoEditor","SOAPToRESTListing","resourcePolicy","resourcePolicyIn","setResourcePolicyIn","resourcePolicyOut","setResourcePolicyOut","out","useMediaQuery","openEditor","setOpenEditor","setTabIndex","Tabs","indicatorColor","textColor","tab","Tab","SOAPToRESTListing_MonacoEditor","SOAPToRESTListing_objectSpread","highlight","disableDelete","onMarkAsDelete","markAsDelete","hideParameters","isExpanded","setIsExpanded","customButton","paperStyles","customDivider","linearProgress","highlightSelected","hexToRGBA","contentNoMargin","overlayUnmarkDelete","operationDeleteUndo","targetText","apiOperation","isUsedInAPIProduct","usedProductIds","toggleDelete","stopPropagation","expanded","disableRipple","disableTouchRipple","Badge","invisible","disableFocusRipple","ReportProblemOutlined_default","Boolean","endpoint_type","resourcePolicies","x-wso2-new","tagClass","breakpoints","down","GroupOfOperations","openAPI","children","currentTagInfo","tagInfo","SpecErrors","specErrors","ErrorOutline_default","primaryTypographyProps","inset","VerbElement","isButton","customMenu","useMenuStyles","SUPPORTED_VERBS","AddOperation","newOperations","newOperationsDispatcher","AddOperation_objectSpread","verbs","addOperation","operationTarget","operationVerbs","warning","remaining","verbElements","allSelected","Fab","Add_default","GoToDefinitionLink","OperationsSelector","selectedOperations","setSelectedOperation","isIndeterminate","mr","ClearAll_default","DeleteSweep_default","SaveOperations","updateOpenAPI","onBackdropClick","operationProps","disableRateLimiting","hideAPIDefinitionLink","disableMultiSelect","disableAddOperation","setOperationRateLimits","markedOperations","setSharedScopes","setSharedScopesByName","openAPISpec","setOpenAPISpec","securityDefScopes","setSecurityDefScopes","setArns","setResolvedSpec","errors","currentPolicies","policyAction","nextResourcePolicies","Resources_objectSpread","httpVerb","currentOperations","updatedOperation","addedOperations","bodyIndex","scopeDescription","para","paraObj","extractPathParameters","alreadyExistCount","currentVerb","warn","x-auth-type","responses","200","useCallback","currentSelections","nextSelectedOperations","localAPI","useMemo","resolveAndUpdateSpec","rawSpec","specCopy","SwaggerParser","components","securitySchemes","flows","implicit","securityDefinitions","setSecurityDefScopesFromSpec","updateSwagger","getAmznResourceNames","apitype","isSOAPToREST","promisedInPolicies","getResourcePolicies","promisedOutPolicies","inPolicies","outPolicies","mappedPolicies","components_AddOperation","verbObject","components_Operation","Resources_extends","copyOfOperations","isSelectAll","reject","verbInfo","secDef","setSpecScopesFromSecurityDefScopes","APIOperations","Resources_Resources_Resources","APIProductOperations","buttonWrapper","ProductResourcesEdit","apiCopy","setApiResources","updating","ProductResourcesEditWorkspace","NewEndpointCreate","generateEndpointConfig","endpointImplType","setImplType","endpointTypes","inlineMessageContainer","Card","endpointTypeCard","CardContent","cardContent","types","option","CardActions","cardActions","GenericResource","scriptContent","originalScript","setMockValueDetails","showReset","setShowReset","GenericResource_objectSpread","resourcePathContainer","prototypeResourceHeader","chipExpansionPanel","scriptResetButton","genericResourceContent","GenericResource_MonacoEditor","xMediationScriptProperty","defaultScript","InlineEndpoints","updatePaths","mockValueDetails","onScriptChange","tmpPaths","mockScripts","setMockScripts","getGeneratedMockScriptsOfAPI","mediationScript","script","getGeneratedMockScriptOfAPI","Prototype_GenericResource","getEndpointTypeProperty","endpointsToList","config","apply","endpointUtils_toConsumableArray","sandbox_endpoints","sandbox_failovers","production_failovers","createEndpointConfig","endpointType","tmpEndpointConfig","failOver","access_method","amznAccessKey","amznSecretKey","amznRegion","getEndpointTemplate","template_not_supported","GeneralConfiguration","epConfig","isConfigExpanded","setConfigExpand","endpointCertificates","setEndpointCertificates","setAliasList","endpointCertificatesList","aliases","filteredEndpoints","epLookup","getEndpointCertificates","generalConfigPanel","configHeaderContainer","secondaryHeading","hidden","generalConfigContent","endpointConfigSection","addCertificate","GeneralConfiguration_toConsumableArray","deleteEndpointCertificate","flexShrink","securityHeading","sandboxEndpointSwitch","GenericEndpoint","endpointURL","editEndpoint","setAdvancedConfigOpen","esCategory","setESConfigOpen","deleteEndpoint","serviceUrl","setServiceUrl","isEndpointValid","setIsEndpointValid","statusCode","setStatusCode","isErrorCode","setIsErrorCode","endpointInputWrapper","endpointValidChip","endpointErrorChip","endpointInvalidChip","isWebSocket","iconButtonValid","iconButton","apiID","testEndpoint","statusMessage","GenericEndpointAdd","addEndpoint","EndpointListing","apiEndpoints","epType","failOvers","addNewEndpoint","removeEndpoint","setEndpointType","setEndpoints","selectedRef","listingWrapper","Endpoints_GenericEndpointAdd","Endpoints_GenericEndpoint","epTypeWrapper","epTypeName","epInput","leftArrow","leftArrowLight","dialogHeader","listItemOdd","&:focus","algorithms","sessionManagementOps","defaultTemplateObj","algoClassName","algoCombo","sessionManagement","sessionTimeOut","LoadBalanceConfig","handleLBConfigChange","closeLBConfigDialog","lbConfig","setLbConfigObject","algoClassNameError","setAlgoClassNameError","tmpLBConfig","LoadBalanceConfig_objectSpread","handleFieldChange","algo","configButtonContainer","LoadbalanceFailoverConfig","endpointsDispatcher","toggleAdvanceConfig","globalEpType","handleEndpointCategorySelect","isLBConfigOpen","setLBConfigOpen","newURL","endpointConfigCopy","endpointTemplate","epConfigProperty","endpointList","endpointConfigProperty","indexToRemove","tmpEndpoints","LoadbalanceFailoverConfig_objectSpread","getEndpointTypeHeading","endpointsTypeSelectWrapper","endpointTypeSelect","lpConfigWrapper","lbConfigBtn","wrapper","endpointsWrapperLeft","endpointName","Endpoints_EndpointListing","endpointsWrapperRight","configDialogHeader","Endpoints_LoadBalanceConfig","endpointSecurityInfo","PaperProps","itemHeight","AdvanceEndpointConfig","advanceConfig","isSOAPEndpoint","onSaveAdvanceConfig","onCancel","advanceConfigObj","setAdvanceConfig","optimize","actionDuration","actionSelect","factor","retryDelay","retryErroCode","retryTimeOut","suspendDuration","suspendErrorCode","suspendMaxDuration","errorCodes","actionItems","messageTypes","optimizeOptions","AdvanceEndpointConfig_objectSpread","handleConfigFieldChange","di","configContainer","configSubContainer","Input","messageType","advanceDialogActions","EditableParameterRow","oldName","oldValue","newName","setName","setValue","editMode","setEditMode","validateEmpty","itemValue","saveRow","handleKeyDown","addProperty","Save_default","DeleteForever_default","EndpointSecurity","securityInfo","onChangeEndpointAuth","isProduction","saveEndpointSecurityConfig","closeEndpointSecurityConfig","setEndpointSecurityInfo","username","password","grantType","tokenUrl","clientId","clientSecret","customParameters","securityValidity","setSecurityValidity","showAddParameter","setShowAddParameter","clientSecretIsMasked","setClientSecretIsMasked","parameterName","setParameterName","parameterValue","setParameterValue","isUsernameUpdated","setIsUsernameUpdated","isPasswordUpdated","setIsPasswordUpdated","authTypes","grantTypes","tmpSecurity","EndpointSecurity_objectSpread","validateAndUpdateSecurityInfo","validity","validateTokenUrl","toggleAddParameter","handleParameterChange","handleAddToList","customParametersCopy","oldRow","newRow","autoComplete","RemoveRedEye","eye","addParameter","items","GeneralConfiguration_EditableParameterRow","EndpointSecurity_extends","renderCustomParameters","selectField","banner","Credentials","regions","aws","newEndpointConfig","Credentials_objectSpread","labelId","keepMounted","EndpointOverview","swaggerDef","saveAndRedirect","supportedEnpointTypes","setSupportedEndpointType","setEpConfig","advanceConfigOptions","setAdvancedConfigOptions","endpointSecurityConfig","setEndpointSecurityConfig","endpointCategory","setEndpointCategory","prod","typeChangeConfirmation","setTypeChangeConfirmation","openDialog","previousEndpointSecurity","setPreviousEndpointSecurity","supportedTypeLists","apiObject","supportedEndpointTypes","getSupportedType","availableEndpoints","getEndpointType","endpoint_security","getEndpoints","handleOnChangeEndpointCategoryChange","endpointProp","modifiedEndpoint","endpointTypeProperty","changeEndpointType","selectedKey","tmpConfig","generatedEndpointConfig","EndpointOverview_objectSpread","handleEndpointTypeSelect","advanceEPConfig","endpointInfo","getAdvanceConfig","toggleEndpointSecurityConfig","handleEndpointSecurityChange","endpointSecurityObj","enType","overviewWrapper","Prototype_InlineEndpoints","endpointContainer","defaultEndpointWrapper","Endpoints_GeneralConfiguration","Endpoints_LoadbalanceFailoverConfig","AdvancedConfig_AdvanceEndpointConfig","selectedEndpoints","GeneralConfiguration_EndpointSecurity","endpointTypesWrapper","listing","sandboxHeading","borderRightStyle","borderRightWidth","endpointTypesSelectWrapper","addLabel","defaultSwagger","setSwagger","endpointValidity","setAPIEndpointsValid","apiDispatcher","initState","Endpoints_objectSpread","implementationType","generateMockScripts","isAddressEndpoint","currentEndpointConfig","getEndpointTemplateByType","toJSON","saveAPI","isRedirect","apiKey","apiSecret","isValidEndpoint","Endpoints_NewEndpointCreate","endpointsContainer","Endpoints_EndpointOverview","swaggerObj","onChangeAPI","errorMessageContainer","endpointValidityMessage","buttonSection","implSelectRadio","gatewayPaper","emptyBox","MicroGateway","selectedMgLabel","setSelectedMgLabel","mgLabels","setMgLabels","microgatewayLabelsGet","MicroGateway_toConsumableArray","access_urls","Kubernetes","clusters","selectedDeployments","setSelectedDeployments","handleOnChecked","clusterId","include","deploymentTypes","deployment","selectedClusters","cluster","generateElement","selectedDeploymentCopy","dep","clusterNameFound","handleEnvironmentsSelect","reduce","currentKey","elementToPush","generatePropertyData","properties","accessURL","Environments","setGatewayEnvironments","Environments_toConsumableArray","labels","isPublishing","setPublishing","allDeployments","setAllDeployments","getDeployments","environment","serverUrl","ws","wss","http","https","filterType","selectableRowsHeader","selectableRows","pagination","Invoice","subscriptionId","isMonetizedUsagePolicy","isNotAuthorized","showPopup","setShowPopup","showErrorPopup","setShowErrorPopup","invoice","setInvoice","handleAlertClose","getMonetizationInvoice","invoiceData","invoiceItem","insideArray","subscriptionStatus","BLOCKED","PROD_BLOCKED","SubscriptionTablePagination","page","rowsPerPage","onChangePage","FirstPage_default","KeyboardArrowLeft_default","ceil","KeyboardArrowRight_default","LastPage_default","SubscriptionsTable","subscriptions","totalSubscription","searchQuery","rowsPerPageOptions","emptyColumnHeight","subscriberClaims","formatSubscriptionStateString","blockSubscription","blockProductionOnly","unblockSubscription","handleChangePage","handleChangeRowsPerPage","filterSubscriptions","isMonetizedPolicy","renderClaims","isNotCreator","fetchSubscriptionData","getSubscriptionBlockingButtons","blockSubscriptions","messages","defineMessages","errorMessage","unblockSubscriptions","total","getSubscriberInfo","prevState","SubscriptionsTable_objectSpread","getMonetization","monetizationStatus","getSubscriptionPolicies","filteredPolicies","tierPlan","policyName","monetizationAttributes","pricePerRequest","claimsObject","claims","claim","hover","InfoToolTip","Info_default","BLOCK_SUBSCRIPTION","Subscriptions_Invoice","customFooter","TablePagination","colSpan","onChangeRowsPerPage","ActionsComponent","subMails","emails","v","email","URI","names","k","Tip","noDataMessage","headline","popupHeadline","& th","searchDiv","searchRoot","searchInput","searchIconButton","tableColumnSize","tableColumnSize2","dialogColumnSize","dialog","invoiceTable","uniqueCell","disableColor","subscriberHeader","SubscriptionPoliciesManage","subscriptionPolicies","setPolices","newSelectedPolicies","SubscriptionPoliciesManage_toConsumableArray","subscriptionPoliciesPaper","gridLabel","TenantAutocomplete_objectWithoutProperties","TenantAutocomplete_extends","TenantAutocomplete_objectSpread","DownshiftMultiple","setTenantList","suggestions","setInputValue","newSelectedItem","TenantAutocomplete_toConsumableArray","inputValue2","tenantList2","startAdornment","handleInputChange","setsuggestions","newSuggestions","tenant","domain","inputType","textControl","selectEmpty","subscriptionAvailabilityPaper","tenantsList","SimpleSelect","setAvailability","currentAvailability","subscriptionAvailability","setValues","availability","isSpecificTenants","isUIElementDisabled","subscriptionAvailableTenants","availabilityValue","SubscriptionAvailability_objectSpread","onSubmit","displayEmpty","TenantAutocomplete_IntegrationDownshift","Subscriptions","setSubscriptions","updateInProgress","setUpdateInProgress","Subscriptions_toConsumableArray","Subscriptions_SubscriptionPoliciesManage","crossTenantSubscriptionEnabled","Progress","Subscriptions_SubscriptionsTable","CreateScope","validRoles","invalidRolesArray","api_uuid","valid","invalid","apiScopes","scopeAddDisabled","addScope","validateScopeName","handleScopeNameInput","validateScopeDescription","handleRoleAddition","CreateScope_toConsumableArray","exist","bindings","aScope","promisedApiUpdate","redirectURL","titleGrid","descriptionForm","progress","helpText","hint","extraPadding"," & .MuiGrid-item","EditScope","EditScope_defineProperty","thisScope","scopeName","EditScope_objectSpread","updateScope","handleInputs","originalScope","scopeObj","EditScope_toConsumableArray","SvgIcon_default","ConfirmDialog","labelCancel","labelOk","callback","confirm","ops","setOpenLocal","deleteScope","Scopes","api_data","editUrl","Scopes_Delete","scopesList","resources","buttonProgress","Scope","Scopes_CreateScope","Scopes_extends","Scopes_EditScope","AddPolicy","AddPolicy_defineProperty","uuid","policyId","getThreatProtectionPolicy","formattedPolicy","getThreatProtectionPolicies","currentApi","handlePolicyAdd","addThreatProtectionPolicyToApi","n","addJsonContent","formatPolicy","toggleShowAddPolicy","SecurityOverview","SecurityOverview_defineProperty","showAddPolicy","updatePolicyData","policyIds","threatProtectionPolicies","updatedPolicies","deletePolicy","associatedApi","deleteThreatProtectionPolicyFromApi","Security_AddPolicy","tableLayout","Security","APISecurityAudit","APISecurityAudit_defineProperty","createMuiTheme","useNextVariants","overrides","MUIDataTableBodyCell","MUIDataTableSelectCell","MUIDataTableToolbarSelect","searchTerm","lastTerms","termObject","regexPatterns","appendedString","j","getModel","findNextMatch","lineNumber","range","endLineNumber","column","finalMatchIndex","revealLineInCenter","startLineNumber","deltaDecorations","Range","startColumn","endColumn","isWholeLine","inlineDecoration","glyphMarginClassName","contentLine","report","overallScore","numErrors","externalApiId","loading","apiDefinition","criticalityObject","1","2","3","4","5","getSecurityAuditReport","grade","redirectUrl","getRowData","issues","rowType","dataObject","rowObject","specificDescription","pointer","criticality","roundScore","score","tooManyImpacted","pointersAffected","tooManyError","getMoreDetailUrl","baseUrl","round","reportObject","linkToDetailedReport","errorColumns","glyphMargin","responsive","expandableRows","expandableRowsOnClick","renderExpandableRow","tableRow","columnOne","react_monaco_editor_lib_default","columnTwo","referenceErrorTypography","referenceTypography","subheadingTypography","paperDiv","rootPaper","sectionHeadingTypography","linkText","linkToDetailedReportText","afterLinkText","auditSummaryDiv","auditSummarySubDiv","index_esm","circularProgressBarScore","circularProgressBarScoreFooter","auditSummaryDivRight","overallScoreText","totalNumOfErrorsText","totalNumOfErrors","overallCriticalityText","overallCriticality","securitySummary","rc_progress_es","percent","dataValidationSummary","ThemeProvider","getMuiTheme","semanticErrors","getErrorMuiTheme","validationErrors","warnings","securityNumOfIssuesText","securityNumOfIssues","issueCounter","securityScoreText","securityScore","securityCriticalityText","securityCriticality","dataNumOfIssuesText","dataNumOfIssues","dataScoreText","dataScore","dataCriticalityText","dataCriticality","htmlToolTip","margin-left","background-color","importDefinitionDialogHeader","ImportDefinition","setSchemaDefinition","openAPIDefinitionImport","setOpenAPIDefinitionImport","isImporting","setIsImporting","isGraphQL","isGraphql","isSOAP","apiInputs","inputsDispatcher","inputAction","ImportDefinition_objectSpread","formValidity","mode","updateGraphQLSchema","validateGraphQLFile","graphQLInfo","graphQLSchema","updateGraphQLAPIDefinition","schemaDefinition","handleOnValidate","isFormValid","dialogTitle","dialogContent","ProvideOpenAPI","onValidate","btnText","ProvideGraphQL","ProvideWSDL","CloudUploadRounded_default","isFileInput","updateWSDLByFileOrArchive","updateWSDLByUrl","updateWSDL","reader","FileReader","onloadend","readAsText","newAPI","updateAPIDefinitionByFile","updateAPIDefinitionByUrl","updateOASDefinition","EditorDialog","APIDefinition","schemaContent","graphQL","swaggerModified","convertTo","getConvertToFormat","isAuditApiClicked","securityAuditProperties","isSwaggerValid","handleNo","handleOk","hasJsonStructure","onAuditApiClick","onChangeFormatClick","openUpdateConfirmation","updateSwaggerDefinition","onChangeSwaggerContent","promisedApi","getSchema","YAML","safeDump","safeLoad","formattedString","load","modifiedContent","definition","APIDefinition_extends","swaggerContent","specFormat","toFormat","parsedContent","resourceNotFountMessage","downloadLink","fileName","encodeURIComponent","topBar","CloudDownloadRounded_default","apiToken","collectionId","LockRounded_default","SwapHorizontalCircle_default","APIDefinition_APISecurityAudit","APIDefinition_MonacoEditor","progressLoader","onEditContent","converterWrapper","swaggerEditorWrapper","text-decoration","WSDL","isArchive","wsdl","loadWSDLInEditor","handleDownloadWSDLZip","getWSDLInfo","getWSDL","downloadWidget","downloadButtonContent","WSDL_MonacoEditor","cursorStyle","common","apiOnly","productOnly","graphqlOnly","goToSearch","linkButton","goToWrapper","downshiftWrapper","GoTo_objectWithoutProperties","GoTo_extends","GoTo_objectSpread","handleClickAway","aria-haspopup","GoTo","showSearch","setShowSearch","ClickAwayListener","onClickAway","GoTo_toConsumableArray","CreateNewVersionButton","API_COPY","createNewVersionWrapper","VerticalDivider","createNewVersion","LibraryAdd_default","A200","backLink","backIcon","backText","createNewVersionButtonColor","APIDetailsTopMenu","isVisibleInStore","isDownlodable","infoItem","dateWrapper","GoTo_GoTo","components_CreateNewVersionButton","buttonClass","downloadApi","exportApi","zipFile","downloadApiFlex","DeleteApiButton","alignSelf","lastUpdatedTypography","BusinessInformation_defineProperty","isValidBusinessOwnerEmail","isValidTechnicalOwnerEmail","isFormUpdated","emailStatus","businessOwnerEmail","technicalOwnerEmail","handleSubmit","noValidate","paperRoot","propertyDisplaySuffix","checkBoxStyles","colorPrimary","cancelButton","EditableRow","oldKey","apiAdditionalProperties","isKeyword","newKey","setKey","setIsVisibleInStore","resetText","updateEditMode","Visibility_default","tableHead","Properties","additionalPropertiesTemp","setAdditionalProperties","showAddProperty","setShowAddProperty","propertyKey","setPropertyKey","propertyValue","setPropertyValue","isAdditionalPropertiesStale","setIsAdditionalPropertiesStale","keywords","toggleAddProperty","hasWhiteSpace","whitespaceChars","from","char","additionalPropertiesCopy","validateBeforeAdd","fieldKey","fieldValue","getKeyValue","Properties_EditableRow","Properties_extends","renderAdditionalProperties","BusinessPlans","monetizedPolices","monetizationQuery","policiesList","tableHeadCell","tableHeadTitle","stateWrapper","tableCel","rightDataColumn","Monetization","Monetization_defineProperty","monStatus","property","getMonetizationData","apiProduct","getSettings","configureMonetizationToApiProduct","configureMonetizationToApi","monetizationAttribute","Monetization_BusinessPlans","viewInExStoreLink","black","ExternalStores","allExternalStores","setAllExternalStores","publishedExternalStores","setPublishedExternalStores","externalStoresEnabled","resourceNotFoundMessageText","titleMessage","bodyMessage","getPublishedExternalStores","publishedStoreIds","store","reason","getAllExternalStores","ExternalStores_toConsumableArray","publishAPIToExternalStores","successfulStores","CreateNewVersion","NewVersion_defineProperty","newVersion","empty","alreadyExists","hasSpecialChars","isDefaultVersionBool","createNewAPIVersion","redirectToReferrer","handleVersionChange","handleDefaultVersionChange","transformOrigin","cookieName","environmentName","getEnvironment","pairs","pair","cookie_name","validityPeriod","secured","expiresDirective","securedDirective","date","Date","setTime","getTime","toUTCString","_environment","environmentData","localStorage","getItem","CONST","LOCALSTORAGE_ENVIRONMENT","getDefaultEnvironment","LOCAL_STORAGE_ENVIRONMENT","host","loginTokenPath","refreshTokenPath","environments","setItem","Axios","getDCRappInfoRequestURL","PROTOCOL","DCR_APP_INFO","Settings","LOGOUT","LOGIN_TOKEN_PATH","LOGIN_SIGN_UP_PATH","proxy_context_path","getCurrentEnvironment","SWAGGER_YAML","navigator","languages","userLanguage","contentDisposition","headers","matches","exec","msSaveBlob","downloadUrl","aTag","appendChild","click","LOGOUT_CALLBACK","User","id_token","remember","_userMap","_scopes","_idToken","_remember","_isSideBarOpen","newScopes","getPartialToken","getCookie","WSO2_AM_TOKEN_1","getRefreshPartialToken","WSO2_AM_REFRESH_TOKEN_1","setPartialToken","newToken","delete_cookie","setCookie","isSideBarOpen","checkPermission","toJson","idToken","userJson","_user","rememberMe","WSO2_AM_TOKEN_MSF4J","LOCALSTORAGE_USER","DEVPORTAL_CLIENT_ID","DEVPORTAL_SESSION_STATE","INSUFFICIENT_PREVILEGES","INVALID_TOKEN","ISLOGINPERMITTED","LOGINSTATUS","isLogged","error_response","noty","dismissQueue","modal","progressBar","layout","maxVisible","afterClose","loginPageUri","userData","partialToken","refreshToken","deleteCookie","removeItem","fromJson","fetch","credentials","json","currentEnv","hasBasicLoginPermission","setUser","getUser","userScopes","APIClient","getScopeForResource","authenticateUser","grant_type","validity_period","promised_response","axios","getLoginTokenPath","qs","Authorization","Accept","Content-Type","withCredentials","previous_environment","setEnvironment","authUser","logout","authHeader","getAppLogoutURL","APIClientFactory","destroyAPIClient","refresh_token","USER_SCOPES","referrer","X-Alt-Referer","registerUser","getSignUpTokenPath","args","authorizations","OAuth2Security","token","access_token","SwaggerClient","promisedResolve","getSwaggerURL","requestInterceptor","request","_client","resolved","argsv","_fixSpec","_getRequestInterceptor","responseInterceptor","_getResponseInterceptor","unauthorizedErrorHandler","mutex","Mutex","client","sessionStorage","etag","basePath","addETag","getUserFromToken","queryString","existingToken","refToken","authorization","promise","acquire","release","refresh","getETag","_instance","_APIClientMap","getAPIClient","environmentLabel","api_Client","delete","Resource","requestContentType","Wsdl","apiClient","downloadWSDLForEnvironment","APIs","getWSDLOfAPI","wsdlClient","_requestMetaData","getAllAPIs","promiseGetAll","get_apis","getAPIById","promiseGet","get_apis__apiId_","api_id","payload","get_apis__apiId__documents__documentId__content","getDocumentsByAPIId","get_apis__apiId__documents","getDocumentByDocId","get_apis__apiId__documents__documentId_","getSwaggerByAPIId","get_apis__apiId__swagger","getGraphQLSchemaByAPIId","get_apis__apiId__graphql_schema","getSwaggerByAPIIdAndEnvironment","getSwaggerByAPIIdAndLabel","labelName","getSwaggerByAPIIdAndClusterName","getApplication","Applications","get_applications__applicationId_","applicationId","getAllApplications","limit","get_applications","getAllTiers","policyLevel","get_throttling_policies__policyLevel_","getAllApplicationAttributes","get_settings_application_attributes","createApplication","application","post_applications","updateApplication","put_applications__applicationId_","addComment","comment","Comments","addCommentToAPI","getAllComments","getAllCommentsOfAPI","deleteComment","commentId","updateComment","commentInfo","put_apis__apiId__comments__commentId_","getRatingFromUser","Ratings","get_apis__apiId__ratings","removeRatingOfUser","delete_apis__apiId__user_rating","addRating","ratingInfo","put_apis__apiId__user_rating","generateKeys","requestContent","post_applications__applicationId__generate_keys","generateToken","post_applications__applicationId__generate_token","getKeys","get_applications__applicationId__keys","generateApiKey","keyType","restrictions","post_applications__applicationId__api_keys__keyType__generate","getSubscriptions","promisedGet","get_subscriptions","subscribe","promiseCreateSubscription","subscriptionData","post_subscriptions","get_labels","getSdkLanguages","SDKs","get_sdk_gen_languages","getSdk","get_apis__apiId__sdks__language_","getTierByName","level","get_throttling_policies__policyLevel___policyId_","createUser","post_self_signup","getAllTags","get_tags","getAPIThumbnail","get_apis__apiId__thumbnail","get_search","getWsdlClient","get_settings","getKeyManagers","get_key_managers","getSupportedAlertTypes","Alerts","getStoreAlertTypes","getSubscribedAlertTypesByUser","getSubscribedAlertTypes","subscribeAlerts","alerts","subscribeToAlerts","unsubscribeAlerts","unsubscribeAllAlerts","getAlertConfigurations","alertType","getAllAlertConfigs","putAlertConfiguration","alertConfig","configId","addAlertConfig","configurationId","deleteAlertConfiguration","deleteAlertConfig","get_api_categories","getApiRecommendations","Recommendations","get_recommendations","get_apis__apiId__graphql_policies_complexity","get_apis__apiId__graphql_policies_complexity_types","changePassword","currentPwd","newPwd","promiseChangePassword","currentPassword","newPassword","Users","changeUserPassword","Application","throttlingTier","kwargs","productionKeys","sandboxKeys","productionTokens","sandboxTokens","_setKeys","keyObj","keyManager","_setTokens","get_applications__applicationId__oauth_keys","keysResponse","selectedScopes","keyMappingId","accessToken","consumerSecret","revokeToken","post_applications__applicationId__oauth_keys__keyMappingId__generate_token","tokenResponse","supportedGrantTypes","callbackUrl","grantTypesToBeSupported","validityTime","cleanUpKeys","post_applications__applicationId__oauth_keys__keyMappingId__clean_up","ok","updateKeys","tokenType","consumerKey","put_applications__applicationId__oauth_keys__keyMappingId_","regenerateSecret","post_applications__applicationId__oauth_keys__keyMappingId__regenerate_secret","secretResponse","secret","provideKeys","post_applications__applicationId__map_keys","appJson","offset","sortOrder","sortBy","delete_applications__applicationId_","KEY_TYPES","PRODUCTION","SANDBOX","TOKEN_TYPES","JWT","OAUTH","centerItems","tryoutHeading","menuItem","selectedApplication","selectedKeyType","handleChanges","handleSelectPanelChange","Grid_Grid","TextField_TextField","react_intl_lib","sub","MenuItem_MenuItem","applicationInfo","Typography_Typography","FormControl_FormControl","RadioGroup_RadioGroup","FormControlLabel_FormControlLabel","Radio_Radio","styles","& .MuiButton-contained.Mui-disabled span.MuiButton-label","genKeyButton","&:disabled","gatewayEnvironment","categoryHeading","TryOutController","securitySchemeType","selectedEnvironment","containerMngEnvironments","productionAccessToken","sandboxAccessToken","setKeys","setSelectedKeyType","setSelectedKeyManager","setSelectedEnvironment","setProductionAccessToken","setSandboxAccessToken","setSecurityScheme","setUsername","setPassword","setProductionApiKey","setSandboxApiKey","productionApiKey","sandboxApiKey","environmentObject","setURLs","selectedKeyManager","showToken","setShowToken","setNotFound","setSelectedApplication","setKeyManagers","selectedKMObject","setSelectedKMObject","ksGenerated","setKSGenerated","urls","elm","URLs","subscriptionsList","newSelectedApplication","selectedKeyTypes","subscriptionsResponse","appKeys","responseKeyManagerList","filteredKMs","selectedKeys","Shared_Progress","isApiKeyEnabled","isBasicAuthEnabled","isOAuthEnabled","isTestKeyEnabled","prefix","isPrototypedAPI","showSecurityType","tokenValue","containerMngEnvMenuItems","envType","clusterDetails","deploymentEnvironmentName","clusterDisplayName","Box_Box","Warning_default","ApiConsole_SelectAppPanel","what","InputAdornment_InputAdornment","IconButton_IconButton","esm_Icon_Icon","Button_Button","apikey","CircularProgress_CircularProgress","Tooltip_Tooltip","icons_HelpOutline_default","inputAdornmentStart","disableAuthorizeAndInfoPlugin","wrapComponents","authorizeBtn","SwaggerUI","accessTokenProvider","componentProps","validatorUrl","defaultModelsExpandDepth","docExpansion","patternToCheck","endsWith","substring","splitTokens","defaultModelExpandDepth","plugins","setRender","layoutRender","setlayoutRender","len","querySelectorAll","remove","querySelector","setAttribute","getElementById","parentNode","swagger_ui_react_default","TestConsole","TestConsole_defineProperty","apiObj","apiData","testKey","updateAccessToken","apiResponse","securtySchemas","shift","endpointURLs","scopeList","swaggerPromise","settingPromise","swaggerResponse","settingsNew","serverError","isUpdateToken","promiseSwagger","btoa","titleSub","servers","httpUrls","httpsUrls","httpMissingValue","httpUrl","httpsMissingValue","schemes","isProtoTyped","enableForTest","ApiConsole_TryOutController","ApiConsole_SwaggerUI","userNotificationPaper","& span, & h5, & label, & td, & li, & div, & input","swaggerUIPaper","showTryout","swaggerUIBackground","documentBackground","tokenTextBoxBackground","Details","subPathKey","subPath","subPaths","matchPath","setAPI","setAPIProduct","isValidURL","apiProdUUID","getLeftMenuItemForDefinitionByType","pathPrefix","apiDefinitionMenuItem","Shared_LeftMenuItem","Code_default","getLeftMenuItemForResourcesByType","VerticalSplit_default","_updatedProperties","updatedProperties","update","updatedAPI","pageLocation","leftMenuIconMainSize","leftLInkMain","Dashboard_default","Build_default","Settings_default","GamesOutlined_default","RssFeed_default","Autorenew_default","PersonPinCircleOutlined_default","VpnKey_default","Business_default","List_default","LibraryBooks_default","LocalAtm_default","Store_default","components_APIDetailsTopMenu","contentInside","components_LastUpdatedTime","BASE","OVERVIEW_PRODUCT","NewOverview_Overview","OVERVIEW","API_DEFINITION","Details_APIDefinition_APIDefinition","APIDefinition_WSDL","API_DEFINITION_PRODUCT","SCHEMA_DEFINITION","LIFE_CYCLE","Details_LifeCycle_LifeCycle","CONFIGURATION","RUNTIME_CONFIGURATION","RUNTIME_CONFIGURATION_WEBSOCKET","RuntimeConfigurationWebSocket_RuntimeConfiguration","CONFIGURATION_PRODUCT","RUNTIME_CONFIGURATION_PRODUCT","ENDPOINTS","Details_Endpoints_Endpoints","ENVIRONMENTS","ENVIRONMENTS_PRODUCT","OPERATIONS","Details_Operations_Operations","RESOURCES_PRODUCT","RESOURCES_PRODUCT_EDIT","RESOURCES","SCOPES","Details_Scopes","DOCUMENTS","Details_Documents","DOCUMENTS_PRODUCT","SUBSCRIPTIONS","Subscriptions_Subscriptions","SUBSCRIPTIONS_PRODUCT","SECURITY","Details_Security","BUSINESS_INFO","Details_BusinessInformation_BusinessInformation","BUSINESS_INFO_PRODUCT","PROPERTIES","Properties_Properties","PROPERTIES_PRODUCT","NEW_VERSION","NewVersion","MONETIZATION","Details_Monetization","MONETIZATION_PRODUCT","TRYOUT","Details_TestConsole_TestConsole","EXTERNAL_STORES","BASE_PRODUCT","QUERYANALYSIS","freeze","leftMenuActive","detailsContent"],"mappings":"8EAAA,IAAAA,EAAA,CACAC,OAAA,KACAC,UAAA,KACAC,OAAA,KACAC,UAAA,KACAC,aAAA,KACAC,UAAA,KACAC,aAAA,KACAC,UAAA,KACAC,aAAA,KACAC,UAAA,KACAC,aAAA,KACAC,UAAA,KACAC,aAAA,KACAC,UAAA,KACAC,aAAA,KACAC,UAAA,KACAC,OAAA,KACAC,UAAA,KACAC,OAAA,KACAC,UAAA,KACAC,OAAA,KACAC,UAAA,KACAC,OAAA,KACAC,UAAA,KACAC,OAAA,KACAC,UAAA,KACAC,OAAA,KACAC,UAAA,KACAC,OAAA,KACAC,UAAA,KACAC,OAAA,KACAC,UAAA,KACAC,OAAA,KACAC,UAAA,KACAC,OAAA,KACAC,UAAA,KACAC,OAAA,KACAC,UAAA,KACAC,OAAA,KACAC,UAAA,KACAC,OAAA,KACAC,UAAA,KACAC,OAAA,KACAC,UAAA,KACAC,aAAA,KACAC,UAAA,KACAC,aAAA,KACAC,UAAA,KACAC,OAAA,KACAC,UAAA,KACAC,OAAA,KACAC,UAAA,KACAC,UAAA,KACAC,aAAA,KACAC,UAAA,KACAC,aAAA,KACAC,UAAA,KACAC,aAAA,KACAC,UAAA,KACAC,aAAA,KACAC,UAAA,KACAC,aAAA,KACAC,UAAA,KACAC,aAAA,KACAC,UAAA,KACAC,aAAA,KACAC,OAAA,KACAC,UAAA,KACAC,OAAA,KACAC,UAAA,KACAC,aAAA,KACAC,UAAA,KACAC,aAAA,KACAC,UAAA,KACAC,OAAA,KACAC,UAAA,KACAC,OAAA,KACAC,UAAA,KACAC,OAAA,KACAC,UAAA,KACAC,OAAA,KACAC,UAAA,KACAC,OAAA,KACAC,UAAA,KACAC,OAAA,KACAC,UAAA,KACAC,aAAA,KACAC,UAAA,KACAC,aAAA,KACAC,UAAA,KACAC,OAAA,KACAC,UAAA,KACAC,OAAA,KACAC,UAAA,KACAC,OAAA,KACAC,UAAA,KACAC,OAAA,KACAC,UAAA,KACAC,aAAA,KACAC,gBAAA,KACAC,OAAA,KACAC,UAAA,KACAC,OAAA,KACAC,UAAA,KACAC,OAAA,KACAC,UAAA,KACAC,OAAA,KACAC,UAAA,KACAC,OAAA,KACAC,UAAA,KACAC,UAAA,KACAC,aAAA,KACAC,OAAA,KACAC,UAAA,KACAC,OAAA,KACAC,UAAA,KACAC,OAAA,KACAC,UAAA,KACAC,aAAA,KACAC,UAAA,KACAC,OAAA,KACAC,UAAA,KACAC,OAAA,KACAC,UAAA,KACAC,OAAA,KACAC,UAAA,KACAC,OAAA,KACAC,UAAA,KACAC,OAAA,KACAC,UAAA,KACAC,OAAA,KACAC,UAAA,KACAC,OAAA,KACAC,UAAA,KACAC,OAAA,KACAC,UAAA,KACAC,OAAA,KACAC,UAAA,KACAC,OAAA,KACAC,UAAA,KACAC,OAAA,KACAC,UAAA,KACAC,OAAA,KACAC,UAAA,KACAC,OAAA,KACAC,UAAA,KACAC,OAAA,KACAC,UAAA,KACAC,OAAA,KACAC,UAAA,KACAC,OAAA,KACAC,UAAA,KACAC,OAAA,KACAC,UAAA,KACAC,OAAA,KACAC,UAAA,KACAC,OAAA,KACAC,UAAA,KACAC,OAAA,KACAC,UAAA,KACAC,aAAA,KACAC,UAAA,KACAC,OAAA,KACAC,UAAA,KACAC,OAAA,KACAC,UAAA,KACAC,OAAA,KACAC,UAAA,KACAC,OAAA,KACAC,UAAA,KACAC,OAAA,KACAC,UAAA,KACAC,aAAA,KACAC,UAAA,KACAC,OAAA,KACAC,UAAA,KACAC,UAAA,KACAC,aAAA,KACAC,OAAA,KACAC,UAAA,KACAC,OAAA,KACAC,UAAA,KACAC,aAAA,KACAC,UAAA,KACAC,OAAA,KACAC,UAAA,KACAC,OAAA,KACAC,UAAA,KACAC,OAAA,KACAC,UAAA,KACAC,OAAA,KACAC,UAAA,KACAC,OAAA,KACAC,UAAA,KACAC,OAAA,KACAC,UAAA,KACAC,OAAA,KACAC,UAAA,KACAC,OAAA,KACAC,UAAA,KACAC,OAAA,KACAC,YAAA,KACAC,eAAA,KACAC,UAAA,KACAC,OAAA,KACAC,UAAA,KACAC,OAAA,KACAC,UAAA,KACAC,OAAA,KACAC,UAAA,KACAC,OAAA,KACAC,UAAA,KACAC,OAAA,KACAC,UAAA,KACAC,QAAA,KACAC,WAAA,KACAC,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","file":"DeferredDetails.d3255270c6d57a605f61.bundle.js","sourcesContent":["var map = {\n\t\"./af\": 1539,\n\t\"./af.js\": 1539,\n\t\"./ar\": 1540,\n\t\"./ar-dz\": 1541,\n\t\"./ar-dz.js\": 1541,\n\t\"./ar-kw\": 1542,\n\t\"./ar-kw.js\": 1542,\n\t\"./ar-ly\": 1543,\n\t\"./ar-ly.js\": 1543,\n\t\"./ar-ma\": 1544,\n\t\"./ar-ma.js\": 1544,\n\t\"./ar-sa\": 1545,\n\t\"./ar-sa.js\": 1545,\n\t\"./ar-tn\": 1546,\n\t\"./ar-tn.js\": 1546,\n\t\"./ar.js\": 1540,\n\t\"./az\": 1547,\n\t\"./az.js\": 1547,\n\t\"./be\": 1548,\n\t\"./be.js\": 1548,\n\t\"./bg\": 1549,\n\t\"./bg.js\": 1549,\n\t\"./bm\": 1550,\n\t\"./bm.js\": 1550,\n\t\"./bn\": 1551,\n\t\"./bn.js\": 1551,\n\t\"./bo\": 1552,\n\t\"./bo.js\": 1552,\n\t\"./br\": 1553,\n\t\"./br.js\": 1553,\n\t\"./bs\": 1554,\n\t\"./bs.js\": 1554,\n\t\"./ca\": 1555,\n\t\"./ca.js\": 1555,\n\t\"./cs\": 1556,\n\t\"./cs.js\": 1556,\n\t\"./cv\": 1557,\n\t\"./cv.js\": 1557,\n\t\"./cy\": 1558,\n\t\"./cy.js\": 1558,\n\t\"./da\": 1559,\n\t\"./da.js\": 1559,\n\t\"./de\": 1560,\n\t\"./de-at\": 1561,\n\t\"./de-at.js\": 1561,\n\t\"./de-ch\": 1562,\n\t\"./de-ch.js\": 1562,\n\t\"./de.js\": 1560,\n\t\"./dv\": 1563,\n\t\"./dv.js\": 1563,\n\t\"./el\": 1564,\n\t\"./el.js\": 1564,\n\t\"./en-SG\": 1565,\n\t\"./en-SG.js\": 1565,\n\t\"./en-au\": 1566,\n\t\"./en-au.js\": 1566,\n\t\"./en-ca\": 1567,\n\t\"./en-ca.js\": 1567,\n\t\"./en-gb\": 1568,\n\t\"./en-gb.js\": 1568,\n\t\"./en-ie\": 1569,\n\t\"./en-ie.js\": 1569,\n\t\"./en-il\": 1570,\n\t\"./en-il.js\": 1570,\n\t\"./en-nz\": 1571,\n\t\"./en-nz.js\": 1571,\n\t\"./eo\": 1572,\n\t\"./eo.js\": 1572,\n\t\"./es\": 1573,\n\t\"./es-do\": 1574,\n\t\"./es-do.js\": 1574,\n\t\"./es-us\": 1575,\n\t\"./es-us.js\": 1575,\n\t\"./es.js\": 1573,\n\t\"./et\": 1576,\n\t\"./et.js\": 1576,\n\t\"./eu\": 1577,\n\t\"./eu.js\": 1577,\n\t\"./fa\": 1578,\n\t\"./fa.js\": 1578,\n\t\"./fi\": 1579,\n\t\"./fi.js\": 1579,\n\t\"./fo\": 1580,\n\t\"./fo.js\": 1580,\n\t\"./fr\": 1581,\n\t\"./fr-ca\": 1582,\n\t\"./fr-ca.js\": 1582,\n\t\"./fr-ch\": 1583,\n\t\"./fr-ch.js\": 1583,\n\t\"./fr.js\": 1581,\n\t\"./fy\": 1584,\n\t\"./fy.js\": 1584,\n\t\"./ga\": 1585,\n\t\"./ga.js\": 1585,\n\t\"./gd\": 1586,\n\t\"./gd.js\": 1586,\n\t\"./gl\": 1587,\n\t\"./gl.js\": 1587,\n\t\"./gom-latn\": 1588,\n\t\"./gom-latn.js\": 1588,\n\t\"./gu\": 1589,\n\t\"./gu.js\": 1589,\n\t\"./he\": 1590,\n\t\"./he.js\": 1590,\n\t\"./hi\": 1591,\n\t\"./hi.js\": 1591,\n\t\"./hr\": 1592,\n\t\"./hr.js\": 1592,\n\t\"./hu\": 1593,\n\t\"./hu.js\": 1593,\n\t\"./hy-am\": 1594,\n\t\"./hy-am.js\": 1594,\n\t\"./id\": 1595,\n\t\"./id.js\": 1595,\n\t\"./is\": 1596,\n\t\"./is.js\": 1596,\n\t\"./it\": 1597,\n\t\"./it-ch\": 1598,\n\t\"./it-ch.js\": 1598,\n\t\"./it.js\": 1597,\n\t\"./ja\": 1599,\n\t\"./ja.js\": 1599,\n\t\"./jv\": 1600,\n\t\"./jv.js\": 1600,\n\t\"./ka\": 1601,\n\t\"./ka.js\": 1601,\n\t\"./kk\": 1602,\n\t\"./kk.js\": 1602,\n\t\"./km\": 1603,\n\t\"./km.js\": 1603,\n\t\"./kn\": 1604,\n\t\"./kn.js\": 1604,\n\t\"./ko\": 1605,\n\t\"./ko.js\": 1605,\n\t\"./ku\": 1606,\n\t\"./ku.js\": 1606,\n\t\"./ky\": 1607,\n\t\"./ky.js\": 1607,\n\t\"./lb\": 1608,\n\t\"./lb.js\": 1608,\n\t\"./lo\": 1609,\n\t\"./lo.js\": 1609,\n\t\"./lt\": 1610,\n\t\"./lt.js\": 1610,\n\t\"./lv\": 1611,\n\t\"./lv.js\": 1611,\n\t\"./me\": 1612,\n\t\"./me.js\": 1612,\n\t\"./mi\": 1613,\n\t\"./mi.js\": 1613,\n\t\"./mk\": 1614,\n\t\"./mk.js\": 1614,\n\t\"./ml\": 1615,\n\t\"./ml.js\": 1615,\n\t\"./mn\": 1616,\n\t\"./mn.js\": 1616,\n\t\"./mr\": 1617,\n\t\"./mr.js\": 1617,\n\t\"./ms\": 1618,\n\t\"./ms-my\": 1619,\n\t\"./ms-my.js\": 1619,\n\t\"./ms.js\": 1618,\n\t\"./mt\": 1620,\n\t\"./mt.js\": 1620,\n\t\"./my\": 1621,\n\t\"./my.js\": 1621,\n\t\"./nb\": 1622,\n\t\"./nb.js\": 1622,\n\t\"./ne\": 1623,\n\t\"./ne.js\": 1623,\n\t\"./nl\": 1624,\n\t\"./nl-be\": 1625,\n\t\"./nl-be.js\": 1625,\n\t\"./nl.js\": 1624,\n\t\"./nn\": 1626,\n\t\"./nn.js\": 1626,\n\t\"./pa-in\": 1627,\n\t\"./pa-in.js\": 1627,\n\t\"./pl\": 1628,\n\t\"./pl.js\": 1628,\n\t\"./pt\": 1629,\n\t\"./pt-br\": 1630,\n\t\"./pt-br.js\": 1630,\n\t\"./pt.js\": 1629,\n\t\"./ro\": 1631,\n\t\"./ro.js\": 1631,\n\t\"./ru\": 1632,\n\t\"./ru.js\": 1632,\n\t\"./sd\": 1633,\n\t\"./sd.js\": 1633,\n\t\"./se\": 1634,\n\t\"./se.js\": 1634,\n\t\"./si\": 1635,\n\t\"./si.js\": 1635,\n\t\"./sk\": 1636,\n\t\"./sk.js\": 1636,\n\t\"./sl\": 1637,\n\t\"./sl.js\": 1637,\n\t\"./sq\": 1638,\n\t\"./sq.js\": 1638,\n\t\"./sr\": 1639,\n\t\"./sr-cyrl\": 1640,\n\t\"./sr-cyrl.js\": 1640,\n\t\"./sr.js\": 1639,\n\t\"./ss\": 1641,\n\t\"./ss.js\": 1641,\n\t\"./sv\": 1642,\n\t\"./sv.js\": 1642,\n\t\"./sw\": 1643,\n\t\"./sw.js\": 1643,\n\t\"./ta\": 1644,\n\t\"./ta.js\": 1644,\n\t\"./te\": 1645,\n\t\"./te.js\": 1645,\n\t\"./tet\": 1646,\n\t\"./tet.js\": 1646,\n\t\"./tg\": 1647,\n\t\"./tg.js\": 1647,\n\t\"./th\": 1648,\n\t\"./th.js\": 1648,\n\t\"./tl-ph\": 1649,\n\t\"./tl-ph.js\": 1649,\n\t\"./tlh\": 1650,\n\t\"./tlh.js\": 1650,\n\t\"./tr\": 1651,\n\t\"./tr.js\": 1651,\n\t\"./tzl\": 1652,\n\t\"./tzl.js\": 1652,\n\t\"./tzm\": 1653,\n\t\"./tzm-latn\": 1654,\n\t\"./tzm-latn.js\": 1654,\n\t\"./tzm.js\": 1653,\n\t\"./ug-cn\": 1655,\n\t\"./ug-cn.js\": 1655,\n\t\"./uk\": 1656,\n\t\"./uk.js\": 1656,\n\t\"./ur\": 1657,\n\t\"./ur.js\": 1657,\n\t\"./uz\": 1658,\n\t\"./uz-latn\": 1659,\n\t\"./uz-latn.js\": 1659,\n\t\"./uz.js\": 1658,\n\t\"./vi\": 1660,\n\t\"./vi.js\": 1660,\n\t\"./x-pseudo\": 1661,\n\t\"./x-pseudo.js\": 1661,\n\t\"./yo\": 1662,\n\t\"./yo.js\": 1662,\n\t\"./zh-cn\": 1663,\n\t\"./zh-cn.js\": 1663,\n\t\"./zh-hk\": 1664,\n\t\"./zh-hk.js\": 1664,\n\t\"./zh-tw\": 1665,\n\t\"./zh-tw.js\": 1665\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) { // check for number or string\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn id;\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 2463;","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../node_modules/css-loader/index.js!./testconsole.css\");\nif(typeof content === 'string') content = [[module.id, content, '']];\n// Prepare cssTransformation\nvar transform;\n\nvar options = {}\noptions.transform = transform\n// add the styles to the DOM\nvar update = require(\"!../../../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(module.hot) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!../../../../../node_modules/css-loader/index.js!./testconsole.css\", function() {\n\t\t\tvar newContent = require(\"!!../../../../../node_modules/css-loader/index.js!./testconsole.css\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".MuiTypography-caption,.MuiTypography-h4{font-family:Open Sans,Helvetica,Arial,sans-serif!important}.MuiTypography-h4{font-size:1.3rem!important;font-weight:400!important;line-height:1.17!important}.MuiSvgIcon-root{width:1em!important;height:1em!important;display:inline-block!important;font-size:1.5rem!important;transition:fill .2s cubic-bezier(.4,0,.2,1) 0ms!important;flex-shrink:0!important;user-select:none!important}.MuiTypography-body1{font-size:.8571428571428571rem!important;font-family:Open Sans,Helvetica,Arial,sans-serif!important;font-weight:400!important;line-height:1.5!important}.MuiTypography-caption{font-size:.6428571428571428rem!important;font-family:Roboto,Helvetica,Arial,sans-serif!important;font-weight:400!important;line-height:1.66!important;letter-spacing:.03333em!important}.MuiListItemIcon-root svg{font-size:20px!important}.MuiTypography-subtitle1{font-size:.8571428571428571rem!important;font-family:Open Sans,Helvetica,Arial,sans-serif!important;font-weight:400!important;line-height:1.75!important}.jss4039{margin:5!important;padding:20px!important}\", \"\"]);\n\n// exports\n","/*\n * Copyright (c) 2017, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useEffect, useState } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport Typography from '@material-ui/core/Typography';\nimport { withStyles } from '@material-ui/core/styles';\nimport CustomIcon from 'AppComponents/Shared/CustomIcon';\n\nconst styles = (theme) => ({\n    leftLInkText: {\n        color: theme.palette.getContrastText(theme.palette.background.leftMenu),\n        textTransform: theme.custom.leftMenuTextStyle,\n        width: '100%',\n        textAlign: 'left',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n        whiteSpace: 'nowrap',\n    },\n    leftLInkText_IconLeft: {\n        paddingLeft: 10,\n    },\n    LeftMenu: {\n        backgroundColor: theme.palette.background.leftMenu,\n        width: theme.custom.leftMenuWidth,\n        textAlign: 'center',\n        fontFamily: theme.typography.fontFamily,\n        position: 'absolute',\n        bottom: 0,\n        left: 0,\n        top: 0,\n    },\n    leftLInk: {\n        paddingTop: theme.spacing(1),\n        paddingBottom: theme.spacing(1),\n        paddingLeft: theme.spacing(1),\n        paddingRight: theme.spacing(1),\n        fontSize: theme.typography.caption.fontSize,\n        cursor: 'pointer',\n        textDecoration: 'none',\n    },\n    leftLink_Icon: {\n        color: theme.palette.getContrastText(theme.palette.background.leftMenu),\n        fontSize: theme.custom.leftMenuIconSize + 'px',\n    },\n    leftLink_IconLeft: {\n        display: 'flex',\n        alignItems: 'center',\n    },\n    noIcon: {\n        display: 'none',\n    },\n    leftLInkText_NoText: {\n        diplay: 'none',\n    },\n});\n\n/**\n *\n *\n * @param {*} props\n * @returns\n */\nfunction LeftMenuItem(props) {\n    const [selected, setSelected] = useState(false);\n\n    const {\n        classes, theme, Icon, to, history, text, route,\n    } = props;\n    const routeToCheck = route || text;\n    const { leftMenu } = theme.custom;\n    const strokeColor = theme.palette.getContrastText(theme.palette.background.leftMenu);\n    const iconSize = theme.custom.leftMenuIconSize;\n    const ditectCurrentMenu = (location) => {\n        const { pathname } = location;\n        const test1 = new RegExp('/' + routeToCheck + '$', 'g');\n        const test2 = new RegExp('/' + routeToCheck + '/', 'g');\n        if (pathname.match(test1) || pathname.match(test2)) {\n            setSelected(true);\n        } else {\n            setSelected(false);\n        }\n    };\n    useEffect(() => {\n        const { location } = history;\n        ditectCurrentMenu(location);\n    }, []);\n    history.listen((location) => {\n        ditectCurrentMenu(location);\n    });\n\n    return (\n        <Link\n            className={classNames(\n                classes.leftLInk,\n                {\n                    [classes.leftLink_IconLeft]: leftMenu === 'icon left',\n                },\n                'leftLInk',\n            )}\n            to={to}\n            style={{ backgroundColor: selected ? theme.palette.background.appBarSelected : '' }}\n        >\n            {// If the icon pro ( which is comming from the React Material library )\n            // is coming we add css class and render.\n            // If leftMenu='no icon' at the theme object we hide the icon. Also we add static classes to\n            // allow customers theme\n            // the product without compiling.\n                Icon ? (\n                    React.cloneElement(Icon, {\n                        className: classNames(\n                            classes.leftLink_Icon,\n                            {\n                                [classes.noIcon]: leftMenu === 'no icon',\n                            },\n                            'leftLink_Icon',\n                        ),\n                    })\n                ) : (\n                // We can also add custom icons\n                    <CustomIcon\n                        strokeColor={strokeColor}\n                        width={iconSize}\n                        height={iconSize}\n                        icon={props.iconText}\n                        className={classNames(\n                            classes.leftLInk,\n                            {\n                                [classes.noIcon]: leftMenu === 'no icon',\n                            },\n                            'leftLink_Icon',\n                        )}\n                    />\n                )\n            }\n            <Typography\n                className={classNames(\n                    classes.leftLInkText,\n                    {\n                        [classes.leftLInkText_IconLeft]: leftMenu === 'icon left',\n                        [classes.leftLInkText_NoText]: leftMenu === 'no text',\n                    },\n                    'leftLInkText',\n                )}\n            >\n                {text}\n            </Typography>\n        </Link>\n    );\n}\nLeftMenuItem.defaultProps = {\n    route: null,\n    iconText: null,\n};\nLeftMenuItem.propTypes = {\n    classes: PropTypes.shape({\n        divider: PropTypes.string,\n        leftLInk: PropTypes.string,\n        leftLink_IconLeft: PropTypes.string,\n        noIcon: PropTypes.string,\n        leftLink_Icon: PropTypes.string,\n        leftLInkText: PropTypes.string,\n        leftLInkText_IconLeft: PropTypes.string,\n        leftLInkText_NoText: PropTypes.string,\n    }).isRequired,\n    theme: PropTypes.shape({\n        custom: PropTypes.shape({\n            leftMenu: PropTypes.string,\n            leftMenuIconSize: PropTypes.number,\n        }),\n        palette: PropTypes.shape({\n            getContrastText: PropTypes.func,\n            background: PropTypes.shape({\n                leftMenu: PropTypes.string,\n                appBar: PropTypes.string,\n            }),\n            leftMenu: PropTypes.string,\n        }),\n    }).isRequired,\n    Icon: PropTypes.element.isRequired,\n    text: PropTypes.string.isRequired,\n    to: PropTypes.string.isRequired,\n    route: PropTypes.string,\n    history: PropTypes.shape({\n        listen: PropTypes.func.isRequired,\n        location: PropTypes.string.isRequired,\n    }).isRequired,\n    iconText: PropTypes.string,\n};\nexport default withRouter(withStyles(styles, { withTheme: true })(LeftMenuItem));\n","/*\n * Copyright (c) 2017, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\nimport { Typography, Tooltip } from '@material-ui/core';\nimport { FormattedMessage } from 'react-intl';\n\n/**\n * API/Product last updated time.\n * @param {Parameter} props last updated time.\n * @returns {Property} The sum of the two numbers.\n */\nfunction LastUpdatedTime(props) {\n    const { lastUpdatedTime } = props;\n    return (\n        <div style={{ float: 'right' }}>\n            <Tooltip\n                title={moment(lastUpdatedTime).calendar()}\n                interactive\n            >\n                <Typography variant='caption' display='block'>\n                    <FormattedMessage\n                        id='Apis.Details.components.APIDetailsTopMenu.last.updated.time'\n                        defaultMessage='Last updated:'\n                    />\n                    {' '}\n                    {moment(lastUpdatedTime).fromNow()}\n                </Typography>\n            </Tooltip>\n        </div>\n    );\n}\n\nLastUpdatedTime.propTypes = {\n    lastUpdatedTime: PropTypes.shape({ content: PropTypes.string }).isRequired,\n};\n\nexport default (LastUpdatedTime);\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport { withStyles, withTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Chip from '@material-ui/core/Chip';\nimport { FormattedMessage } from 'react-intl';\nimport Box from '@material-ui/core/Box';\nimport { Link } from 'react-router-dom';\nimport LaunchIcon from '@material-ui/icons/Launch';\n\nimport Typography from '@material-ui/core/Typography';\nimport Api from 'AppData/api';\nimport CONSTS from 'AppData/Constants';\nimport { doRedirectToLogin } from 'AppComponents/Shared/RedirectToLogin';\n\nfunction RenderMethodBase(props) {\n    const { theme, method } = props;\n    let chipColor = theme.custom.resourceChipColors ? theme.custom.resourceChipColors[method] : null;\n    let chipTextColor = '#000000';\n    if (!chipColor) {\n        console.log('Check the theme settings. The resourceChipColors is not populated properly');\n        chipColor = '#cccccc';\n    } else {\n        chipTextColor = theme.palette.getContrastText(theme.custom.resourceChipColors[method]);\n    }\n    return (\n        <Chip\n            label={method.toUpperCase()}\n            style={{\n                backgroundColor: chipColor, color: chipTextColor, height: 20, marginRight: 5,\n            }}\n        />\n    );\n}\n\nRenderMethodBase.propTypes = {\n    method: PropTypes.string.isRequired,\n    theme: PropTypes.shape({}).isRequired,\n    classes: PropTypes.shape({}).isRequired,\n};\n\nconst RenderMethod = withTheme(RenderMethodBase);\n\nconst styles = (theme) => ({\n    root: {\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems: 'center',\n        marginBottom: 10,\n    },\n    heading: {\n        marginRight: 20,\n    },\n    contentWrapper: {\n        maxHeight: '125px',\n        overflowY: 'auto',\n    },\n    subHeading: {\n        color: theme.palette.primary.dark,\n    },\n});\n\nclass Resources extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            paths: null,\n        };\n        this.restApi = new Api();\n    }\n\n    componentDidMount() {\n        const { id } = this.props.api;\n        const promisedAPI = this.restApi.getSwagger(id);\n        promisedAPI\n            .then((response) => {\n                if (response.obj.paths !== undefined) {\n                    this.setState({ paths: response.obj.paths });\n                }\n            })\n            .catch((error) => {\n                if (process.env.NODE_ENV !== 'production') console.log(error);\n                const { status } = error;\n                if (status === 404) {\n                    this.setState({ notFound: true });\n                } else if (status === 401) {\n                    doRedirectToLogin();\n                }\n            });\n    }\n\n    render() {\n        const { paths } = this.state;\n        if (this.state.notFound) {\n            return (\n                <div>\n                    <FormattedMessage\n                        id='Apis.Details.NewOverview.Resources.resource.not.found'\n                        defaultMessage='resource not found...'\n                    />\n                </div>\n            );\n        }\n        if (!paths) {\n            return (\n                <div>\n                    <FormattedMessage\n                        id='Apis.Details.NewOverview.Resources.loading'\n                        defaultMessage='loading...'\n                    />\n                </div>\n            );\n        }\n        const { classes, parentClasses, api } = this.props;\n        return (\n            <>\n                <div className={parentClasses.titleWrapper}>\n                    { api.type === 'GraphQL' ? (\n                        <Typography id='resources' variant='h5' component='h2' className={parentClasses.title}>\n                            <FormattedMessage\n                                id='Apis.Details.NewOverview.Operations.operations'\n                                defaultMessage='Operation'\n                            />\n                        </Typography>\n                    )\n                        : (\n                            <Typography id='resources' variant='h5' component='h2' className={parentClasses.title}>\n                                <FormattedMessage\n                                    id='Apis.Details.NewOverview.Resources.resources'\n                                    defaultMessage='Resources'\n                                />\n                            </Typography>\n                        )}\n                </div>\n                <Box p={1}>\n                    <div className={classes.contentWrapper}>\n                        {Object.keys(paths).map((key) => {\n                            const path = paths[key];\n                            return (\n                                <div className={classes.root}>\n                                    <Typography className={classes.heading} variant='body1'>\n                                        {key}\n                                    </Typography>\n                                    {Object.keys(path).map((innerKey) => {\n                                        return CONSTS.HTTP_METHODS.includes(innerKey)\n                                            ? <RenderMethod method={innerKey} /> : null;\n                                    })}\n                                </div>\n                            );\n                        })}\n                    </div>\n                    <Link\n                        to={'/apis/' + api.id + '/resources'}\n                        id='resource-more'\n                        aria-labelledby='resource-more resources'\n                    >\n                        <Typography\n                            className={classes.subHeading}\n                            display='inline'\n                            variant='caption'\n                        >\n                            <FormattedMessage\n                                id='Apis.Details.NewOverview.Operations.ShowMore'\n                                defaultMessage='Show More'\n                            />\n                            <LaunchIcon style={{ marginLeft: '2px' }} fontSize='small' />\n                        </Typography>\n                    </Link>\n                </Box>\n            </>\n        );\n    }\n}\nResources.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    theme: PropTypes.shape({}).isRequired,\n    history: PropTypes.shape({\n        push: PropTypes.shape({}),\n    }).isRequired,\n    location: PropTypes.shape({\n        pathname: PropTypes.shape({}),\n    }).isRequired,\n    parentClasses: PropTypes.shape({}).isRequired,\n    api: PropTypes.shape({ id: PropTypes.string }).isRequired,\n};\n\nexport default withStyles(styles)(Resources);\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport { withStyles, withTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Chip from '@material-ui/core/Chip';\nimport LaunchIcon from '@material-ui/icons/Launch';\nimport Box from '@material-ui/core/Box';\nimport { Link } from 'react-router-dom';\nimport { FormattedMessage } from 'react-intl';\nimport Table from '@material-ui/core/Table';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableRow from '@material-ui/core/TableRow';\nimport Typography from '@material-ui/core/Typography';\nimport ApiContext from '../components/ApiContext';\n\nconst styles = (theme) => ({\n    contentWrapper: {\n        marginTop: theme.spacing(2),\n        maxHeight: '250px',\n        overflowY: 'auto',\n    },\n});\n\n/**\n *\n * @param {*} props\n */\nfunction RenderMethodBase(props) {\n    const { theme, method } = props;\n    const methodLower = method.toLowerCase();\n    let chipColor = theme.custom.operationChipColor\n        ? theme.custom.operationChipColor[methodLower]\n        : null;\n    let chipTextColor = '#000000';\n    if (!chipColor) {\n        console.log('Check the theme settings. The resourceChipColors is not populated properlly');\n        chipColor = '#cccccc';\n    } else {\n        chipTextColor = theme.palette.getContrastText(theme.custom.operationChipColor[methodLower]);\n    }\n    return (\n        <Chip\n            label={method}\n            style={{\n                backgroundColor: chipColor, color: chipTextColor, height: 20, fontSize: 9, width: 95,\n            }}\n        />\n    );\n}\n\nRenderMethodBase.propTypes = {\n    method: PropTypes.string.isRequired,\n    theme: PropTypes.shape({}).isRequired,\n    classes: PropTypes.shape({}).isRequired,\n};\n\nconst RenderMethod = withTheme(RenderMethodBase);\n/**\n *\n * @param {*} props\n */\nfunction Operations(props) {\n    const { classes, parentClasses } = props;\n    return (\n        <ApiContext.Consumer>\n            {({ api }) => (\n                <>\n                    <div className={parentClasses.titleWrapper}>\n                        <Typography variant='h5' component='h3' className={parentClasses.title}>\n                            <FormattedMessage\n                                id='Apis.Details.NewOverview.Operations.operation'\n                                defaultMessage='Operations'\n                            />\n                        </Typography>\n                    </div>\n                    <div>\n                        <div className={classes.contentWrapper}>\n                            <Table style={{ padding: 20 }}>\n                                {api.operations\n                            && api.operations.length !== 0\n                            && api.operations.map((item) => (\n                                <TableRow style={{ borderStyle: 'hidden' }}>\n                                    <TableCell style={{ padding: 8 }}>\n                                        <Typography className={parentClasses.heading} component='p' variant='body1'>\n                                            {item.target}\n                                        </Typography>\n                                    </TableCell>\n                                    <TableCell style={{ padding: 8 }}>\n                                        <RenderMethod method={item.verb} />\n                                    </TableCell>\n                                </TableRow>\n                            ))}\n                            </Table>\n                        </div>\n                        <Box py={2}>\n                            <Link to={'/apis/' + api.id + '/operations'}>\n                                <Typography\n                                    className={classes.subHeading}\n                                    color='primary'\n                                    display='inline'\n                                    variant='caption'\n                                >\n                                    <FormattedMessage\n                                        id='Apis.Details.NewOverview.Operations.ShowMore'\n                                        defaultMessage='Show More'\n                                    />\n                                    <LaunchIcon style={{ marginLeft: '2px' }} fontSize='small' />\n                                </Typography>\n                            </Link>\n                        </Box>\n                    </div>\n                </>\n            )}\n        </ApiContext.Consumer>\n    );\n}\n\nOperations.propTypes = {\n    parentClasses: PropTypes.shape({}).isRequired,\n    classes: PropTypes.shape({}).isRequired,\n};\n\nexport default withStyles(styles)(Operations);\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport { withStyles, withTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Chip from '@material-ui/core/Chip';\nimport Typography from '@material-ui/core/Typography';\nimport { FormattedMessage } from 'react-intl';\n\n/**\n * Render method base.\n * @param {*} props\n */\nfunction RenderMethodBase(props) {\n    const { theme, method } = props;\n    const methodLower = method.toLowerCase();\n    let chipColor = theme.custom.resourceChipColors ? theme.custom.resourceChipColors[methodLower] : null;\n    let chipTextColor = '#000000';\n    if (!chipColor) {\n        console.log('Check the theme settings. The resourceChipColors is not populated properly');\n        chipColor = '#cccccc';\n    } else {\n        chipTextColor = theme.palette.getContrastText(theme.custom.resourceChipColors[methodLower]);\n    }\n    return (\n        <Chip\n            label={method.toUpperCase()}\n            style={{ backgroundColor: chipColor, color: chipTextColor, height: 20 }}\n        />\n    );\n}\n\nRenderMethodBase.propTypes = {\n    method: PropTypes.string.isRequired,\n    theme: PropTypes.shape({}).isRequired,\n    classes: PropTypes.shape({}).isRequired,\n};\n\nconst RenderMethod = withTheme(RenderMethodBase);\n\nconst styles = {\n    root: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'left',\n        marginBottom: 10,\n        padding: 5,\n    },\n    heading: {\n        marginRight: 20,\n        paddingBottom: 10,\n    },\n    resourceRow: {\n        display: 'flex',\n        flexDirection: 'row',\n        marginLeft: 10,\n    },\n};\n\n/**\n * Component to show api product resources in overview tab\n */\nclass ProductResources extends React.PureComponent {\n    /**\n     * @inheritDoc\n     */\n    render() {\n        const { classes, parentClasses, api } = this.props;\n        const apiResources = api.apis;\n        return (\n            <>\n                <div className={parentClasses.titleWrapper} style={{ margin: '20px 0 0' }}>\n                    <Typography variant='h5' component='h3' className={parentClasses.title}>\n                        <FormattedMessage\n                            id='Apis.Details.Overview.ProductResources.resources'\n                            defaultMessage='Resources'\n                        />\n                    </Typography>\n                </div>\n                <div className={classes.root}>\n                    <div className={classes.contentWrapper}>\n                        {Object.keys(apiResources).map((key) => {\n                            const resource = apiResources[key];\n                            return (\n                                <div className={classes.root}>\n                                    <Typography className={classes.heading} variant='body1'>\n                                        {resource.name + ' : ' + resource.version}\n                                    </Typography>\n                                    {Object.keys(resource.operations).map((innerKey) => {\n                                        const operation = (resource.operations)[innerKey];\n                                        return (\n                                            <div className={classes.resourceRow}>\n                                                <Typography className={classes.heading} variant='body1'>\n                                                    {operation.target}\n                                                </Typography>\n                                                <RenderMethod method={operation.verb} />\n\n                                            </div>\n                                        );\n                                    })}\n\n                                </div>\n                            );\n                        })}\n                    </div>\n                </div>\n            </>\n        );\n    }\n}\nProductResources.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    theme: PropTypes.shape({}).isRequired,\n    history: PropTypes.shape({\n        push: PropTypes.shape({}),\n    }).isRequired,\n    location: PropTypes.shape({\n        pathname: PropTypes.shape({}),\n    }).isRequired,\n    parentClasses: PropTypes.shape({}).isRequired,\n    api: PropTypes.shape({ id: PropTypes.string }).isRequired,\n};\n\nexport default withStyles(styles)(ProductResources);\n","/*\n *  Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n *  WSO2 Inc. licenses this file to you under the Apache License,\n *  Version 2.0 (the \"License\"); you may not use this file except\n *  in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *  http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing,\n *  software distributed under the License is distributed on an\n *  \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n *  KIND, either express or implied. See the License for the\n *  specific language governing permissions and limitations\n *  under the License.\n */\n\n\n/**\n * Capitalize the first letter of a string\n * @param {string} string string to be formatted\n * @return {string} formatted string\n */\nfunction capitalizeFirstLetter(string) {\n    return string && string.charAt(0).toUpperCase() + string.slice(1);\n}\n\n/**\n * Lowercase all letters in a string\n * @param {string} string string to be formatted\n * @return {string} formatted string\n */\nfunction lowerCaseString(string) {\n    return string.toLowerCase();\n}\n\n/**\n * Uppercase all letters in a string\n * @param {string} string string to be formatted\n * @return {string} formatted string\n */\nfunction upperCaseString(string) {\n    return string.toUpperCase();\n}\n\nexport { capitalizeFirstLetter, lowerCaseString, upperCaseString };\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport PropTypes from 'prop-types';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport { withAPI } from 'AppComponents/Apis/Details/components/ApiContext';\n\n/**\n *\n *\n * @param {*} props\n * @returns\n */\nfunction Policies(props) {\n    const { parentClasses, api } = props;\n    return (\n        <>\n            <Grid item xs={12} md={6} lg={4}>\n                <Typography component='p' variant='subtitle2' className={parentClasses.subtitle}>\n                    <FormattedMessage\n                        id='Apis.Details.NewOverview.Policies.business.plans'\n                        defaultMessage='Business Plans:'\n                    />\n                </Typography>\n            </Grid>\n            <Grid item xs={12} md={6} lg={8}>\n                {/* Throttling Policies */}\n                <Typography component='p' variant='body1'>\n                    {api.policies\n                    && api.policies.length !== 0\n                    && api.policies.map((item, index) => (\n                        <span>\n                            {item}\n                            {api.policies.length !== index + 1 && ', '}\n                            {' '}\n                        </span>\n                    ))}\n                </Typography>\n            </Grid>\n        </>\n    );\n}\n\nPolicies.propTypes = {\n    parentClasses: PropTypes.shape({}).isRequired,\n    api: PropTypes.shape({}).isRequired,\n};\n\nexport default withAPI(Policies);\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useContext } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport { FormattedMessage } from 'react-intl';\nimport PropTypes from 'prop-types';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Chip from '@material-ui/core/Chip';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport HelpOutline from '@material-ui/icons/HelpOutline';\nimport Box from '@material-ui/core/Box';\nimport API from 'AppData/api';\nimport { capitalizeFirstLetter, upperCaseString, lowerCaseString } from 'AppData/stringFormatter';\nimport APIContext from '../components/ApiContext';\nimport Policies from './Policies';\n\nconst HUMAN_READABLE_SCHEMES = {\n    oauth2: 'OAuth2',\n    basic_auth: 'Basic Auth',\n    mutualssl: 'Mutual TLS',\n    api_key: 'API Key',\n};\n/**\n *\n *\n * @param {*} props\n * @returns\n */\nfunction Configuration(props) {\n    const { parentClasses } = props;\n    const { api } = useContext(APIContext);\n\n    return (\n        <>\n            <div>\n                <Typography variant='h5' component='h3' className={parentClasses.title}>\n                    <FormattedMessage id='Apis.Details.NewOverview.MetaData.config' defaultMessage='Configuration' />\n                </Typography>\n            </div>\n            <Box p={1}>\n                <Grid container spacing={2}>\n                    <Grid item xs={12} md={6} lg={4}>\n                        {/* Transports */}\n                        <Typography\n                            id='transports'\n                            component='p'\n                            variant='subtitle2'\n                            className={parentClasses.subtitle}\n                        >\n                            <FormattedMessage\n                                id='Apis.Details.NewOverview.MetaData.transports'\n                                defaultMessage='Transports'\n                            />\n                            <Tooltip\n                                placement='top'\n                                aria-label='helper text for transports'\n                                interactive\n                                classes={{\n                                    tooltip: parentClasses.htmlTooltip,\n                                }}\n                                title={(\n                                    <>\n                                        <FormattedMessage\n                                            id='Apis.Details.NewOverview.MetaData.transport.tooltip'\n                                            defaultMessage={\n                                                'HTTP is less secure than HTTPS and '\n                                                + 'makes your API vulnerable to security threats.'\n                                            }\n                                        />\n                                    </>\n                                )}\n                            >\n                                <Button className={parentClasses.helpButton}>\n                                    <HelpOutline className={parentClasses.helpIcon} />\n                                </Button>\n                            </Tooltip>\n                        </Typography>\n                    </Grid>\n                    <Grid item xs={12} md={6} lg={8}>\n                        <Typography component='p' variant='body1'>\n                            {api.transport && api.transport.length !== 0 && (\n                                <>\n                                    {api.transport.map((item, index) => (\n                                        <span>\n                                            {upperCaseString(item)}\n                                            {api.transport.length !== index + 1 && ', '}\n                                        </span>\n                                    ))}\n                                </>\n                            )}\n                            {!api.transport && (\n                                <>\n                                    <Typography component='p' variant='body1' className={parentClasses.notConfigured}>\n                                        <FormattedMessage\n                                            id='Apis.Details.NewOverview.MetaData.transports.not.set'\n                                            defaultMessage='-'\n                                        />\n                                    </Typography>\n                                </>\n                            )}\n                        </Typography>\n                    </Grid>\n                    <Grid item xs={12} md={6} lg={4}>\n                        {/* API Security */}\n                        <Typography component='p' variant='subtitle2' className={parentClasses.subtitle}>\n                            <FormattedMessage\n                                id='Apis.Details.NewOverview.MetaData.securityScheme'\n                                defaultMessage='API Security'\n                            />\n                            <Tooltip\n                                placement='top'\n                                aria-label='helper text for API Security'\n                                interactive\n                                classes={{\n                                    tooltip: parentClasses.htmlTooltip,\n                                }}\n                                title={(\n                                    <>\n                                        <FormattedMessage\n                                            id='Apis.Details.NewOverview.MetaData.securityScheme.tooltip'\n                                            defaultMessage='OAuth2 is used as the default security schema.'\n                                        />\n                                    </>\n                                )}\n                            >\n                                <Button className={parentClasses.helpButton}>\n                                    <HelpOutline className={parentClasses.helpIcon} />\n                                </Button>\n                            </Tooltip>\n                        </Typography>\n                    </Grid>\n                    <Grid item xs={12} md={6} lg={8}>\n                        <Typography component='p' variant='body1'>\n                            {api.securityScheme && api.securityScheme.length !== 0 && (\n                                <>\n                                    {api.securityScheme\n                                        .filter((item) => !item.includes('mandatory'))\n                                        .map((filteredItem) => HUMAN_READABLE_SCHEMES[filteredItem])\n                                        .join(' , ')}\n                                </>\n                            )}\n                            {!api.securityScheme && (\n                                <>\n                                    <Typography component='p' variant='body1' className={parentClasses.notConfigured}>\n                                        <FormattedMessage\n                                            id='Apis.Details.NewOverview.MetaData.securityScheme.not.set'\n                                            defaultMessage='-'\n                                        />\n                                    </Typography>\n                                </>\n                            )}\n                        </Typography>\n                    </Grid>\n                    <Grid item xs={12} md={6} lg={4}>\n                        {/* Access Control */}\n                        <Typography component='p' variant='subtitle2' className={parentClasses.subtitle}>\n                            <FormattedMessage\n                                id='Apis.Details.NewOverview.MetaData.access.control'\n                                defaultMessage='Access Control'\n                            />\n                            <Tooltip\n                                placement='top'\n                                aria-label='helper text for Access Control'\n                                interactive\n                                classes={{\n                                    tooltip: parentClasses.htmlTooltip,\n                                }}\n                                title={(\n                                    <>\n                                        <FormattedMessage\n                                            id='Apis.Details.NewOverview.MetaData.access.control.all.tooltip'\n                                            defaultMessage={\n                                                'All : The API is viewable, '\n                                                + 'modifiable by all the publishers and creators.'\n                                            }\n                                        />\n                                        <br />\n                                        <FormattedMessage\n                                            id='Apis.Details.NewOverview.MetaData.access.control.tooltip'\n                                            defaultMessage={\n                                                'Restricted by roles : The API can be viewable and'\n                                                + ' modifiable by only specific publishers and creators '\n                                                + 'with the roles that you specify'\n                                            }\n                                        />\n                                    </>\n                                )}\n                            >\n                                <Button className={parentClasses.helpButton}>\n                                    <HelpOutline className={parentClasses.helpIcon} />\n                                </Button>\n                            </Tooltip>\n                        </Typography>\n                    </Grid>\n                    <Grid item xs={12} md={6} lg={8}>\n                        <Typography component='p' variant='body1'>\n                            {api.accessControl && (\n                                <>\n                                    {capitalizeFirstLetter(lowerCaseString(api.accessControl))}\n                                </>\n                            )}\n                            {api.accessControl === 'RESTRICTED' && ' ( Visible to '}\n                            {api.accessControl === 'RESTRICTED' && api.accessControlRoles.join()}\n                            {api.accessControl === 'RESTRICTED' && ' ) '}\n                        </Typography>\n                    </Grid>\n                    <Grid item xs={12} md={6} lg={4}>\n                        {/* workflowStatus */}\n                        <Typography component='p' variant='subtitle2' className={parentClasses.subtitle}>\n                            <FormattedMessage\n                                id='Apis.Details.NewOverview.MetaData.workflow.status'\n                                defaultMessage='Workflow Status'\n                            />\n                        </Typography>\n                    </Grid>\n                    <Grid item xs={12} md={6} lg={8}>\n                        <Typography component='p' variant='body1'>\n                            {api.workflowStatus && <>{api.workflowStatus}</>}\n                            {!api.workflowStatus && (\n                                <>\n                                    <Typography component='p' variant='body1' className={parentClasses.notConfigured}>\n                                        <FormattedMessage\n                                            id='Apis.Details.NewOverview.MetaData.workflowStatus.not.set'\n                                            defaultMessage='-'\n                                        />\n                                    </Typography>\n                                </>\n                            )}\n                        </Typography>\n                    </Grid>\n                    <Grid item xs={12} md={6} lg={4}>\n                        {/* Visibility */}\n                        <Typography component='p' variant='subtitle2' className={parentClasses.subtitle}>\n                            <FormattedMessage\n                                id='Apis.Details.NewOverview.MetaData.visibility.store'\n                                defaultMessage='Visibility on Developer Portal'\n                            />\n                            <Tooltip\n                                placement='top'\n                                aria-label='helper text for Visibility on Developer Portal'\n                                interactive\n                                classes={{\n                                    tooltip: parentClasses.htmlTooltip,\n                                }}\n                                title={(\n                                    <>\n                                        <FormattedMessage\n                                            id='Apis.Details.NewOverview.MetaData.visibility.store.all.tooltip'\n                                            defaultMessage={\n                                                'Public: The API is accessible to everyone and can be advertised '\n                                                + 'in multiple developer portals - a central developer portal '\n                                                + 'and/or non-WSO2 developer portals.'\n                                            }\n                                        />\n                                        <br />\n                                        <FormattedMessage\n                                            id='Apis.Details.NewOverview.MetaData.visibility.store.res.tooltip'\n                                            defaultMessage={\n                                                'Restricted by roles: The API is visible only to '\n                                                + 'specific user roles in the tenant Developer Portal that you specify.'\n                                            }\n                                        />\n                                    </>\n                                )}\n                            >\n                                <Button className={parentClasses.helpButton}>\n                                    <HelpOutline className={parentClasses.helpIcon} />\n                                </Button>\n                            </Tooltip>\n                        </Typography>\n                    </Grid>\n                    <Grid item xs={12} md={6} lg={8}>\n                        <Typography component='p' variant='body1'>\n                            {(api.visibility && api.visibility === 'PRIVATE')\n                                ? (\n                                    <>\n                                    Visible to my domain\n                                    </>\n                                )\n                                : (\n                                    <>\n                                        {capitalizeFirstLetter(lowerCaseString(api.visibility))}\n                                    </>\n                                )}\n                            {api.visibility === 'RESTRICTED' && ' ( Visible to '}\n                            {api.visibility === 'RESTRICTED' && api.visibleRoles.join()}\n                            {api.visibility === 'RESTRICTED' && ' ) '}\n                        </Typography>\n                    </Grid>\n                    <Policies parentClasses={parentClasses} />\n                    {api.apiType === API.CONSTS.APIProduct ? null : (\n                        <>\n                            <Grid item xs={12} md={6} lg={4}>\n                                <Typography component='p' variant='subtitle2' className={parentClasses.subtitle}>\n                                    <FormattedMessage\n                                        id='Apis.Details.NewOverview.MetaData.tags'\n                                        defaultMessage='Tags'\n                                    />\n                                </Typography>\n                            </Grid>\n                            <Grid item xs={12} md={6} lg={8}>\n                                {api.tags\n                                    && api.tags.map((tag) => (\n                                        <Chip\n                                            key={tag}\n                                            label={tag}\n                                            style={{\n                                                'font-size': 13,\n                                                height: 20,\n                                                marginRight: 5,\n                                            }}\n                                        />\n                                    ))}\n                                {api.tags.length === 0 && (\n                                    <>\n                                        <Typography\n                                            component='p'\n                                            variant='body1'\n                                            className={parentClasses.notConfigured}\n                                        >\n                                            <FormattedMessage\n                                                id='Apis.Details.NewOverview.MetaData.tags.not.set'\n                                                defaultMessage='-'\n                                            />\n                                        </Typography>\n                                    </>\n                                )}\n                            </Grid>\n                        </>\n                    )}\n                </Grid>\n            </Box>\n        </>\n    );\n}\n\nConfiguration.propTypes = {\n    parentClasses: PropTypes.shape({}).isRequired,\n};\n\nexport default Configuration;\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useEffect, useState, useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport LaunchIcon from '@material-ui/icons/Launch';\nimport Grid from '@material-ui/core/Grid';\nimport green from '@material-ui/core/colors/green';\nimport CheckIcon from '@material-ui/icons/Check';\nimport CloseIcon from '@material-ui/icons/Close';\nimport { Link } from 'react-router-dom';\nimport { FormattedMessage } from 'react-intl';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Button from '@material-ui/core/Button';\nimport ApiContext, { useAPI } from 'AppComponents/Apis/Details/components/ApiContext';\nimport { useAppContext } from 'AppComponents/Shared/AppContext';\nimport Alert from 'AppComponents/Shared/Alert';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport AuthManager from 'AppData/AuthManager';\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: '90%',\n    },\n    button: {\n        color: theme.palette.secondary,\n        marginRight: theme.spacing(1),\n    },\n    gridRequirements: {\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        marginTop: theme.spacing(2),\n    },\n    gridSmall: {\n        display: 'flex',\n        flexDirection: 'row',\n        justifyContent: 'center',\n        alignItems: 'center',\n        marginLeft: 0,\n        marginTop: theme.spacing(1),\n    },\n    gridEndpoint: {\n        display: 'flex',\n        flexDirection: 'row',\n        justifyContent: 'center',\n        alignItems: 'center',\n        marginLeft: 0,\n        marginRight: theme.spacing(4.2),\n        marginTop: theme.spacing(0.5),\n    },\n    iconTrue: {\n        color: green[500],\n        display: 'block',\n        justifyContent: 'flex-start',\n        alignItems: 'center',\n        marginRight: theme.spacing(1),\n    },\n    iconFalse: {\n        color: theme.palette.grey[500],\n        display: 'block',\n        justifyContent: 'flex-start',\n        alignItems: 'center',\n        marginRight: theme.spacing(1),\n    },\n    arrowIcon: {\n        position: 'absolute',\n        top: '16px',\n        right: '-76px',\n        fontSize: '7.9461rem',\n        color: theme.palette.background.default,\n        zIndex: theme.zIndex.overviewArrow,\n    },\n    label: {\n        paddingLeft: '0',\n        paddingRight: '0',\n        flexBasis: '33.3333%',\n        maxWidth: '33.3333%',\n    },\n    stepper: {\n        background: 'transparent',\n        marginLeft: theme.spacing(10),\n    },\n    box: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        backgroundColor: 'transparent',\n        padding: '2px',\n        height: '82px',\n        borderRight: '0',\n        marginRight: '0',\n    },\n    pointerStart: {\n        height: 82,\n        position: 'relative',\n        background: theme.custom.overviewStepper.backgrounds.completed,\n        marginRight: '21px',\n        '&:before': {\n            content: '\"\"',\n            position: 'absolute',\n            right: '-41px',\n            bottom: 0,\n            width: 0,\n            height: 0,\n            borderLeft: '41px solid',\n            borderLeftColor: theme.custom.overviewStepper.backgrounds.completed,\n            borderTop: '41px solid transparent',\n            borderBottom: '41px solid transparent',\n        },\n    },\n    pointerMiddle: {\n        height: 82,\n        position: 'relative',\n        background: theme.custom.overviewStepper.backgrounds.active,\n        margin: '0 20px',\n        '&:before': {\n            content: '\"\"',\n            position: 'absolute',\n            right: '-41px',\n            bottom: 0,\n            width: 0,\n            height: 0,\n            borderLeft: '41px solid',\n            borderLeftColor: theme.custom.overviewStepper.backgrounds.active,\n            borderTop: '41px solid transparent',\n            borderBottom: '41px solid transparent',\n        },\n        '&:after': {\n            content: '\"\"',\n            position: 'absolute',\n            left: 0,\n            bottom: 0,\n            width: 0,\n            height: 0,\n            borderLeft: '41px solid',\n            borderLeftColor: theme.custom.wrapperBackground,\n            borderTop: '41px solid transparent',\n            borderBottom: '41px solid transparent',\n        },\n    },\n    pointerEnd: {\n        height: 82,\n        position: 'relative',\n        background: theme.custom.overviewStepper.backgrounds.inactive,\n        marginLeft: '21px',\n        '&:after': {\n            content: '\"\"',\n            position: 'absolute',\n            left: 0,\n            bottom: 0,\n            width: 0,\n            height: 0,\n            borderLeft: '41px solid',\n            borderLeftColor: theme.custom.wrapperBackground,\n            borderTop: '41px solid transparent',\n            borderBottom: '41px solid transparent',\n        },\n    },\n    pointerMiddleCompleted: {\n        background: theme.custom.overviewStepper.backgrounds.completed,\n        '&:before': {\n            borderLeftColor: theme.custom.overviewStepper.backgrounds.completed,\n        },\n    },\n    pointerEndActive: {\n        background: theme.custom.overviewStepper.backgrounds.active,\n    },\n    pointerEndCompleted: {\n        background: theme.custom.overviewStepper.backgrounds.completed,\n    },\n    stepIcon: {\n        fontSize: theme.custom.overviewStepper.iconSize,\n    },\n    viewInStoreLauncher: {\n        color: theme.palette.primary.dark,\n    },\n}));\n\n/**\n * This component renders the API steps\n *\n */\nexport default function CustomizedSteppers() {\n    const [api, updateAPI] = useAPI();\n    const classes = useStyles();\n    const { settings, user } = useAppContext();\n    const isEndpointAvailable = api.endpointConfig !== null;\n    const isTierAvailable = api.policies.length !== 0;\n    const isPrototypedAvailable = api.endpointConfig !== null\n        && api.endpointConfig.implementation_status === 'prototyped';\n    const [lifecycleState, setlifecycleState] = useState([]);\n    const [isUpdating, setUpdating] = useState(false);\n    const { tenantList } = useContext(ApiContext);\n    const userNameSplit = user.name.split('@');\n    const tenantDomain = userNameSplit[userNameSplit.length - 1];\n    let devportalUrl = `${settings.storeUrl}/apis/${api.id}/overview`;\n    if (tenantList && tenantList.length > 0) {\n        devportalUrl = `${settings.storeUrl}/apis/${api.id}/overview?tenant=${tenantDomain}`;\n    }\n\n    useEffect(() => {\n        api.getLcState(api.id)\n            .then((result) => {\n                setlifecycleState(result.body.state);\n            });\n    }, []);\n\n    /**\n * Update the LifeCycle state of the API\n *\n */\n    function updateLCStateOfAPI(apiId, state) {\n        setUpdating(true);\n        const promisedUpdate = api.updateLcState(apiId, state);\n        promisedUpdate\n            .then(() => {\n                updateAPI()\n                    .then()\n                    .catch((error) => {\n                        if (error.response) {\n                            Alert.error(error.response.body.description);\n                        } else {\n                            Alert.error('Something went wrong while updating the API');\n                        }\n                        console.error(error);\n                    });\n                Alert.info('Lifecycle state updated successfully');\n            })\n            .finally(() => setUpdating(false))\n            .catch((errorResponse) => {\n                console.log(errorResponse);\n                Alert.error(JSON.stringify(errorResponse.message));\n            });\n    }\n\n    /**\n * This function renders the final lifecycle state\n * @param {*} state\n */\n    function finalLifecycleState(state) {\n        switch (state) {\n            case 'Published':\n                return (\n                    <Grid xs={12} display='block'>\n                        <Grid xs={12}>\n                            <Typography variant='h5' component='div'>\n                                <FormattedMessage\n                                    id='Apis.Details.Overview.CustomizedStepper.published'\n                                    defaultMessage='Published'\n                                />\n                            </Typography>\n                        </Grid>\n                        <Grid xs={12}>\n                            <a\n                                target='_blank'\n                                rel='noopener noreferrer'\n                                href={devportalUrl}\n                                className={classes.viewInStoreLauncher}\n                            >\n                                <Typography\n                                    variant='h6'\n                                    component='div'\n                                >\n                                    <FormattedMessage\n                                        id='Apis.Details.components.APIDetailsTopMenu.view.in.portal'\n                                        defaultMessage='View in Dev Portal'\n                                    />\n                                    <LaunchIcon style={{ marginLeft: '5px' }} fontSize='small' />\n                                </Typography>\n                            </a>\n                        </Grid>\n                    </Grid>\n                );\n            case 'Prototyped':\n                return (\n                    <Typography variant='h5' component='div'>\n                        <FormattedMessage\n                            id='Apis.Details.Overview.CustomizedStepper.prototyped'\n                            defaultMessage='Prototyped'\n                        />\n                    </Typography>\n                );\n            case 'Blocked':\n                return (\n                    <Typography variant='h5' component='div'>\n                        <FormattedMessage\n                            id='Apis.Details.Overview.CustomizedStepper.blocked'\n                            defaultMessage='Blocked'\n                        />\n                    </Typography>\n                );\n            case 'Deprecated':\n                return (\n                    <Typography variant='h5' component='div'>\n                        <FormattedMessage\n                            id='Apis.Details.Overview.CustomizedStepper.deprecated'\n                            defaultMessage='Deprecated'\n                        />\n                    </Typography>\n                );\n            case 'Retired':\n                return (\n                    <Typography variant='h5' component='div'>\n                        <FormattedMessage\n                            id='Apis.Details.Overview.CustomizedStepper.retired'\n                            defaultMessage='Retired'\n                        />\n                    </Typography>\n                );\n            default:\n                return (\n                    <Grid xs={12} display='block'>\n                        <Grid xs={12}>\n                            {isPrototypedAvailable ? (\n                                <Button\n                                    variant='contained'\n                                    color='primary'\n                                    onClick={() => updateLCStateOfAPI(api.id, 'Deploy as a Prototype')}\n                                    disabled={api.workflowStatus === 'CREATED' || AuthManager.isNotPublisher()}\n                                >\n                                        Deploy as a prototype\n                                    {isUpdating && <CircularProgress size={20} />}\n                                </Button>\n\n                            ) : (\n                                <Button\n                                    variant='contained'\n                                    color='primary'\n                                    onClick={() => updateLCStateOfAPI(api.id, 'Publish')}\n                                    disabled={(!isEndpointAvailable || !isTierAvailable)\n                                        || AuthManager.isNotPublisher() || api.workflowStatus === 'CREATED'}\n                                >\n                                        Publish\n                                    {isUpdating && <CircularProgress size={20} />}\n                                </Button>\n                            )}\n                        </Grid>\n                        {api.workflowStatus === 'CREATED' && (\n                            <Grid xs={12}>\n                                <Typography variant='caption' color='error'>\n                                    <FormattedMessage\n                                        id='Apis.Details.Overview.CustomizedStepper.pending'\n                                        defaultMessage='The request is pending'\n                                    />\n                                </Typography>\n                            </Grid>\n                        )}\n                    </Grid>\n                );\n        }\n    }\n\n\n    let activeStep = 0;\n    if (lifecycleState === 'Created' && ((isEndpointAvailable && isTierAvailable) || isPrototypedAvailable)) {\n        activeStep = 2;\n    } else if (lifecycleState === 'Created') {\n        activeStep = 1;\n    } else if (lifecycleState !== 'Created') {\n        activeStep = 3;\n    }\n\n    const step2Class = activeStep > 1 ? classes.pointerMiddleCompleted : '';\n    let step3Class;\n    if (activeStep === 2) {\n        step3Class = classes.pointerEndActive;\n    } else if (activeStep === 3) {\n        step3Class = classes.pointerEndCompleted;\n    } else {\n        step3Class = '';\n    }\n\n    return (\n        <div className={classes.root}>\n            <Stepper alternativeLabel activeStep={activeStep} className={classes.stepper}>\n                <Step className={classes.label}>\n                    <StepLabel style={{ position: 'relative' }} StepIconProps={{ classes: { root: classes.stepIcon } }}>\n                        <div className={classes.pointerStart}>\n                            <Box className={classes.box}>\n                                <Typography variant='h5' component='div'>\n                                    <FormattedMessage\n                                        id='Apis.Details.Overview.CustomizedStepper.create'\n                                        defaultMessage='Created'\n                                    />\n                                </Typography>\n                            </Box>\n                        </div>\n                    </StepLabel>\n                </Step>\n                <Step className={classes.label}>\n                    <StepLabel style={{ position: 'relative' }} StepIconProps={{ classes: { root: classes.stepIcon } }}>\n                        <div className={`${classes.pointerMiddle} ${step2Class}`}>\n                            <Box p={2} borderLeft='0' borderRight='0'>\n                                <Tooltip\n                                    title={isEndpointAvailable ? '' : 'You have to specify an endpoint for the API'}\n                                    placement='top'\n                                >\n                                    <Grid className={classes.gridEndpoint}>\n                                        {isEndpointAvailable ? (\n                                            <CheckIcon className={classes.iconTrue} />\n                                        ) : (\n                                            <CloseIcon className={classes.iconFalse} />\n                                        )}\n                                        <Typography variant='h7' component='div'>\n                                            <FormattedMessage\n                                                id='Apis.Details.Overview.CustomizedStepper.business.plan.endpoint'\n                                                defaultMessage='Endpoint'\n                                            />\n                                        </Typography>\n                                        <Link to={'/apis/' + api.id + '/endpoints'} aria-label='Go to Endpoint page'>\n                                            <LaunchIcon\n                                                style={{ marginLeft: '5px' }}\n                                                color='primary'\n                                                fontSize='small'\n                                            />\n                                        </Link>\n                                    </Grid>\n                                </Tooltip>\n                                <Tooltip\n                                    title={isTierAvailable ? '' : 'You have to select the business plan for the API'}\n                                    placement='bottom'\n                                >\n                                    <Grid xs={12} className={classes.gridSmall}>\n                                        {isTierAvailable ? (\n                                            <CheckIcon className={classes.iconTrue} />\n                                        ) : (\n                                            <CloseIcon className={classes.iconFalse} />\n                                        )}\n                                        <Typography variant='h7' component='div'>\n                                            <FormattedMessage\n                                                id='Apis.Details.Overview.CustomizedStepper.\n                                                business.plan.businessPlans'\n                                                defaultMessage=' Business plans'\n                                            />\n                                        </Typography>\n                                        <Link\n                                            aria-label='Go to Business plans page'\n                                            to={'/apis/' + api.id + '/subscriptions'}\n                                        >\n                                            <LaunchIcon\n                                                style={{ marginLeft: '5px' }}\n                                                color='primary'\n                                                fontSize='small'\n                                            />\n                                        </Link>\n                                    </Grid>\n                                </Tooltip>\n                            </Box>\n                        </div>\n                    </StepLabel>\n                </Step>\n                <Step className={classes.label}>\n                    <StepLabel style={{ position: 'relative' }} StepIconProps={{ classes: { root: classes.stepIcon } }}>\n                        <div className={`${classes.pointerEnd} ${step3Class}`}>\n                            <Box className={classes.box}>\n                                {finalLifecycleState(lifecycleState)}\n                            </Box>\n                        </div>\n                    </StepLabel>\n                </Step>\n            </Stepper>\n        </div>\n    );\n}\n\nCustomizedSteppers.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    api: PropTypes.shape({\n        id: PropTypes.string,\n    }).isRequired,\n};\n\nCustomizedSteppers.contextType = ApiContext;\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport PropTypes from 'prop-types';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport { withAPI } from 'AppComponents/Apis/Details/components/ApiContext';\n\n/**\n *\n *\n * @param {*} props\n * @returns\n */\nfunction BusinessInformation(props) {\n    const { parentClasses, api } = props;\n    return (\n        <>\n            <Grid item xs={12} md={6} lg={4}>\n                {/* Business Owner */}\n                <Typography component='p' variant='subtitle2' className={parentClasses.subtitle}>\n                    <FormattedMessage\n                        id='Apis.Details.NewOverview.BusinessInformation.business.owner'\n                        defaultMessage='Business Owner'\n                    />\n                </Typography>\n            </Grid>\n            <Grid item xs={12} md={6} lg={8}>\n                <Typography component='p' variant='body1'>\n                    {api.businessInformation.businessOwner && (\n                        <>{api.businessInformation.businessOwner}</>\n                    )}\n                </Typography>\n                <Typography component='p' variant='body1' className={parentClasses.notConfigured}>\n                    {!api.businessInformation.businessOwner && (\n                        <>\n                            <FormattedMessage\n                                id='Apis.Details.NewOverview.BusinessInformation.business.owner.not.set'\n                                defaultMessage='-'\n                            />\n                        </>\n                    )}\n                </Typography>\n            </Grid>\n            <Grid item xs={12} md={6} lg={4}>\n                {/* Technical Owner */}\n                <Typography component='p' variant='subtitle2' className={parentClasses.subtitle}>\n                    <FormattedMessage\n                        id='Apis.Details.NewOverview.BusinessInformation.technical.owner'\n                        defaultMessage='Technical Owner'\n                    />\n                </Typography>\n            </Grid>\n            <Grid item xs={12} md={6} lg={8}>\n                <Typography component='p' variant='body1'>\n                    {api.businessInformation.technicalOwner\n                        && <>{api.businessInformation.technicalOwner}</>}\n                </Typography>\n                <Typography component='p' variant='body1' className={parentClasses.notConfigured}>\n                    {!api.businessInformation.technicalOwner && (\n                        <>\n                            <FormattedMessage\n                                id='Apis.Details.NewOverview.BusinessInformation.technical.owner.not.set'\n                                defaultMessage='-'\n                            />\n                        </>\n                    )}\n                </Typography>\n            </Grid>\n        </>\n    );\n}\n\nBusinessInformation.propTypes = {\n    parentClasses: PropTypes.shape({}).isRequired,\n    api: PropTypes.shape({}).isRequired,\n};\n\nexport default withAPI(BusinessInformation);\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport { FormattedMessage } from 'react-intl';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport API from 'AppData/api';\nimport { capitalizeFirstLetter } from 'AppData/stringFormatter';\nimport { useAPI } from 'AppComponents/Apis/Details/components/ApiContext';\nimport BusinessInformation from './BusinessInformation';\n\n/**\n *\n *\n * @param {*} props\n * @returns\n */\nfunction MetaData(props) {\n    const { parentClasses } = props;\n    const [api] = useAPI();\n\n    return (\n        <>\n            <Typography variant='h5' component='h2' className={parentClasses.title}>\n                <FormattedMessage\n                    id='Apis.Details.NewOverview.MetaData.metadata'\n                    defaultMessage='Metadata'\n                />\n            </Typography>\n            <Box p={1}>\n                <Grid container spacing={1}>\n                    <Grid item xs={12} md={6} lg={4}>\n                        <Typography component='p' variant='subtitle2' className={parentClasses.subtitle}>\n                            <FormattedMessage\n                                id='Apis.Details.NewOverview.MetaData.description'\n                                defaultMessage='Description'\n                            />\n                        </Typography>\n                    </Grid>\n                    <Grid item xs={12} md={6} lg={8}>\n                        <Typography component='p' variant='body1'>\n                            {api.description\n                            && (\n                                <>\n                                    {capitalizeFirstLetter(api.description)}\n                                </>\n                            )}\n                        </Typography>\n                        <Typography component='p' variant='body1' className={parentClasses.notConfigured}>\n                            {!api.description\n                                && (\n                                    <>\n                                        <Typography\n                                            component='p'\n                                            variant='body1'\n                                            className={parentClasses.notConfigured}\n                                        >\n                                            <FormattedMessage\n                                                id='Apis.Details.NewOverview.MetaData.description.not.set'\n                                                defaultMessage='-'\n                                            />\n                                        </Typography>\n                                    </>\n                                )}\n                        </Typography>\n                    </Grid>\n                    <Grid item xs={12} md={6} lg={4}>\n                        {/* Provider */}\n                        <Typography component='p' variant='subtitle2' className={parentClasses.subtitle}>\n                            <FormattedMessage\n                                id='Apis.Details.NewOverview.MetaData.provider'\n                                defaultMessage='Provider'\n                            />\n                        </Typography>\n                    </Grid>\n                    <Grid item xs={12} md={6} lg={8}>\n                        <Typography component='p' variant='body1'>\n                            {api.provider && <>{api.provider}</>}\n                        </Typography>\n                    </Grid>\n                    <Grid item xs={12} md={6} lg={4}>\n                        <Typography component='p' variant='subtitle2' className={parentClasses.subtitle}>\n                            <FormattedMessage\n                                id='Apis.Details.NewOverview.MetaData.context:'\n                                defaultMessage='Context:'\n                            />\n                        </Typography>\n                    </Grid>\n                    <Grid item xs={12} md={6} lg={8} style={{ 'word-break': 'break-all' }}>\n                        <Typography component='p' variant='body1'>\n                            {api.context && <>{api.context}</>}\n                        </Typography>\n                    </Grid>\n                    {/* Version */}\n                    {api.apiType === API.CONSTS.API && (\n                        <>\n                            <Grid item xs={12} md={6} lg={4}>\n                                <Typography component='p' variant='subtitle2' className={parentClasses.subtitle}>\n                                    <FormattedMessage\n                                        id='Apis.Details.NewOverview.MetaData.version'\n                                        defaultMessage='Version'\n                                    />\n                                </Typography>\n                            </Grid>\n                            <Grid item xs={12} md={6} lg={8}>\n                                <Typography component='p' variant='body1'>\n                                    {api.version && <>{api.version}</>}\n                                </Typography>\n                            </Grid>\n                        </>\n                    )}\n                    {/* Type */}\n                    {api.apiType === API.CONSTS.APIProduct ? null : (\n                        <>\n                            <Grid item xs={12} md={6} lg={4}>\n                                <>\n                                    <Typography\n                                        component='p'\n                                        variant='subtitle2'\n                                        className={parentClasses.subtitle}\n                                    >\n                                        <FormattedMessage\n                                            id='Apis.Details.NewOverview.MetaData.type:'\n                                            defaultMessage='Type:'\n                                        />\n                                    </Typography>\n                                </>\n                            </Grid>\n                            <Grid item xs={12} md={6} lg={8}>\n                                <Typography component='p' variant='body1'>\n                                    {api.type && <>{api.type}</>}\n                                    {!api.type\n                                        && (\n                                            <>\n                                                <Typography\n                                                    component='p'\n                                                    variant='body1'\n                                                    className={parentClasses.notConfigured}\n                                                >\n                                                    <FormattedMessage\n                                                        id='Apis.Details.NewOverview.MetaData.type.not.set'\n                                                        defaultMessage='-'\n                                                    />\n                                                </Typography>\n                                            </>\n                                        )}\n                                </Typography>\n                            </Grid>\n                        </>\n                    )}\n                    <Grid item xs={12} md={6} lg={4}>\n                        {/* Created Time */}\n                        <Typography component='p' variant='subtitle2' className={parentClasses.subtitle}>\n                            <FormattedMessage\n                                id='Apis.Details.NewOverview.MetaData.created.time'\n                                defaultMessage='Created Time'\n                            />\n                        </Typography>\n                    </Grid>\n                    <Grid item xs={12} md={6} lg={8}>\n                        <Typography component='p' variant='body1'>\n                            {api.createdTime\n                            && (\n                                <>\n                                    <Tooltip\n                                        title={moment(api.createdTime).calendar()}\n                                        interactive\n                                        placement='top-start'\n                                        tabIndex='-1'\n                                    >\n                                        <Typography variant='body1' display='block'>\n                                            {capitalizeFirstLetter(moment(api.createdTime).fromNow())}\n                                        </Typography>\n                                    </Tooltip>\n                                </>\n                            )}\n                            {!api.createdTime\n                                && (\n                                    <>\n                                        <Typography\n                                            component='p'\n                                            variant='body1'\n                                            className={parentClasses.notConfigured}\n                                        >\n                                            <FormattedMessage\n                                                id='Apis.Details.NewOverview.MetaData.createdTime.not.set'\n                                                defaultMessage='-'\n                                            />\n                                        </Typography>\n                                    </>\n                                )}\n                        </Typography>\n                    </Grid>\n                    <Grid item xs={12} md={6} lg={4}>\n                        {/* Last Updated Time */}\n                        <Typography component='p' variant='subtitle2' className={parentClasses.subtitle}>\n                            <FormattedMessage\n                                id='Apis.Details.NewOverview.MetaData.last.updated.time'\n                                defaultMessage='Last Updated Time'\n                            />\n                        </Typography>\n                    </Grid>\n                    <Grid item xs={12} md={6} lg={8}>\n                        <Typography component='p' variant='body1'>\n                            {api.lastUpdatedTime\n                            && (\n                                <>\n                                    <Tooltip\n                                        title={moment(api.lastUpdatedTime).calendar()}\n                                        interactive\n                                        placement='top-start'\n                                        tabIndex='-1'\n                                    >\n                                        <Typography variant='body1' display='block'>\n                                            {capitalizeFirstLetter(moment(api.lastUpdatedTime).fromNow())}\n                                        </Typography>\n                                    </Tooltip>\n                                </>\n                            )}\n                            {!api.lastUpdatedTime\n                                && (\n                                    <>\n                                        <Typography\n                                            component='p'\n                                            variant='body1'\n                                            className={parentClasses.notConfigured}\n                                        >\n                                            <FormattedMessage\n                                                id='Apis.Details.NewOverview.MetaData.lastUpdatedTime.not.set'\n                                                defaultMessage='-'\n                                            />\n                                        </Typography>\n                                    </>\n                                )}\n                        </Typography>\n                    </Grid>\n                    <BusinessInformation parentClasses={parentClasses} />\n                </Grid>\n            </Box>\n        </>\n    );\n}\n\nMetaData.propTypes = {\n    parentClasses: PropTypes.shape({}).isRequired,\n};\n\nexport default MetaData;\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport PropTypes from 'prop-types';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Box from '@material-ui/core/Box';\nimport { withAPI } from 'AppComponents/Apis/Details/components/ApiContext';\n\nconst showEndpoint = (api, type) => {\n    if (api.endpointConfig) {\n        if (type === 'prod') {\n            return api.getProductionEndpoint();\n        }\n        if (type === 'sand') {\n            return api.getSandboxEndpoint();\n        }\n    }\n    return null;\n};\n\n\n/**\n *\n *\n * @param {*} props\n * @returns\n */\nfunction Endpoints(props) {\n    const { parentClasses, api } = props;\n    const isPrototypedAvailable = api.endpointConfig !== null\n        && api.endpointConfig.implementation_status === 'prototyped';\n\n    return (\n        <>\n            <div>\n                <Typography variant='h5' component='h2' className={parentClasses.title}>\n                    <FormattedMessage\n                        id='Apis.Details.NewOverview.Endpoints.endpoints'\n                        defaultMessage='Endpoints'\n                    />\n                </Typography>\n            </div>\n            <Box p={1}>\n                <Grid container spacing={2}>\n                    <Grid item xs={12} md={6} lg={4}>\n                        {/* Production Endpoint (TODO) fix the endpoint\n                                            info when it's available with the api object */}\n                        { !isPrototypedAvailable ? (\n                            <Typography component='p' variant='subtitle2' className={parentClasses.subtitle}>\n                                <FormattedMessage\n                                    id='Apis.Details.NewOverview.Endpoints.production.endpoint'\n                                    defaultMessage='Production Endpoint'\n                                />\n                            </Typography>\n                        )\n                            : (\n                                <Typography component='p' variant='subtitle2' className={parentClasses.subtitle}>\n                                    <FormattedMessage\n                                        id='Apis.Details.NewOverview.Endpoints.prototype.endpoint'\n                                        defaultMessage='Prototype Endpoint'\n                                    />\n                                </Typography>\n                            )}\n                    </Grid>\n                    <Grid item xs={12} md={6} lg={8}>\n                        <Tooltip\n                            placement='top'\n                            interactive\n                            classes={{\n                                tooltip: parentClasses.htmlTooltip,\n                            }}\n                            title={\n                                showEndpoint(api, 'prod')\n                                && <>{showEndpoint(api, 'prod')}</>\n                            }\n                        >\n                            <Typography component='p' variant='body1' className={parentClasses.url}>\n                                {showEndpoint(api, 'prod')\n                                && <>{showEndpoint(api, 'prod')}</>}\n                            </Typography>\n                        </Tooltip>\n                        <Typography component='p' variant='body1' className={parentClasses.notConfigured}>\n                            {!showEndpoint(api, 'prod') && (\n                                <>\n                                    <FormattedMessage\n                                        id='Apis.Details.NewOverview.Endpoints.not.set'\n                                        defaultMessage='-'\n                                    />\n                                </>\n                            )}\n                        </Typography>\n                    </Grid>\n                    {!isPrototypedAvailable && (\n                        <Grid item xs={12} md={6} lg={4}>\n                            {/* Sandbox Endpoint (TODO) fix the endpoint info when\n                                                it's available with the api object */}\n                            <Typography component='p' variant='subtitle2' className={parentClasses.subtitle}>\n                                <FormattedMessage\n                                    id='Apis.Details.NewOverview.Endpoints.sandbox.endpoint'\n                                    defaultMessage='Sandbox Endpoint'\n                                />\n                            </Typography>\n                        </Grid>\n                    )}\n\n                    {!isPrototypedAvailable && (\n                        <Grid item xs={12} md={6} lg={8}>\n                            <Tooltip\n                                placement='top'\n                                interactive\n                                classes={{\n                                    tooltip: parentClasses.htmlTooltip,\n                                }}\n                                title={\n                                    showEndpoint(api, 'sand')\n                                    && <>{showEndpoint(api, 'sand')}</>\n                                }\n                            >\n                                <Typography component='p' variant='body1' className={parentClasses.url}>\n                                    {showEndpoint(api, 'sand')\n                                    && <>{showEndpoint(api, 'sand')}</>}\n                                </Typography>\n                            </Tooltip>\n                            <Typography component='p' variant='body1' className={parentClasses.notConfigured}>\n                                {!showEndpoint(api, 'sand') && (\n                                    <>\n                                        <FormattedMessage\n                                            id='Apis.Details.NewOverview.Endpoints.sandbox.not.set'\n                                            defaultMessage='-'\n                                        />\n                                    </>\n                                )}\n                            </Typography>\n                        </Grid>\n                    )}\n                    <Grid item xs={12} md={6} lg={4}>\n                        {/* Sandbox Endpoint (TODO) fix the endpoint info when\n                                            it's available with the api object */}\n                        <Typography component='p' variant='subtitle2' className={parentClasses.subtitle}>\n                            <FormattedMessage\n                                id='Apis.Details.NewOverview.Endpoints.endpoint.security'\n                                defaultMessage='Endpoint Security'\n                            />\n                        </Typography>\n                    </Grid>\n                    <Grid item xs={12} md={6} lg={8}>\n                        <Typography component='p' variant='body1'>\n                            {api.endpointSecurity && <>{api.endpointSecurity.type}</>}\n                        </Typography>\n                        <Typography component='p' variant='body1' className={parentClasses.notConfigured}>\n                            {!api.endpointSecurity\n                            && (\n                                <>\n                                    <FormattedMessage\n                                        id='Apis.Details.NewOverview.Endpoints.security.not.set'\n                                        defaultMessage='-'\n                                    />\n                                </>\n                            )}\n                        </Typography>\n                    </Grid>\n                </Grid>\n            </Box>\n        </>\n    );\n}\n\nEndpoints.propTypes = {\n    parentClasses: PropTypes.shape({}).isRequired,\n    api: PropTypes.shape({}).isRequired,\n};\n\nexport default withAPI(Endpoints);\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport green from '@material-ui/core/colors/green';\nimport { withStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport { FormattedMessage } from 'react-intl';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport API from 'AppData/api';\nimport ApiContext from 'AppComponents/Apis/Details/components/ApiContext';\nimport Resources from './Resources';\nimport Operations from './Operations';\nimport ProductResources from './ProductResources';\nimport Configuration from './Configuration';\nimport CustomizedStepper from './CustomizedStepper';\nimport MetaData from './MetaData';\nimport Endpoints from './Endpoints';\n\nconst styles = (theme) => ({\n    root: {\n        ...theme.mixins.gutters(),\n        paddingTop: theme.spacing(2),\n        paddingBottom: theme.spacing(2),\n    },\n    contentWrapper: {\n        marginTop: theme.spacing(2),\n    },\n    buttonSuccess: {\n        backgroundColor: green[500],\n        '&:hover': {\n            backgroundColor: green[700],\n        },\n    },\n    checkItem: {\n        textAlign: 'center',\n    },\n    divider: {\n        marginTop: 20,\n        marginBottom: 20,\n    },\n    chip: {\n        margin: theme.spacing(0.5),\n        padding: 0,\n        height: 'auto',\n        '& span': {\n            padding: '0 5px',\n        },\n    },\n    imageContainer: {\n        display: 'flex',\n    },\n    imageWrapper: {\n        marginRight: theme.spacing(3),\n    },\n    subtitle: {\n        marginTop: theme.spacing(0),\n    },\n    specialGap: {\n        marginTop: theme.spacing(3),\n    },\n    resourceTitle: {\n        marginBottom: theme.spacing(3),\n    },\n    ListRoot: {\n        padding: 0,\n        margin: 0,\n    },\n    titleWrapper: {\n        display: 'flex',\n    },\n    title: {\n        flex: 1,\n    },\n    helpButton: {\n        padding: 0,\n        minWidth: 20,\n    },\n    helpIcon: {\n        fontSize: 16,\n    },\n    htmlTooltip: {\n        backgroundColor: '#f5f5f9',\n        color: 'rgba(0, 0, 0, 0.87)',\n        maxWidth: 220,\n        fontSize: theme.typography.pxToRem(14),\n        border: '1px solid #dadde9',\n        '& b': {\n            fontWeight: theme.typography.fontWeightMedium,\n        },\n    },\n    lifecycleWrapper: {\n        display: 'flex',\n        alignItems: 'center',\n    },\n    lifecycleIcon: {\n        fontSize: 36,\n        color: 'green',\n        marginRight: theme.spacing(1),\n    },\n    leftSideWrapper: {\n        paddingRight: theme.spacing(2),\n    },\n    notConfigured: {\n        color: 'rgba(0, 0, 0, 0.40)',\n    },\n    url: {\n        maxWidth: '100%',\n        whiteSpace: 'nowrap',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n    },\n});\n\n/**\n * API Overview page\n *\n * @param {*} props\n * @returns\n */\nfunction Overview(props) {\n    const { classes, api: newApi } = props;\n    const { api } = useContext(ApiContext);\n    let loadEndpoints;\n\n    if (api.apiType === API.CONSTS.API) {\n        loadEndpoints = <Endpoints parentClasses={classes} api={api} />;\n    }\n    function getResourcesClassForAPIs(apiType) {\n        switch (apiType) {\n            case 'GRAPHQL':\n                return <Operations parentClasses={classes} api={api} />;\n            case 'APIProduct':\n                return <ProductResources parentClasses={classes} api={api} />;\n            case 'WS':\n                return '';\n            default:\n                return <Resources parentClasses={classes} api={api} />;\n        }\n    }\n\n    if (newApi.apiType === API.CONSTS.APIProduct) {\n        api.type = API.CONSTS.APIProduct;\n    }\n    return (\n        <>\n            <Typography variant='h4' align='left' component='h2' className={classes.mainTitle}>\n                <FormattedMessage\n                    id='Apis.Details.Overview.Overview.topic.header'\n                    defaultMessage='Overview'\n                />\n            </Typography>\n            {api.type !== API.CONSTS.APIProduct && (\n                <Grid container spacing={12}>\n                    <Grid item xs={12} s={12} md={12} lg={12}>\n                        <CustomizedStepper />\n                    </Grid>\n                </Grid>\n            )}\n            <div className={classes.contentWrapper}>\n                <Paper className={classes.root}>\n                    <Grid container spacing={24}>\n                        <Grid item xs={12} md={12} lg={12}>\n                            <Grid container spacing={24}>\n                                <Grid item xs={12} md={6} lg={6}>\n                                    <MetaData parentClasses={classes} />\n                                </Grid>\n                                <Grid item xs={12} md={6} lg={6}>\n                                    <Configuration parentClasses={classes} />\n                                </Grid>\n                            </Grid>\n                        </Grid>\n                        <Grid item xs={12} md={12} lg={12}>\n                            <div className={classes.specialGap}>\n                                <Grid container spacing={24}>\n                                    <Grid item xs={12} md={6} lg={6}>\n                                        <Grid item xs={12} md={8} lg={8}>\n                                            {getResourcesClassForAPIs(api.type)}\n                                        </Grid>\n                                    </Grid>\n                                    <Grid item xs={12} md={6} lg={6}>\n                                        {loadEndpoints}\n                                    </Grid>\n                                </Grid>\n                            </div>\n                        </Grid>\n                    </Grid>\n                </Paper>\n            </div>\n        </>\n    );\n}\n\nOverview.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    api: PropTypes.shape({\n        id: PropTypes.string,\n    }).isRequired,\n};\n\nexport default withStyles(styles)(Overview);\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { withStyles } from '@material-ui/core/styles';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport green from '@material-ui/core/colors/green';\nimport red from '@material-ui/core/colors/red';\nimport React, { Component } from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport Grid from '@material-ui/core/Grid';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Paper from '@material-ui/core/Paper';\nimport Slide from '@material-ui/core/Slide';\nimport Select from '@material-ui/core/Select';\nimport Typography from '@material-ui/core/Typography';\nimport Icon from '@material-ui/core/Icon';\nimport IconButton from '@material-ui/core/IconButton';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport PropTypes from 'prop-types';\nimport Dropzone from 'react-dropzone';\nimport { SketchPicker } from 'react-color';\nimport Api from 'AppData/api';\nimport APIProduct from 'AppData/APIProduct';\nimport MaterialIcons from 'MaterialIcons';\nimport Alert from 'AppComponents/Shared/Alert';\nimport { withAPI } from 'AppComponents/Apis/Details/components/ApiContext';\nimport Configurations from 'Config';\n\nimport ImageGenerator from './ImageGenerator';\nimport Background from './Background';\nimport BaseThumbnail from './BaseThumbnail';\n\nconst windowURL = window.URL || window.webkitURL;\nconst dropzoneStyles = {\n    border: '1px dashed ',\n    borderRadius: '5px',\n    cursor: 'pointer',\n    height: 75,\n    padding: '8px 0px',\n    position: 'relative',\n    textAlign: 'center',\n    width: '100%',\n    margin: '10px 0',\n};\nconst styles = (theme) => ({\n    acceptDrop: {\n        backgroundColor: green[50],\n    },\n    dropzone: {\n        border: '1px dashed ' + theme.palette.primary.main,\n        borderRadius: '5px',\n        cursor: 'pointer',\n        height: 'calc(100vh - 10em)',\n        padding: `${theme.spacing(2)}px 0px`,\n        position: 'relative',\n        textAlign: 'center',\n        width: '100%',\n        margin: '10px 0',\n    },\n    dropZoneWrapper: {\n        height: '100%',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        '& span': {\n            fontSize: 100,\n            color: theme.palette.primary.main,\n        },\n    },\n    preview: {\n        height: theme.spacing(25),\n    },\n    rejectDrop: {\n        backgroundColor: red[50],\n    },\n    group: {\n        display: 'flex',\n        flexDirection: 'row',\n        padding: '0 0 0 20px',\n    },\n    popupHeader: {\n        display: 'flex',\n        flexDirection: 'row',\n    },\n    iconView: {\n        width: 30,\n        margin: 10,\n        cursor: 'pointer',\n    },\n    subtitle: {\n        marginRight: 20,\n    },\n    subtitleWrapper: {\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems: 'center',\n        marginTop: 20,\n        marginBottom: 10,\n    },\n    body: {\n        marginBottom: 10,\n    },\n    imageGenWrapper: {\n        '& > div': {\n            position: 'fixed',\n            marginTop: 20,\n        },\n    },\n    backgroundSelection: {\n        cursor: 'pointer',\n        marginRight: 10,\n        display: 'inline-block',\n        border: 'solid 1px #ccc',\n    },\n    actionBox: {\n        boxShadow:\n            '0px 1px 5px 0px rgba(0,0,0,0.2), 0px 2px 2px 0px rgba(0,0,0,0.14), 0px 3px 1px -2px rgba(0,0,0,0.12)',\n        justifyContent: 'flex-start',\n        padding: '10px 0 10px 10px',\n    },\n    imageContainer: {\n        paddingTop: 10,\n    },\n});\n\n/**\n * Give the icons array from category name\n *\n * @param {*} category\n * @param {*} allKeys\n * @returns\n */\nfunction FindCategoryKeys(category) {\n    for (let i = 0; i < MaterialIcons.categories.length; i++) {\n        if (MaterialIcons.categories[i].name === category) {\n            return MaterialIcons.categories[i].icons;\n        }\n    }\n}\n/**\n * Slide up transition for modal\n *\n * @param {any} props Properties\n * @returns {Slide} Slide up transition\n */\nfunction Transition(props) {\n    return <Slide direction='up' {...props} />;\n}\n/**\n * Provides a view for the API Thumbnail image.\n * This can be either user defined image uploaded earlier or a generated Image.\n */\nclass ThumbnailView extends Component {\n    /**\n     * Initializes the ThumbnailView Component\n     *\n     * @param {any} props Component properties\n     */\n    constructor(props) {\n        super(props);\n        this.state = {\n            open: false,\n            file: null,\n            thumbnail: null,\n            selectedTab: 'design',\n            category: MaterialIcons.categories[0].name,\n            selectedIcon: null,\n            selectedIconUpdate: null,\n            color: null,\n            colorUpdate: null,\n            backgroundIndex: null,\n            backgroundIndexUpdate: null,\n            uploading: false,\n        };\n        this.handleClick = this.handleClick.bind(this);\n        this.handleClose = this.handleClose.bind(this);\n    }\n\n    /**\n     * Clean up resource\n     */\n    componentWillUnmount() {\n        if (this.state.thumbnail) {\n            windowURL.revokeObjectURL(this.state.thumbnail);\n        }\n    }\n\n    /**\n     * Event listener for file drop on the dropzone\n     *\n     * @param {File} acceptedFile dropped file\n     */\n    onDrop(acceptedFile) {\n        this.setState({ file: acceptedFile });\n    }\n\n\n    /**\n     * @param {SyntheticEvent} e React event object\n     */\n    handleClick = (action, intl) => () => {\n        if (action === 'btnEditAPIThumb') {\n            this.setState({ open: true });\n        } else if (action === 'btnUploadAPIThumb') {\n            const { api } = this.props;\n            const {\n                selectedTab, selectedIconUpdate, category, colorUpdate, backgroundIndexUpdate, file,\n            } = this.state;\n            let fileObj;\n            if (selectedTab === 'upload') {\n                if (!api.id && !file) {\n                    Alert.error(intl.formatMessage({\n                        id: 'Apis.Listing.components.ImageGenerator.ThumbnailView.thumbnail.validation.error',\n                        defaultMessage: 'Invalid file or API information is not set correctly.',\n                    }));\n                    return;\n                }\n                /* eslint prefer-destructuring: [\"error\", {VariableDeclarator: {object: true}}] */\n                fileObj = file[0];\n            } else {\n                if (!selectedIconUpdate && !colorUpdate && !backgroundIndexUpdate) {\n                    Alert.error(intl.formatMessage({\n                        id: 'the.icon.is.not.modified',\n                        defaultMessage: 'The icon is not modified',\n                    }));\n                    return;\n                }\n                const newIconJson = {\n                    key: selectedIconUpdate,\n                    category,\n                    color: colorUpdate,\n                    backgroundIndex: backgroundIndexUpdate,\n                };\n                const blob = new Blob([JSON.stringify(newIconJson)], { type: 'application/json' });\n                fileObj = new File([blob], 'FileName.json', { type: 'application/json' });\n            }\n\n            this.uploadThumbnail(selectedTab, api.id, fileObj, intl);\n        }\n    };\n\n\n    handleChange = (event, selectedTab) => {\n        this.setState({ selectedTab });\n    };\n\n    handleSelectionChange = (name) => (event) => {\n        this.setState({ [name]: event.target.value });\n    };\n\n    selectIcon = (selectedIconUpdate) => {\n        this.setState({ selectedIconUpdate });\n    };\n\n    handleChangeComplete = (colorUpdate) => {\n        this.setState({ colorUpdate: colorUpdate.hex });\n    };\n\n    selectBackground = (backgroundIndexUpdate) => {\n        this.setState({ backgroundIndexUpdate });\n    };\n\n\n    /**\n     * Handle modal close event\n     */\n    handleClose() {\n        const { file, preview } = this.state;\n        if (file) {\n            windowURL.revokeObjectURL(preview);\n        }\n        this.setState((cState) => ({\n            open: false,\n            file: null,\n            colorUpdate: cState.color,\n            backgroundIndexUpdate: cState.background,\n            selectedIconUpdate: cState.selectedIcon,\n        }));\n    }\n\n    /**\n     * Add new thumbnail image to an API\n     *\n     * @param {String} apiId ID of the API to be updated\n     * @param {File} file new thumbnail image file\n     */\n    uploadThumbnail(selectedTab, apiId, file, intl) {\n        this.setState({ uploading: true });\n        const {\n            api: { apiType, id },\n            setImageUpdate,\n        } = this.props;\n        const promisedThumbnail = apiType === Api.CONSTS.APIProduct\n            ? new APIProduct().addAPIProductThumbnail(id, file)\n            : new Api().addAPIThumbnail(id, file);\n\n        promisedThumbnail\n            .then(() => {\n                Alert.info(intl.formatMessage({\n                    id: 'Apis.Listing.components.ImageGenerator.ThumbnailView.thumbnail.upload.success',\n                    defaultMessage: 'Thumbnail uploaded successfully',\n                }));\n                if (selectedTab === 'upload') {\n                    this.setState({ open: false, thumbnail: windowURL.createObjectURL(file) });\n                } else {\n                    this.setState((cState) => ({\n                        open: false,\n                        thumbnail: file.preview,\n                        selectedIcon: cState.selectedIconUpdate,\n                        color: cState.colorUpdate,\n                        backgroundIndex: cState.backgroundIndexUpdate,\n                    }));\n                }\n                setImageUpdate();\n            })\n            .catch((error) => {\n                if (process.env.NODE_ENV !== 'production') {\n                    console.log(error);\n                }\n                Alert.error(intl.formatMessage({\n                    id: 'Apis.Listing.components.ImageGenerator.ThumbnailView.thumbnail.upload.error',\n                    defaultMessage: 'Error occurred while uploading new thumbnail. Please try again.',\n                }));\n            })\n            .finally(() => {\n                this.setState({ uploading: false });\n            });\n    }\n\n    saveDisableEnable() {\n        const {\n            file, selectedTab, selectedIconUpdate, colorUpdate, backgroundIndexUpdate, uploading,\n        } = this.state;\n        if (selectedTab === 'upload') {\n            return !(file && file[0]) || uploading; // If no files is uploaded retrun true\n        } else {\n            // If one of them is selected we return false\n            return !(selectedIconUpdate || backgroundIndexUpdate || colorUpdate) || uploading;\n        }\n    }\n\n    /**\n     * @inheritdoc\n     */\n    render() {\n        const {\n            api, classes, width, height, isEditable, theme, intl, imageUpdate,\n        } = this.props;\n        const colorPairs = theme.custom.thumbnail.backgrounds;\n        const {\n            file,\n            thumbnail,\n            selectedTab,\n            selectedIcon,\n            selectedIconUpdate,\n            color,\n            colorUpdate,\n            backgroundIndex,\n            backgroundIndexUpdate,\n            uploading,\n        } = this.state;\n        let { category } = this.state;\n        if (!category) category = MaterialIcons.categories[0].name;\n\n        return (\n            <>\n                <BaseThumbnail\n                    isEditable={isEditable}\n                    onClick={this.handleClick('btnEditAPIThumb', intl)}\n                    thumbnail={thumbnail}\n                    selectedIcon={selectedIcon}\n                    color={color}\n                    backgroundIndex={backgroundIndex}\n                    category={category}\n                    api={api}\n                    width={width}\n                    height={height}\n                    imageUpdate={imageUpdate}\n                />\n\n                <Dialog\n                    TransitionComponent={Transition}\n                    aria-labelledby='thumb-dialog-title'\n                    disableBackdropClick\n                    open={this.state.open}\n                    onClose={this.handleClose}\n                    fullWidth='true'\n                    maxWidth='lg'\n                    fullScreen\n                >\n                    <Paper square className={classes.popupHeader}>\n                        <IconButton color='inherit' onClick={this.handleClose} aria-label='Close'>\n                            <Icon>close</Icon>\n                        </IconButton>\n                        <RadioGroup\n                            aria-label='APIThumbnail'\n                            name='apiThumbnail'\n                            className={classes.group}\n                            value={this.state.selectedTab}\n                            onChange={this.handleChange}\n                        >\n                            <FormControlLabel\n                                value='design'\n                                control={<Radio color='primary' />}\n                                label={(\n                                    <FormattedMessage\n                                        id='Apis.Listing.components.ImageGenerator.ThumbnailView.design'\n                                        defaultMessage='Design'\n                                    />\n                                )}\n                            />\n                            <FormControlLabel\n                                value='upload'\n                                control={<Radio color='primary' />}\n                                label={(\n                                    <FormattedMessage\n                                        id='Apis.Listing.components.ImageGenerator.ThumbnailView.upload'\n                                        defaultMessage='Upload'\n                                    />\n                                )}\n                            />\n                        </RadioGroup>\n                    </Paper>\n\n                    <DialogContent>\n                        {selectedTab === 'upload' && (\n                            <Grid container spacing={4}>\n                                <Grid item xs={3}>\n                                    <div className={classes.imageContainer}>\n                                        <img\n                                            className={classes.preview}\n                                            src={\n                                                file && file.length > 0\n                                                    ? windowURL.createObjectURL(file[0])\n                                                    : Configurations.app.context\n                                                      + '/site/public/images/api/api-default.png'\n                                            }\n                                            alt='Thumbnail Preview'\n                                        />\n                                    </div>\n                                </Grid>\n                                <Grid item xs={9}>\n                                    <Dropzone\n                                        multiple={false}\n                                        accept='image/*'\n                                        className={classes.dropzone}\n                                        activeClassName={classes.acceptDrop}\n                                        rejectClassName={classes.rejectDrop}\n                                        onDrop={(dropFile) => {\n                                            this.onDrop(dropFile);\n                                        }}\n                                    >\n                                        {({ getRootProps, getInputProps }) => (\n                                            <div {...getRootProps({ style: dropzoneStyles })}>\n                                                <input {...getInputProps()} />\n                                                <div className={classes.dropZoneWrapper}>\n                                                    <Icon className={classes.dropIcon}>cloud_upload</Icon>\n                                                    <Typography>\n                                                        <FormattedMessage\n                                                            id='upload.image'\n                                                            defaultMessage='Click or drag the image to upload.'\n                                                        />\n                                                    </Typography>\n                                                </div>\n                                            </div>\n                                        )}\n                                    </Dropzone>\n                                </Grid>\n                            </Grid>\n                        )}\n                        {selectedTab === 'design' && (\n                            <Grid container spacing={4}>\n                                <Grid item xs={3} className={classes.imageGenWrapper}>\n                                    <ImageGenerator\n                                        width={width}\n                                        height={height}\n                                        api={api}\n                                        fixedIcon={{\n                                            key: selectedIconUpdate,\n                                            color: colorUpdate,\n                                            backgroundIndex: backgroundIndexUpdate,\n                                            category,\n                                            api,\n                                        }}\n                                    />\n                                </Grid>\n                                <Grid item xs={9}>\n                                    <div className={classes.subtitleWrapper}>\n                                        <Typography component='p' variant='subtitle2' className={classes.subtitle}>\n                                            <FormattedMessage\n                                                id={\n                                                    'Apis.Listing.components'\n                                                    + '.ImageGenerator.ThumbnailView.select.category'\n                                                }\n                                                defaultMessage='Select Category'\n                                            />\n                                        </Typography>\n                                        <Select\n                                            native\n                                            value={this.state.category}\n                                            onChange={this.handleSelectionChange('category')}\n                                        >\n                                            {MaterialIcons.categories.map((cat) => (\n                                                <option value={cat.name}>{cat.name}</option>\n                                            ))}\n                                        </Select>\n                                    </div>\n                                    <Typography component='p' variant='body1' className={classes.body}>\n                                        <FormattedMessage\n                                            id='Apis.Listing.components.ImageGenerator.ThumbnailView.select.an.icon'\n                                            defaultMessage='Select an icon from the Material Icons for your API.'\n                                        />\n                                    </Typography>\n                                    <div style={{ background: '#efefef', maxHeight: 180, overflow: 'scroll' }}>\n                                        {FindCategoryKeys(category).map((icon) => (\n                                            <Icon className={classes.iconView} onClick={() => this.selectIcon(icon.id)}>\n                                                {icon.id}\n                                            </Icon>\n                                        ))}\n                                    </div>\n                                    <div className={classes.subtitleWrapper}>\n                                        <Typography component='p' variant='subtitle2' className={classes.subtitle}>\n                                            <FormattedMessage\n                                                id={\n                                                    'Apis.Listing.components.ImageGenerator.ThumbnailView.select.'\n                                                    + 'color.for.the.icon'\n                                                }\n                                                defaultMessage='Select a color for the icon'\n                                            />\n                                        </Typography>\n                                    </div>\n                                    <SketchPicker\n                                        color={this.state.color || '#ffffff'}\n                                        onChangeComplete={this.handleChangeComplete}\n                                    />\n                                    <div className={classes.subtitleWrapper}>\n                                        <Typography component='p' variant='subtitle2' className={classes.subtitle}>\n                                            <FormattedMessage\n                                                id={\n                                                    'Apis.Listing.components.ImageGenerator.'\n                                                    + 'ThumbnailView.select.background'\n                                                }\n                                                defaultMessage='Select a Background'\n                                            />\n                                        </Typography>\n                                    </div>\n                                    {colorPairs.map((colorPair, index) => (\n                                        <div\n                                            className={classes.backgroundSelection}\n                                            onClick={() => this.selectBackground(index)}\n                                            onKeyDown={() => { }}\n                                        >\n                                            <Background width={100} height={100} colorPair={colorPair} />\n                                        </div>\n                                    ))}\n                                </Grid>\n                            </Grid>\n                        )}\n                    </DialogContent>\n                    <DialogActions className={classes.actionBox}>\n                        <Button\n                            disabled={this.saveDisableEnable()}\n                            variant='contained'\n                            color='primary'\n                            size='small'\n                            onClick={this.handleClick('btnUploadAPIThumb', intl)}\n                        >\n                            {selectedTab === 'design' && uploading && (\n                                <>\n                                    <FormattedMessage\n                                        id='Apis.Listing.components.ImageGenerator.ThumbnailView.saving.btn'\n                                        defaultMessage='Saving'\n                                    />\n                                    <CircularProgress size={16} />\n                                </>\n                            )}\n                            {selectedTab === 'design' && !uploading && (\n                                <FormattedMessage\n                                    id='Apis.Listing.components.ImageGenerator.ThumbnailView.save.btn'\n                                    defaultMessage='Save'\n                                />\n                            )}\n\n                            {selectedTab !== 'design' && uploading && (\n                                <>\n                                    <FormattedMessage\n                                        id='Apis.Listing.components.ImageGenerator.ThumbnailView.uploading.btn'\n                                        defaultMessage='Uploading'\n                                    />\n                                    <CircularProgress size={16} />\n                                </>\n                            )}\n                            {selectedTab !== 'design' && !uploading && (\n                                <FormattedMessage\n                                    id='Apis.Listing.components.ImageGenerator.ThumbnailView.upload.btn'\n                                    defaultMessage='Upload'\n                                />\n                            )}\n                        </Button>\n\n                        <Button variant='contained' size='small' onClick={this.handleClose}>\n                            <FormattedMessage\n                                id='Apis.Listing.components.ImageGenerator.ThumbnailView.cancel.btn'\n                                defaultMessage='CANCEL'\n                            />\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n}\n\nThumbnailView.defaultProps = {\n    height: 190,\n    width: 250,\n    isEditable: false,\n    setImageUpdate: () => {},\n};\n\nThumbnailView.propTypes = {\n    api: PropTypes.shape({}).isRequired,\n    setImageUpdate: PropTypes.shape({}),\n    imageUpdate: PropTypes.number.isRequired,\n    classes: PropTypes.shape({}).isRequired,\n    height: PropTypes.number,\n    width: PropTypes.number,\n    isEditable: PropTypes.bool,\n    intl: PropTypes.shape({}).isRequired,\n    theme: PropTypes.shape({}).isRequired,\n};\n\nexport default injectIntl(withAPI(withStyles(styles, { withTheme: true })(ThumbnailView)));\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Grid from '@material-ui/core/Grid';\nimport Radio from '@material-ui/core/Radio';\nimport Box from '@material-ui/core/Box';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport HelpOutline from '@material-ui/icons/HelpOutline';\nimport { FormattedMessage } from 'react-intl';\nimport { isRestricted } from 'AppData/AuthManager';\nimport { useAPI } from 'AppComponents/Apis/Details/components/ApiContext';\n\n/**\n *\n *\n * @export\n * @param {*} props\n * @returns\n */\nexport default function DefaultVersion(props) {\n    const { api, configDispatcher } = props;\n    const [apiFromContext] = useAPI();\n    return (\n        <Grid container spacing={1} alignItems='flex-start' xs={11}>\n            <Grid item>\n                <Box mt={4}>\n                    <FormControl component='fieldset' style={{ display: 'flex' }}>\n                        <FormLabel component='legend'>\n                            <FormattedMessage\n                                id='Apis.Details.Configuration.Configuration.isdefault.label'\n                                defaultMessage='Make this the default version'\n                            />\n                        </FormLabel>\n                        <RadioGroup\n                            aria-label='Make this the default version'\n                            name='defaultVersion'\n                            value={api.isDefaultVersion}\n                            onChange={({\n                                target: { value },\n                            }) => configDispatcher({\n                                action: 'isDefaultVersion', value: value === 'true',\n                            })}\n                            style={{ display: 'flow-root' }}\n                        >\n                            <FormControlLabel\n                                disabled={isRestricted(['apim:api_create'], apiFromContext)}\n                                value\n                                control={<Radio color='primary' />}\n                                label={(\n                                    <FormattedMessage\n                                        id='Apis.Details.Configuration.Configuration.isdefault.yes'\n                                        defaultMessage='Yes'\n                                    />\n                                )}\n                            />\n                            <FormControlLabel\n                                disabled={isRestricted(['apim:api_create'], apiFromContext)}\n                                value={false}\n                                control={<Radio color='primary' />}\n                                label={(\n                                    <FormattedMessage\n                                        id='Apis.Details.Configuration.Configuration.isdefault.no'\n                                        defaultMessage='No'\n                                    />\n                                )}\n                            />\n                        </RadioGroup>\n                    </FormControl>\n                </Box>\n            </Grid>\n            <Grid item xs={1}>\n                <Box mt={3}>\n                    <Tooltip\n                        title={(\n                            <FormattedMessage\n                                id='Apis.Details.Configuration.Configuration.defaultversion.tooltip'\n                                defaultMessage={\n                                    'Indicates if this is the default version of the API. If an '\n                                    + 'API is invoked without specifying a version, the API Gateway will '\n                                    + 'route the request to the default version of the API.'\n                                }\n                            />\n                        )}\n                        placement='right-end'\n                        interactive\n                    >\n                        <HelpOutline />\n                    </Tooltip>\n                </Box>\n            </Grid>\n        </Grid>\n    );\n}\n\nDefaultVersion.propTypes = {\n    api: PropTypes.shape({}).isRequired,\n    configDispatcher: PropTypes.func.isRequired,\n};\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport TextField from '@material-ui/core/TextField';\nimport { isRestricted } from 'AppData/AuthManager';\nimport { useAPI } from 'AppComponents/Apis/Details/components/ApiContext';\n\n/**\n *\n *\n * @export\n * @param {*} props\n * @returns\n */\nexport default function Description(props) {\n    const { api, configDispatcher } = props;\n    const [apiFromContext] = useAPI();\n\n    return (\n        <TextField\n            id='outlined-multiline-static'\n            label='Description'\n            multiline\n            rows='4'\n            value={api.description}\n            margin='0'\n            fullWidth\n            variant='outlined'\n            onChange={(e) => configDispatcher({ action: 'description', value: e.target.value })}\n            disabled={isRestricted(['apim:api_create'], apiFromContext)}\n        />\n    );\n}\n\nDescription.propTypes = {\n    api: PropTypes.shape({}).isRequired,\n    configDispatcher: PropTypes.func.isRequired,\n};\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Box from '@material-ui/core/Box';\nimport TextField from '@material-ui/core/TextField';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport HelpOutline from '@material-ui/icons/HelpOutline';\nimport { FormattedMessage } from 'react-intl';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { isRestricted } from 'AppData/AuthManager';\nimport ChipInput from 'material-ui-chip-input';\nimport APIValidation from 'AppData/APIValidation';\nimport base64url from 'base64url';\nimport Error from '@material-ui/icons/Error';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport Chip from '@material-ui/core/Chip';\nimport { red } from '@material-ui/core/colors/';\nimport Alert from 'AppComponents/Shared/Alert';\nimport { useAPI } from 'AppComponents/Apis/Details/components/ApiContext';\n\nconst useStyles = makeStyles((theme) => ({\n    tooltip: {\n        position: 'absolute',\n        right: theme.spacing(-4),\n        top: theme.spacing(1),\n    },\n}));\n\n/**\n *\n * api.accessControl possible values are `NONE` and `RESTRICTED`\n * @export\n * @param {*} props\n * @returns\n */\nexport default function AccessControl(props) {\n    const [roleValidity, setRoleValidity] = useState(true);\n    const [userRoleValidity, setUserRoleValidity] = useState(true);\n    const { api, configDispatcher } = props;\n    const isNone = api.accessControl === 'NONE';\n    const [apiFromContext] = useAPI();\n    const classes = useStyles();\n\n    const [invalidRoles, setInvalidRoles] = useState([]);\n    const [otherValidSystemRoles, setOtherValidSystemRoles] = useState([]);\n    useEffect(() => {\n        if (invalidRoles.length === 0) {\n            setRoleValidity(true);\n        }\n    }, [invalidRoles]);\n    useEffect(() => {\n        if (otherValidSystemRoles.length === api.accessControlRoles.length && otherValidSystemRoles.length !== 0\n            && (otherValidSystemRoles.every((val) => api.accessControlRoles.includes(val)))) {\n            setUserRoleValidity(false);\n        } else {\n            setUserRoleValidity(true);\n        }\n    }, [otherValidSystemRoles]);\n    const handleRoleAddition = (role) => {\n        const systemRolePromise = APIValidation.role.validate(base64url.encode(role));\n        const userRolePromise = APIValidation.userRole.validate(base64url.encode(role));\n        systemRolePromise.then(() => {\n            setRoleValidity(true);\n            userRolePromise.then(() => {\n                setUserRoleValidity(true);\n                configDispatcher({\n                    action: 'accessControlRoles',\n                    value: [...api.accessControlRoles, role],\n                });\n            }).catch((error) => {\n                if (error.status === 404) {\n                    configDispatcher({\n                        action: 'accessControlRoles',\n                        value: [...api.accessControlRoles, role],\n                    });\n                    setOtherValidSystemRoles([...otherValidSystemRoles, role]);\n                } else {\n                    Alert.error('Error when validating role: ' + role);\n                    console.error('Error when validating user roles ' + error);\n                }\n            });\n        }).catch((error) => {\n            if (error.status === 404) {\n                setRoleValidity(false);\n                setInvalidRoles([...invalidRoles, role]);\n            } else {\n                Alert.error('Error when validating role: ' + role);\n                console.error('Error when validating roles ' + error);\n            }\n        });\n    };\n\n    const handleRoleDeletion = (role) => {\n        setOtherValidSystemRoles(otherValidSystemRoles.filter((existingRole) => existingRole !== role));\n        setInvalidRoles(invalidRoles.filter((existingRole) => existingRole !== role));\n        configDispatcher({\n            action: 'accessControlRoles',\n            value: api.accessControlRoles.filter((existingRole) => existingRole !== role),\n        });\n    };\n\n    const handleRoleValidationFailure = () => {\n        if (!roleValidity) {\n            return (\n                <FormattedMessage\n                    id='Apis.Details.Scopes.Roles.Invalid'\n                    defaultMessage='Role is invalid'\n                />\n            );\n        } else if (!userRoleValidity) {\n            return (\n                <FormattedMessage\n                    id='Apis.Details.Scopes.Roles.User.Invalid'\n                    defaultMessage='At least one role must be associated with the API creator'\n                />\n            );\n        } else {\n            return (\n                <FormattedMessage\n                    id='Apis.Details.Scopes.CreateScope.roles.help'\n                    defaultMessage='Enter valid role and press enter'\n                />\n            );\n        }\n    };\n\n    return (\n        <>\n            <Box style={{ position: 'relative', marginBottom: -12 }}>\n                <TextField\n                    fullWidth\n                    id='accessControl-selector'\n                    select\n                    label={(\n                        <FormattedMessage\n                            id='Apis.Details.Configuration.components.AccessControl.head.topic'\n                            defaultMessage='Publisher Access Control'\n                        />\n                    )}\n                    value={api.accessControl}\n                    name='accessControl'\n                    onChange={({ target: { value } }) => configDispatcher({ action: 'accessControl', value })}\n                    SelectProps={{\n                        MenuProps: {\n                            className: classes.menu,\n                        },\n                    }}\n                    helperText={(\n                        <FormattedMessage\n                            id='Apis.Details.Configuration.components.AccessControl.form.helper.text'\n                            defaultMessage='There are no access restrictions by default'\n                        />\n                    )}\n                    margin='normal'\n                    variant='outlined'\n                    disabled={isRestricted(['apim:api_create'], apiFromContext)}\n                >\n                    <MenuItem value='NONE'>\n                        <FormattedMessage\n                            id='Apis.Details.Configuration.components.AccessControl.dropdown.none'\n                            defaultMessage='All'\n                        />\n                    </MenuItem>\n                    <MenuItem value='RESTRICTED'>\n                        <FormattedMessage\n                            id='Apis.Details.Configuration.components.AccessControl.dropdown.restricted'\n                            defaultMessage='Restrict by role(s)'\n                        />\n                    </MenuItem>\n                </TextField>\n                <Tooltip\n                    title={(\n                        <>\n                            <p>\n                                <strong>\n                                    <FormattedMessage\n                                        id='Apis.Details.Configuration.components.AccessControl.tooltip.all'\n                                        defaultMessage='All :'\n                                    />\n                                </strong>\n                                {'  '}\n                                <FormattedMessage\n                                    id='Apis.Details.Configuration.components.AccessControl.tooltip.all.desc'\n                                    defaultMessage='The API is viewable, modifiable by all the publishers and creators.'\n                                />\n                                <br />\n                                <br />\n                                <strong>\n                                    <FormattedMessage\n                                        id='Apis.Details.Configuration.components.AccessControl.tooltip.restrict'\n                                        defaultMessage='Restricted by roles :'\n                                    />\n                                </strong>\n                                {'  '}\n                                <FormattedMessage\n                                    id='Apis.Details.Configuration.components.AccessControl.tooltip.restrict.\n                                    desc'\n                                    defaultMessage={'The API can be viewed and modified only by specific'\n                                    + ' publishers and creators with the roles that you specify'}\n                                />\n                            </p>\n                        </>\n                    )}\n                    aria-label='Publisher Access Control'\n                    placement='right-end'\n                    interactive\n                    className={classes.tooltip}\n                >\n                    <HelpOutline />\n                </Tooltip>\n            </Box>\n            {!isNone && (\n                <Box py={1} style={{ marginTop: 10 }}>\n                    <ChipInput\n                        fullWidth\n                        variant='outlined'\n                        label={(\n                            <FormattedMessage\n                                id='Apis.Details.Configuration.components.AccessControl.roles'\n                                defaultMessage='Roles'\n                            />\n                        )}\n                        disabled={isRestricted(['apim:api_create'], apiFromContext)}\n                        value={api.accessControlRoles.concat(invalidRoles)}\n                        alwaysShowPlaceholder={false}\n                        placeholder='Enter roles and press Enter'\n                        blurBehavior='clear'\n                        InputProps={{\n                            endAdornment: (!roleValidity || !userRoleValidity) && (\n                                <InputAdornment position='end'>\n                                    <Error color='error' style={{ paddingBottom: 8 }} />\n                                </InputAdornment>\n                            ),\n                        }}\n                        onAdd={handleRoleAddition}\n                        error={!roleValidity || !userRoleValidity}\n                        helperText={handleRoleValidationFailure()}\n                        chipRenderer={({ value }, key) => (\n                            <Chip\n                                key={key}\n                                size='small'\n                                label={value}\n                                onDelete={() => {\n                                    handleRoleDeletion(value);\n                                }}\n                                style={{\n                                    backgroundColor: invalidRoles.includes(value) ? red[300] : null,\n                                    margin: '0 8px 12px 0',\n                                    float: 'left',\n                                }}\n                            />\n                        )}\n                    />\n                </Box>\n            )}\n        </>\n    );\n}\n\nAccessControl.propTypes = {\n    api: PropTypes.shape({}).isRequired,\n    configDispatcher: PropTypes.func.isRequired,\n};\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport HelpOutline from '@material-ui/icons/HelpOutline';\nimport { FormattedMessage } from 'react-intl';\nimport Box from '@material-ui/core/Box';\nimport TextField from '@material-ui/core/TextField';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport ChipInput from 'material-ui-chip-input';\nimport APIValidation from 'AppData/APIValidation';\nimport base64url from 'base64url';\nimport Error from '@material-ui/icons/Error';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport Chip from '@material-ui/core/Chip';\nimport { red } from '@material-ui/core/colors/';\nimport Alert from 'AppComponents/Shared/Alert';\nimport { isRestricted } from 'AppData/AuthManager';\nimport { useAPI } from 'AppComponents/Apis/Details/components/ApiContext';\nimport CONSTS from 'AppData/Constants';\nimport API from 'AppData/api';\n\nconst useStyles = makeStyles((theme) => ({\n    tooltip: {\n        position: 'absolute',\n        right: theme.spacing(-4),\n        top: theme.spacing(1),\n    },\n}));\n\n/**\n *\n * api.accessControl possible values are `NONE` and `RESTRICTED`\n * @export\n * @param {*} props\n * @returns\n */\nexport default function StoreVisibility(props) {\n    const [roleValidity, setRoleValidity] = useState(true);\n    const [roleExists, setRoleExists] = useState(true);\n    const { api, configDispatcher } = props;\n    const [invalidRoles, setInvalidRoles] = useState([]);\n    const isRestrictedByRoles = api.visibility === 'RESTRICTED';\n    const [apiFromContext] = useAPI();\n    const classes = useStyles();\n    const restApi = new API();\n    const [tenants, setTenants] = useState([]);\n    useEffect(() => {\n        restApi.getTenantsByState(CONSTS.TENANT_STATE_ACTIVE)\n            .then((result) => {\n                setTenants(result.body.count);\n            });\n    }, []);\n\n    useEffect(() => {\n        if (invalidRoles.length === 0) {\n            setRoleValidity(true);\n        }\n        if (api.visibility === 'RESTRICTED' && api.visibleRoles.length !== 0) {\n            setRoleExists(true);\n        }\n    }, [invalidRoles]);\n    const handleRoleAddition = (role) => {\n        const promise = APIValidation.role.validate(base64url.encode(role));\n        promise.then(() => {\n            setRoleExists(true);\n            setRoleValidity(true);\n            configDispatcher({\n                action: 'visibleRoles',\n                value: [...api.visibleRoles, role],\n            });\n        }).catch((error) => {\n            if (error.status === 404) {\n                setRoleValidity(false);\n                setInvalidRoles([...invalidRoles, role]);\n            } else {\n                Alert.error('Error when validating role: ' + role);\n                console.error('Error when validating roles ' + error);\n            }\n        });\n    };\n\n    const handleRoleDeletion = (role) => {\n        if (invalidRoles.includes(role)) {\n            setInvalidRoles(invalidRoles.filter((existingRole) => existingRole !== role));\n        }\n        if (api.visibility === 'RESTRICTED' && api.visibleRoles.length > 1) {\n            setRoleExists(true);\n        } else {\n            setRoleExists(false);\n        }\n        configDispatcher({\n            action: 'visibleRoles',\n            value: api.visibleRoles.filter((existingRole) => existingRole !== role),\n        });\n    };\n\n    return (\n        <>\n            <Box style={{ position: 'relative' }}>\n                <TextField\n                    fullWidth\n                    id='storeVisibility-selector'\n                    select\n                    label={(\n                        <FormattedMessage\n                            id='Apis.Details.Configuration.components.storeVisibility.head.topic'\n                            defaultMessage='Developer Portal Visibility'\n                        />\n                    )}\n                    value={api.visibility}\n                    name='storeVisibility'\n                    onChange={({ target: { value } }) => configDispatcher({ action: 'visibility', value })}\n                    SelectProps={{\n                        MenuProps: {\n                            className: classes.menu,\n                        },\n                    }}\n                    helperText={(\n                        <FormattedMessage\n                            id='Apis.Details.Configuration.components.storeVisibility.form.helper.text'\n                            defaultMessage='By default API is visible to all developer portal users'\n                        />\n                    )}\n                    margin='normal'\n                    variant='outlined'\n                    disabled={isRestricted(['apim:api_create', 'apim:api_publish'], apiFromContext)}\n                >\n                    <MenuItem value='PUBLIC'>\n                        <FormattedMessage\n                            id='Apis.Details.Configuration.components.StoreVisibility.dropdown.public'\n                            defaultMessage='Public'\n                        />\n                    </MenuItem>\n                    <MenuItem value='RESTRICTED'>\n                        <FormattedMessage\n                            id='Apis.Details.Configuration.components.storeVisibility.dropdown.restrict'\n                            defaultMessage='Restrict by role(s)'\n                        />\n                    </MenuItem>\n                    {tenants !== 0\n                        && (\n                            <MenuItem value='PRIVATE'>\n                                <FormattedMessage\n                                    id='Apis.Details.Configuration.components.storeVisibility.dropdown.private'\n                                    defaultMessage='Visible to my domain'\n                                />\n                            </MenuItem>\n                        )}\n                </TextField>\n                <Tooltip\n                    title={(\n                        <>\n                            <p>\n                                <strong>\n                                    <FormattedMessage\n                                        id='Apis.Details.Configuration.components.storeVisibility.tooltip.public'\n                                        defaultMessage='Public :'\n                                    />\n                                </strong>\n                                {'  '}\n                                <FormattedMessage\n                                    id='Apis.Details.Configuration.components.storeVisibility.tooltip.public.desc'\n                                    defaultMessage={\n                                        'The API is accessible to everyone and can be advertised '\n                                        + 'in multiple developer portals - a central developer portal '\n                                        + 'and/or non-WSO2 developer portals.'\n                                    }\n                                />\n                                <br />\n                                <br />\n                                <strong>\n                                    <FormattedMessage\n                                        id='Apis.Details.Configuration.components.storeVisibility.tooltip.restrict'\n                                        defaultMessage='Restricted by roles(s) :'\n                                    />\n                                </strong>\n                                {'  '}\n                                <FormattedMessage\n                                    id='Apis.Details.Configuration.components.storeVisibility.tooltip.restrict.desc'\n                                    defaultMessage={\n                                        'The API is visible only to specific user'\n                                        + ' roles in the tenant developer portal that you specify.'\n                                    }\n                                />\n                            </p>\n                        </>\n                    )}\n                    aria-label='Store Visibility'\n                    placement='right-end'\n                    className={classes.tooltip}\n                    interactive\n                >\n                    <HelpOutline />\n                </Tooltip>\n            </Box>\n            {isRestrictedByRoles && (\n                <Box py={2} style={{ marginTop: -10, marginBottom: 10 }}>\n                    <ChipInput\n                        fullWidth\n                        variant='outlined'\n                        label={(\n                            <FormattedMessage\n                                id='Apis.Details.Configuration.components.storeVisibility.roles'\n                                defaultMessage='Roles'\n                            />\n                        )}\n                        disabled={isRestricted(['apim:api_create', 'apim:api_publish'], apiFromContext)}\n                        value={api.visibleRoles.concat(invalidRoles)}\n                        alwaysShowPlaceholder={false}\n                        placeholder='Enter roles and press Enter'\n                        blurBehavior='clear'\n                        InputProps={{\n                            endAdornment: !roleValidity && (\n                                <InputAdornment position='end'>\n                                    <Error color='error' style={{ paddingBottom: 8 }} />\n                                </InputAdornment>\n                            ),\n                        }}\n                        onAdd={handleRoleAddition}\n                        error={!roleValidity || !roleExists}\n                        helperText={\n                            roleValidity ? (\n                                <FormattedMessage\n                                    id='Apis.Details.Scopes.CreateScope.roles.help'\n                                    defaultMessage='Enter valid role and press enter'\n                                />\n                            ) : (\n                                <FormattedMessage\n                                    id='Apis.Details.Scopes.Roles.Invalid'\n                                    defaultMessage='Role is invalid'\n                                />\n                            )\n                        }\n                        chipRenderer={({ value }, key) => (\n                            <Chip\n                                key={key}\n                                size='small'\n                                label={value}\n                                onDelete={() => {\n                                    handleRoleDeletion(value);\n                                }}\n                                style={{\n                                    backgroundColor: invalidRoles.includes(value) ? red[300] : null,\n                                    margin: '0 8px 12px 0',\n                                    float: 'left',\n                                }}\n                            />\n                        )}\n                    />\n                </Box>\n            )}\n        </>\n    );\n}\n\nStoreVisibility.propTypes = {\n    api: PropTypes.shape({}).isRequired,\n    configDispatcher: PropTypes.func.isRequired,\n};\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport ChipInput from 'material-ui-chip-input';\nimport { FormattedMessage } from 'react-intl';\nimport { isRestricted } from 'AppData/AuthManager';\nimport { useAPI } from 'AppComponents/Apis/Details/components/ApiContext';\nimport Chip from '@material-ui/core/Chip';\nimport { red } from '@material-ui/core/colors/';\n\n/**\n *\n *\n * @export\n * @param {*} props\n * @returns\n */\nexport default function Tags(props) {\n    const { api, configDispatcher } = props;\n    const [apiFromContext] = useAPI();\n    const [isTagValid, setIsTagValid] = useState(true);\n    const [invalidTags, setInvalidTags] = useState([]);\n    const [isTagWithinLimit, setIsTagWithinLimit] = useState(true);\n    const regexPattern = /([~!@#;%^&*+=|\\\\<>\"'/,])/;\n    const helperText = () => {\n        if (isTagValid && isTagWithinLimit) {\n            return (\n                <FormattedMessage\n                    id='Apis.Details.Configuration.components.Tags.helper'\n                    defaultMessage='Press `Enter` after typing the tag name to add a new tag'\n                />\n            );\n        } else if (!isTagValid) {\n            return (\n                <FormattedMessage\n                    id='Apis.Details.Configuration.components.Tags.error'\n                    defaultMessage={\n                        'The tag contains one or more illegal characters '\n                        + '( ~ ! @ # ; % ^ & * + = { } | < > , \\' \" \\\\\\\\ / ) .'\n                    }\n                />\n            );\n        } else {\n            return (\n                <FormattedMessage\n                    id='Apis.Details.Configuration.components.Tags.limit.error'\n                    defaultMessage='The tag exceeds the maximum length of 30 characters'\n                />\n            );\n        }\n    };\n\n    return (\n        <React.Fragment style={{ marginTop: 10 }}>\n            <ChipInput\n                fullWidth\n                variant='outlined'\n                id='tags'\n                InputProps={{\n                    name: 'tag-name',\n                }}\n                label={(\n                    <FormattedMessage\n                        id='Apis.Details.Configuration.components.Tags.title'\n                        defaultMessage='Tags'\n                    />\n                )}\n                disabled={isRestricted(['apim:api_create', 'apim:api_publish'], apiFromContext)}\n                value={api.tags}\n                error={!(isTagValid && isTagWithinLimit)}\n                helperText={helperText()}\n                onAdd={(tag) => {\n                    if (regexPattern.test(tag) || tag.length > 30) {\n                        if (regexPattern.test(tag)) {\n                            setIsTagValid(false);\n                        } else {\n                            setIsTagWithinLimit(false);\n                        }\n                        setInvalidTags([...invalidTags, tag]);\n                    }\n                    configDispatcher({ action: 'tags', value: [...api.tags, tag] });\n                }}\n                chipRenderer={({ value }, key) => (\n                    <Chip\n                        key={key}\n                        size='small'\n                        label={value}\n                        onDelete={() => {\n                            if (invalidTags.includes(value)) {\n                                const currentInvalidTags = invalidTags.filter((existingTag) => existingTag !== value);\n                                setInvalidTags(currentInvalidTags);\n                                if (currentInvalidTags.length === 0) {\n                                    setIsTagValid(true);\n                                    setIsTagWithinLimit(true);\n                                }\n                            }\n                            configDispatcher({ action: 'tags', value: api.tags.filter((oldTag) => oldTag !== value) });\n                        }}\n                        style={{\n                            backgroundColor: (regexPattern.test(value) || value.length > 30) ? red[300] : null,\n                            margin: '0 8px 12px 0',\n                            float: 'left',\n                        }}\n                    />\n                )}\n                style={{ display: 'flex' }}\n            />\n        </React.Fragment>\n    );\n}\n\nTags.propTypes = {\n    api: PropTypes.shape({}).isRequired,\n    configDispatcher: PropTypes.func.isRequired,\n};\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { FormattedMessage } from 'react-intl';\nimport { isRestricted } from 'AppData/AuthManager';\nimport { useAPI } from 'AppComponents/Apis/Details/components/ApiContext';\nimport TextField from '@material-ui/core/TextField';\n\n/**\n *\n * @export\n * @param {*} props\n * @returns\n */\nexport default function Social(props) {\n    const { api, configDispatcher } = props;\n    const [apiFromContext] = useAPI();\n    return (\n        <>\n            <TextField\n                label={(\n                    <FormattedMessage\n                        id='Apis.Details.Configuration.components.Social.giturl'\n                        defaultMessage='GitHub URL'\n                    />\n                )}\n                id='github'\n                variant='outlined'\n                value={api.additionalProperties.github_repo || ''}\n                fullWidth\n                margin='normal'\n                onChange={(e) => configDispatcher({ action: 'github_repo', value: e.target.value })}\n                disabled={isRestricted(['apim:api_create', 'apim:api_publish'], apiFromContext)}\n                helperText={(\n                    <FormattedMessage\n                        id='Apis.Details.Configuration.components.Social.giturl.help'\n                        defaultMessage={`You need to enable social feature to view this from devportal. \n                        Set custom.social.showSharing.active to true. Refer documentation for more information`}\n                    />\n                )}\n                style={{ marginTop: 0 }}\n            />\n            <TextField\n                label={(\n                    <FormattedMessage\n                        id='Apis.Details.Configuration.components.Social.slack'\n                        defaultMessage='Slack URL'\n                    />\n                )}\n                variant='outlined'\n                id='slack'\n                value={api.additionalProperties.slack_url || ''}\n                fullWidth\n                margin='normal'\n                onChange={(e) => configDispatcher({ action: 'slack_url', value: e.target.value })}\n                disabled={isRestricted(['apim:api_create', 'apim:api_publish'], apiFromContext)}\n                helperText={(\n                    <FormattedMessage\n                        id='Apis.Details.Configuration.components.Social.slack_url.help'\n                        defaultMessage={`You need to enable social feature to view this from devportal. \n                        Set custom.social.showSharing.active to true. Refer documentation for more information`}\n                    />\n                )}\n                style={{ marginTop: 0 }}\n            />\n        </>\n    );\n}\n\nSocial.propTypes = {\n    api: PropTypes.shape({}).isRequired,\n    configDispatcher: PropTypes.func.isRequired,\n};\n","/*\n * Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport TextField from '@material-ui/core/TextField';\nimport { FormattedMessage } from 'react-intl';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Box from '@material-ui/core/Box';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport HelpOutline from '@material-ui/icons/HelpOutline';\nimport { makeStyles } from '@material-ui/core/styles';\nimport API from 'AppData/api';\nimport { withAPI, useAPI } from 'AppComponents/Apis/Details/components/ApiContext';\nimport { isRestricted } from 'AppData/AuthManager';\n\nconst useStyles = makeStyles((theme) => ({\n    tooltip: {\n        position: 'absolute',\n        right: theme.spacing(-4),\n        top: theme.spacing(1),\n    },\n}));\n/**\n * Render the categories drop down.\n * @param {JSON} props props passed from it's parents.\n * @returns {JSX} Render the categories drop down.\n */\nfunction APICategories(props) {\n    const [categories, setCategories] = useState({});\n    const { api, configDispatcher } = props;\n    const classes = useStyles();\n    const [apiFromContext] = useAPI();\n\n    useEffect(() => {\n        API.apiCategories().then((response) => setCategories(response.body));\n    }, []);\n\n    if (!categories.list) {\n        return null;\n    } else if (categories.list.length === 0) {\n        return (\n            <Box style={{ position: 'relative', marginTop: 10 }}>\n                <TextField\n                    fullWidth\n                    select\n                    name='Categories'\n                    id='APICategories'\n                    label={(\n                        <>\n                            <FormattedMessage\n                                id='Apis.Details.Configurations.api.categories'\n                                defaultMessage='API Categories'\n                            />\n                        </>\n                    )}\n                    margin='normal'\n                    variant='outlined'\n                    disabled\n                    value='emptyMessage'\n                >\n                    <MenuItem\n                        dense\n                        disableGutters\n                        value='emptyMessage'\n                    >\n                        <ListItemText primary={(\n                            <FormattedMessage\n                                id='Apis.Details.Configurations.api.categories.empty'\n                                defaultMessage='No API Categories defined yet. Please create an API Category first.'\n                            />\n                        )}\n                        />\n                    </MenuItem>\n                </TextField>\n            </Box>\n        );\n    } else {\n        return (\n            <Box style={{ position: 'relative', marginTop: 10 }}>\n                <TextField\n                    fullWidth\n                    select\n                    id='APICategories'\n                    label={(\n                        <>\n                            <FormattedMessage\n                                id='Apis.Details.Configurations.api.categories'\n                                defaultMessage='API Categories'\n                            />\n                        </>\n                    )}\n                    name='categories'\n                    margin='normal'\n                    variant='outlined'\n                    disabled={isRestricted(['apim:api_create', 'apim:api_publish'], apiFromContext)}\n                    value={api.categories}\n                    SelectProps={{\n                        multiple: true,\n                        renderValue: (selected) => (Array.isArray(selected) ? selected.join(', ') : selected),\n                    }}\n                    onChange={(e) => configDispatcher({ action: 'categories', value: e.target.value })}\n                    InputProps={{\n                        id: 'itest-id-categories-input',\n                    }}\n                    helperText='Select API Categories for the API'\n                >\n                    { categories.list.map((category) => (\n                        <MenuItem\n                            dense\n                            disableGutters\n                            id={category.id}\n                            key={category.name}\n                            value={category.name}\n                        >\n                            <Checkbox color='primary' checked={api.categories.includes(category.name)} />\n                            <ListItemText primary={category.name} secondary={category.description} />\n                        </MenuItem>\n                    ))}\n                </TextField>\n                <Tooltip\n                    title={(\n                        <>\n                            <p>\n                                <FormattedMessage\n                                    id='Api.category.dropdown.tooltip'\n                                    defaultMessage={'API categories can be added via the Admin portal UI or the'\n                                        + ' Admin REST API. There has to be pre-defined API categories in the'\n                                        + ' environment in order to be attached to an API.'}\n                                />\n                            </p>\n                        </>\n                    )}\n                    aria-label='API Categories'\n                    placement='right-end'\n                    interactive\n                    className={classes.tooltip}\n                >\n                    <HelpOutline />\n                </Tooltip>\n            </Box>\n        );\n    }\n}\n\nAPICategories.defaultProps = {\n    categories: [],\n    api: PropTypes.shape({}).isRequired,\n    configDispatcher: PropTypes.func.isRequired,\n};\n\nexport default withAPI(APICategories);\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useReducer, useContext, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport { Link } from 'react-router-dom';\nimport Button from '@material-ui/core/Button';\nimport Container from '@material-ui/core/Container';\nimport Box from '@material-ui/core/Box';\nimport { FormattedMessage } from 'react-intl';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Alert from 'AppComponents/Shared/Alert';\n\nimport { APIContext } from 'AppComponents/Apis/Details/components/ApiContext';\nimport ThumbnailView from 'AppComponents/Apis/Listing/components/ImageGenerator/ThumbnailView';\nimport { isRestricted } from 'AppData/AuthManager';\nimport API from 'AppData/api.js';\nimport DefaultVersion from './components/DefaultVersion';\nimport Description from './components/Description';\nimport AccessControl from './components/AccessControl';\nimport StoreVisibility from './components/StoreVisibility';\nimport Tags from './components/Tags';\nimport Social from './components/Social';\nimport APICategories from './components/APICategories';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        padding: theme.spacing(3, 2),\n    },\n    titleWrapper: {\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems: 'center',\n        marginBottom: theme.spacing(3),\n    },\n    mainTitle: {\n        paddingLeft: 0,\n    },\n    paper: {\n        padding: theme.spacing(3),\n    },\n    paperCenter: {\n        padding: theme.spacing(3),\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    heading: {\n        fontSize: '1.1rem',\n        fontWeight: 400,\n        marginBottom: theme.spacing(0),\n    },\n    itemPadding: {\n        marginBottom: theme.spacing(3),\n    },\n    arrowForwardIcon: {\n        fontSize: 50,\n        color: '#ccc',\n        position: 'absolute',\n        top: 90,\n        right: -43,\n    },\n    arrowBackIcon: {\n        fontSize: 50,\n        color: '#ccc',\n        position: 'absolute',\n        top: 30,\n        right: -71,\n    },\n    expansionPanel: {\n        marginBottom: theme.spacing(1),\n    },\n    expansionPanelDetails: {\n        flexDirection: 'column',\n    },\n    subHeading: {\n        fontSize: '1rem',\n        fontWeight: 400,\n        margin: 0,\n        display: 'inline-flex',\n        lineHeight: '38px',\n    },\n    btnSpacing: {\n        marginRight: theme.spacing(1),\n    },\n}));\n\n/**\n *\n * Deep coping the properties in API object (what ever the object in the state),\n * making sure that no direct mutations happen when updating the state.\n * You should know the shape of the object that you are keeping in the state,\n * @param {Object} api\n * @returns {Object} Deep copy of an object\n */\nfunction copyAPIConfig(api) {\n    return {\n        id: api.id,\n        name: api.name,\n        description: api.description,\n        lifeCycleStatus: api.lifeCycleStatus,\n        accessControl: api.accessControl,\n        authorizationHeader: api.authorizationHeader,\n        responseCachingEnabled: api.responseCachingEnabled,\n        cacheTimeout: api.cacheTimeout,\n        visibility: api.visibility,\n        isDefaultVersion: api.isDefaultVersion,\n        enableSchemaValidation: api.enableSchemaValidation,\n        accessControlRoles: [...api.accessControlRoles],\n        visibleRoles: [...api.visibleRoles],\n        tags: [...api.tags],\n        maxTps: api.maxTps,\n        transport: [...api.transport],\n        wsdlUrl: api.wsdlUrl,\n        securityScheme: [...api.securityScheme],\n        categories: [...api.categories],\n        corsConfiguration: {\n            corsConfigurationEnabled: api.corsConfiguration.corsConfigurationEnabled,\n            accessControlAllowCredentials: api.corsConfiguration.accessControlAllowCredentials,\n            accessControlAllowOrigins: [...api.corsConfiguration.accessControlAllowOrigins],\n            accessControlAllowHeaders: [...api.corsConfiguration.accessControlAllowHeaders],\n            accessControlAllowMethods: [...api.corsConfiguration.accessControlAllowMethods],\n        },\n        additionalProperties: { ...api.additionalProperties },\n    };\n}\n/**\n * This component handles the basic configurations UI in the API details page\n *\n * @export\n * @param {*} props\n * @returns\n */\nexport default function DesignConfigurations() {\n    /**\n     *\n     * Reduce the configuration UI related actions in to updated state\n     * @param {*} state current state\n     * @param {*} configAction dispatched configuration action\n     * @returns {Object} updated state\n     */\n    function configReducer(state, configAction) {\n        const { action, value } = configAction;\n        const nextState = copyAPIConfig(state);\n        switch (action) {\n            case 'description':\n            case 'isDefaultVersion':\n            case 'authorizationHeader':\n            case 'responseCachingEnabled':\n            case 'cacheTimeout':\n            case 'enableSchemaValidation':\n            case 'visibility':\n            case 'maxTps':\n            case 'categories':\n            case 'tags':\n                nextState[action] = value;\n                return nextState;\n            case 'accessControl':\n                nextState[action] = value;\n                if (value === 'NONE') {\n                    nextState.accessControlRoles = [];\n                }\n                return nextState;\n            case 'accessControlRoles':\n                return { ...copyAPIConfig(state), [action]: value };\n            case 'visibleRoles':\n                return { ...copyAPIConfig(state), [action]: value };\n            case 'github_repo':\n            case 'slack_url':\n                nextState.additionalProperties[action] = value;\n                return nextState;\n            default:\n                return state;\n        }\n    }\n    const { api, updateAPI } = useContext(APIContext);\n    const [isUpdating, setIsUpdating] = useState(false);\n    const [apiConfig, configDispatcher] = useReducer(configReducer, copyAPIConfig(api));\n    const classes = useStyles();\n\n    const invalidTagsExist = apiConfig.tags.find((tag) => {\n        return (/([~!@#;%^&*+=|\\\\<>\"'/,])/.test(tag)) || (tag.length > 30);\n    });\n\n    /**\n     *\n     * Handle the configuration view save button action\n     */\n    function handleSave() {\n        setIsUpdating(true);\n        updateAPI(apiConfig)\n            .catch((error) => {\n                if (error.response) {\n                    Alert.error(error.response.body.description);\n                }\n            })\n            .finally(() => setIsUpdating(false));\n    }\n\n    return (\n        <>\n            <Container maxWidth='md'>\n                <Grid container spacing={2}>\n                    <Grid item md={12}>\n                        <Typography variant='h5' component='h2'>\n                            <FormattedMessage\n                                id='Apis.Details.Configuration.Configuration.Design.topic.header'\n                                defaultMessage='Design Configurations'\n                            />\n                        </Typography>\n                        {api.apiType === API.CONSTS.APIProduct\n                            ? (\n                                <Typography variant='caption'>\n                                    <FormattedMessage\n                                        id='Apis.Details.Configuration.Configuration.Design.APIProduct.sub.heading'\n                                        defaultMessage='Configure API Product visibility.'\n                                    />\n                                </Typography>\n                            )\n                            : (\n                                <Typography variant='caption'>\n                                    <FormattedMessage\n                                        id='Apis.Details.Configuration.Configuration.Design.sub.heading'\n                                        defaultMessage='Configure API visibility.'\n                                    />\n                                </Typography>\n                            )}\n                    </Grid>\n                    <Grid item md={12}>\n                        <Paper elevation={0}>\n                            <div>\n                                <Box px={8} py={5}>\n                                    <Box py={1}>\n                                        <Grid container spacing={0}>\n                                            <Grid item xs={12} md={2}>\n                                                <ThumbnailView\n                                                    api={api}\n                                                    width={100}\n                                                    height={100}\n                                                    isEditable={!isRestricted(['apim:api_publish',\n                                                        'apim:api_create'], api)}\n                                                />\n                                            </Grid>\n                                            <Grid item xs={12} md={10}>\n                                                <Description api={apiConfig} configDispatcher={configDispatcher} />\n                                            </Grid>\n                                        </Grid>\n                                    </Box>\n                                    <Box py={1}>\n                                        <AccessControl api={apiConfig} configDispatcher={configDispatcher} />\n                                    </Box>\n                                    <Box py={1}>\n                                        <StoreVisibility api={apiConfig} configDispatcher={configDispatcher} />\n                                    </Box>\n                                    <Box py={1}>\n                                        <Tags api={apiConfig} configDispatcher={configDispatcher} />\n                                    </Box>\n                                    <Box py={1}>\n                                        <APICategories\n                                            api={apiConfig}\n                                            configDispatcher={configDispatcher}\n                                            categories={api.categories}\n                                        />\n                                    </Box>\n                                    <Box py={1}>\n                                        <Social api={apiConfig} configDispatcher={configDispatcher} />\n                                    </Box>\n                                    <Box py={1}>\n                                        {api.apiType !== 'APIProduct' && (\n                                            <DefaultVersion api={apiConfig} configDispatcher={configDispatcher} />\n                                        )}\n                                    </Box>\n                                    <Box pt={2}>\n                                        <Button\n                                            disabled={\n                                                isUpdating || invalidTagsExist\n                                                || (apiConfig.visibility === 'RESTRICTED'\n                                                    && apiConfig.visibleRoles.length === 0)\n                                            }\n                                            type='submit'\n                                            variant='contained'\n                                            color='primary'\n                                            className={classes.btnSpacing}\n                                            onClick={handleSave}\n                                        >\n                                            <FormattedMessage\n                                                id='Apis.Details.Configuration.Configuration.save'\n                                                defaultMessage='Save'\n                                            />\n                                            {isUpdating && <CircularProgress size={15} />}\n                                        </Button>\n                                        <Button\n                                            component={Link}\n                                            to={'/apis/' + api.id + '/overview'}\n                                            aria-label='Cancel'\n                                        >\n                                            <FormattedMessage\n                                                id='Apis.Details.Configuration.Configuration.cancel'\n                                                defaultMessage='Cancel'\n                                            />\n                                        </Button>\n                                    </Box>\n                                    {isRestricted(['apim:api_create'], api) && (\n                                        <Box py={1}>\n                                            <Typography variant='body2' color='primary'>\n                                                <FormattedMessage\n                                                    id='Apis.Details.Configuration.Configuration.update.not.allowed'\n                                                    defaultMessage={\n                                                        '* You are not authorized to update particular fields of'\n                                                        + ' the API due to insufficient permissions'\n                                                    }\n                                                />\n                                            </Typography>\n                                        </Box>\n                                    )}\n                                </Box>\n                            </div>\n                        </Paper>\n                    </Grid>\n                </Grid>\n            </Container>\n        </>\n    );\n}\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Grid from '@material-ui/core/Grid';\nimport Switch from '@material-ui/core/Switch';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport { FormattedMessage } from 'react-intl';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Typography from '@material-ui/core/Typography';\nimport HelpOutline from '@material-ui/icons/HelpOutline';\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport { isRestricted } from 'AppData/AuthManager';\nimport { makeStyles } from '@material-ui/core';\nimport { useAPI } from 'AppComponents/Apis/Details/components/ApiContext';\nimport TextField from '@material-ui/core/TextField';\n\nconst useStyles = makeStyles((theme) => ({\n    expansionPanel: {\n        marginBottom: theme.spacing(3),\n    },\n    expansionPanelDetails: {\n        flexDirection: 'column',\n    },\n    iconSpace: {\n        marginLeft: theme.spacing(0.5),\n    },\n    actionSpace: {\n        margin: '-7px auto',\n    },\n    subHeading: {\n        fontSize: '1rem',\n        fontWeight: 400,\n        margin: 0,\n        display: 'inline-flex',\n        lineHeight: 1.5,\n    },\n    paper: {\n        padding: theme.spacing(0, 3),\n    },\n}));\n\n/**\n *\n *\n * @export\n * @param {*} props\n * @returns\n */\nexport default function ResponseCaching(props) {\n    const { api, configDispatcher } = props;\n    const classes = useStyles();\n    const [apiFromContext] = useAPI();\n    const isResponseCachingEnabled = api.responseCachingEnabled;\n\n    return (\n        <>\n            <ExpansionPanel className={classes.expansionPanel}>\n                <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\n                    <Typography className={classes.subHeading} variant='h6' component='h4'>\n                        <FormattedMessage\n                            id='Apis.Details.Configuration.Configuration.response.caching'\n                            defaultMessage='Response Caching'\n                        />\n                        <Tooltip\n                            title={(\n                                <FormattedMessage\n                                    id='Apis.Details.Configuration.components.ResponseCaching.tooltip'\n                                    defaultMessage={\n                                        'If enabled, the API response will be cached at the gateway level'\n                                        + ' to improve the response time and minimize the backend load'\n                                    }\n                                />\n                            )}\n                            aria-label='Response caching helper text'\n                            placement='right-end'\n                            interactive\n                        >\n                            <HelpOutline className={classes.iconSpace} />\n                        </Tooltip>\n                    </Typography>\n                    <FormControlLabel\n                        className={classes.actionSpace}\n                        control={(\n                            <Switch\n                                disabled={isRestricted(['apim:api_create'], apiFromContext)}\n                                checked={api.responseCachingEnabled}\n                                onChange={({ target: { checked } }) => configDispatcher({\n                                    action: 'responseCachingEnabled',\n                                    value: checked,\n                                })}\n                                color='primary'\n                                inputProps={{\n                                    'aria-label': 'switch response caching',\n                                }}\n                            />\n                        )}\n                    />\n                </ExpansionPanelSummary>\n                <ExpansionPanelDetails className={classes.expansionPanelDetails}>\n                    <Grid container spacing={1} alignItems='flex-start'>\n                        <Grid item>\n                            {isResponseCachingEnabled && (\n                                <TextField\n                                    value={api.cacheTimeout}\n                                    onChange={({ target: { value } }) => configDispatcher({\n                                        action: 'cacheTimeout',\n                                        value,\n                                    })}\n                                    margin='normal'\n                                    helperText={(\n                                        <FormattedMessage\n                                            id='Apis.Details.Configuration.Configuration.cache.timeout'\n                                            defaultMessage='Cache Timeout (seconds)'\n                                        />\n                                    )}\n                                />\n                            )}\n                        </Grid>\n                    </Grid>\n                </ExpansionPanelDetails>\n            </ExpansionPanel>\n        </>\n    );\n}\n\nResponseCaching.propTypes = {\n    api: PropTypes.shape({}).isRequired,\n    configDispatcher: PropTypes.func.isRequired,\n};\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ChipInput from 'material-ui-chip-input';\nimport Grid from '@material-ui/core/Grid';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport HelpOutline from '@material-ui/icons/HelpOutline';\nimport { FormattedMessage } from 'react-intl';\nimport Typography from '@material-ui/core/Typography';\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport { makeStyles } from '@material-ui/core/styles';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Switch from '@material-ui/core/Switch';\nimport { isRestricted } from 'AppData/AuthManager';\nimport { useAPI } from 'AppComponents/Apis/Details/components/ApiContext';\n\nconst useStyles = makeStyles((theme) => ({\n    expansionPanel: {\n        marginBottom: theme.spacing(3),\n    },\n    expansionPanelDetails: {\n        flexDirection: 'column',\n    },\n    iconSpace: {\n        marginLeft: theme.spacing(0.5),\n    },\n    actionSpace: {\n        margin: '-7px auto',\n    },\n    subHeading: {\n        fontSize: '1rem',\n        fontWeight: 400,\n        margin: 0,\n        display: 'inline-flex',\n        lineHeight: 1.5,\n    },\n}));\n\n/**\n *\n * api.corsConfiguration possible values true and false\n * @export\n * @param {*} props\n * @returns\n */\nexport default function CORSConfiguration(props) {\n    const [apiFromContext] = useAPI();\n    const {\n        configDispatcher,\n        api: { corsConfiguration },\n    } = props;\n    const isCorsEnabled = corsConfiguration.corsConfigurationEnabled;\n    const isAllowAllOrigins = corsConfiguration.accessControlAllowOrigins[0] === '*'\n        && corsConfiguration.accessControlAllowOrigins.length === 1;\n    const classes = useStyles();\n\n    return (\n        <ExpansionPanel className={classes.expansionPanel}>\n            <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\n                <Typography className={classes.subHeading} variant='h6' component='h4'>\n                    <FormattedMessage\n                        id='Apis.Details.Configuration.components.CORSConfiguration.cors.configuration'\n                        defaultMessage='CORS Configuration'\n                    />\n                    <Tooltip\n                        title={(\n                            <FormattedMessage\n                                id='Apis.Details.Configuration.components.CORSConfiguration.tooltip'\n                                defaultMessage='If enabled, the CORS configuration for the API will be enabled.'\n                            />\n                        )}\n                        aria-label='CORS Configuration helper text'\n                        placement='right-end'\n                        interactive\n                    >\n                        <HelpOutline className={classes.iconSpace} />\n                    </Tooltip>\n                </Typography>\n                <FormControlLabel\n                    className={classes.actionSpace}\n                    control={(\n                        <Switch\n                            disabled={isRestricted(['apim:api_create'], apiFromContext)}\n                            checked={corsConfiguration.corsConfigurationEnabled}\n                            onChange={({ target: { checked } }) => configDispatcher({\n                                action: 'corsConfigurationEnabled',\n                                value: checked,\n                            })}\n                            color='primary'\n                            inputProps={{\n                                'aria-label': 'CORS Configuration',\n                            }}\n                        />\n                    )}\n                />\n            </ExpansionPanelSummary>\n            <ExpansionPanelDetails className={classes.expansionPanelDetails}>\n                <Grid container>\n                    <Grid item md={12}>\n                        {isCorsEnabled && (\n                            <Grid container>\n                                <Grid item md={12}>\n                                    <Typography variant='subtitle1'>\n                                        <FormattedMessage\n                                            id='Apis.Details.Configuration.components.CORSConfiguration.allow.\n                                                    origins'\n                                            defaultMessage='Access Control Allow Origins'\n                                        />\n                                    </Typography>\n                                </Grid>\n                                <Grid item md={12}>\n                                    <Grid container>\n                                        <Grid item md={12}>\n                                            <FormControlLabel\n                                                style={{ display: 'flex' }}\n                                                control={(\n                                                    <Checkbox\n                                                        disabled={isRestricted(['apim:api_create'], apiFromContext)}\n                                                        checked={isAllowAllOrigins}\n                                                        onChange={({ target: { checked, value } }) => configDispatcher({\n                                                            action: 'accessControlAllowOrigins',\n                                                            event: { checked, value },\n                                                        })}\n                                                        value='*'\n                                                        color='primary'\n                                                    />\n                                                )}\n                                                label='Allow All Origins'\n                                            />\n                                        </Grid>\n                                        {!isAllowAllOrigins && (\n                                            <Grid item md={12}>\n                                                <ChipInput\n                                                    style={{ marginBottom: 40, display: 'flex' }}\n                                                    value={corsConfiguration.accessControlAllowOrigins}\n                                                    helperText={(\n                                                        <FormattedMessage\n                                                            id={\n                                                                'Apis.Details.Configuration.components'\n                                                                + '.CORSConfigurations.origin.helper'\n                                                            }\n                                                            defaultMessage={\n                                                                'Press `Enter` after typing the origin name,'\n                                                                + 'to add a new origin'\n                                                            }\n                                                        />\n                                                    )}\n                                                    onAdd={(accessControlAllowOrigin) => {\n                                                        configDispatcher({\n                                                            action: 'accessControlAllowOrigins',\n                                                            event: {\n                                                                value: [\n                                                                    ...corsConfiguration.accessControlAllowOrigins,\n                                                                    accessControlAllowOrigin,\n                                                                ],\n                                                            },\n                                                        });\n                                                    }}\n                                                    onDelete={(accessControlAllowOrigin) => {\n                                                        configDispatcher({\n                                                            action: 'accessControlAllowOrigins',\n                                                            event: {\n                                                                value: corsConfiguration\n                                                                    .accessControlAllowOrigins\n                                                                    .filter(\n                                                                        (oldOrigin) => (\n                                                                            oldOrigin !== accessControlAllowOrigin),\n                                                                    ),\n                                                            },\n                                                        });\n                                                    }}\n                                                />\n                                            </Grid>\n                                        )}\n                                    </Grid>\n                                </Grid>\n                                <Grid item md={12}>\n                                    <Typography variant='subtitle1'>\n                                        <FormattedMessage\n                                            id='Apis.Details.Configuration.components.CORSConfiguration.allow.\n                                                    headers'\n                                            defaultMessage='Access Control Allow Headers'\n                                        />\n                                    </Typography>\n                                </Grid>\n                                <Grid item md={12}>\n                                    <ChipInput\n                                        style={{ marginBottom: 40, display: 'flex' }}\n                                        value={corsConfiguration.accessControlAllowHeaders}\n                                        disabled={isRestricted(['apim:api_create'], apiFromContext)}\n                                        helperText={(\n                                            <FormattedMessage\n                                                id={\n                                                    'Apis.Details.Configuration.components.'\n                                                    + 'CORSConfigurations.header.helper'\n                                                }\n                                                defaultMessage={\n                                                    'Press `Enter` after typing the header name, '\n                                                    + 'to add a new header'\n                                                }\n                                            />\n                                        )}\n                                        onAdd={(accessControlAllowHeader) => {\n                                            configDispatcher({\n                                                action: 'accessControlAllowHeaders',\n                                                value: [\n                                                    ...corsConfiguration.accessControlAllowHeaders,\n                                                    accessControlAllowHeader,\n                                                ],\n                                            });\n                                        }}\n                                        onDelete={(accessControlAllowHeader) => {\n                                            configDispatcher({\n                                                action: 'accessControlAllowHeaders',\n                                                value: corsConfiguration.accessControlAllowHeaders\n                                                    .filter((oldHeader) => oldHeader !== accessControlAllowHeader),\n                                            });\n                                        }}\n                                    />\n                                </Grid>\n                                <Grid item md={12}>\n                                    <Typography variant='subtitle1'>\n                                        <FormattedMessage\n                                            id='Apis.Details.Configuration.components.CORSConfiguration.allow.\n                                                    methods'\n                                            defaultMessage='Access Control Allow Methods'\n                                        />\n                                    </Typography>\n                                </Grid>\n                                <Grid item md={12}>\n                                    <ChipInput\n                                        style={{ marginBottom: 40, display: 'flex' }}\n                                        value={corsConfiguration.accessControlAllowMethods}\n                                        disabled={isRestricted(['apim:api_create'], apiFromContext)}\n                                        helperText={(\n                                            <FormattedMessage\n                                                id={\n                                                    'Apis.Details.Configuration.components'\n                                                    + '.CORSConfigurations.method.helper'\n                                                }\n                                                defaultMessage={\n                                                    'Press `Enter` after typing the method name,'\n                                                    + ' to add a new method'\n                                                }\n                                            />\n                                        )}\n                                        onAdd={(newValue) => {\n                                            let value = [...corsConfiguration.accessControlAllowMethods,\n                                                newValue.toUpperCase()];\n                                            if (\n                                                corsConfiguration\n                                                    .accessControlAllowMethods\n                                                    .find((method) => method === newValue.toUpperCase())\n                                            ) {\n                                                value = [...corsConfiguration.accessControlAllowMethods];\n                                            }\n                                            configDispatcher({\n                                                action: 'accessControlAllowMethods',\n                                                value,\n                                            });\n                                        }}\n                                        onDelete={(accessControlAllowMethod) => {\n                                            configDispatcher({\n                                                action: 'accessControlAllowMethods',\n                                                value: corsConfiguration\n                                                    .accessControlAllowMethods\n                                                    .filter((oldMethod) => oldMethod !== accessControlAllowMethod),\n                                            });\n                                        }}\n                                    />\n                                </Grid>\n                                <Grid item>\n                                    <FormControlLabel\n                                        control={(\n                                            <Checkbox\n                                                disabled={isRestricted(['apim:api_create'], apiFromContext)}\n                                                checked={corsConfiguration.accessControlAllowCredentials}\n                                                onChange={({ target: { checked } }) => configDispatcher({\n                                                    action: 'accessControlAllowCredentials',\n                                                    value: checked,\n                                                })}\n                                                color='primary'\n                                            />\n                                        )}\n                                        label={(\n                                            <FormattedMessage\n                                                id={\n                                                    'Apis.Details.Configuration.components'\n                                                    + '.CORSConfiguration.allow.credentials'\n                                                }\n                                                defaultMessage='Access Control Allow Credentials'\n                                            />\n                                        )}\n                                    />\n                                </Grid>\n                            </Grid>\n                        )}\n                    </Grid>\n                </Grid>\n            </ExpansionPanelDetails>\n        </ExpansionPanel>\n    );\n}\n\nCORSConfiguration.propTypes = {\n    api: PropTypes.shape({}).isRequired,\n    configDispatcher: PropTypes.func.isRequired,\n};\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Grid from '@material-ui/core/Grid';\nimport Switch from '@material-ui/core/Switch';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport { withStyles } from '@material-ui/core/styles';\nimport { FormattedMessage } from 'react-intl';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport HelpOutline from '@material-ui/icons/HelpOutline';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport { isRestricted } from 'AppData/AuthManager';\nimport ApiContext from 'AppComponents/Apis/Details/components/ApiContext';\nimport Paper from '@material-ui/core/Paper';\n\nconst styles = (theme) => ({\n    subHeading: {\n        fontSize: '1rem',\n        fontWeight: 400,\n        margin: 0,\n        display: 'inline-flex',\n        lineHeight: 2.5,\n    },\n    iconSpace: {\n        marginLeft: theme.spacing(0.5),\n    },\n    actionSpace: {\n        margin: theme.spacing(0, -1),\n        float: 'right',\n    },\n    paper: {\n        padding: theme.spacing(0, 3),\n        marginBottom: theme.spacing(3),\n    },\n});\n\n/**\n *\n *\n * @export\n * @param {*} props\n * @returns\n */\nclass SchemaValidation extends React.Component {\n    /**\n     *Creates an instance of SchemaValidation.\n     * @param {*} props\n     * @memberof SchemaValidation\n     */\n    constructor(props) {\n        super(props);\n        this.state = { isOpen: false };\n        this.setIsOpen = this.setIsOpen.bind(this);\n    }\n\n    /**\n     *\n     * @inheritdoc\n     * @param {Object} prevProps\n     * @param {Object} prevState\n     * @memberof SchemaValidation\n     */\n    componentDidUpdate(prevProps) {\n        const { api } = this.props;\n        /*\n        This could have been done using hooks too, But at the moment it requires `useRef` hook to get the previous props\n        Hence using class component and its `componentDidUpdate` life cycle method to open the caution dialog box\n        For more info: https://reactjs.org/docs/hooks-faq.html#how-to-get-the-previous-props-or-state\n         */\n        if (!prevProps.api.enableSchemaValidation && api.enableSchemaValidation) {\n            this.setIsOpen(true);\n        }\n    }\n\n    /**\n     *\n     * Set isOpen state of the dialog box which shows the caution message when enabling schema validation\n     * @param {Boolean} isOpen Should dialog box is open or not\n     * @memberof SchemaValidation\n     */\n    setIsOpen(isOpen) {\n        this.setState({ isOpen });\n    }\n\n    /**\n     *\n     * @inheritdoc\n     * @param {*} props\n     * @returns\n     * @memberof SchemaValidation\n     */\n    render() {\n        const { api, configDispatcher, classes } = this.props;\n        const { isOpen } = this.state;\n        const { api: apiFromContext } = this.context;\n\n        return (\n            <Paper className={classes.paper}>\n                <Grid container spacing={1} alignItems='flex-start'>\n                    <Grid item md={12}>\n                        <Typography className={classes.subHeading} variant='h6' component='h4'>\n                            <FormattedMessage\n                                id='Apis.Details.Configuration.Configuration.schema.validation'\n                                defaultMessage='Schema Validation'\n                            />\n                            <Tooltip\n                                title={(\n                                    <FormattedMessage\n                                        id='Apis.Details.Configuration.components.schema.validation.tooltip'\n                                        defaultMessage={'Enable the request and response '\n                                        + 'validation against the OpenAPI definition'}\n                                    />\n                                )}\n                                aria-label='Schema Validation helper text'\n                                placement='right-end'\n                                interactive\n                            >\n                                <HelpOutline className={classes.iconSpace} />\n                            </Tooltip>\n                        </Typography>\n                        <FormControlLabel\n                            className={classes.actionSpace}\n                            control={(\n                                <Switch\n                                    disabled={isRestricted(['apim:api_create'], apiFromContext)}\n                                    checked={\n                                        api.enableSchemaValidation === undefined ? false : api.enableSchemaValidation\n                                    }\n                                    onChange={({ target: { checked } }) => configDispatcher({\n                                        action: 'enableSchemaValidation',\n                                        value: checked,\n                                    })}\n                                    color='primary'\n                                    inputProps={{\n                                        'aria-label': 'switch Schema Validation',\n                                    }}\n                                />\n                            )}\n                        />\n                    </Grid>\n                </Grid>\n                <Dialog\n                    open={isOpen}\n                    onClose={() => this.setIsOpen(false)}\n                    aria-labelledby='alert-dialog-title'\n                    aria-describedby='alert-dialog-description'\n                >\n                    <DialogTitle id='alert-dialog-title'>\n                        <FormattedMessage\n                            id='Apis.Details.Configuration.components.SchemaValidation.title'\n                            defaultMessage='Caution!'\n                        />\n                    </DialogTitle>\n                    <DialogContent>\n                        <DialogContentText id='alert-dialog-description'>\n                            <Typography variant='subtitle1' display='block' gutterBottom>\n                                <FormattedMessage\n                                    id='Apis.Details.Configuration.components.SchemaValidation.description'\n                                    defaultMessage={\n                                        'Enabling JSON schema validation will cause to build the'\n                                        + ' payload in every request and response. This will impact'\n                                        + ' the round trip time of an API request!'\n                                    }\n                                />\n                            </Typography>\n                            <Typography variant='subtitle2' display='block' gutterBottom>\n                                <b>\n                                    <FormattedMessage\n                                        id={'Apis.Details.Configuration.components.SchemaValidation'\n                                        + '.description.question'}\n                                        defaultMessage='Do you want to enable schema validation?'\n                                    />\n                                </b>\n                            </Typography>\n                        </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button color='primary' variant='contained' onClick={() => this.setIsOpen(false)}>\n                            Yes\n                        </Button>\n                        <Button\n                            onClick={() => {\n                                this.setIsOpen(false);\n                                configDispatcher({\n                                    action: 'enableSchemaValidation',\n                                    value: false,\n                                });\n                            }}\n                            color='primary'\n                        >\n                            No\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </Paper>\n        );\n    }\n}\n\nSchemaValidation.propTypes = {\n    api: PropTypes.shape({ enableSchemaValidation: PropTypes.bool }).isRequired,\n    configDispatcher: PropTypes.func.isRequired,\n    classes: PropTypes.shape({}).isRequired,\n};\n\nSchemaValidation.contextType = ApiContext;\n\nexport default withStyles(styles)(SchemaValidation);\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport HelpOutline from '@material-ui/icons/HelpOutline';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport Typography from '@material-ui/core/Typography';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport Radio from '@material-ui/core/Radio';\nimport Grid from '@material-ui/core/Grid';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport TextField from '@material-ui/core/TextField';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Collapse } from '@material-ui/core';\nimport { FormattedMessage } from 'react-intl';\nimport { isRestricted } from 'AppData/AuthManager';\n\nconst useStyles = makeStyles((theme) => ({\n    expansionPanel: {\n        marginBottom: theme.spacing(1), // TODO: replace with <Box /> element `mb`\n    },\n    expansionPanelDetails: {\n        flexDirection: 'column',\n    },\n    iconSpace: {\n        marginLeft: theme.spacing(0.5),\n    },\n    subHeading: {\n        fontSize: '1rem',\n        fontWeight: 400,\n        margin: 0,\n        display: 'inline-flex',\n        lineHeight: 1.5,\n    },\n}));\n\n/**\n *\n *\n * @export\n * @param {*} props\n * @returns\n */\nexport default function MaxBackendTps(props) {\n    const { api, configDispatcher } = props;\n    const classes = useStyles();\n\n    return (\n        <>\n            <Grid item xs={12}>\n                <ExpansionPanel className={classes.expansionPanel} defaultExpanded>\n                    <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />} id='tps-header'>\n                        <Typography className={classes.subHeading} variant='h6' component='h4'>\n                            <FormattedMessage\n                                id='Apis.Details.Configuration.Components.MaxBackendTps.maximum.backend.throughput'\n                                defaultMessage='Backend Throughput'\n                            />\n                            <Tooltip\n                                title={(\n                                    <FormattedMessage\n                                        id='Apis.Details.Configuration.components.MaxBackendTps.tooltip'\n                                        defaultMessage={'Limits the total number of calls the API Manager is allowed'\n                                        + ' to make to the backend'}\n                                    />\n                                )}\n                                aria-label='APISecurity'\n                                placement='right-end'\n                                interactive\n                            >\n                                <HelpOutline className={classes.iconSpace} />\n                            </Tooltip>\n                        </Typography>\n                    </ExpansionPanelSummary>\n                    <ExpansionPanelDetails className={classes.expansionPanelDetails}>\n                        <FormControl component='fieldset'>\n                            <FormLabel component='legend'>Maximum Throughput</FormLabel>\n                            <RadioGroup\n                                aria-label='change-max-TPS'\n                                value={api.maxTps === null ? 'unlimited' : 'specify'}\n                                onChange={(event) => {\n                                    configDispatcher({\n                                        action: 'maxTps',\n                                        value:\n                                            event.target.value === 'specify' ? { production: null, sandbox: null }\n                                                : null,\n                                    });\n                                }}\n                                row\n                            >\n                                <FormControlLabel\n                                    value='unlimited'\n                                    control={(\n                                        <Radio\n                                            color='primary'\n                                            disabled={isRestricted(['apim:api_create'], api)}\n                                        />\n                                    )}\n                                    label='Unlimited'\n                                    labelPlacement='end'\n\n                                />\n                                <FormControlLabel\n                                    value='specify'\n                                    control={(\n                                        <Radio\n                                            color='primary'\n                                            disabled={isRestricted(['apim:api_create'], api)}\n                                        />\n                                    )}\n                                    label='Specify'\n                                    labelPlacement='end'\n                                    disabled={isRestricted(['apim:api_create'], api)}\n                                />\n                            </RadioGroup>\n                        </FormControl>\n                        <Collapse in={api.maxTps !== null}>\n                            <Grid item xs={12} style={{ marginBottom: 10, position: 'relative' }}>\n                                <TextField\n                                    label='Max Production TPS'\n                                    margin='normal'\n                                    variant='outlined'\n                                    onChange={(event) => {\n                                        configDispatcher({\n                                            action: 'maxTps',\n                                            value: { ...api.maxTps, production: event.target.value },\n                                        });\n                                    }}\n                                    value={api.maxTps !== null ? api.maxTps.production : ''}\n                                    disabled={isRestricted(['apim:api_create'], api)}\n                                    InputProps={{\n                                        endAdornment: <InputAdornment position='end'>TPS</InputAdornment>,\n                                    }}\n                                />\n                            </Grid>\n                            <Grid item xs={12} style={{ marginBottom: 10, position: 'relative' }}>\n                                <TextField\n                                    label='Max Sandbox TPS'\n                                    margin='normal'\n                                    variant='outlined'\n                                    onChange={(event) => {\n                                        configDispatcher({\n                                            action: 'maxTps',\n                                            value: { ...api.maxTps, sandbox: event.target.value },\n                                        });\n                                    }}\n                                    value={api.maxTps !== null ? api.maxTps.sandbox : ''}\n                                    disabled={isRestricted(['apim:api_create'], api)}\n                                    InputProps={{\n                                        endAdornment: <InputAdornment position='end'>TPS</InputAdornment>,\n                                    }}\n                                />\n                                <FormHelperText>\n                                    <FormattedMessage\n                                        id='Apis.Details.Configuration.components.MaxBackendTps.formattedMessage'\n                                        defaultMessage='Maximum backend transactions per second in integers'\n                                    />\n                                </FormHelperText>\n                            </Grid>\n                        </Collapse>\n                    </ExpansionPanelDetails>\n                </ExpansionPanel>\n            </Grid>\n        </>\n    );\n}\n\nMaxBackendTps.propTypes = {\n    api: PropTypes.shape({}).isRequired,\n    configDispatcher: PropTypes.func.isRequired,\n};\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useState, useEffect, useContext } from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport IconButton from '@material-ui/core/IconButton';\nimport Dropzone from 'react-dropzone';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Icon from '@material-ui/core/Icon';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport Dialog from '@material-ui/core/Dialog';\nimport Alert from 'AppComponents/Shared/Alert';\nimport Utils from 'AppData/Utils';\nimport API from 'AppData/api.js';\nimport ApiContext from 'AppComponents/Apis/Details/components/ApiContext';\n\nconst dropzoneStyles = {\n    border: '1px dashed ',\n    borderRadius: '5px',\n    cursor: 'pointer',\n    height: 75,\n    padding: '8px 0px',\n    position: 'relative',\n    textAlign: 'center',\n    width: '100%',\n    margin: '10px 0',\n};\nconst styles = (theme) => ({\n    formControl: {\n        display: 'flex',\n        flexDirection: 'row',\n        padding: `${theme.spacing(2)}px 2px`,\n    },\n    dropzone: {\n        border: '1px dashed ' + theme.palette.primary.main,\n        borderRadius: '5px',\n        cursor: 'pointer',\n        height: 'calc(100vh - 50em)',\n        padding: `${theme.spacing(2)}px ${theme.spacing(2)}px`,\n        position: 'relative',\n        textAlign: 'center',\n        width: '100%',\n        margin: '10px 0',\n    },\n    dropZoneWrapper: {\n        height: '100%',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        flexDirection: 'column',\n        '& span': {\n            fontSize: 64,\n            color: theme.palette.primary.main,\n        },\n    },\n    radioWrapper: {\n        flexDirection: 'row',\n    },\n});\n/**\n * The component to manage IN mediation policies.\n * @param {any} props The props passed to the layout\n * @returns {any} HTML representation.\n */\nfunction EditMediationPolicy(props) {\n    const {\n        classes, updateMediationPolicy, selectedMediationPolicy, setEditing, editing, type, intl,\n    } = props;\n    const { api } = useContext(ApiContext);\n\n    const [globalMediationPolicies, setGlobalMediationPolicies] = useState(null);\n    // user uploaded api specific mediation policies\n    const [seqCustom, setSeqCustom] = useState(null);\n    const [provideBy, setProvideBy] = useState();\n    const { id: apiId } = api;\n    const NONE = 'none';\n    const [localSelectedPolicyFile, setLocalSelectedPolicyFile] = useState(selectedMediationPolicy);\n    function updatePoliciesFromBE() {\n        const globalPromise = API.getGlobalMediationPolicies();\n        const customPromise = API.getMediationPolicies(apiId);\n        Promise.all([globalPromise, customPromise])\n            .then((values) => {\n                setGlobalMediationPolicies([...values[0].obj.list.filter((seq) => seq.type === type)]);\n                setSeqCustom([...values[1].obj.list.filter((seq) => seq.type === type)]);\n            })\n            .catch((error) => {\n                if (process.env.NODE_ENV !== 'production') {\n                    console.log(error);\n                    Alert.error(intl.formatMessage({\n                        id: 'Apis.Details.MediationPolicies.Edit.EditMediationPolicy.error',\n                        defaultMessage: 'Error retrieving mediation policies',\n                    }));\n                }\n            });\n    }\n    function setActivePolicy(policy) {\n        if (policy.name !== NONE) {\n            Object.assign(policy, { content: '' });\n            setLocalSelectedPolicyFile(policy);\n            // updateMediationPolicy(policy);\n        } else {\n            Object.assign(policy, { content: '', id: NONE });\n            setLocalSelectedPolicyFile(policy);\n            // updateMediationPolicy(policy);\n        }\n    }\n    useEffect(() => {\n        if (selectedMediationPolicy) {\n            const { shared } = selectedMediationPolicy;\n            if (shared) {\n                setProvideBy('global');\n            } else if (selectedMediationPolicy.name === NONE) {\n                setProvideBy('none');\n            } else {\n                setProvideBy('custom');\n            }\n        } else {\n            setProvideBy('none');\n        }\n    }, [selectedMediationPolicy]);\n    useEffect(() => {\n        updatePoliciesFromBE();\n    }, []);\n\n    useEffect(() => {\n        if (provideBy === 'custom' && seqCustom && seqCustom.length > 0) {\n            setActivePolicy(seqCustom[0]);\n        } else if (provideBy === 'global' && globalMediationPolicies && globalMediationPolicies.length > 0) {\n            setActivePolicy(globalMediationPolicies[0]);\n        }\n    }, [provideBy]);\n\n    // useEffect(() => {\n    //     if (globalInMediationPolicies && globalInMediationPolicies.length > 0) {\n    //         setProvideBy('global');\n    //     } else if (inSeqCustom && inSeqCustom.length > 0) {\n    //         setProvideBy('custom');\n    //     } else {\n    //         setProvideBy('none');\n    //     }\n    // }, [globalInMediationPolicies, inSeqCustom]);\n    const saveMediationPolicy = (newPolicy) => {\n        const promisedApi = API.addMediationPolicy(newPolicy, apiId, type);\n        promisedApi\n            .then((response) => {\n                const {\n                    body: { id, type: policyType, name },\n                } = response;\n                updatePoliciesFromBE();\n                setLocalSelectedPolicyFile({\n                    id,\n                    type: policyType,\n                    name,\n                    shared: false,\n                    content: '',\n                });\n                Alert.info(intl.formatMessage({\n                    id: 'Apis.Details.MediationPolicies.Edit.EditMediationPolicy.success',\n                    defaultMessage: 'Mediation policy added successfully',\n                }));\n            })\n            .catch((errorResponse) => {\n                console.error(errorResponse);\n                if (errorResponse.response.body.description !== null) {\n                    Alert.error(errorResponse.response.body.description);\n                } else {\n                    Alert.error(intl.formatMessage({\n                        id: 'Apis.Details.MediationPolicies.Edit.AddMediationPolicy.error',\n                        defaultMessage: 'Error while adding mediation policy',\n                    }));\n                }\n            });\n    };\n    /**\n     * Handled the file upload action of the dropzone.\n     * @param {file} policy The accepted file list by the dropzone.\n     * */\n    const onDrop = (policy) => {\n        const policyFile = policy[0];\n        if (policyFile) {\n            saveMediationPolicy(policyFile);\n        }\n    };\n    /**\n     * Handles the mediation policy select event.\n     * @param {any} event The event pass to the layout\n     */\n    function handleChange(event) {\n        const policy = {\n            name: event.target.getAttribute('seq_name'),\n            id: event.target.getAttribute('seq_id'),\n            type: event.target.getAttribute('seq_type'),\n        };\n        setActivePolicy(policy);\n    }\n    /**\n     * Handles the Global mediation policy download.\n     * @param {any} policyToDownload policy file id that is to be downloaded.\n     */\n    function downloadGlobalMediationPolicyContent(policyToDownload) {\n        const promisedGetContent = API.getGlobalMediationPolicyContent(policyToDownload);\n        promisedGetContent\n            .then((response) => {\n                Utils.forceDownload(response);\n            })\n            .catch((error) => {\n                if (process.env.NODE_ENV !== 'production') {\n                    console.error(error);\n                    Alert.error(<FormattedMessage\n                        id='Apis.Details.MediationPolicies.Edit.EditMediationPolicy.download.error'\n                        defaultMessage='Error downloading the file'\n                    />);\n                }\n            });\n    }\n\n    /**\n     * Handles the custom mediation policy download.\n     * @param {any} policyToDownload policy file id that is to be downloaded.\n     */\n    function downloadCustomMediationPolicyContent(policyToDownload) {\n        const promisedGetContent = API.getMediationPolicyContent(policyToDownload, apiId);\n        promisedGetContent\n            .then((done) => {\n                Utils.forceDownload(done, document);\n            })\n            .catch((error) => {\n                if (process.env.NODE_ENV !== 'production') {\n                    console.log(error);\n                    Alert.error(<FormattedMessage\n                        id='Apis.Details.MediationPolicies.Edit.EditMediationPolicy.download.error'\n                        defaultMessage='Error downloading the file'\n                    />);\n                }\n            });\n    }\n    /**\n     * Handles the custom mediation policy delete.\n     * @param {any} policyToDelete policy file id that is to be deleted.\n     */\n    function deleteCustomMediationPolicy(policyToDelete) {\n        const promisedGetContent = API.deleteMediationPolicy(policyToDelete, api.id);\n        promisedGetContent\n            .then(() => {\n                setSeqCustom(seqCustom.filter((seq) => seq.id !== policyToDelete));\n                Alert.info(<FormattedMessage\n                    id='Apis.Details.MediationPolicies.Edit.EditMediationPolicy.delete.success'\n                    defaultMessage='Mediation policy deleted successfully.'\n                />);\n            })\n            .catch((error) => {\n                if (process.env.NODE_ENV !== 'production') {\n                    console.log(error);\n                    Alert.error(<FormattedMessage\n                        id='Apis.Details.MediationPolicies.Edit.EditMediationPolicy.delete.error'\n                        defaultMessage='Error deleting the file'\n                    />);\n                }\n            });\n    }\n    const handleDownload = (policyToDownload) => {\n        const isGlobalMediationPolicy = globalMediationPolicies.filter(\n            (policy) => policy.id === policyToDownload,\n        ).length > 0;\n        if (isGlobalMediationPolicy) {\n            downloadGlobalMediationPolicyContent(policyToDownload);\n        } else {\n            downloadCustomMediationPolicyContent(policyToDownload);\n        }\n    };\n    const handleDelete = (policyToDelete) => {\n        const isGlobalMediationPolicy = globalMediationPolicies.filter(\n            (policy) => policy.id === policyToDelete,\n        ).length > 0;\n        if (isGlobalMediationPolicy) {\n            Alert.error(<FormattedMessage\n                id='Apis.Details.MediationPolicies.Edit.EditMediationPolicy.global.delete'\n                defaultMessage='Cannot delete Global mediation policies.'\n            />);\n        } else {\n            deleteCustomMediationPolicy(policyToDelete);\n        }\n    };\n    function cancelEditing() {\n        setEditing(false);\n    }\n    function doneEditing() {\n        updateMediationPolicy(localSelectedPolicyFile);\n        setEditing(false);\n    }\n    function handleChangeProvideBy(event) {\n        const inputValue = event.target.value;\n        setProvideBy(inputValue);\n        setActivePolicy({});\n    }\n    return (\n        <Dialog\n            disableBackdropClick\n            disableEscapeKeyDown\n            maxWidth='sm'\n            fullWidth\n            aria-labelledby='confirmation-dialog-title'\n            open={editing}\n        >\n            <DialogTitle id='confirmation-dialog-title'>\n                <FormattedMessage\n                    id='Apis.Details.MediationPolicies.Edit.EditMediationPolicy.select.policy'\n                    defaultMessage='Select a Mediation Policy'\n                />\n            </DialogTitle>\n            {globalMediationPolicies && seqCustom && (\n                <DialogContent dividers>\n                    <RadioGroup value={provideBy} onChange={handleChangeProvideBy} className={classes.radioWrapper}>\n                        <FormControlLabel\n                            value='none'\n                            control={<Radio color='primary' />}\n                            label={(\n                                <FormattedMessage\n                                    id='Apis.Details.MediationPolicies.Edit.EditMediationPolicy.none'\n                                    defaultMessage='None'\n                                />\n                            )}\n                        />\n                        <FormControlLabel\n                            value='global'\n                            control={<Radio color='primary' />}\n                            label={(\n                                <FormattedMessage\n                                    id='Apis.Details.MediationPolicies.Edit.EditMediationPolicy.common.policies'\n                                    defaultMessage='Common Policies'\n                                />\n                            )}\n                        />\n                        <FormControlLabel\n                            value='custom'\n                            control={<Radio color='primary' />}\n                            label={(\n                                <FormattedMessage\n                                    id='Apis.Details.MediationPolicies.Edit.EditMediationPolicy.custom.policies'\n                                    defaultMessage='Custom Policies'\n                                />\n                            )}\n                        />\n                    </RadioGroup>\n                    {provideBy === 'custom' && (\n                        <>\n                            <Dropzone\n                                multiple={false}\n                                className={classes.dropzone}\n                                activeClassName={classes.acceptDrop}\n                                rejectClassName={classes.rejectDrop}\n                                onDrop={(dropFile) => {\n                                    onDrop(dropFile);\n                                }}\n                            >\n                                {({ getRootProps, getInputProps }) => (\n                                    <div {...getRootProps({ style: dropzoneStyles })}>\n                                        <input {...getInputProps()} accept='application/xml,text/xml' />\n                                        <div className={classes.dropZoneWrapper}>\n                                            <Icon className={classes.dropIcon}>cloud_upload</Icon>\n                                            <Typography>\n                                                <FormattedMessage\n                                                    id={\n                                                        'Apis.Details.MediationPolicies.Edit.EditMediationPolicy.'\n                                                        + 'click.or.drop.to.upload.file'\n                                                    }\n                                                    defaultMessage='Click or drag the mediation file to upload.'\n                                                />\n                                            </Typography>\n                                        </div>\n                                    </div>\n                                )}\n                            </Dropzone>\n                            <RadioGroup\n                                aria-label='inflow'\n                                name='inflow'\n                                className={classes.radioGroup}\n                                value={localSelectedPolicyFile.name}\n                                onChange={handleChange}\n                            >\n                                <FormLabel component='customPolicies'>\n                                    <FormattedMessage\n                                        id={\n                                            'Apis.Details.Edit.MediationPolicies.'\n                                            + 'EditMediationPolicies.custom.mediation.policies'\n                                        }\n                                        defaultMessage='Custom Mediation Policies'\n                                    />\n                                </FormLabel>\n                                {seqCustom.map((seq) => (\n                                    <div>\n                                        <IconButton onClick={() => handleDelete(seq.id)}>\n                                            <Icon>delete</Icon>\n                                        </IconButton>\n                                        <Button onClick={() => handleDownload(seq.id)}>\n                                            <Icon>arrow_downward</Icon>\n                                        </Button>\n                                        <FormControlLabel\n                                            control={(\n                                                <Radio\n                                                    inputProps={{\n                                                        seq_id: seq.id,\n                                                        seq_name: seq.name,\n                                                        seq_type: seq.type,\n                                                    }}\n                                                    color='primary'\n                                                />\n                                            )}\n                                            label={seq.name}\n                                            value={seq.name}\n                                            checked={localSelectedPolicyFile.name === seq.name}\n                                        />\n                                    </div>\n                                ))}\n                            </RadioGroup>\n                        </>\n                    )}\n                    {provideBy === 'global' && (\n                        <RadioGroup\n                            aria-label='inflow'\n                            name='inflow'\n                            className={classes.radioGroup}\n                            value={localSelectedPolicyFile.name}\n                            onChange={handleChange}\n                        >\n                            {globalMediationPolicies.map((seq) => (\n                                <div>\n                                    <Button onClick={() => handleDownload(seq.id)}>\n                                        <Icon>arrow_downward</Icon>\n                                    </Button>\n                                    <FormControlLabel\n                                        control={(\n                                            <Radio\n                                                inputProps={{\n                                                    seq_id: seq.id,\n                                                    seq_name: seq.name,\n                                                    seq_type: seq.type,\n                                                }}\n                                                color='primary'\n                                            />\n                                        )}\n                                        label={seq.name}\n                                        value={seq.name}\n                                        checked={localSelectedPolicyFile.name === seq.name}\n                                    />\n                                </div>\n                            ))}\n                        </RadioGroup>\n                    )}\n                </DialogContent>\n            )}\n            <DialogActions>\n                <Button onClick={cancelEditing} color='primary'>\n                    <FormattedMessage\n                        id='Apis.Details.MediationPolicies.Edit.EditMediationPolicy.cancel.btn'\n                        defaultMessage='Cancel'\n                    />\n                </Button>\n                <Button\n                    onClick={doneEditing}\n                    color='primary'\n                    variant='contained'\n                    disabled={provideBy === 'custom' && seqCustom && seqCustom.length === 0}\n                >\n                    <FormattedMessage\n                        id='Apis.Details.MediationPolicies.Edit.EditMediationPolicy.select.btn'\n                        defaultMessage='Select'\n                    />\n                </Button>\n            </DialogActions>\n        </Dialog>\n    );\n}\nEditMediationPolicy.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    selectedMediationPolicy: PropTypes.shape({}).isRequired,\n    type: PropTypes.string.isRequired,\n    updateMediationPolicy: PropTypes.func.isRequired,\n    setEditing: PropTypes.func.isRequired,\n    editing: PropTypes.bool.isRequired,\n    intl: PropTypes.shape({ formatMessage: PropTypes.func }).isRequired,\n};\n\nexport default injectIntl(withStyles(styles)(EditMediationPolicy));\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useState } from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { Grid, withStyles } from '@material-ui/core';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Paper from '@material-ui/core/Paper';\nimport PropTypes from 'prop-types';\nimport EditMediationPolicy from 'AppComponents/Apis/Details/MediationPolicies/EditMediationPolicy';\nimport EditRounded from '@material-ui/icons/EditRounded';\n\nconst styles = {\n    content: {\n        flexGrow: 1,\n    },\n    itemWrapper: {\n        width: 'auto',\n        display: 'flex',\n    },\n    FormControl: {\n        padding: 10,\n        width: '100%',\n        marginTop: 0,\n        display: 'flex',\n        flexDirection: 'row',\n    },\n    subTitle: {\n        marginTop: 20,\n    },\n    subTitleDescription: {\n        marginBottom: 10,\n    },\n    flowWrapper: {\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems: 'center',\n        marginBottom: 10,\n    },\n    subHeading: {\n        fontSize: '1rem',\n        fontWeight: 400,\n        margin: 0,\n        display: 'inline-flex',\n        lineHeight: 1.5,\n    },\n    heading: {\n        margin: 'auto',\n        color: 'rgba(0, 0, 0, 0.54)',\n        wordBreak: 'break-all',\n        whiteSpace: 'normal',\n    },\n    paper: {\n        padding: '10px 24px',\n        width: 'auto',\n    },\n};\n\n/**\n * The base component of the IN mediation policy.\n * @param {any} props The props passed to the layout\n * @returns {any} HTML representation.\n */\nfunction InFlow(props) {\n    const {\n        classes, updateMediationPolicy, selectedMediationPolicy, type, isRestricted,\n    } = props;\n    const [editing, setEditing] = useState(false);\n\n    function startEditing() {\n        setEditing(true);\n    }\n    return (\n        <>\n            <Paper className={classes.paper}>\n                <Grid container spacing={2} alignItems='flex-start'>\n                    <Grid item md={12} style={{ position: 'relative', display: 'inline-flex' }}>\n                        <Typography className={classes.subHeading} variant='h6' component='h4'>\n                            <FormattedMessage\n                                id='Apis.Details.MediationPolicies.Mediation'\n                                defaultMessage='Message Mediation'\n                            />\n                        </Typography>\n                        <Typography className={classes.heading}>\n                            {selectedMediationPolicy && selectedMediationPolicy.name ? (\n                                <span>{selectedMediationPolicy.name}</span>\n                            ) : (\n                                <span>none</span>\n                            )}\n                        </Typography>\n                        <Button\n                            size='small'\n                            onClick={startEditing}\n                            disabled={isRestricted}\n                            aria-label='Edit mediation message'\n                        >\n                            <EditRounded />\n                        </Button>\n                    </Grid>\n                </Grid>\n            </Paper>\n            <EditMediationPolicy\n                setEditing={setEditing}\n                editing={editing}\n                updateMediationPolicy={updateMediationPolicy}\n                selectedMediationPolicy={selectedMediationPolicy}\n                type={type}\n            />\n        </>\n    );\n}\n\nInFlow.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    updateMediationPolicy: PropTypes.func.isRequired,\n    selectedMediationPolicy: PropTypes.shape({}).isRequired,\n    type: PropTypes.string.isRequired,\n    api: PropTypes.shape({}).isRequired,\n};\n\nexport default withStyles(styles)(InFlow);\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport PropTypes from 'prop-types';\nimport Typography from '@material-ui/core/Typography';\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport LaunchIcon from '@material-ui/icons/Launch';\nimport { Link } from 'react-router-dom';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Box from '@material-ui/core/Box';\nimport { withAPI } from 'AppComponents/Apis/Details/components/ApiContext';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst showEndpoint = function (api, type) {\n    if (api.endpointConfig) {\n        if (type === 'prod') {\n            return api.getProductionEndpoint();\n        }\n        if (type === 'sand') {\n            return api.getSandboxEndpoint();\n        }\n    }\n    return null;\n};\n\nconst useStyles = makeStyles((theme) => ({\n    subtitle: {\n        marginTop: theme.spacing(0),\n    },\n    expansionPanel: {\n        marginBottom: theme.spacing(1),\n    },\n    expansionPanelDetails: {\n        flexDirection: 'column',\n    },\n    notConfigured: {\n        color: 'rgba(0, 0, 0, 0.54)',\n    },\n    subHeading: {\n        fontSize: '1rem',\n        fontWeight: 400,\n        margin: 0,\n        display: 'inline-flex',\n        lineHeight: 1.5,\n    },\n    textTrim: {\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n    },\n    externalLink: {\n        color: theme.palette.primary.dark,\n    },\n}));\n\n/**\n *\n *X\n * @param {*} props\n * @returns\n */\nfunction Endpoints(props) {\n    const { api } = props;\n    const classes = useStyles();\n    const isPrototypedAvailable = api.endpointConfig !== null\n        && api.endpointConfig.implementation_status === 'prototyped';\n\n    /**\n     * Check whether the endpoint configuration is dynamic\n     *\n     * @param {object} endpointConfig The endpoint configuration of the api.\n     * @return {boolean} True if the endpoint config is dynamic.\n     * */\n    const isDynamicEndpoints = (endpointConfig) => {\n        if (!endpointConfig) {\n            return false;\n        }\n        if (endpointConfig.production_endpoints && !Array.isArray(endpointConfig.production_endpoints)) {\n            return endpointConfig.production_endpoints.url === 'default';\n        }\n        return false;\n    };\n\n    return (\n        <>\n            <ExpansionPanel className={classes.expansionPanel} defaultExpanded>\n                <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\n                    <Typography className={classes.subHeading} variant='h6' component='h4'>\n                        <FormattedMessage\n                            id='Apis.Details.Configuration.components.Endpoints.endpoints'\n                            defaultMessage='Endpoints'\n                        />\n                    </Typography>\n                </ExpansionPanelSummary>\n                <ExpansionPanelDetails className={classes.expansionPanelDetails}>\n                    {isDynamicEndpoints(api.endpointConfig)\n                        ? (\n                            <Box pb={2}>\n                                <Typography component='p' variant='body1' className={classes.subtitle}>\n                                    <FormattedMessage\n                                        id='Apis.Details.Configuration.components.Endpoints.dynamic'\n                                        defaultMessage='Dynamic'\n                                    />\n                                </Typography>\n                            </Box>\n                        )\n                        : (\n                            <>\n                                <Box pb={2}>\n                                    {/* Production Endpoint (TODO) fix the endpoint\n                                                    info when it's available with the api object */}\n\n                                    { !isPrototypedAvailable ? (\n                                        <Typography component='p' variant='subtitle2' className={classes.subtitle}>\n                                            <FormattedMessage\n                                                id='Apis.Details.Configuration.components.Endpoints.production'\n                                                defaultMessage='Production'\n                                            />\n                                        </Typography>\n                                    ) : (\n                                        <Typography component='p' variant='subtitle2' className={classes.subtitle}>\n                                            <FormattedMessage\n                                                id='Apis.Details.Configuration.components.Endpoints.prototype'\n                                                defaultMessage='Prototype'\n                                            />\n                                        </Typography>\n                                    )}\n                                    {showEndpoint(api, 'prod')\n                                && (\n                                    <Tooltip\n                                        title={showEndpoint(api, 'prod')}\n                                        interactive\n                                    >\n                                        <Typography component='p' variant='body1' className={classes.textTrim}>\n                                            <>\n                                                {showEndpoint(api, 'prod')}\n                                            </>\n                                        </Typography>\n                                    </Tooltip>\n                                )}\n                                    <Typography component='p' variant='body1' className={classes.notConfigured}>\n                                        {!showEndpoint(api, 'prod') && (\n                                            <>\n                                                <FormattedMessage\n                                                    id={'Apis.Details.Configuration.'\n                                                    + 'components.Endpoints.not.set'}\n                                                    defaultMessage='-'\n                                                />\n                                            </>\n                                        )}\n                                    </Typography>\n                                </Box>\n                                {!isPrototypedAvailable && (\n                                    <Box pb={2}>\n                                        {/* Sandbox Endpoint (TODO) fix the endpoint info when\n                                                it's available with the api object */}\n                                        <Typography component='p' variant='subtitle2' className={classes.subtitle}>\n                                            <FormattedMessage\n                                                id='Apis.Details.Configuration.components.Endpoints.sandbox'\n                                                defaultMessage='Sandbox'\n                                            />\n                                        </Typography>\n                                        {showEndpoint(api, 'sand')\n                                    && (\n                                        <Tooltip\n                                            title={showEndpoint(api, 'sand')}\n                                            interactive\n                                        >\n                                            <Typography component='p' variant='body1' className={classes.textTrim}>\n                                                <>\n                                                    {showEndpoint(api, 'sand')}\n                                                </>\n                                            </Typography>\n                                        </Tooltip>\n                                    )}\n                                        <Typography component='p' variant='body1' className={classes.notConfigured}>\n                                            {!showEndpoint(api, 'sand') && (\n                                                <>\n                                                    <FormattedMessage\n                                                        id={'Apis.Details.Configuration.components.Endpoints.sandbox.'\n                                                        + 'not.set'}\n                                                        defaultMessage='-'\n                                                    />\n                                                </>\n                                            )}\n                                        </Typography>\n                                    </Box>\n                                )}\n                            </>\n                        )}\n                    <Box width='100%' textAlign='right' m={1}>\n                        <Link to={'/apis/' + api.id + '/endpoints'}>\n                            <Typography className={classes.externalLink} variant='caption'>\n                                <FormattedMessage\n                                    id='Apis.Details.Configuration.Configuration.Endpoints.edit.api.endpoints'\n                                    defaultMessage='Edit API Endpoints'\n                                />\n                                <LaunchIcon style={{ marginLeft: '2px' }} fontSize='small' />\n                            </Typography>\n                        </Link>\n                    </Box>\n                </ExpansionPanelDetails>\n            </ExpansionPanel>\n        </>\n    );\n}\n\nEndpoints.propTypes = {\n    api: PropTypes.shape({}).isRequired,\n};\n\nexport default withAPI(Endpoints);\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n// Check this file for more info  <CARBON_APIMGT>/components/apimgt/org.wso2.carbon.apimgt.impl\n// /src/main/java/org/wso2/carbon/apimgt/impl/APIConstants.java\n\nconst DEFAULT_API_SECURITY_OAUTH2 = 'oauth2';\nconst API_SECURITY_BASIC_AUTH = 'basic_auth';\nconst API_SECURITY_API_KEY = 'api_key';\nconst API_SECURITY_MUTUAL_SSL = 'mutualssl';\nconst API_SECURITY_OAUTH_BASIC_AUTH_API_KEY_MANDATORY = 'oauth_basic_auth_api_key_mandatory';\nconst API_SECURITY_MUTUAL_SSL_MANDATORY = 'mutualssl_mandatory';\n\nexport {\n    DEFAULT_API_SECURITY_OAUTH2,\n    API_SECURITY_BASIC_AUTH,\n    API_SECURITY_API_KEY,\n    API_SECURITY_MUTUAL_SSL,\n    API_SECURITY_OAUTH_BASIC_AUTH_API_KEY_MANDATORY,\n    API_SECURITY_MUTUAL_SSL_MANDATORY,\n};\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport HelpOutline from '@material-ui/icons/HelpOutline';\nimport { FormattedMessage } from 'react-intl';\nimport { isRestricted } from 'AppData/AuthManager';\nimport { useAPI } from 'AppComponents/Apis/Details/components/ApiContext';\nimport { useAppContext } from 'AppComponents/Shared/AppContext';\n\n/**\n *\n *\n * @export\n * @param {*} props\n * @returns\n */\nexport default function AuthorizationHeader(props) {\n    const { api, configDispatcher } = props;\n    const [apiFromContext] = useAPI();\n    const { settings } = useAppContext();\n    let hasResourceWithSecurity;\n    const authorizationHeaderValue = api.authorizationHeader ? api.authorizationHeader : settings.authorizationHeader;\n    if (apiFromContext.apiType === 'APIProduct') {\n        const apiList = apiFromContext.apis;\n        for (const apiInProduct in apiList) {\n            if (Object.prototype.hasOwnProperty.call(apiList, apiInProduct)) {\n                hasResourceWithSecurity = apiList[apiInProduct].operations.findIndex(\n                    (op) => op.authType !== 'None',\n                ) > -1;\n                if (hasResourceWithSecurity) {\n                    break;\n                }\n            }\n        }\n    } else {\n        hasResourceWithSecurity = apiFromContext.operations.findIndex((op) => op.authType !== 'None') > -1;\n    }\n    if (!hasResourceWithSecurity && api.authorizationHeader !== '') {\n        configDispatcher({ action: 'authorizationHeader', value: '' });\n    }\n\n    return (\n        <Grid container spacing={1} alignItems='center'>\n            <Grid item xs={11}>\n                <TextField\n                    disabled={isRestricted(['apim:api_create'], apiFromContext) || !hasResourceWithSecurity}\n                    id='outlined-name'\n                    label={(\n                        <FormattedMessage\n                            id='Apis.Details.Configuration.Configuration.auth.header.label'\n                            defaultMessage='Authorization Header'\n                        />\n                    )}\n                    value={hasResourceWithSecurity ? authorizationHeaderValue : ' '}\n                    margin='normal'\n                    variant='outlined'\n                    onChange={({ target: { value } }) => configDispatcher({ action: 'authorizationHeader', value })}\n                    style={{ display: 'flex' }}\n                />\n            </Grid>\n            <Grid item xs={1}>\n                <Tooltip\n                    title={(\n                        <FormattedMessage\n                            id='Apis.Details.Configuration.Configuration.AuthHeader.tooltip'\n                            defaultMessage={\n                                ' The header name that is used to send the authorization '\n                                + 'information. \"Authorization\" is the default header.'\n                            }\n                        />\n                    )}\n                    aria-label='Auth Header'\n                    placement='right-end'\n                    interactive\n                >\n                    <HelpOutline />\n                </Tooltip>\n            </Grid>\n        </Grid>\n    );\n}\n\nAuthorizationHeader.propTypes = {\n    api: PropTypes.shape({}).isRequired,\n    configDispatcher: PropTypes.func.isRequired,\n};\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useContext, useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport Box from '@material-ui/core/Box';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport { FormattedMessage } from 'react-intl';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport API from 'AppData/api';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport { isRestricted } from 'AppData/AuthManager';\nimport { APIContext } from 'AppComponents/Apis/Details/components/ApiContext';\n\nconst useStyles = makeStyles((theme) => ({\n    expansionPanel: {\n        marginBottom: theme.spacing(3),\n    },\n    expansionPanelDetails: {\n        flexDirection: 'column',\n    },\n    iconSpace: {\n        marginLeft: theme.spacing(0.5),\n    },\n    actionSpace: {\n        margin: '-7px auto',\n    },\n    subHeading: {\n        fontSize: '1rem',\n        fontWeight: 400,\n        margin: 0,\n        display: 'inline-flex',\n        lineHeight: 1.5,\n    },\n    keyManagerSelect: {\n        minWidth: 180,\n    },\n}));\n\n/**\n *\n * KeyManager configuration\n * @param {*} props\n * @returns\n */\nexport default function KeyManager(props) {\n    const [keyManagersConfigured, setKeyManagersConfigured] = useState([]);\n    const {\n        configDispatcher,\n        api: { keyManagers, securityScheme },\n    } = props;\n    const classes = useStyles();\n    const handleChange = (event) => {\n        const newKeyManagers = [...keyManagers];\n        const { target: { checked, name } } = event;\n        if (newKeyManagers.indexOf(name) === -1 && checked) {\n            newKeyManagers.push(name);\n        } else if (newKeyManagers.indexOf(name) !== -1 && !checked) {\n            newKeyManagers.splice(newKeyManagers.indexOf(name), 1);\n        }\n        configDispatcher({\n            action: 'keymanagers',\n            value: newKeyManagers,\n        });\n    };\n    const { api } = useContext(APIContext);\n    useEffect(() => {\n        if (!isRestricted(['apim:api_create'], api)) {\n            API.keyManagers().then((response) => setKeyManagersConfigured(response.body.list));\n        }\n    }, []);\n    if (!securityScheme.includes('oauth2')) {\n        return (\n            <>\n                <Typography className={classes.subHeading} variant='subtitle2' component='h5'>\n                    <FormattedMessage\n                        id='Apis.Details.Configuration.components.KeyManager.configuration'\n                        defaultMessage='Key Manager Configuration'\n                    />\n                </Typography>\n                <Box ml={1} mb={2}>\n                    <Typography variant='caption'>\n                        <FormattedMessage\n                            id='Apis.Details.Configuration.components.oauth.disabled'\n                            defaultMessage='Key Manager configuration only valid when OAuth2 security is enabled.'\n                        />\n                    </Typography>\n                </Box>\n            </>\n        );\n    }\n    return (\n        <>\n            <Typography className={classes.subHeading} variant='subtitle2' component='h5'>\n                <FormattedMessage\n                    id='Apis.Details.Configuration.components.KeyManager.configuration'\n                    defaultMessage='Key Manager Configuration'\n                />\n            </Typography>\n            <Box ml={1}>\n                <RadioGroup\n                    value={keyManagers.includes('all') ? 'all' : 'selected'}\n                    onChange={({ target: { value } }) => configDispatcher({\n                        action: 'allKeyManagersEnabled',\n                        value: value === 'all',\n                    })}\n                    style={{ flexDirection: 'row' }}\n                >\n                    <FormControlLabel\n                        value='all'\n                        control={<Radio disabled={isRestricted(['apim:api_create'], api)} />}\n                        label={(\n                            <FormattedMessage\n                                id='Apis.Details.Configuration.components.KeyManager.allow.all'\n                                defaultMessage='Allow all'\n                            />\n                        )}\n                    />\n                    <FormControlLabel\n                        value='selected'\n                        control={<Radio disabled={isRestricted(['apim:api_create'], api)} />}\n                        label={(\n                            <FormattedMessage\n                                id='Apis.Details.Configuration.components.KeyManager.allow.selected'\n                                defaultMessage='Allow selected'\n                            />\n                        )}\n                    />\n                </RadioGroup>\n                {!keyManagers.includes('all') && (\n                    <Box display='flex' flexDirection='column' m={2}>\n                        <FormControl\n                            required\n                            error={!keyManagers || (keyManagers && keyManagers.length === 0)}\n                            component='fieldset'\n                            className={classes.formControl}\n                        >\n                            <FormLabel component='legend'>\n                                <FormattedMessage\n                                    id='Apis.Details.Configuration.components.KeyManager.more.than.one.info'\n                                    defaultMessage='Select one or more Key Managers'\n                                />\n                            </FormLabel>\n                            <FormGroup\n                                style={{ flexDirection: 'row' }}\n\n                            >\n                                {keyManagersConfigured.map((key) => (\n                                    <FormControlLabel\n                                        control={(\n                                            <Checkbox\n                                                color='primary'\n                                                checked={keyManagers.includes(key.name)}\n                                                disabled={!key.enabled}\n                                                onChange={handleChange}\n                                                name={key.name}\n                                            />\n                                        )}\n                                        label={key.displayName || key.name}\n                                    />\n                                ))}\n                            </FormGroup>\n                            <FormHelperText>\n                                <FormattedMessage\n                                    id='Apis.Details.Configuration.components.KeyManager.more.than.one.error'\n                                    defaultMessage='Select at least one Key Manager'\n                                />\n                            </FormHelperText>\n\n                        </FormControl>\n                    </Box>\n                )}\n            </Box>\n        </>\n    );\n}\n\nKeyManager.propTypes = {\n    api: PropTypes.shape({}).isRequired,\n    configDispatcher: PropTypes.func.isRequired,\n};\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Grid from '@material-ui/core/Grid';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport AuthorizationHeader from 'AppComponents/Apis/Details/Configuration/components/AuthorizationHeader.jsx';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport HelpOutline from '@material-ui/icons/HelpOutline';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport { FormattedMessage } from 'react-intl';\nimport { isRestricted } from 'AppData/AuthManager';\nimport { useAPI } from 'AppComponents/Apis/Details/components/ApiContext';\nimport KeyManager from 'AppComponents/Apis/Details/Configuration/components/KeyManager';\nimport API from 'AppData/api';\n\nimport {\n    DEFAULT_API_SECURITY_OAUTH2,\n    API_SECURITY_BASIC_AUTH,\n    API_SECURITY_API_KEY,\n    API_SECURITY_OAUTH_BASIC_AUTH_API_KEY_MANDATORY,\n    API_SECURITY_MUTUAL_SSL,\n} from './apiSecurityConstants';\n\nconst useStyles = makeStyles((theme) => ({\n    expansionPanel: {\n        marginBottom: theme.spacing(1),\n    },\n    expansionPanelDetails: {\n        flexDirection: 'column',\n    },\n    iconSpace: {\n        marginLeft: theme.spacing(0.5),\n    },\n    bottomSpace: {\n        marginBottom: theme.spacing(4),\n    },\n    subHeading: {\n        fontSize: '1rem',\n        fontWeight: 400,\n        margin: 0,\n        display: 'inline-flex',\n        lineHeight: 1.5,\n    },\n}));\n\n/**\n *\n *\n * @export\n * @param {*} props\n * @returns\n */\nexport default function ApplicationLevel(props) {\n    const {\n        haveMultiLevelSecurity, securityScheme, configDispatcher, api,\n    } = props;\n    const [apiFromContext] = useAPI();\n    const classes = useStyles();\n    let mandatoryValue = null;\n    let hasResourceWithSecurity;\n    if (apiFromContext.apiType === 'APIProduct') {\n        const apiList = apiFromContext.apis;\n        for (const apiInProduct in apiList) {\n            if (Object.prototype.hasOwnProperty.call(apiList, apiInProduct)) {\n                hasResourceWithSecurity = apiList[apiInProduct].operations.findIndex(\n                    (op) => op.authType !== 'None',\n                ) > -1;\n                if (hasResourceWithSecurity) {\n                    break;\n                }\n            }\n        }\n    } else {\n        hasResourceWithSecurity = apiFromContext.operations.findIndex((op) => op.authType !== 'None') > -1;\n    }\n\n    mandatoryValue = 'optional';\n    // If not Oauth2, Basic auth or ApiKey security is selected, no mandatory values should be pre-selected\n    if (!(securityScheme.includes(DEFAULT_API_SECURITY_OAUTH2) || securityScheme.includes(API_SECURITY_BASIC_AUTH)\n        || securityScheme.includes(API_SECURITY_API_KEY))) {\n        mandatoryValue = null;\n    } else if (!securityScheme.includes(API_SECURITY_MUTUAL_SSL)) {\n        mandatoryValue = API_SECURITY_OAUTH_BASIC_AUTH_API_KEY_MANDATORY;\n    } else if (securityScheme.includes(API_SECURITY_OAUTH_BASIC_AUTH_API_KEY_MANDATORY)) {\n        mandatoryValue = API_SECURITY_OAUTH_BASIC_AUTH_API_KEY_MANDATORY;\n    }\n\n    return (\n        <>\n            <Grid item xs={12}>\n                <ExpansionPanel className={classes.expansionPanel}>\n                    <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\n                        <Typography className={classes.subHeading} variant='h6' component='h4'>\n                            <FormattedMessage\n                                id='Apis.Details.Configuration.Components.APISecurity.Components.\n                                    ApplicationLevel.http'\n                                defaultMessage='Application Level Security'\n                            />\n                            <Tooltip\n                                title={(\n                                    <FormattedMessage\n                                        id='Apis.Details.Configuration.components.APISecurity.tooltip'\n                                        defaultMessage={\n                                            'This option determines the type of security'\n                                            + ' that will be used to secure this API. An API can be secured '\n                                            + 'with either OAuth2/Basic/ApiKey or it can be secured with all of them. '\n                                            + 'If OAuth2 option is selected, relevant API will require a valid '\n                                            + 'OAuth2 token for successful invocation.'\n                                        }\n                                    />\n                                )}\n                                aria-label='API Security helper text'\n                                placement='right-end'\n                                interactive\n                            >\n                                <HelpOutline className={classes.iconSpace} />\n                            </Tooltip>\n                        </Typography>\n                    </ExpansionPanelSummary>\n                    <ExpansionPanelDetails className={classes.expansionPanelDetails}>\n                        <FormGroup style={{ display: 'flow-root' }}>\n                            <FormControlLabel\n                                control={(\n                                    <Checkbox\n                                        disabled={isRestricted(['apim:api_create'], apiFromContext)}\n                                        checked={securityScheme.includes(DEFAULT_API_SECURITY_OAUTH2)}\n                                        onChange={({ target: { checked, value } }) => configDispatcher({\n                                            action: 'securityScheme',\n                                            event: { checked, value },\n                                        })}\n                                        value={DEFAULT_API_SECURITY_OAUTH2}\n                                        color='primary'\n                                    />\n                                )}\n                                label='OAuth2'\n                            />\n                            <FormControlLabel\n                                control={(\n                                    <Checkbox\n                                        disabled={isRestricted(['apim:api_create'], apiFromContext)}\n                                        checked={securityScheme.includes(API_SECURITY_BASIC_AUTH)}\n                                        onChange={({ target: { checked, value } }) => configDispatcher({\n                                            action: 'securityScheme',\n                                            event: { checked, value },\n                                        })}\n                                        value={API_SECURITY_BASIC_AUTH}\n                                        color='primary'\n                                    />\n                                )}\n                                label='Basic'\n                            />\n                            <FormControlLabel\n                                control={(\n                                    <Checkbox\n                                        checked={securityScheme.includes(API_SECURITY_API_KEY)}\n                                        disabled={isRestricted(['apim:api_create'], apiFromContext)}\n                                        onChange={({ target: { checked, value } }) => configDispatcher({\n                                            action: 'securityScheme',\n                                            event: { checked, value },\n                                        })}\n                                        value={API_SECURITY_API_KEY}\n                                        color='primary'\n                                    />\n                                )}\n                                label='Api Key'\n                            />\n                        </FormGroup>\n                        <FormControl className={classes.bottomSpace} component='fieldset'>\n                            <RadioGroup\n                                aria-label='HTTP security HTTP mandatory selection'\n                                name={API_SECURITY_OAUTH_BASIC_AUTH_API_KEY_MANDATORY}\n                                value={mandatoryValue}\n                                onChange={({ target: { name, value } }) => configDispatcher({\n                                    action: 'securityScheme',\n                                    event: { name, value },\n                                })}\n                                row\n                            >\n                                <FormControlLabel\n                                    value={API_SECURITY_OAUTH_BASIC_AUTH_API_KEY_MANDATORY}\n                                    control={(\n                                        <Radio\n                                            disabled={!haveMultiLevelSecurity\n                                                || isRestricted(['apim:api_create'], apiFromContext)}\n                                            color='primary'\n                                        />\n                                    )}\n                                    label='Mandatory'\n                                    labelPlacement='end'\n                                />\n                                <FormControlLabel\n                                    value='optional'\n                                    control={(\n                                        <Radio\n                                            disabled={!haveMultiLevelSecurity\n                                                || isRestricted(['apim:api_create'], apiFromContext)}\n                                            color='primary'\n                                        />\n                                    )}\n                                    label='Optional'\n                                    labelPlacement='end'\n                                />\n                            </RadioGroup>\n                            <FormHelperText>\n                                <FormattedMessage\n                                    id='Apis.Details.Configuration.components.APISecurity.application.mandatory'\n                                    defaultMessage='Choose whether Application level security is mandatory or optional'\n                                />\n                            </FormHelperText>\n                        </FormControl>\n                        {(apiFromContext.apiType === API.CONSTS.API) && (\n                            <KeyManager\n                                api={api}\n                                configDispatcher={configDispatcher}\n                            />\n                        )}\n                        <AuthorizationHeader api={api} configDispatcher={configDispatcher} />\n                        <FormControl>\n                            {!hasResourceWithSecurity\n                            && (\n                                <FormHelperText>\n                                    <FormattedMessage\n                                        id='Apis.Details.Configuration.components.APISecurity.api.unsecured'\n                                        defaultMessage='Application level security is not required since API\n                                        has no secured resources'\n                                    />\n                                </FormHelperText>\n                            )}\n                        </FormControl>\n                    </ExpansionPanelDetails>\n                </ExpansionPanel>\n            </Grid>\n        </>\n    );\n}\n\nApplicationLevel.propTypes = {\n    configDispatcher: PropTypes.func.isRequired,\n    haveMultiLevelSecurity: PropTypes.bool.isRequired,\n    securityScheme: PropTypes.arrayOf(PropTypes.string).isRequired,\n    api: PropTypes.shape({}).isRequired,\n};\n","/*\n *  Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n *  WSO2 Inc. licenses this file to you under the Apache License,\n *  Version 2.0 (the \"License\"); you may not use this file except\n *  in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *  http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing,\n *  software distributed under the License is distributed on an\n *  \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n *  KIND, either express or implied. See the License for the\n *  specific language governing permissions and limitations\n *  under the License.\n */\n\nimport React from 'react';\nimport { MenuItem, TextField } from '@material-ui/core';\nimport { FormattedMessage } from 'react-intl';\nimport PropTypes from 'prop-types';\n\nexport default function SelectEndpoint(props) {\n    const {\n        onChange,\n        endpoint,\n        isEndpointEmpty,\n        endpoints,\n    } = props;\n    const iff = (condition, then, otherwise) => (condition ? then : otherwise);\n    return (\n        <TextField\n            autoFocus\n            error={isEndpointEmpty || endpoints.length === 0}\n            helperText={endpoints.length === 0 ? (\n                <FormattedMessage\n                    id='Apis.Details.Endpoints.GeneralConfiguration.UploadCertificate.endpoint.empty.error'\n                    defaultMessage='Save endpoints before adding the Certificate'\n                />\n            ) : iff(isEndpointEmpty, <FormattedMessage\n                id='Apis.Details.Endpoints.GeneralConfiguration.UploadCertificate.endpoint.error'\n                defaultMessage='Endpoint should not be empty'\n            />, <FormattedMessage\n                id='Apis.Details.Endpoints.GeneralConfiguration.UploadCertificate.endpoint.helpertext'\n                defaultMessage='Endpoint for the Certificate'\n            />)}\n            required\n            id='certificateEndpoint'\n            label={(\n                <FormattedMessage\n                    id='Apis.Details.Endpoints.GeneralConfiguration.UploadCertificate.endpoint'\n                    defaultMessage='Endpoint'\n                />\n            )}\n            value={endpoint}\n            placeholder='Endpoint'\n            onChange={(event) => onChange(event.target.value)}\n            margin='normal'\n            variant='outlined'\n            fullWidth\n            select\n        >\n            {endpoints !== null && endpoints.map((ep) => {\n                if (ep) {\n                    return (<MenuItem value={ep.url}>{ep.url}</MenuItem>);\n                }\n                return null;\n            })}\n        </TextField>\n    );\n}\n\nSelectEndpoint.propTypes = {\n    endpoints: PropTypes.shape({}).isRequired,\n    onChange: PropTypes.func.isRequired,\n    classes: PropTypes.shape({}).isRequired,\n    endpoint: PropTypes.string.isRequired,\n    isEndpointEmpty: PropTypes.string.isRequired,\n};\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport {\n    Button,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogTitle,\n    Grid,\n    Icon,\n    TextField,\n    Typography,\n} from '@material-ui/core';\nimport { FormattedMessage } from 'react-intl';\nimport Dropzone from 'react-dropzone';\nimport Box from '@material-ui/core/Box';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport InsertDriveFileIcon from '@material-ui/icons/InsertDriveFile';\nimport APIValidation from 'AppData/APIValidation';\nimport SelectEndpoint from 'AppComponents/Apis/Details/Endpoints/GeneralConfiguration/SelectEndpoint';\nimport SelectPolicies from '../../../Create/Components/SelectPolicies';\n\nconst dropzoneStyles = {\n    border: '1px dashed #c4c4c4',\n    borderRadius: '5px',\n    cursor: 'pointer',\n    height: 75,\n    padding: '8px 0px',\n    position: 'relative',\n    textAlign: 'center',\n    width: '100%',\n    margin: '10px 0',\n};\n\nconst useStyles = makeStyles((theme) => ({\n    fileinput: {\n        display: 'none',\n    },\n    dropZoneWrapper: {\n        height: '100%',\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        justifyContent: 'center',\n        '& span.material-icons': {\n            color: theme.palette.primary.main,\n        },\n    },\n    uploadedFile: {\n        fontSize: 11,\n    },\n    certificatesHeader: {\n        fontWeight: 600,\n        marginTop: 20,\n    },\n    addCertificateBtn: {\n        borderColor: '#c4c4c4',\n        borderRadius: '8px',\n        borderStyle: 'dashed',\n        borderWidth: 'thin',\n    },\n    certificateList: {\n        maxHeight: '250px',\n        overflow: 'scroll',\n    },\n    certDetailsHeader: {\n        fontWeight: '600',\n    },\n    uploadCertDialogHeader: {\n        fontWeight: '600',\n    },\n}));\n\n/**\n * This component is used to upload the certificates\n * @param {any} props The input props.\n * @returns {any} The HTML representation of the Certificates.\n */\nexport default function UploadCertificate(props) {\n    const {\n        endpoints,\n        uploadCertificate,\n        isMutualSSLEnabled,\n        uploadCertificateOpen,\n        setUploadCertificateOpen,\n        aliasList,\n    } = props;\n    const [alias, setAlias] = useState('');\n    const [policy, setPolicy] = useState('');\n    const [endpoint, setEndpoint] = useState('');\n    const [isSaving, setSaving] = useState(false);\n    const [certificate, setCertificate] = useState({ name: '', content: {} });\n    const [isEndpointEmpty, setIsEndpointEmpty] = useState(false);\n    const [isPoliciesEmpty, setPoliciesEmpty] = useState(false);\n    const [aliasValidity, setAliasValidity] = useState();\n    const classes = useStyles();\n    const [isRejected, setIsRejected] = useState(false);\n\n    const closeCertificateUpload = () => {\n        setUploadCertificateOpen(false);\n        setAliasValidity();\n        setCertificate({ name: '', content: '' });\n        setAlias('');\n        setEndpoint('');\n        setPolicy('');\n    };\n\n    /**\n     * On change functionality to handle the policy dropdown\n     *\n     * @param {*} event\n     */\n    function handleOnChange(event) {\n        const { value } = event.target;\n        setPolicy(value);\n    }\n\n    /**\n     * Method to validate the policies.\n     * @param {string} value selected policy.\n     * */\n    const onValidate = (value) => {\n        setPoliciesEmpty(value === '');\n    };\n\n    /**\n     * Method to upload the certificate content by calling the rest api.\n     * */\n    const saveCertificate = () => {\n        setSaving(true);\n        if (isMutualSSLEnabled) {\n            uploadCertificate(certificate.content, policy, alias)\n                .then(closeCertificateUpload)\n                .finally(() => setSaving(false));\n        } else {\n            uploadCertificate(certificate.content, endpoint, alias)\n                .then(closeCertificateUpload)\n                .finally(() => setSaving(false));\n        }\n    };\n\n    /**\n     * Handled the file upload action of the dropzone.\n     *\n     * @param {array} file The accepted file list by the dropzone.\n     * */\n    const onDrop = (file) => {\n        const certificateFile = file[0];\n        const rejectedFiles = ['pem', 'txt', 'jks', 'key', 'ca-bundle'];\n        const extension = certificateFile.name.split('.');\n        if (rejectedFiles.includes(extension[1])) {\n            setIsRejected(true);\n        } else {\n            setIsRejected(false);\n        }\n        if (certificateFile) {\n            setCertificate({ name: certificateFile.name, content: certificateFile });\n        }\n    };\n\n    const handleEndpointOnChange = (value) => {\n        setEndpoint(value);\n        if (value) {\n            setIsEndpointEmpty(false);\n        } else {\n            setIsEndpointEmpty(true);\n        }\n    };\n\n    const handleAliasOnBlur = () => {\n        const aliasValidation = APIValidation.alias.required().validate(alias).error;\n        if (aliasValidation) {\n            setAliasValidity({ isValid: false, message: aliasValidation.details[0].message });\n        } else {\n            setAliasValidity({ isValid: true, message: '' });\n        }\n    };\n\n    const getHelperText = () => {\n        if (aliasValidity && !aliasValidity.isValid) {\n            return (aliasValidity.message);\n        } else if (aliasList && aliasList.includes(alias)) {\n            return (\n                <FormattedMessage\n                    id='Apis.Details.Endpoints.GeneralConfiguration.UploadCertificate.alias.exist.error'\n                    defaultMessage='Alias already exists'\n                />\n            );\n        } else {\n            return (\n                <FormattedMessage\n                    id='Apis.Details.Endpoints.GeneralConfiguration.UploadCertificate.alias.default.message'\n                    defaultMessage='Alias for the Certificate'\n                />\n            );\n        }\n    };\n\n    const iff = (condition, then, otherwise) => (condition ? then : otherwise);\n    return (\n        <Dialog open={uploadCertificateOpen}>\n            <DialogTitle>\n                <Typography className={classes.uploadCertDialogHeader}>\n                    <FormattedMessage\n                        id='Apis.Details.Endpoints.GeneralConfiguration.UploadCertificate.uploadCertificate'\n                        defaultMessage='Upload Certificate'\n                    />\n                </Typography>\n            </DialogTitle>\n            <DialogContent>\n                <Grid>\n                    <div>\n                        {isMutualSSLEnabled ? (\n                            <SelectPolicies\n                                multiple={false}\n                                policies={policy}\n                                helperText='Select a throttling policy for the certificate'\n                                onChange={handleOnChange}\n                                required\n                                validate={onValidate}\n                            />\n                        )\n                            : (\n                                <SelectEndpoint\n                                    endpoints={endpoints}\n                                    onChange={handleEndpointOnChange}\n                                    endpoint={endpoint}\n                                    isEndpointEmpty={isEndpointEmpty}\n                                    required\n                                />\n                            )}\n                        <TextField\n                            required\n                            id='certificateAlias'\n                            label={(\n                                <FormattedMessage\n                                    id='Apis.Details.Endpoints.GeneralConfiguration.UploadCertificate.alias'\n                                    defaultMessage='Alias'\n                                />\n                            )}\n                            value={alias}\n                            placeholder='My Alias'\n                            onChange={(event) => setAlias(event.target.value)}\n                            onBlur={() => handleAliasOnBlur()}\n                            margin='normal'\n                            variant='outlined'\n                            error={\n                                (aliasValidity && !aliasValidity.isValid) || (aliasList && aliasList.includes(alias))\n                            }\n                            helperText={getHelperText()}\n                            fullWidth\n                            inputProps={{ maxLength: 45 }}\n                        />\n                        <Dropzone\n                            multiple={false}\n                            accept={\n                                'application/pkcs8,'\n                                    + 'application/pkcs10, application/pkix-crl,'\n                                    + 'application/pkcs7-mime,'\n                                    + 'application/x-x509-ca-cert,'\n                                    + 'application/x-x509-user-cert,'\n                                    + 'application/x-pkcs7-crl,'\n                                    + 'application/x-pkcs12,'\n                                    + 'application/x-pkcs7-certificates,'\n                                    + 'application/x-pkcs7-certreqresp,'\n                                    + '.p8, .p10, .cer, .cert, .p7c, .crt, .der, .p12, .pfx, .p7b, .spc, .p7r'\n                            }\n                            className={classes.dropzone}\n                            activeClassName={classes.acceptDrop}\n                            rejectClassName={classes.rejectDrop}\n                            onDrop={(dropFile) => {\n                                onDrop(dropFile);\n                            }}\n                        >\n                            {({ getRootProps, getInputProps }) => (\n                                <div {...getRootProps({ style: dropzoneStyles })}>\n                                    <input {...getInputProps()} />\n                                    <div className={classes.dropZoneWrapper}>\n                                        {certificate.name === '' ? (\n                                            <div>\n                                                <Icon style={{ fontSize: 56 }}>cloud_upload</Icon>\n                                                <Typography>\n                                                    <FormattedMessage\n                                                        id={\n                                                            'Apis.Details.Endpoints.GeneralConfiguration'\n                                                                + '.UploadCertificate.click.or.drop.to.upload.file'\n                                                        }\n                                                        defaultMessage={\n                                                            'Click or drag the certificate'\n                                                                + ' file to upload.'\n                                                        }\n                                                    />\n                                                </Typography>\n                                            </div>\n                                        ) : iff(\n                                            isRejected,\n                                            <div classNames={classes.uploadedFile}>\n                                                <InsertDriveFileIcon color='error' fontSize='large' />\n                                                <Box fontSize='h6.fontSize' color='error' fontWeight='fontWeightLight'>\n                                                    <Grid xs={12}>\n                                                        {certificate.name}\n                                                    </Grid>\n                                                    <Grid xs={12}>\n                                                        <Typography variant='caption' color='error'>\n                                                            <FormattedMessage\n                                                                id={\n                                                                    'Apis.Details.Endpoints.GeneralConfiguration'\n                                                            + '.UploadCertificate.invalid.file'\n                                                                }\n                                                                defaultMessage='Invalid file type'\n                                                            />\n                                                        </Typography>\n                                                    </Grid>\n                                                </Box>\n                                            </div>,\n                                            <div className={classes.uploadedFile}>\n                                                <InsertDriveFileIcon color='primary' fontSize='large' />\n                                                <Box fontSize='h6.fontSize' fontWeight='fontWeightLight'>\n                                                    <Typography>\n                                                        {certificate.name}\n                                                    </Typography>\n                                                </Box>\n                                            </div>,\n                                        )}\n                                    </div>\n                                </div>\n                            )}\n                        </Dropzone>\n                    </div>\n                </Grid>\n            </DialogContent>\n            <DialogActions>\n                <Button onClick={closeCertificateUpload}>\n                    <FormattedMessage\n                        id='Apis.Details.Endpoints.GeneralConfiguration.UploadCertificate.cancel.button'\n                        defaultMessage='Close'\n                    />\n                </Button>\n                <Button\n                    onClick={saveCertificate}\n                    variant='contained'\n                    color='primary'\n                    autoFocus\n                    disabled={\n                        alias === '' || (aliasValidity && !aliasValidity.isValid)\n                            || (!isMutualSSLEnabled && endpoint === '')\n                            || certificate.name === ''\n                            || (isMutualSSLEnabled && isPoliciesEmpty)\n                            || isSaving || (aliasList && aliasList.includes(alias)) || isRejected\n                    }\n                >\n                    <FormattedMessage\n                        id='Apis.Details.Endpoints.GeneralConfiguration.UploadCertificate.config.save.button'\n                        defaultMessage='Save'\n                    />\n                    {isSaving && <CircularProgress size={24} />}\n                </Button>\n            </DialogActions>\n        </Dialog>\n    );\n}\n\nUploadCertificate.defaultProps = {\n    isMutualSSLEnabled: false,\n    endpoints: [],\n};\n\nUploadCertificate.propTypes = {\n    certificates: PropTypes.shape({}).isRequired,\n    uploadCertificate: PropTypes.func.isRequired,\n    isMutualSSLEnabled: PropTypes.bool,\n    setUploadCertificateOpen: PropTypes.func.isRequired,\n    uploadCertificateOpen: PropTypes.bool.isRequired,\n    endpoints: PropTypes.shape([]),\n    aliasList: PropTypes.shape([]).isRequired,\n};\n","/**\n * Copyright (c)  WSO2 Inc. (http://wso2.com) All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the 'License');\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an 'AS IS' BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React, { useEffect, useState } from 'react';\nimport { isRestricted } from 'AppData/AuthManager';\nimport { useAPI } from 'AppComponents/Apis/Details/components/ApiContext';\nimport { makeStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport {\n    Button,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogTitle,\n    Grid,\n    Icon,\n    IconButton,\n    List,\n    ListItem,\n    ListItemAvatar,\n    ListItemSecondaryAction,\n    ListItemText,\n    Typography,\n} from '@material-ui/core';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport UploadCertificate from 'AppComponents/Apis/Details/Endpoints/GeneralConfiguration/UploadCertificate';\nimport API from '../../../../../data/api';\n\nconst useStyles = makeStyles((theme) => ({\n    fileinput: {\n        display: 'none',\n    },\n    dropZoneWrapper: {\n        height: '100%',\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        justifyContent: 'center',\n        '& span.material-icons': {\n            color: theme.palette.primary.main,\n        },\n    },\n    uploadedFile: {\n        fontSize: 11,\n    },\n    certificatesHeader: {\n        fontWeight: 600,\n        marginTop: theme.spacing(1),\n    },\n    addCertificateBtn: {\n        borderColor: '#c4c4c4',\n        borderRadius: '8px',\n        borderStyle: 'dashed',\n        borderWidth: 'thin',\n    },\n    certificateList: {\n        maxHeight: '250px',\n        overflow: 'auto',\n    },\n    certDetailsHeader: {\n        fontWeight: '600',\n    },\n    uploadCertDialogHeader: {\n        fontWeight: '600',\n    },\n    alertWrapper: {\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems: 'center',\n    },\n    warningIcon: {\n        marginRight: 13,\n        color: theme.custom.warningColor,\n        '& .material-icons': {\n            fontSize: 30,\n        },\n    },\n    deleteIcon: {\n        color: theme.palette.error.dark,\n        cursor: 'pointer',\n    },\n    deleteIconDisable: {\n        color: theme.palette.disabled,\n    },\n}));\n/**\n * TODO: Generalize this component to work in Configuration page , upload mutual SSL certificates action\n * in source/src/app/components/Apis/Details/Configuration/components/APISecurity/components/TransportLevel.jsx ~tmkb\n * The base component for advanced endpoint configurations.\n * @param {any} props The input props.\n * @returns {any} The HTML representation of the Certificates.\n */\nfunction Certificates(props) {\n    const {\n        certificates, uploadCertificate, deleteCertificate, isMutualSSLEnabled, apiId, endpoints, aliasList,\n    } = props;\n    const [certificateList, setCertificateList] = useState([]);\n    const [openCertificateDetails, setOpenCertificateDetails] = useState({ open: false, anchor: null, details: {} });\n    const [certificateToDelete, setCertificateToDelete] = useState({ open: false, alias: '' });\n    const [isDeleting, setDeleting] = useState(false);\n    const [uploadCertificateOpen, setUploadCertificateOpen] = useState(false);\n    const classes = useStyles();\n    const [apiFromContext] = useAPI();\n\n\n    /**\n     * Show the selected certificate details in a popover.\n     *\n     * @param {any} event The button click event.\n     * @param {string} certAlias  The alias of the certificate which information is required.\n     * */\n    const showCertificateDetails = (event, certAlias) => {\n        if (!isMutualSSLEnabled) {\n            API.getCertificateStatus(certAlias)\n                .then((response) => {\n                    setOpenCertificateDetails({\n                        details: response.body,\n                        open: true,\n                        alias: certAlias,\n                        anchor: event.currentTarget,\n                    });\n                })\n                .catch((err) => {\n                    console.error(err);\n                });\n        } else {\n            API.getClientCertificateStatus(certAlias, apiId)\n                .then((response) => {\n                    setOpenCertificateDetails({\n                        details: response.body,\n                        open: true,\n                        alias: certAlias,\n                        anchor: event.currentTarget,\n                    });\n                })\n                .catch((error) => {\n                    console.error(error);\n                });\n        }\n    };\n\n    /**\n     * Delete certificate represented by the alias.\n     *\n     * @param {string} certificateAlias The alias of the certificate that is needed to be deleted.\n     * */\n    const deleteCertificateByAlias = (certificateAlias) => {\n        setDeleting(true);\n        deleteCertificate(certificateAlias)\n            .then(() => setCertificateToDelete({ open: false, alias: '' }))\n            .finally(() => setDeleting(false));\n    };\n\n    useEffect(() => {\n        setCertificateList(certificates);\n    }, [certificates]);\n\n    return (\n        <Grid container direction='column'>\n            {/* TODO: Add list of existing certificates */}\n            <Grid>\n                <Typography className={classes.certificatesHeader}>\n                    <FormattedMessage\n                        id='Apis.Details.Endpoints.GeneralConfiguration.Certificates.certificates'\n                        defaultMessage='Certificates'\n                    />\n                </Typography>\n            </Grid>\n            <Grid item>\n                <List>\n                    <ListItem\n                        button\n                        disabled={(isRestricted(['apim:api_create'], apiFromContext))}\n                        className={classes.addCertificateBtn}\n                        onClick={() => setUploadCertificateOpen(true)}\n                    >\n                        <ListItemAvatar>\n                            <IconButton>\n                                <Icon>add</Icon>\n                            </IconButton>\n                        </ListItemAvatar>\n                        <ListItemText primary='Add Certificate' />\n                    </ListItem>\n                </List>\n                <List className={classes.certificateList}>\n                    {certificateList.length > 0 ? (\n                        certificateList.map((cert) => {\n                            return (\n                                <ListItem>\n                                    <ListItemAvatar>\n                                        <Icon>lock</Icon>\n                                    </ListItemAvatar>\n                                    {isMutualSSLEnabled\n                                        ? (<ListItemText primary={cert.alias} secondary={cert.tier} />)\n                                        : <ListItemText primary={cert.alias} secondary={cert.endpoint} />}\n\n                                    <ListItemSecondaryAction>\n                                        <IconButton\n                                            edge='end'\n                                            onClick={(event) => showCertificateDetails(event, cert.alias)}\n                                        >\n                                            <Icon>info</Icon>\n                                        </IconButton>\n                                        <IconButton\n                                            disabled={isRestricted(['apim:api_create'], apiFromContext)}\n                                            onClick={() => setCertificateToDelete({ open: true, alias: cert.alias })}\n                                        >\n                                            <Icon className={isRestricted(['apim:api_create'], apiFromContext)\n                                                ? classes.deleteIconDisable : classes.deleteIcon}\n                                            >\n                                                {' '}\ndelete\n                                            </Icon>\n                                        </IconButton>\n                                    </ListItemSecondaryAction>\n                                </ListItem>\n                            );\n                        })\n                    ) : (\n                        <ListItem>\n                            <ListItemAvatar>\n                                <Icon color='primary'>info</Icon>\n                            </ListItemAvatar>\n                            <ListItemText>You do not have any certificates uploaded</ListItemText>\n                        </ListItem>\n                    )}\n                </List>\n            </Grid>\n            <Dialog open={certificateToDelete.open}>\n                <DialogTitle>\n                    <Typography className={classes.uploadCertDialogHeader}>\n                        <FormattedMessage\n                            id='Apis.Details.Endpoints.GeneralConfiguration.Certificates.deleteCertificate'\n                            defaultMessage='Delete Certificate'\n                        />\n                    </Typography>\n                </DialogTitle>\n                <DialogContent className={classes.alertWrapper}>\n                    <Typography>\n                        <FormattedMessage\n                            id='Apis.Details.Endpoints.GeneralConfiguration.Certificates.confirm.certificate.delete'\n                            defaultMessage='Do you want to delete '\n                        />\n                        {' '}\n                        { certificateToDelete.alias + '?'}\n                    </Typography>\n                </DialogContent>\n                <DialogActions>\n                    <Button\n                        onClick={() => deleteCertificateByAlias(certificateToDelete.alias)}\n                        variant='contained'\n                        color='primary'\n                        disabled={isDeleting}\n                        autoFocus\n                    >\n                        <FormattedMessage\n                            id='Apis.Details.Endpoints.GeneralConfiguration.Certificates.delete.ok.button'\n                            defaultMessage='OK'\n                        />\n                        {isDeleting && <CircularProgress size={24} />}\n\n                    </Button>\n                    <Button onClick={() => setCertificateToDelete({ open: false, alias: '' })}>\n                        <FormattedMessage\n                            id='Apis.Details.Endpoints.GeneralConfiguration.Certificates.delete.cancel.button'\n                            defaultMessage='Cancel'\n                        />\n                    </Button>\n                </DialogActions>\n            </Dialog>\n            <Dialog open={openCertificateDetails.open}>\n                <DialogTitle>\n                    <Typography className={classes.certDetailsHeader}>\n                        <FormattedMessage\n                            id='Apis.Details.Endpoints.GeneralConfiguration.Certificates.certificate.details.of'\n                            defaultMessage='Details of'\n                        />\n                        {' ' + openCertificateDetails.alias}\n                    </Typography>\n                </DialogTitle>\n                <DialogContent>\n                    <Typography>\n                        <FormattedMessage\n                            id='Apis.Details.Endpoints.GeneralConfiguration.Certificates.status'\n                            defaultMessage='Status'\n                        />\n                        {' : ' + openCertificateDetails.details.status}\n                    </Typography>\n                    <Typography>\n                        <FormattedMessage\n                            id='Apis.Details.Endpoints.GeneralConfiguration.Certificates.subject'\n                            defaultMessage='Subject'\n                        />\n                        {' : ' + openCertificateDetails.details.subject}\n                    </Typography>\n                </DialogContent>\n                <DialogActions>\n                    <Button\n                        onClick={() => setOpenCertificateDetails({ open: false, anchor: null, details: {} })}\n                        color='primary'\n                    >\n                        <FormattedMessage\n                            id='Apis.Details.Endpoints.GeneralConfiguration.Certificates.details.close.button'\n                            defaultMessage='Close'\n                        />\n                    </Button>\n                </DialogActions>\n            </Dialog>\n            <UploadCertificate\n                endpoints={endpoints}\n                certificates={certificates}\n                uploadCertificate={uploadCertificate}\n                isMutualSSLEnabled={isMutualSSLEnabled}\n                setUploadCertificateOpen={setUploadCertificateOpen}\n                uploadCertificateOpen={uploadCertificateOpen}\n                aliasList={aliasList}\n            />\n        </Grid>\n    );\n}\n\nCertificates.defaultProps = {\n    isMutualSSLEnabled: false,\n    apiId: '',\n};\n\nCertificates.propTypes = {\n    classes: PropTypes.shape({\n        fileinput: PropTypes.shape({}),\n        button: PropTypes.shape({}),\n    }).isRequired,\n    certificates: PropTypes.shape({}).isRequired,\n    uploadCertificate: PropTypes.func.isRequired,\n    deleteCertificate: PropTypes.func.isRequired,\n    apiId: PropTypes.string,\n    isMutualSSLEnabled: PropTypes.bool,\n    endpoints: PropTypes.shape([]).isRequired,\n    aliasList: PropTypes.shape([]).isRequired,\n};\nexport default injectIntl((Certificates));\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Grid from '@material-ui/core/Grid';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControl from '@material-ui/core/FormControl';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport Typography from '@material-ui/core/Typography';\nimport HelpOutline from '@material-ui/icons/HelpOutline';\nimport { FormattedMessage } from 'react-intl';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { isRestricted } from 'AppData/AuthManager';\nimport { useAPI } from 'AppComponents/Apis/Details/components/ApiContext';\nimport { API_SECURITY_MUTUAL_SSL } from './APISecurity/components/apiSecurityConstants';\n\nconst useStyles = makeStyles((theme) => ({\n    error: {\n        color: theme.palette.error.main,\n    },\n}));\n/**\n *\n *\n * @export\n * @param {*} props\n * @returns\n */\nexport default function Transports(props) {\n    const { api, configDispatcher, securityScheme } = props;\n    const [apiFromContext] = useAPI();\n    const classes = useStyles();\n    const isMutualSSLEnabled = securityScheme.includes(API_SECURITY_MUTUAL_SSL);\n    const Validate = () => {\n        if (api.transport && api.transport.length === 0) {\n            return (\n                <Typography>\n                    <FormattedMessage\n                        id='Apis.Details.Configuration.components.transport.empty'\n                        defaultMessage='Please select at least one transport!'\n                    />\n                </Typography>\n            );\n        } else if (isMutualSSLEnabled && !api.transport.includes('https')) {\n            return (\n                <FormattedMessage\n                    id='Apis.Details.Configuration.components.transport.sslHttps'\n                    defaultMessage='Please select Https as transport with mutual SSL!'\n                />\n            );\n        }\n        return null; // No errors :-)\n    };\n    return (\n        <Grid container spacing={1} alignItems='flex-start'>\n            <Grid item>\n                <FormControl component='fieldset'>\n                    <FormLabel component='legend'>\n                        <FormattedMessage\n                            id='Apis.Details.Configuration.Configuration.transports'\n                            defaultMessage='Transports'\n                        />\n                    </FormLabel>\n                    <FormGroup style={{ display: 'flow-root' }}>\n                        <FormControlLabel\n                            control={(\n                                <Checkbox\n                                    disabled={isRestricted(['apim:api_create'], apiFromContext)}\n                                    checked={api.transport\n                                        ? api.transport.includes('http') : null}\n                                    onChange={({ target: { checked } }) => configDispatcher({\n                                        action: 'transport',\n                                        event: { checked, value: 'http' },\n                                    })}\n                                    value='http'\n                                    color='primary'\n                                />\n                            )}\n                            label='HTTP'\n                        />\n                        <FormControlLabel\n                            control={(\n                                <Checkbox\n                                    disabled={isRestricted(['apim:api_create'], apiFromContext)}\n                                    checked={api.transport\n                                        ? api.transport.includes('https') : null}\n                                    onChange={({ target: { checked } }) => configDispatcher({\n                                        action: 'transport',\n                                        event: { checked, value: 'https' },\n                                    })}\n                                    value='https'\n                                    color='primary'\n                                />\n                            )}\n                            label='HTTPS'\n                        />\n                    </FormGroup>\n                </FormControl>\n            </Grid>\n            <Grid item>\n                <Tooltip\n                    title={(\n                        <FormattedMessage\n                            id='Apis.Details.Configuration.components.Transports.tooltip'\n                            defaultMessage={\n                                'API will be exposed in selected transport(s) in the gateway(s)'\n                                + ' If Mutual SSL option is selected, a trusted client'\n                                + ' certificate should be presented to access the API'\n                            }\n                        />\n                    )}\n                    aria-label='Transports'\n                    placement='right-end'\n                    interactive\n                >\n                    <HelpOutline />\n                </Tooltip>\n            </Grid>\n            <Grid item>\n                <span className={classes.error}>\n                    <Validate />\n                </span>\n            </Grid>\n        </Grid>\n    );\n}\n\n\nTransports.propTypes = {\n    api: PropTypes.shape({}).isRequired,\n    configDispatcher: PropTypes.func.isRequired,\n};\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport Grid from '@material-ui/core/Grid';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport Certificates from 'AppComponents/Apis/Details/Endpoints/GeneralConfiguration/Certificates';\nimport { isRestricted } from 'AppData/AuthManager';\nimport { useAPI } from 'AppComponents/Apis/Details/components/ApiContext';\nimport API from 'AppData/api';\nimport Alert from 'AppComponents/Shared/Alert';\nimport Transports from 'AppComponents/Apis/Details/Configuration/components/Transports.jsx';\n\nimport {\n    API_SECURITY_MUTUAL_SSL,\n    API_SECURITY_MUTUAL_SSL_MANDATORY,\n    DEFAULT_API_SECURITY_OAUTH2,\n    API_SECURITY_BASIC_AUTH,\n    API_SECURITY_API_KEY,\n} from './apiSecurityConstants';\n\nconst useStyles = makeStyles((theme) => ({\n    expansionPanel: {\n        marginBottom: theme.spacing(1),\n    },\n    expansionPanelDetails: {\n        flexDirection: 'column',\n    },\n    bottomSpace: {\n        marginBottom: theme.spacing(4),\n    },\n    subHeading: {\n        fontSize: '1rem',\n        fontWeight: 400,\n        margin: 0,\n        display: 'inline-flex',\n        lineHeight: 1.5,\n    },\n}));\n\n/**\n *\n *\n * @export\n * @param {*} props\n * @returns\n */\nfunction TransportLevel(props) {\n    const {\n        haveMultiLevelSecurity, securityScheme, configDispatcher, intl, id, api,\n    } = props;\n    const isMutualSSLEnabled = securityScheme.includes(API_SECURITY_MUTUAL_SSL);\n    const [apiFromContext] = useAPI();\n    const [clientCertificates, setClientCertificates] = useState([]);\n    const classes = useStyles();\n\n    /**\n     * Method to upload the certificate content by calling the rest api.\n     *\n     * @param {string} certificate The certificate needs to be associated with the API\n     * @param {string} policy The tier to be used for the certificate.\n     * @param {string} alias The alias of the certificate to be deleted.\n     *\n     * */\n    const saveClientCertificate = (certificate, policy, alias) => {\n        return API.addClientCertificate(id, certificate, policy, alias).then((resp) => {\n            if (resp.status === 201) {\n                Alert.info(intl.formatMessage({\n                    id: 'Apis.Details.Configuration.components.APISecurity.TranportLevel.certificate.add.success',\n                    defaultMessage: 'Certificate added successfully',\n                }));\n                const tmpCertificates = [...clientCertificates];\n                tmpCertificates.push({\n                    apiId: resp.obj.apiId,\n                    alias: resp.obj.alias,\n                    tier: resp.obj.tier,\n                });\n                setClientCertificates(tmpCertificates);\n            }\n        }).catch((error) => {\n            if (error.response) {\n                Alert.error(error.response.body.description);\n            } else {\n                Alert.error(intl.formatMessage({\n                    id: 'Apis.Details.Configuration.components.APISecurity.TranportLevel.certificate.alias.error',\n                    defaultMessage: 'Something went wrong while adding the API certificate',\n                }));\n            }\n        });\n    };\n\n    /**\n     * Method to delete the selected certificate.\n     *\n     * @param {string} alias The alias of the certificate to be deleted.\n     * */\n    const deleteClientCertificate = (alias) => {\n        return API.deleteClientCertificate(alias, id).then((resp) => {\n            setClientCertificates(() => {\n                if (resp.status === 200) {\n                    return clientCertificates.filter((cert) => {\n                        return cert.alias !== alias;\n                    });\n                } else {\n                    return -1;\n                }\n            });\n            Alert.info(intl.formatMessage({\n                id: 'Apis.Details.Configuration.components.APISecurity.TranportLevel.certificate.delete.success',\n                defaultMessage: 'Certificate Deleted Successfully',\n            }));\n        }).catch((error) => {\n            if (error.response) {\n                Alert.error(error.response.body.description);\n            } else {\n                Alert.info(intl.formatMessage({\n                    id: 'Apis.Details.Configuration.components.APISecurity.TranportLevel.certificate.delete.error',\n                    defaultMessage: 'Error while deleting certificate',\n                }));\n            }\n        });\n    };\n\n    // Get the client certificates from backend.\n    useEffect(() => {\n        API.getAllClientCertificates(id).then((resp) => {\n            const { certificates } = resp.obj;\n            setClientCertificates(certificates);\n        }).catch((err) => {\n            console.error(err);\n            setClientCertificates([]);\n        });\n    }, []);\n\n    let mandatoryValue = 'optional';\n    // If not mutual ssl security is selected, no mandatory values should be pre-selected\n    if (!isMutualSSLEnabled) {\n        mandatoryValue = 'null';\n    } else if (\n        !(securityScheme.includes(DEFAULT_API_SECURITY_OAUTH2) || securityScheme.includes(API_SECURITY_BASIC_AUTH)\n            || securityScheme.includes(API_SECURITY_API_KEY))\n    ) {\n        mandatoryValue = API_SECURITY_MUTUAL_SSL_MANDATORY;\n    } else if (securityScheme.includes(API_SECURITY_MUTUAL_SSL_MANDATORY)) {\n        mandatoryValue = API_SECURITY_MUTUAL_SSL_MANDATORY;\n    }\n    return (\n        <>\n            <Grid item xs={12}>\n                <ExpansionPanel className={classes.expansionPanel}>\n                    <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\n                        <Typography className={classes.subHeading} variant='h6' component='h4'>\n                            <FormattedMessage\n                                id='Apis.Details.Configuration.Components.APISecurity.Components.\n                                    TransportLevel.transport.level.security'\n                                defaultMessage='Transport Level Security'\n                            />\n                        </Typography>\n                    </ExpansionPanelSummary>\n                    <ExpansionPanelDetails className={classes.expansionPanelDetails}>\n                        <Transports api={api} configDispatcher={configDispatcher} securityScheme={securityScheme} />\n                        <FormControlLabel\n                            control={(\n                                <Checkbox\n                                    disabled={isRestricted(['apim:api_create'], apiFromContext)}\n                                    checked={isMutualSSLEnabled}\n                                    onChange={({ target: { checked, value } }) => configDispatcher({\n                                        action: 'securityScheme',\n                                        event: { checked, value },\n                                    })}\n                                    value={API_SECURITY_MUTUAL_SSL}\n                                    color='primary'\n                                />\n                            )}\n                            label='Mutual SSL'\n                        />\n                        {isMutualSSLEnabled && (\n                            <FormControl component='fieldset'>\n                                <RadioGroup\n                                    aria-label='HTTP security SSL mandatory selection'\n                                    name={API_SECURITY_MUTUAL_SSL_MANDATORY}\n                                    value={mandatoryValue}\n                                    onChange={({ target: { name, value } }) => configDispatcher({\n                                        action: 'securityScheme',\n                                        event: { name, value },\n                                    })}\n                                    row\n                                >\n                                    <FormControlLabel\n                                        value={API_SECURITY_MUTUAL_SSL_MANDATORY}\n                                        control={(\n                                            <Radio\n                                                disabled={!haveMultiLevelSecurity\n                                                || isRestricted(['apim:api_create'], apiFromContext)}\n                                                color='primary'\n                                            />\n                                        )}\n                                        label='Mandatory'\n                                        labelPlacement='end'\n                                    />\n                                    <FormControlLabel\n                                        value='optional'\n                                        control={(\n                                            <Radio\n                                                disabled={!haveMultiLevelSecurity\n                                                || isRestricted(['apim:api_create'], apiFromContext)}\n                                                color='primary'\n                                            />\n                                        )}\n                                        label='Optional'\n                                        labelPlacement='end'\n                                    />\n                                </RadioGroup>\n                                <FormHelperText>\n                                    <FormattedMessage\n                                        id='Apis.Details.Configuration.components.APISecurity.http.mandatory'\n                                        defaultMessage='Choose whether Transport level security is mandatory or\n                                        optional'\n                                    />\n                                </FormHelperText>\n                            </FormControl>\n                        )}\n                        {isMutualSSLEnabled && (\n                            // TODO:\n                            // This is half baked!!!\n                            // Refactor the Certificate component to share its capabilities in here and\n                            // endpoints page ~tmkb\n                            <Certificates\n                                isMutualSSLEnabled={isMutualSSLEnabled}\n                                certificates={clientCertificates}\n                                uploadCertificate={saveClientCertificate}\n                                deleteCertificate={deleteClientCertificate}\n                                apiId={id}\n                            />\n                        )}\n                    </ExpansionPanelDetails>\n                </ExpansionPanel>\n            </Grid>\n        </>\n    );\n}\n\nTransportLevel.propTypes = {\n    configDispatcher: PropTypes.func.isRequired,\n    haveMultiLevelSecurity: PropTypes.bool.isRequired,\n    securityScheme: PropTypes.arrayOf(PropTypes.string).isRequired,\n    intl: PropTypes.shape({}).isRequired,\n    id: PropTypes.string.isRequired,\n    api: PropTypes.shape({}).isRequired,\n};\n\nexport default injectIntl((TransportLevel));\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport Grid from '@material-ui/core/Grid';\nimport { FormattedMessage } from 'react-intl';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport ApiContext, { useAPI } from 'AppComponents/Apis/Details/components/ApiContext';\n\nimport {\n    API_SECURITY_MUTUAL_SSL_MANDATORY,\n    DEFAULT_API_SECURITY_OAUTH2,\n    API_SECURITY_BASIC_AUTH,\n    API_SECURITY_API_KEY,\n    API_SECURITY_OAUTH_BASIC_AUTH_API_KEY_MANDATORY,\n    API_SECURITY_MUTUAL_SSL,\n} from './components/apiSecurityConstants';\nimport ApplicationLevel from './components/ApplicationLevel';\nimport TransportLevel from './components/TransportLevel';\n\n\nconst useStyles = makeStyles((theme) => ({\n    error: {\n        color: theme.palette.error.main,\n    },\n    bottomSpace: {\n        marginBottom: theme.spacing(4),\n    },\n}));\n\n/**\n *\n *\n * @export\n * @param {*} props\n * @returns\n */\nexport default function APISecurity(props) {\n    const {\n        api: { securityScheme, id },\n        configDispatcher,\n        api,\n    } = props;\n    const apiContext = useContext(ApiContext);\n    const isAPIProduct = apiContext.api.apiType === 'APIProduct';\n    let isEndpointAvailable;\n    let isPrototyped;\n    if (isAPIProduct) {\n        isEndpointAvailable = false;\n        isPrototyped = false;\n    } else {\n        isEndpointAvailable = apiContext.api.endpointConfig !== null;\n        isPrototyped = apiContext.api.endpointConfig !== null\n             && apiContext.api.endpointConfig.implementation_status === 'prototyped';\n    }\n\n\n    const haveMultiLevelSecurity = securityScheme.includes(API_SECURITY_MUTUAL_SSL)\n        && (securityScheme.includes(API_SECURITY_BASIC_AUTH)\n        || securityScheme.includes(\n            DEFAULT_API_SECURITY_OAUTH2,\n        ) || securityScheme.includes(API_SECURITY_API_KEY));\n    const classes = useStyles();\n    const [apiFromContext] = useAPI();\n\n    // Check the validation conditions and return an error message\n    const Validate = () => {\n        let resourcesWithSecurity;\n        if (apiFromContext.apiType === 'APIProduct') {\n            const apiList = apiFromContext.apis;\n            for (const apiInProduct in apiList) {\n                if (Object.prototype.hasOwnProperty.call(apiList, apiInProduct)) {\n                    resourcesWithSecurity = apiList[apiInProduct].operations.findIndex(\n                        (op) => op.authType !== 'None',\n                    ) > -1;\n                    if (resourcesWithSecurity) {\n                        break;\n                    }\n                }\n            }\n        } else {\n            resourcesWithSecurity = apiFromContext.operations.findIndex((op) => op.authType !== 'None') > -1;\n        }\n\n        if (\n            !securityScheme.includes(API_SECURITY_MUTUAL_SSL)\n            && !securityScheme.includes(API_SECURITY_BASIC_AUTH)\n            && !securityScheme.includes(DEFAULT_API_SECURITY_OAUTH2)\n            && !securityScheme.includes(API_SECURITY_API_KEY)\n            && resourcesWithSecurity\n        ) {\n            return (\n                <Typography className={classes.bottomSpace}>\n                    <FormattedMessage\n                        id='Apis.Details.Configuration.components.APISecurity.emptySchemas'\n                        defaultMessage='Please select at least one API security method!'\n                    />\n                </Typography>\n            );\n        } else if (\n            // User has enabled both security levels and set both levels as optional\n            haveMultiLevelSecurity\n            && !(\n                securityScheme.includes(API_SECURITY_MUTUAL_SSL_MANDATORY)\n                || securityScheme.includes(API_SECURITY_OAUTH_BASIC_AUTH_API_KEY_MANDATORY)\n            )\n        ) {\n            return (\n                <Typography className={classes.bottomSpace}>\n                    <FormattedMessage\n                        id='Apis.Details.Configuration.components.APISecurity.allOptional'\n                        defaultMessage=\"Please select at least one API security level as 'Mandatory'!\"\n                    />\n                </Typography>\n            );\n        }\n        return null; // No errors :-)\n    };\n    return (\n        <>\n            <Grid container spacing={2} alignItems='flex-start'>\n                {(isAPIProduct || (!isEndpointAvailable || (isEndpointAvailable && !isPrototyped)))\n                && (\n                    <>\n                        <TransportLevel\n                            haveMultiLevelSecurity={haveMultiLevelSecurity}\n                            securityScheme={securityScheme}\n                            configDispatcher={configDispatcher}\n                            api={api}\n                            id={id}\n                        />\n                        <ApplicationLevel\n                            haveMultiLevelSecurity={haveMultiLevelSecurity}\n                            securityScheme={securityScheme}\n                            api={api}\n                            configDispatcher={configDispatcher}\n                            id={id}\n                        />\n                        <Grid item>\n                            <span className={classes.error}>\n                                <Validate />\n                            </span>\n                        </Grid>\n                    </>\n                )}\n            </Grid>\n        </>\n    );\n}\n\nAPISecurity.propTypes = {\n    api: PropTypes.shape({}).isRequired,\n    configDispatcher: PropTypes.func.isRequired,\n};\n","/*\n * Copyright (c) 2017, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { FormattedMessage } from 'react-intl';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport Table from '@material-ui/core/Table';\nimport TextField from '@material-ui/core/TextField';\nimport TableCell from '@material-ui/core/TableCell';\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport TableRow from '@material-ui/core/TableRow';\nimport PropTypes from 'prop-types';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableHead from '@material-ui/core/TableHead';\nimport Box from '@material-ui/core/Box';\n\n\nconst useStyles = makeStyles((theme) => ({\n    searchWrapper: {\n        width: '100%',\n        marginBottom: theme.spacing(2),\n    },\n}));\n\n/**\n *\n * @param {any} props The props passed to the layout\n * @returns {any} HTML representation.\n */\nexport default function UpdateComplexity(props) {\n    const classes = useStyles();\n    const [filterKeyWord, setFilter] = useState('');\n    const {\n        setList, typelist, list,\n    } = props;\n\n    /**\n     * Filter the information by Types.\n     */\n\n    const setFilterByKeyWord = (event) => {\n        setFilter(event.target.value.toLowerCase());\n    };\n\n    return (\n        <>\n            <Grid item md={2}>\n                <Box mt={4} pb={2}>\n                    <div className={classes.searchWrapper}>\n                        <TextField\n                            id='outlined-full-width'\n                            label='Type'\n                            placeholder='Search By Types'\n                            onChange={(e) => setFilterByKeyWord(e, typelist)}\n                            fullWidth\n                            variant='outlined'\n                            InputLabelProps={{\n                                shrink: true,\n                            }}\n                        />\n                    </div>\n                </Box>\n            </Grid>\n            <Grid item md={12}>\n                <Table stickyHeader>\n                    <TableHead>\n                        <TableRow>\n                            <TableCell>\n                                <Typography variant='subtitle2'>\n                                    <FormattedMessage\n                                        id='Apis.Details.QueryAnalysis.UpdateComplexity.typeName'\n                                        defaultMessage='Type'\n                                    />\n                                </Typography>\n                            </TableCell>\n                            <TableCell>\n                                <Typography variant='subtitle2'>\n                                    <FormattedMessage\n                                        id='Apis.Details.QueryAnalysis.UpdateComplexity.fieldcomplexity'\n                                        defaultMessage='Fields'\n                                    />\n                                </Typography>\n                            </TableCell>\n                            <TableCell>\n                                <Typography variant='subtitle2'>\n                                    <FormattedMessage\n                                        id='Apis.Details.QueryAnalysis.UpdateComplexity.fieldcomplexitysum'\n                                        defaultMessage='Sum of the Complexity'\n                                    />\n                                </Typography>\n                            </TableCell>\n                        </TableRow>\n                    </TableHead>\n                    <TableBody>\n                        {typelist.filter(\n                            (item) => item.type.toLowerCase().includes(filterKeyWord),\n                        ).map((typename) => {\n                            return (\n                                <TableRow style={{ borderStyle: 'hidden' }}>\n                                    <TableCell>\n                                        <Typography variant='body1'>\n                                            {typename.type}\n                                        </Typography>\n                                    </TableCell>\n                                    <TableCell>\n                                        <ExpansionPanel>\n                                            <ExpansionPanelSummary\n                                                expandIcon={<ExpandMoreIcon />}\n                                                aria-controls='panel1a-content'\n                                                id='panel1a-header'\n                                            />\n                                            <ExpansionPanelDetails>\n                                                <Grid item md={12}>\n                                                    <Table>\n                                                        <TableRow>\n                                                            <TableCell>\n                                                                <b>Field</b>\n                                                            </TableCell>\n                                                            <TableCell>\n                                                                <b>ComplexityValue</b>\n                                                            </TableCell>\n                                                        </TableRow>\n                                                        {list.map((respond, index) => ((respond.type === typename.type)\n                                                     && (\n                                                         <TableRow>\n                                                             <TableCell>\n                                                                 {respond.field}\n                                                             </TableCell>\n                                                             <TableCell>\n                                                                 <TextField\n                                                                     id='complexityValue'\n                                                                     label='complexityValue'\n                                                                     margin='normal'\n                                                                     variant='outlined'\n                                                                     value={respond.complexityValue}\n                                                                     onChange={(event) => {\n                                                                         const newArr = [...list];\n                                                                         newArr[index] = {\n                                                                             type: respond.type,\n                                                                             field: respond.field,\n                                                                             complexityValue: +event.target.value,\n                                                                         };\n                                                                         setList(newArr);\n                                                                     }}\n                                                                 />\n                                                             </TableCell>\n                                                         </TableRow>\n                                                     )))}\n                                                    </Table>\n                                                </Grid>\n                                            </ExpansionPanelDetails>\n                                        </ExpansionPanel>\n                                    </TableCell>\n                                    <TableCell>\n                                        <Typography variant='body1'>\n                                            {typename.summation}\n                                        </Typography>\n                                    </TableCell>\n                                </TableRow>\n                            );\n                        })}\n                    </TableBody>\n                </Table>\n            </Grid>\n        </>\n    );\n}\n\nUpdateComplexity.propTypes = {\n    setList: PropTypes.func.isRequired,\n    list: PropTypes.arrayOf(\n        PropTypes.shape({\n            type: PropTypes.string,\n            field: PropTypes.string,\n            complexityValue: PropTypes.number,\n        }),\n    ).isRequired,\n    typelist: PropTypes.arrayOf(\n        PropTypes.shape({\n            type: PropTypes.string,\n            summation: PropTypes.number,\n        }),\n    ).isRequired,\n};\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Grid } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport { FormattedMessage } from 'react-intl';\nimport Button from '@material-ui/core/Button';\nimport Paper from '@material-ui/core/Paper';\nimport EditRounded from '@material-ui/icons/EditRounded';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Container from '@material-ui/core/Container';\nimport Api from 'AppData/api';\nimport Alert from 'AppComponents/Shared/Alert';\nimport { Progress } from 'AppComponents/Shared';\nimport UpdateComplexity from '../../QueryAnalysis/UpdateComplexity';\n\nconst useStyles = makeStyles(() => ({\n    content: {\n        flexGrow: 1,\n    },\n    itemWrapper: {\n        width: 'auto',\n        display: 'flex',\n    },\n    FormControl: {\n        padding: 10,\n        width: '100%',\n        marginTop: 0,\n        display: 'flex',\n        flexDirection: 'row',\n    },\n    subTitle: {\n        marginTop: 20,\n    },\n    subTitleDescription: {\n        marginBottom: 10,\n    },\n    flowWrapper: {\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems: 'center',\n        marginBottom: 10,\n    },\n    subHeading: {\n        fontSize: '1rem',\n        fontWeight: 400,\n        margin: 0,\n        display: 'inline-flex',\n        lineHeight: 1.5,\n    },\n    heading: {\n        margin: 'auto',\n        color: 'rgba(0, 0, 0, 0.40)',\n    },\n    paper: {\n        padding: '10px 24px',\n        width: 'auto',\n    },\n    editIcon: {\n        position: 'absolute',\n        top: 8,\n        right: 0,\n    },\n    dialogPaper: {\n        minHeight: '95vh',\n        maxHeight: '95vh',\n        minWidth: '150vh',\n        maxWidth: '150vh',\n    },\n}));\n\n/**\n * The base component of the GraphQL Query Analysis.\n * @param {any} props The props passed to the layout\n * @returns {any} HTML representation.\n */\nexport default function GraphQLQueryAnalysis(props) {\n    const {\n        api,\n        setUpdateComplexityList,\n    } = props;\n    const [open, setOpen] = useState(false);\n    const classes = useStyles();\n    const [list, setList] = useState(null);\n    const [typelist, setTypeList] = useState([]);\n\n    /**\n     * Get Summation of field's complexity value of all types\n     * @param {Object of array} List\n     */\n    function findSummation(List) {\n        const type = [...new Set(List.map((respond) => respond.type))];\n        const array = [];\n        type.map((respond) => {\n            const ob = {};\n            ob.type = respond;\n            ob.summation = 0;\n            List.map((obj) => {\n                if (obj.type === respond) {\n                    ob.summation += obj.complexityValue;\n                }\n                return ob;\n            });\n            array.push(ob);\n            return array;\n        });\n        setTypeList(array);\n    }\n\n    /**\n     * Set the Initial Complexity Values to the field's\n     */\n\n    function setInitialComplexity() {\n        const apiId = api.id;\n        const apiClient = new Api();\n        const promisedComplexityType = apiClient.getGraphqlPoliciesComplexityTypes(apiId);\n        promisedComplexityType\n            .then((res) => {\n                const array = [];\n                res.typeList.map((respond) => {\n                    respond.fieldList.map((ob) => {\n                        const obj = {};\n                        obj.type = respond.type;\n                        obj.field = ob;\n                        obj.complexityValue = 1;\n                        array.push(obj);\n                        return ob;\n                    });\n                    return array;\n                });\n                setList(array);\n                findSummation(array);\n            });\n    }\n\n    useEffect(() => {\n        const apiId = api.id;\n        const apiClient = new Api();\n        const promisedComplexity = apiClient.getGraphqlPoliciesComplexity(apiId);\n        promisedComplexity\n            .then((res) => {\n                setList(res.list);\n                findSummation(res.list);\n                if (res.list.length === 0) {\n                    setInitialComplexity();\n                }\n            })\n            .catch((error) => {\n                const { response } = error;\n                if (response.body) {\n                    const { description } = response.body;\n                    Alert.error(description);\n                }\n            });\n    }, []);\n\n\n    /**\n    * Edit Custom Complexity Values\n    */\n    function editComplexity() {\n        setUpdateComplexityList(list);\n        findSummation(list);\n        setOpen(false);\n    }\n    /**\n     * set open state of the dialog box\n     */\n    const handleClickOpen = () => {\n        setOpen(true);\n    };\n\n    const handleClose = () => {\n        setOpen(false);\n    };\n\n    if (list === null) {\n        return <Progress />;\n    }\n\n    return (\n        <>\n            <Paper className={classes.paper} spacing={2}>\n                <Grid container spacing={2} alignItems='flex-start'>\n                    <Grid item md={12} style={{ position: 'relative', display: 'inline-flex' }}>\n                        <Typography className={classes.subHeading} variant='h6'>\n                            <FormattedMessage\n                                id='Apis.Details.Configurartion.components.QueryAnalysis'\n                                defaultMessage='Query Analysis'\n                            />\n                        </Typography>\n                        <Typography className={classes.heading}>\n\n                            <span>update complexity</span>\n\n                        </Typography>\n                        <Button\n                            className={classes.editIcon}\n                            size='small'\n                            onClick={handleClickOpen}\n                        >\n                            <EditRounded />\n                        </Button>\n                    </Grid>\n                </Grid>\n            </Paper>\n            <Dialog\n                classes={{ paper: classes.dialogPaper }}\n                open={open}\n                aria-labelledby='responsive-dialog-title'\n            >\n                <DialogTitle id='responsive-dialog-title'>\n                    <Typography className={classes.subHeading} variant='h4'>\n                        <FormattedMessage\n                            id='Apis.Details.Configurartion.components.QueryAnalysis.edit'\n                            defaultMessage='Edit Complexity Values'\n                        />\n                    </Typography>\n                </DialogTitle>\n                <DialogContent dividers>\n                    <DialogContentText>\n                        <Container fixed>\n                            <UpdateComplexity\n                                list={list}\n                                setList={setList}\n                                typelist={typelist}\n                            />\n                        </Container>\n                    </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Grid item>\n                        <Button\n                            variant='contained'\n                            color='primary'\n                            onClick={editComplexity}\n                            className={classes.saveButton}\n                        >\n\n                            <FormattedMessage\n                                id='Apis.Details.QyeryAnalysis.UpdateComplexity.save'\n                                defaultMessage='Set'\n                            />\n\n                        </Button>\n                    </Grid>\n                    <Button onClick={handleClose} color='primary'>\n                        <FormattedMessage\n                            id='Apis.Details.Configurartion.components.QueryAnalysis.cancle.btn'\n                            defaultMessage='Cancel'\n                        />\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        </>\n    );\n}\n\nGraphQLQueryAnalysis.propTypes = {\n    api: PropTypes.shape({}).isRequired,\n    setUpdateComplexityList: PropTypes.func.isRequired,\n};\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, {\n    useReducer, useContext, useState, useEffect,\n} from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport { Link } from 'react-router-dom';\nimport Box from '@material-ui/core/Box';\nimport Button from '@material-ui/core/Button';\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Alert from 'AppComponents/Shared/Alert';\nimport ArrowForwardIcon from '@material-ui/icons/ArrowForward';\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\nimport isEmpty from 'lodash/isEmpty';\nimport cloneDeep from 'lodash.clonedeep';\nimport Api from 'AppData/api';\nimport { APIContext } from 'AppComponents/Apis/Details/components/ApiContext';\nimport { isRestricted } from 'AppData/AuthManager';\nimport ResponseCaching from './components/ResponseCaching';\nimport CORSConfiguration from './components/CORSConfiguration';\nimport SchemaValidation from './components/SchemaValidation';\nimport MaxBackendTps from './components/MaxBackendTps';\nimport Flow from './components/Flow';\nimport Endpoints from './components/Endpoints';\nimport APISecurity from './components/APISecurity/APISecurity';\nimport QueryAnalysis from './components/QueryAnalysis';\nimport {\n    DEFAULT_API_SECURITY_OAUTH2,\n    API_SECURITY_BASIC_AUTH,\n    API_SECURITY_API_KEY,\n    API_SECURITY_OAUTH_BASIC_AUTH_API_KEY_MANDATORY,\n    API_SECURITY_MUTUAL_SSL_MANDATORY,\n    API_SECURITY_MUTUAL_SSL,\n} from './components/APISecurity/components/apiSecurityConstants';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        padding: theme.spacing(3, 2),\n    },\n    titleWrapper: {\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems: 'center',\n        marginBottom: theme.spacing(3),\n    },\n    mainTitle: {\n        paddingLeft: 0,\n    },\n    paper: {\n        padding: theme.spacing(3),\n    },\n    paperCenter: {\n        padding: theme.spacing(3),\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    heading: {\n        fontSize: '1.1rem',\n        fontWeight: 400,\n        marginBottom: theme.spacing(0),\n    },\n    itemPadding: {\n        marginBottom: theme.spacing(3),\n    },\n    arrowForwardIcon: {\n        fontSize: 50,\n        color: '#ccc',\n        position: 'absolute',\n        top: 90,\n        right: -43,\n    },\n    arrowBackIcon: {\n        fontSize: 50,\n        color: '#ccc',\n        position: 'absolute',\n        top: 30,\n        right: -71,\n    },\n    expansionPanel: {\n        marginBottom: theme.spacing(1),\n    },\n    expansionPanelDetails: {\n        flexDirection: 'column',\n    },\n    subHeading: {\n        fontSize: '1rem',\n        fontWeight: 400,\n        margin: 0,\n        display: 'inline-flex',\n        lineHeight: '38px',\n    },\n    info: {\n        display: 'flex',\n        height: '100%',\n    },\n}));\n\n/**\n *\n * Deep coping the properties in API object (what ever the object in the state),\n * making sure that no direct mutations happen when updating the state.\n * You should know the shape of the object that you are keeping in the state,\n * @param {Object} api\n * @returns {Object} Deep copy of an object\n */\nfunction copyAPIConfig(api) {\n    const apiConfigJson = {\n        id: api.id,\n        name: api.name,\n        description: api.description,\n        lifeCycleStatus: api.lifeCycleStatus,\n        accessControl: api.accessControl,\n        authorizationHeader: api.authorizationHeader,\n        responseCachingEnabled: api.responseCachingEnabled,\n        cacheTimeout: api.cacheTimeout,\n        visibility: api.visibility,\n        isDefaultVersion: api.isDefaultVersion,\n        enableSchemaValidation: api.enableSchemaValidation,\n        accessControlRoles: [...api.accessControlRoles],\n        visibleRoles: [...api.visibleRoles],\n        tags: [...api.tags],\n        maxTps: api.maxTps,\n        wsdlUrl: api.wsdlUrl,\n        transport: [...api.transport],\n        securityScheme: [...api.securityScheme],\n        keyManagers: [...api.keyManagers || []],\n        corsConfiguration: {\n            corsConfigurationEnabled: api.corsConfiguration.corsConfigurationEnabled,\n            accessControlAllowCredentials: api.corsConfiguration.accessControlAllowCredentials,\n            accessControlAllowOrigins: [...api.corsConfiguration.accessControlAllowOrigins],\n            accessControlAllowHeaders: [...api.corsConfiguration.accessControlAllowHeaders],\n            accessControlAllowMethods: [...api.corsConfiguration.accessControlAllowMethods],\n        },\n    };\n    return apiConfigJson;\n}\n/**\n * This component handles the basic configurations UI in the API details page\n *\n * @export\n * @param {*} props\n * @returns\n */\nexport default function RuntimeConfiguration() {\n    const [keyManagersConfigured, setKeyManagersConfigured] = useState([]);\n    /**\n     *\n     * Reduce the configuration UI related actions in to updated state\n     * @param {*} state current state\n     * @param {*} configAction dispatched configuration action\n     * @returns {Object} updated state\n     */\n    function configReducer(state, configAction) {\n        const { action, value, event } = configAction;\n        const nextState = { ...copyAPIConfig(state) };\n        switch (action) {\n            case 'description':\n            case 'isDefaultVersion':\n            case 'authorizationHeader':\n            case 'responseCachingEnabled':\n            case 'cacheTimeout':\n            case 'enableSchemaValidation':\n            case 'accessControl':\n            case 'visibility':\n            case 'maxTps':\n            case 'tags':\n                nextState[action] = value;\n                return nextState;\n            case 'accessControlRoles':\n                return { ...copyAPIConfig(state), [action]: value };\n            case 'visibleRoles':\n                return { ...copyAPIConfig(state), [action]: value };\n            case 'securityScheme':\n                // If event came from mandatory selector of either Application level or Transport level\n                if (\n                    [API_SECURITY_MUTUAL_SSL_MANDATORY, API_SECURITY_OAUTH_BASIC_AUTH_API_KEY_MANDATORY]\n                        .includes(event.name)\n                ) {\n                    // If user select not mandatory (optional) , Remove the respective schema, else add it\n                    if (event.value === 'optional') {\n                        return {\n                            ...copyAPIConfig(state),\n                            [action]: state[action].filter((schema) => schema !== event.name),\n                        };\n                    } else if (state[action].includes(event.name)) {\n                        return state; // Add for completeness, Ideally there couldn't exist this state\n                    } else {\n                        return { ...copyAPIConfig(state), [action]: [...state[action], event.name] };\n                    }\n                }\n                // User checked on one of api security schemas (either OAuth, Basic, ApiKey or Mutual SSL)\n                if (event.checked) {\n                    if (state[action].includes(event.value)) {\n                        return state; // Add for completeness, Ideally there couldn't exist this state\n                    } else {\n                        return { ...copyAPIConfig(state), [action]: [...state[action], event.value] };\n                    }\n                } else if (state[action].includes(event.value)) {\n                    // User has unchecked a security schema type\n                    const newState = {\n                        ...copyAPIConfig(state),\n                        [action]: state[action].filter((schema) => schema !== event.value),\n                    };\n                    if (\n                        !(\n                            newState[action].includes(DEFAULT_API_SECURITY_OAUTH2)\n                            || newState[action].includes(API_SECURITY_BASIC_AUTH)\n                            || newState[action].includes(API_SECURITY_API_KEY)\n                        )\n                    ) {\n                        const noMandatoryOAuthBasicAuth = newState[action]\n                            .filter((schema) => schema !== API_SECURITY_OAUTH_BASIC_AUTH_API_KEY_MANDATORY);\n                        return {\n                            ...newState,\n                            [action]: noMandatoryOAuthBasicAuth,\n                        };\n                    } else if (!newState[action].includes(API_SECURITY_MUTUAL_SSL)) {\n                        const noMandatoryMutualSSL = newState[action]\n                            .filter((schema) => schema !== API_SECURITY_MUTUAL_SSL_MANDATORY);\n                        return {\n                            ...newState,\n                            [action]: noMandatoryMutualSSL,\n                        };\n                    }\n\n                    return newState;\n                } else {\n                    return state; // Add for completeness, Ideally there couldn't exist this state\n                }\n            case 'transport':\n                if (event.checked) {\n                    return { ...copyAPIConfig(state), transport: [...state.transport, event.value] };\n                } else {\n                    return {\n                        ...copyAPIConfig(state),\n                        transport: state.transport.filter((transport) => transport !== event.value),\n                    };\n                }\n            case 'accessControlAllowHeaders':\n            case 'accessControlAllowMethods':\n            case 'accessControlAllowCredentials':\n            case 'corsConfigurationEnabled':\n                nextState.corsConfiguration[action] = value;\n                return nextState;\n            case 'accessControlAllowOrigins':\n                if (event.checked) {\n                    nextState.corsConfiguration[action] = [event.value];\n                } else {\n                    nextState.corsConfiguration[action] = event.checked === false ? [] : event.value;\n                }\n                return nextState;\n            case 'keymanagers':\n                nextState.keyManagers = value;\n                return nextState;\n            case 'allKeyManagersEnabled':\n                if (value) {\n                    nextState.keyManagers = ['all'];\n                } else {\n                    nextState.keyManagers = keyManagersConfigured;\n                }\n                return nextState;\n            default:\n                return state;\n        }\n    }\n    const { api, updateAPI } = useContext(APIContext);\n    const [isUpdating, setIsUpdating] = useState(false);\n    const [updateComplexityList, setUpdateComplexityList] = useState(null);\n    const [apiConfig, configDispatcher] = useReducer(configReducer, copyAPIConfig(api));\n    const classes = useStyles();\n    const mediationPolicies = cloneDeep(api.mediationPolicies || []);\n    const [inPolicy, setInPolicy] = useState(mediationPolicies.filter((seq) => seq.type === 'IN')[0]);\n    const [outPolicy, setOutPolicy] = useState(mediationPolicies.filter((seq) => seq.type === 'OUT')[0]);\n    const [faultPolicy, setFaultPolicy] = useState(mediationPolicies.filter((seq) => seq.type === 'FAULT')[0]);\n    const intl = useIntl();\n    useEffect(() => {\n        if (!isRestricted(['apim:api_create'], api)) {\n            Api.keyManagers().then((response) => {\n                const kmNameList = [];\n                if (response.body.list) {\n                    response.body.list.forEach((km) => kmNameList.push(km.name));\n                }\n                setKeyManagersConfigured(kmNameList);\n            })\n                .catch((error) => {\n                    const { response } = error;\n                    if (response.body) {\n                        const { description } = response.body;\n                        Alert.error(description);\n                    }\n                });\n        }\n    }, []);\n\n    const getMediationPoliciesToSave = () => {\n        const NONE = 'none';\n        const newMediationPolicies = [];\n        if (!(isEmpty(inPolicy) || inPolicy.name === NONE)) {\n            newMediationPolicies.push(inPolicy);\n        }\n        if (!(isEmpty(outPolicy) || outPolicy.name === NONE)) {\n            newMediationPolicies.push(outPolicy);\n        }\n        if (!(isEmpty(faultPolicy) || faultPolicy.name === NONE)) {\n            newMediationPolicies.push(faultPolicy);\n        }\n        return newMediationPolicies;\n    };\n    const updateInMediationPolicy = (policy) => {\n        setInPolicy({ id: policy.id, name: policy.name, type: policy.type });\n    };\n    const updateOutMediationPolicy = (policy) => {\n        setOutPolicy({ id: policy.id, name: policy.name, type: policy.type });\n    };\n    const updateFaultMediationPolicy = (policy) => {\n        setFaultPolicy({ id: policy.id, name: policy.name, type: policy.type });\n    };\n\n\n    /**\n     * Update the GraphQL Query Complexity Values\n     */\n    function updateComplexity() {\n        const apiId = apiConfig.id;\n        const apiClient = new Api();\n        const promisedComplexity = apiClient.updateGraphqlPoliciesComplexity(\n            apiId, {\n                list: updateComplexityList,\n            },\n        );\n        promisedComplexity\n            .catch((error) => {\n                const { response } = error;\n                if (response.body) {\n                    const { description } = response.body;\n                    Alert.error(description);\n                }\n            });\n    }\n\n    /**\n     *\n     * Handle the configuration view save button action\n     */\n    function handleSave() {\n        const newMediationPolicies = getMediationPoliciesToSave();\n        if (api.isAPIProduct()) {\n            delete apiConfig.keyManagers; // remove keyManagers property if API type is API Product\n        } else {\n            apiConfig.mediationPolicies = newMediationPolicies;\n        }\n        if (updateComplexityList !== null) {\n            updateComplexity();\n        }\n        // Validate the key managers\n        if (\n            !api.isAPIProduct()\n            && apiConfig.securityScheme.includes('oauth2')\n            && !apiConfig.keyManagers.includes('all')\n            && (apiConfig.keyManagers && apiConfig.keyManagers.length === 0)\n        ) {\n            Alert.error(\n                intl.formatMessage(\n                    {\n                        id: 'Apis.Details.Configuration.RuntimeConfiguration.no.km.error',\n                        defaultMessage: 'Select one or more Key Managers',\n                    },\n                ),\n            );\n            return;\n        }\n        setIsUpdating(true);\n        updateAPI(apiConfig)\n            .catch((error) => {\n                if (error.response) {\n                    Alert.error(error.response.body.description);\n                }\n            })\n            .finally(() => setIsUpdating(false));\n    }\n\n    return (\n        <>\n            <Box pb={3}>\n                <Typography variant='h5' component='h2'>\n                    <FormattedMessage\n                        id='Apis.Details.Configuration.RuntimeConfiguration.topic.header'\n                        defaultMessage='Runtime Configurations'\n                    />\n                </Typography>\n            </Box>\n            <div className={classes.contentWrapper}>\n                <Grid container direction='row' justify='space-around' alignItems='stretch' spacing={8}>\n                    <Grid item xs={12} md={7}>\n                        <Typography className={classes.heading} variant='h6' component='h3'>\n                            <FormattedMessage\n                                id='Apis.Details.Configuration.Configuration.section.request'\n                                defaultMessage='Request'\n                            />\n                        </Typography>\n                        <Grid\n                            direction=' column'\n                            justify='space-between'\n                            alignItems='stretch'\n                            spacing={6}\n                        >\n                            <Grid item xs={12} style={{ marginBottom: 30, position: 'relative' }}>\n                                <Paper className={classes.paper} elevation={0}>\n                                    <APISecurity api={apiConfig} configDispatcher={configDispatcher} />\n                                    <CORSConfiguration api={apiConfig} configDispatcher={configDispatcher} />\n\n                                    {api.type !== 'GRAPHQL'\n                                        && <SchemaValidation api={apiConfig} configDispatcher={configDispatcher} />}\n                                    {!api.isAPIProduct() && (\n                                        <Flow\n                                            api={apiConfig}\n                                            type='IN'\n                                            updateMediationPolicy={updateInMediationPolicy}\n                                            selectedMediationPolicy={inPolicy}\n                                            isRestricted={isRestricted(['apim:api_create'], api)}\n                                        />\n                                    )}\n                                    {api.type === 'GRAPHQL' && (\n                                        <Box mt={3}>\n                                            <QueryAnalysis\n                                                api={apiConfig}\n                                                setUpdateComplexityList={setUpdateComplexityList}\n                                                isRestricted={isRestricted(['apim:api_create'], api)}\n                                            />\n                                        </Box>\n                                    )}\n                                </Paper>\n                                <ArrowForwardIcon className={classes.arrowForwardIcon} />\n                            </Grid>\n                            <Typography className={classes.heading} variant='h6' component='h3'>\n                                <FormattedMessage\n                                    id='Apis.Details.Configuration.Configuration.section.response'\n                                    defaultMessage='Response'\n                                />\n                            </Typography>\n                            <Grid item xs={12} style={{ position: 'relative' }}>\n                                <Box mb={3}>\n                                    <Paper className={classes.paper} elevation={0}>\n                                        {!api.isAPIProduct() && (\n                                            <Box mb={3}>\n                                                <Flow\n                                                    api={apiConfig}\n                                                    type='OUT'\n                                                    updateMediationPolicy={updateOutMediationPolicy}\n                                                    selectedMediationPolicy={outPolicy}\n                                                    isRestricted={isRestricted(['apim:api_create'], api)}\n                                                />\n                                            </Box>\n                                        )}\n                                        <ResponseCaching api={apiConfig} configDispatcher={configDispatcher} />\n                                    </Paper>\n                                    <ArrowBackIcon className={classes.arrowBackIcon} />\n                                </Box>\n                            </Grid>\n                            {!api.isAPIProduct() && (\n                                <>\n                                    <Typography className={classes.heading} variant='h6' component='h3'>\n                                        <FormattedMessage\n                                            id='Apis.Details.Configuration.RuntimeConfiguration.section.fault'\n                                            defaultMessage='Fault'\n                                        />\n                                    </Typography>\n                                    <Grid item xs={12} style={{ position: 'relative' }}>\n                                        <Paper className={classes.paper} elevation={0}>\n                                            <Flow\n                                                api={apiConfig}\n                                                type='FAULT'\n                                                updateMediationPolicy={updateFaultMediationPolicy}\n                                                selectedMediationPolicy={faultPolicy}\n                                                isRestricted={isRestricted(['apim:api_create'], api)}\n                                            />\n                                        </Paper>\n                                    </Grid>\n                                </>\n                            )}\n                        </Grid>\n                    </Grid>\n                    <Grid item xs={12} md={5}>\n                        <Typography className={classes.heading} variant='h6' component='h3'>\n                            <FormattedMessage\n                                id='Apis.Details.Configuration.Configuration.section.backend'\n                                defaultMessage='Backend'\n                            />\n                        </Typography>\n                        <Paper className={classes.paper} style={{ height: 'calc(100% - 75px)' }} elevation={0}>\n                            {!api.isAPIProduct() && (\n                                <>\n                                    <MaxBackendTps api={apiConfig} configDispatcher={configDispatcher} />\n                                    <Endpoints api={api} />\n                                </>\n                            )}\n\n                            {api.isAPIProduct() && (\n                                <Box alignItems='center' justifyContent='center' className={classes.info}>\n                                    <Typography variant='body1'>\n                                        <FormattedMessage\n                                            id='Apis.Details.Configuration.RuntimeConfiguration.backend.api.product.\n                                            endpoint'\n                                            defaultMessage='Please refer respective APIs for endpoint information'\n                                        />\n                                    </Typography>\n                                </Box>\n                            )}\n                        </Paper>\n                    </Grid>\n                </Grid>\n                <Grid container>\n                    <Grid container direction='row' alignItems='center' spacing={1} style={{ marginTop: 20 }}>\n                        <Grid item>\n                            <Button\n                                disabled={isUpdating\n                                || ((apiConfig.visibility === 'RESTRICTED' && apiConfig.visibleRoles.length === 0)\n                                    || isRestricted(['apim:api_create'], api))}\n                                type='submit'\n                                variant='contained'\n                                color='primary'\n                                onClick={handleSave}\n                            >\n                                <FormattedMessage\n                                    id='Apis.Details.Configuration.Configuration.save'\n                                    defaultMessage='Save'\n                                />\n                                {isUpdating && <CircularProgress size={15} />}\n                            </Button>\n                        </Grid>\n                        <Grid item>\n                            <Button\n                                component={Link}\n                                to={'/apis/' + api.id + '/overview'}\n                                aria-label='Cancel'\n                            >\n                                <FormattedMessage\n                                    id='Apis.Details.Configuration.Configuration.cancel'\n                                    defaultMessage='Cancel'\n                                />\n                            </Button>\n                        </Grid>\n                        {isRestricted(['apim:api_create'], api) && (\n                            <Grid item>\n                                <Typography variant='body2' color='primary'>\n                                    <FormattedMessage\n                                        id='Apis.Details.Configuration.Configuration.update.not.allowed'\n                                        defaultMessage={\n                                            '* You are not authorized to update particular fields of'\n                                            + ' the API due to insufficient permissions'\n                                        }\n                                    />\n                                </Typography>\n                            </Grid>\n                        )}\n                    </Grid>\n                </Grid>\n            </div>\n        </>\n    );\n}\n","/*\n * Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport Grid from '@material-ui/core/Grid';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport HelpOutline from '@material-ui/icons/HelpOutline';\nimport { FormattedMessage } from 'react-intl';\nimport Typography from '@material-ui/core/Typography';\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Switch from '@material-ui/core/Switch';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { isRestricted } from 'AppData/AuthManager';\nimport { useAPI } from 'AppComponents/Apis/Details/components/ApiContext';\nimport API from 'AppData/api';\n\n\nconst useStyles = makeStyles((theme) => ({\n    expansionPanel: {\n        marginBottom: theme.spacing(3),\n    },\n    expansionPanelDetails: {\n        flexDirection: 'column',\n        display: 'inline-flex',\n    },\n    iconSpace: {\n        marginLeft: theme.spacing(0.5),\n    },\n    actionSpace: {\n        margin: '-7px auto',\n    },\n    subHeading: {\n        fontSize: '1rem',\n        fontWeight: 400,\n        margin: 0,\n        display: 'inline-flex',\n        lineHeight: 1.5,\n    },\n    keyManagerSelect: {\n        minWidth: 180,\n    },\n}));\n\n/**\n *\n * API Level Rate Limiting configuration\n * @param {*} props\n * @returns\n */\nexport default function APILevelRateLimitingPolicies(props) {\n    const [apiFromContext] = useAPI();\n    const classes = useStyles();\n    const {\n        configDispatcher,\n        api: { apiThrottlingPolicy },\n    } = props;\n    const [apiRateLimits, setApiRateLimits] = useState([]);\n    const handleChange = (event) => {\n        configDispatcher({\n            action: 'apiThrottlingPolicy',\n            value: event.target.value,\n        });\n    };\n\n    useEffect(() => {\n        API.policies('api').then((response) => setApiRateLimits(response.body.list));\n    }, []);\n\n    return (\n        <ExpansionPanel className={classes.expansionPanel} defaultExpanded>\n            <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\n                <Typography className={classes.subHeading} variant='h6'>\n                    <FormattedMessage\n                        id='Apis.Details.Configuration.components.APILevelRateLimitingPolicies.configuration'\n                        defaultMessage='Rate Limiting Configuration'\n                    />\n                    <Tooltip\n                        title={(\n                            <FormattedMessage\n                                id='Apis.Details.APILevelRateLimitingPolicies.components.Configuration.tooltip'\n                                defaultMessage={'Selected Rate Limiting Policy will be applied to all the'\n                                + ' requests of this API.'}\n                            />\n                        )}\n                        aria-label='Rate Limiting Policies'\n                        placement='right-end'\n                        interactive\n                    >\n                        <HelpOutline className={classes.iconSpace} />\n                    </Tooltip>\n                </Typography>\n                <FormControlLabel\n                    className={classes.actionSpace}\n                    control={(\n                        <Switch\n                            disabled={isRestricted(['apim:api_create'], apiFromContext)}\n                            checked={!(apiThrottlingPolicy === null)}\n                            onChange={({ target: { checked } }) => configDispatcher({\n                                action: 'throttlingPoliciesEnabled',\n                                value: checked,\n                            })}\n                            color='primary'\n                        />\n                    )}\n                />\n            </ExpansionPanelSummary>\n            <ExpansionPanelDetails className={classes.expansionPanelDetails}>\n                <Grid container spacing={1} alignItems='center'>\n                    <Grid item md={6} xs={12}>\n                        {!(apiThrottlingPolicy === null) && (\n                            <TextField\n                                disabled={isRestricted(['apim:api_create'], apiFromContext)}\n                                id='operation_throttling_policy'\n                                select\n                                value={apiThrottlingPolicy}\n                                onChange={handleChange}\n                                label='Rate limiting policies'\n                                margin='dense'\n                                variant='outlined'\n                                style={{ display: 'flex', minWidth: 180 }}\n                            >\n                                {apiRateLimits.map((rateLimit) => (\n                                    <MenuItem key={rateLimit.name} value={rateLimit.name}>\n                                        {rateLimit.displayName}\n                                    </MenuItem>\n                                ))}\n                            </TextField>\n                        )}\n                    </Grid>\n                </Grid>\n            </ExpansionPanelDetails>\n        </ExpansionPanel>\n    );\n}\n\nAPILevelRateLimitingPolicies.propTypes = {\n    api: PropTypes.shape({}).isRequired,\n    configDispatcher: PropTypes.func.isRequired,\n};\n","/*\n * Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useReducer, useContext, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport { Link } from 'react-router-dom';\nimport Box from '@material-ui/core/Box';\nimport Button from '@material-ui/core/Button';\nimport { FormattedMessage } from 'react-intl';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Alert from 'AppComponents/Shared/Alert';\nimport ArrowForwardIcon from '@material-ui/icons/SettingsEthernet';\nimport { APIContext } from 'AppComponents/Apis/Details/components/ApiContext';\nimport { isRestricted } from 'AppData/AuthManager';\nimport Endpoints from './components/Endpoints';\nimport KeyManager from './components/KeyManager';\nimport APILevelRateLimitingPolicies from './components/APILevelRateLimitingPolicies';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        padding: theme.spacing(3, 2),\n    },\n    titleWrapper: {\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems: 'center',\n        marginBottom: theme.spacing(3),\n    },\n    boxFlex: {\n        display: 'flex',\n        flexDirection: 'row',\n        flexWrap: 'wrap',\n    },\n    mainTitle: {\n        paddingLeft: 0,\n    },\n    paper: {\n        padding: theme.spacing(3),\n        minHeight: '250px',\n    },\n    paperCenter: {\n        padding: theme.spacing(3),\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    heading: {\n        fontSize: '1.1rem',\n        fontWeight: 400,\n        marginBottom: theme.spacing(1),\n    },\n    itemPadding: {\n        marginBottom: theme.spacing(3),\n    },\n    arrowForwardIcon: {\n        fontSize: 50,\n        color: '#ccc',\n        position: 'absolute',\n        top: 175,\n        right: -55,\n    },\n    expansionPanel: {\n        marginBottom: theme.spacing(1),\n    },\n    expansionPanelDetails: {\n        flexDirection: 'column',\n    },\n    subHeading: {\n        fontSize: '1rem',\n        fontWeight: 400,\n        margin: 0,\n        display: 'inline-flex',\n        lineHeight: '38px',\n    },\n    info: {\n        display: 'flex',\n        height: '100%',\n    },\n}));\n\n/**\n *\n * Deep coping the properties in API object (what ever the object in the state),\n * making sure that no direct mutations happen when updating the state.\n * You should know the shape of the object that you are keeping in the state,\n * @param {Object} api\n * @returns {Object} Deep copy of an object\n */\nfunction copyAPIConfig(api) {\n    const keyManagers = api.apiType === 'APIProduct' ? ['all'] : [...api.keyManagers];\n    return {\n        id: api.id,\n        name: api.name,\n        description: api.description,\n        lifeCycleStatus: api.lifeCycleStatus,\n        accessControl: api.accessControl,\n        authorizationHeader: api.authorizationHeader,\n        responseCachingEnabled: api.responseCachingEnabled,\n        cacheTimeout: api.cacheTimeout,\n        visibility: api.visibility,\n        apiThrottlingPolicy: api.apiThrottlingPolicy,\n        isDefaultVersion: api.isDefaultVersion,\n        enableSchemaValidation: api.enableSchemaValidation,\n        accessControlRoles: [...api.accessControlRoles],\n        visibleRoles: [...api.visibleRoles],\n        tags: [...api.tags],\n        maxTps: api.maxTps,\n        wsdlUrl: api.wsdlUrl,\n        transport: [...api.transport],\n        securityScheme: [...api.securityScheme],\n        corsConfiguration: {\n            corsConfigurationEnabled: api.corsConfiguration.corsConfigurationEnabled,\n            accessControlAllowCredentials: api.corsConfiguration.accessControlAllowCredentials,\n            accessControlAllowOrigins: [...api.corsConfiguration.accessControlAllowOrigins],\n            accessControlAllowHeaders: [...api.corsConfiguration.accessControlAllowHeaders],\n            accessControlAllowMethods: [...api.corsConfiguration.accessControlAllowMethods],\n        },\n        keyManagers,\n    };\n}\n/**\n * This component handles the basic configurations UI in the API details page\n *\n * @export\n * @param {*} props\n * @returns\n */\nexport default function RuntimeConfiguration() {\n    /**\n     *\n     * Reduce the configuration UI related actions in to updated state\n     * @param {*} state current state\n     * @param {*} configAction dispatched configuration action\n     * @returns {Object} updated state\n     */\n    function configReducer(state, configAction) {\n        const { action, value } = configAction;\n        const nextState = { ...copyAPIConfig(state) };\n        switch (action) {\n            case 'apiThrottlingPolicy':\n            case 'maxTps':\n                nextState[action] = value;\n                return nextState;\n            case 'keymanagers':\n                nextState.keyManagers = value;\n                return nextState;\n            case 'throttlingPoliciesEnabled':\n                if (value) {\n                    nextState.apiThrottlingPolicy = '';\n                } else {\n                    nextState.apiThrottlingPolicy = null;\n                }\n                return nextState;\n            case 'allKeyManagersEnabled':\n                if (value) {\n                    nextState.keyManagers = [];\n                } else {\n                    nextState.keyManagers = ['all'];\n                }\n                return nextState;\n            default:\n                return state;\n        }\n    }\n    const { api, updateAPI } = useContext(APIContext);\n    const [isUpdating, setIsUpdating] = useState(false);\n    const [apiConfig, configDispatcher] = useReducer(configReducer, copyAPIConfig(api));\n    const classes = useStyles();\n\n\n    /**\n     *\n     * Handle the configuration view save button action\n     */\n    function handleSave() {\n        setIsUpdating(true);\n\n        updateAPI(apiConfig)\n            .catch((error) => {\n                if (error.response) {\n                    Alert.error(error.response.body.description);\n                }\n            })\n            .finally(() => setIsUpdating(false));\n    }\n\n    return (\n        <>\n            <Box pb={3}>\n                <Typography variant='h5'>\n                    <FormattedMessage\n                        id='Apis.Details.Configuration.RuntimeConfigurationWebSocket.topic.header'\n                        defaultMessage='Runtime Configurations'\n                    />\n                </Typography>\n            </Box>\n            <div className={classes.contentWrapper}>\n                <Grid container direction='row' justify='space-around' alignItems='stretch' spacing={8}>\n                    <Grid item xs={12} md={7} style={{ marginBottom: 30, position: 'relative' }}>\n                        <Typography className={classes.heading} variant='h6'>\n                            <FormattedMessage\n                                id='Apis.Details.Configuration.RuntimeConfigurationWebSocket.section.client.websocket'\n                                defaultMessage='Client Websocket'\n                            />\n                        </Typography>\n                        <div className={classes.boxFlex}>\n                            <Paper\n                                className={classes.paper}\n                                elevation={0}\n                                style={{ display: 'flex', alignItems: 'center' }}\n                            >\n                                <Box pr={3}>\n                                    <KeyManager api={apiConfig} configDispatcher={configDispatcher} />\n                                </Box>\n                                <Box pr={3}>\n                                    <APILevelRateLimitingPolicies api={apiConfig} configDispatcher={configDispatcher} />\n                                </Box>\n                            </Paper>\n                            <ArrowForwardIcon className={classes.arrowForwardIcon} />\n                        </div>\n                    </Grid>\n                    <Grid item xs={12} md={4}>\n                        <Typography className={classes.heading} variant='h6'>\n                            <FormattedMessage\n                                id='Apis.Details.Configuration.RuntimeConfigurationWebSocket.section.backend.websocket'\n                                defaultMessage='Backend Websocket'\n                            />\n                        </Typography>\n                        <Paper className={classes.paper} style={{ height: 'calc(100% - 75px)' }} elevation={0}>\n                            {!api.isAPIProduct() && (\n                                <>\n                                    <Endpoints api={api} />\n                                </>\n                            )}\n                        </Paper>\n                    </Grid>\n                </Grid>\n                <Grid container>\n                    <Grid container direction='row' alignItems='center' spacing={1} style={{ marginTop: 20 }}>\n                        <Grid item>\n                            <Button\n                                disabled={isUpdating\n                                || ((apiConfig.visibility === 'RESTRICTED' && apiConfig.visibleRoles.length === 0)\n                                    || isRestricted(['apim:api_create'], api))}\n                                type='submit'\n                                variant='contained'\n                                color='primary'\n                                onClick={handleSave}\n                            >\n                                <FormattedMessage\n                                    id='Apis.Details.Configuration.Configuration.save'\n                                    defaultMessage='Save'\n                                />\n                                {isUpdating && <CircularProgress size={15} />}\n                            </Button>\n                        </Grid>\n                        <Grid item>\n                            <Link to={'/apis/' + api.id + '/overview'}>\n                                <Button>\n                                    <FormattedMessage\n                                        id='Apis.Details.Configuration.Configuration.cancel'\n                                        defaultMessage='Cancel'\n                                    />\n                                </Button>\n                            </Link>\n                        </Grid>\n                        {isRestricted(['apim:api_create'], api) && (\n                            <Grid item>\n                                <Typography variant='body2' color='primary'>\n                                    <FormattedMessage\n                                        id='Apis.Details.Configuration.Configuration.update.not.allowed'\n                                        defaultMessage={\n                                            '* You are not authorized to update particular fields of'\n                                            + ' the API due to insufficient permissions'\n                                        }\n                                    />\n                                </Typography>\n                            </Grid>\n                        )}\n                    </Grid>\n                </Grid>\n            </div>\n        </>\n    );\n}\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\n/*\n `max-len` es-lint rule has been disabled for the entire file due to the generated svg elements in the file.\n it's impossible to get them under 120 columns rule\n  */\n/* eslint-disable max-len */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\n\nconst styles = () => ({\n    root: {\n        marginTop: 30,\n    },\n});\n\n/**\n *\n *\n * @class LifeCycleImage\n * @extends {React.Component}\n */\nclass LifeCycleImage extends React.Component {\n    /**\n     *\n     *\n     * @param {*} element\n     * @returns\n     * @memberof LifeCycleImage\n     */\n    highLightMe(element) {\n        const style = {};\n        if (!element.startsWith(this.props.lifeCycleStatus.toLowerCase())) {\n            style.opacity = 0.4;\n        }\n        return style;\n    }\n\n    /**\n     *\n     *\n     * @returns\n     * @memberof LifeCycleImage\n     */\n    render() {\n        const { classes } = this.props;\n\n        return (\n            <svg\n                xmlns='http://www.w3.org/2000/svg'\n                width='633'\n                height='244'\n                viewBox='0 0 743.09858 287.34519'\n                id='svg5953'\n                className={classes.root}\n                aria-hidden='true'\n            >\n                <defs id='defs5955'>\n                    <path\n                        transform='scale(.26458)'\n                        id='path5588'\n                        d='m 1738.3694,290.45336 a 290.37688,290.37688 0 0 1 268.3994,-179.55952 290.37688,290.37688 0 0 1 5.8758,0.0595'\n                        style={{ isolation: 'auto', mixBlendMode: 'normal' }}\n                        color='#000'\n                        overflow='visible'\n                        fill='none'\n                        strokeWidth='6.633'\n                        strokeLinejoin='round'\n                    />\n                    <path\n                        transform='scale(.26458)'\n                        id='path5578'\n                        d='m 2103.6746,127.54094 a 290.37688,290.37688 0 0 1 193.3409,265.03704'\n                        style={{ isolation: 'auto', mixBlendMode: 'normal' }}\n                        color='#000'\n                        overflow='visible'\n                        fill='none'\n                        strokeWidth='6.633'\n                        strokeLinejoin='round'\n                    />\n                    <path\n                        transform='scale(.26458)'\n                        id='path5547'\n                        d='m 1748.9295,534.82816 a 290.37688,290.37688 0 0 0 257.8393,156.81941 290.37688,290.37688 0 0 0 5.8709,-0.0593'\n                        style={{ isolation: 'auto', mixBlendMode: 'normal' }}\n                        color='#000'\n                        overflow='visible'\n                        fill='none'\n                        strokeWidth='6.633'\n                        strokeLinejoin='round'\n                    />\n                    <path\n                        transform='scale(.26458)'\n                        id='path4189'\n                        d='m 1748.9295,534.82816 a 290.37688,290.37688 0 0 0 257.8393,156.81941 290.37688,290.37688 0 0 0 5.8709,-0.0593'\n                        style={{ isolation: 'auto', mixBlendMode: 'normal' }}\n                        color='#000'\n                        overflow='visible'\n                        fill='none'\n                        strokeWidth='6.633'\n                        strokeLinejoin='round'\n                    />\n                </defs>\n                <g id='layer1' transform='translate(51.512 4.77)'>\n                    <path d='m 99,13.3622 24,0 0,24 -24,0 z' id='path6746' fill='none' />\n                    <g id='prototyped' style={this.highLightMe('prototyped')}>\n                        <text\n                            id='text6729'\n                            y='6.362'\n                            x='61'\n                            style={{ lineHeight: '125%' }}\n                            fontWeight='400'\n                            fontSize='15'\n                            fontFamily='sans-serif'\n                            letterSpacing='0'\n                            wordSpacing='0'\n                            fill='#2b2b2b'\n                        >\n                            <tspan y='6.362' x='61' id='tspan6731'>\n                                PROTOTYPED\n                            </tspan>\n                        </text>\n                        <path\n                            id='path6748'\n                            d='m 118,16.3622 -4.18,0 c -0.42,-1.16 -1.52,-2 -2.82,-2 -1.3,0 -2.4,0.84 -2.82,2 l -4.18,0 c -1.1,0 -2,0.9 -2,2 l 0,14 c 0,1.1 0.9,2 2,2 l 14,0 c 1.1,0 2,-0.9 2,-2 l 0,-14 c 0,-1.1 -0.9,-2 -2,-2 z m -7,0 c 0.55,0 1,0.45 1,1 0,0.55 -0.45,1 -1,1 -0.55,0 -1,-0.45 -1,-1 0,-0.55 0.45,-1 1,-1 z m -2,14 -4,-4 1.41,-1.41 2.59,2.58 6.59,-6.59 1.41,1.42 -8,8 z'\n                        />\n                    </g>\n                    <path d='m 224.5,133.8622 24,0 0,24 -24,0 z' id='path6762' fill='none' />\n                    <g id='published' style={this.highLightMe('published')}>\n                        <text\n                            id='text6524'\n                            y='125.476'\n                            x='207'\n                            style={{ lineHeight: '125%' }}\n                            fontWeight='400'\n                            fontSize='15'\n                            fontFamily='sans-serif'\n                            letterSpacing='0'\n                            wordSpacing='0'\n                        >\n                            <tspan y='125.476' x='207' id='tspan6526'>\n                                PUBLISHED\n                            </tspan>\n                        </text>\n                        <path\n                            id='path6764'\n                            d='m 240.5,144.8622 c 1.66,0 2.99,-1.34 2.99,-3 0,-1.66 -1.33,-3 -2.99,-3 -1.66,0 -3,1.34 -3,3 0,1.66 1.34,3 3,3 z m -8,0 c 1.66,0 2.99,-1.34 2.99,-3 0,-1.66 -1.33,-3 -2.99,-3 -1.66,0 -3,1.34 -3,3 0,1.66 1.34,3 3,3 z m 0,2 c -2.33,0 -7,1.17 -7,3.5 l 0,2.5 14,0 0,-2.5 c 0,-2.33 -4.67,-3.5 -7,-3.5 z m 8,0 c -0.29,0 -0.62,0.02 -0.97,0.05 1.16,0.84 1.97,1.97 1.97,3.45 l 0,2.5 6,0 0,-2.5 c 0,-2.33 -4.67,-3.5 -7,-3.5 z'\n                        />\n                    </g>\n                    <g id='created' style={this.highLightMe('created')}>\n                        <text\n                            id='text6520'\n                            y='282.362'\n                            x='68'\n                            style={{ lineHeight: '125%' }}\n                            fontWeight='400'\n                            fontSize='15'\n                            fontFamily='sans-serif'\n                            letterSpacing='0'\n                            wordSpacing='0'\n                        >\n                            <tspan y='282.362' x='68' id='tspan6522'>\n                                CREATED\n                            </tspan>\n                        </text>\n                        <path\n                            id='path6778'\n                            d='m 97,238.8622 c -1.1,0 -1.99,0.9 -1.99,2 l -0.01,16 c 0,1.1 0.89,2 1.99,2 l 12.01,0 c 1.1,0 2,-0.9 2,-2 l 0,-12 -6,-6 -8,0 z m 7,7 0,-5.5 5.5,5.5 -5.5,0 z'\n                        />\n                    </g>\n                    <path d='m 91,236.8622 24,0 0,24 -24,0 z' id='path6780' fill='none' />\n                    <g id='deprecated' style={this.highLightMe('deprecated')}>\n                        <text\n                            id='text6536'\n                            y='125.476'\n                            x='397.858'\n                            style={{ lineHeight: '125%' }}\n                            fontWeight='400'\n                            fontSize='15'\n                            fontFamily='sans-serif'\n                            letterSpacing='0'\n                            wordSpacing='0'\n                        >\n                            <tspan y='125.476' x='397.858' id='tspan6538'>\n                                DEPRECATED\n                            </tspan>\n                        </text>\n                        <path\n                            id='path6794'\n                            d='m 433.52944,97.811947 c 0,1.1 0.9,2 2,2 l 8,0 c 1.1,0 2,-0.9 2,-2 l 0,-12 -12,0 0,12 z m 13,-15 -3.5,0 -1,-1 -5,0 -1,1 -3.5,0 0,2 14,0 0,-2 z'\n                        />\n                        <path id='path6796' d='m 427.52944,78.811947 24,0 0,24.000003 -24,0 z' fill='none' />\n                    </g>\n                    <path d='m 427.52944,236.8622 24,0 0,24 -24,0 z' id='path6810' clipRule='evenodd' fill='none' />\n                    <g id='blocked' style={this.highLightMe('blocked')}>\n                        <text\n                            id='text6532'\n                            y='282.362'\n                            x='386.858'\n                            style={{ lineHeight: '125%' }}\n                            fontWeight='400'\n                            fontSize='15'\n                            fontFamily='sans-serif'\n                            letterSpacing='0'\n                            wordSpacing='0'\n                        >\n                            <tspan y='282.362' x='386.858' id='tspan6534'>\n                                BLOCKED\n                            </tspan>\n                        </text>\n                        <path\n                            id='path6812'\n                            d='m 450.22944,255.8622 -9.1,-9.1 c 0.9,-2.3 0.4,-5 -1.5,-6.9 -2,-2 -5,-2.4 -7.4,-1.3 l 4.3,4.3 -3,3 -4.4,-4.3 c -1.2,2.4 -0.7,5.4 1.3,7.4 1.9,1.9 4.6,2.4 6.9,1.5 l 9.1,9.1 c 0.4,0.4 1,0.4 1.4,0 l 2.3,-2.3 c 0.5,-0.4 0.5,-1.1 0.1,-1.4 z'\n                        />\n                    </g>\n                    <g id='retired' style={this.highLightMe('retired')}>\n                        <text\n                            id='text6540'\n                            y='125.483'\n                            x='627.485'\n                            style={{ lineHeight: '125%' }}\n                            fontWeight='400'\n                            fontSize='15'\n                            fontFamily='sans-serif'\n                            letterSpacing='0'\n                            wordSpacing='0'\n                        >\n                            <tspan y='125.483' x='627.485' id='tspan6542'>\n                                RETIRED\n                            </tspan>\n                        </text>\n                        <path\n                            id='path6826'\n                            d='m 663.36667,89.811947 0,2 -13,0 0,-6 9,0 c 2.21,0 4,1.79 4,4 z m -20,3 0,2 6,0 0,2 8,0 0,-2 6,0 0,-2 -20,0 z m 5.14,-1.9 c 1.16,-1.19 1.14,-3.08 -0.04,-4.24 -1.19,-1.16 -3.08,-1.14 -4.24,0.04 -1.16,1.19 -1.14,3.08 0.04,4.24 1.19,1.16 3.08,1.14 4.24,-0.04 z'\n                        />\n                        <path id='path6828' d='m 641.36667,78.811947 24,0 0,24.000003 -24,0 z' fill='none' />\n                    </g>\n                    <g id='published_to_created' style={this.highLightMe('published_to_created')}>\n                        <path\n                            id='path6872'\n                            d='m 235.84375,184.86133 c -11.86654,31.99459 -35.12697,58.48216 -65.32031,74.38281 l -5.4624,15.71344 14.85695,3.63617 c 35.16928,-17.95415 62.42125,-48.3249 76.47461,-85.22656 l -15.28708,7.18109 z'\n                            style={{ isolation: 'auto', mixBlendMode: 'normal' }}\n                            color='#000'\n                            overflow='visible'\n                            fill='#065381'\n                        />\n                        <path\n                            id='path6985'\n                            d='m 178.61585,255.22337 -4.875,15.375 14.5,3.625'\n                            fill='none'\n                            fillRule='evenodd'\n                            stroke='#fff'\n                        />\n                        <path\n                            d='m 187.11585,249.22337 -4.875,15.375 14.5,3.625'\n                            id='path6987'\n                            fill='none'\n                            fillRule='evenodd'\n                            stroke='#fff'\n                        />\n                    </g>\n                    <g id='created_to_published' style={this.highLightMe('created_to_published')}>\n                        <path\n                            id='path6850'\n                            d='m 202.80469,171.18359 c -8.60566,23.79669 -25.78994,43.52064 -48.1836,55.30469 l 15.33148,4.4495 -5.74163,15.30245 c 27.19915,-14.16065 48.15744,-37.93366 58.79687,-66.69335 l -4.08764,-14.98782 z'\n                            style={{ isolation: 'auto', mixBlendMode: 'normal' }}\n                            color='#000'\n                            overflow='visible'\n                            fill='#34b2e4'\n                        />\n                        <path\n                            d='m 200.07828,178.47337 15.66836,-6.25318 3.78013,13.89858'\n                            id='path6979'\n                            fill='none'\n                            fillRule='evenodd'\n                            stroke='#fff'\n                        />\n                        <path\n                            id='path6991'\n                            d='m 195.3937,187.48898 15.66836,-6.25318 3.78013,13.89858'\n                            fill='none'\n                            fillRule='evenodd'\n                            stroke='#fff'\n                        />\n                    </g>\n                    <g id='prototyped_to_published' style={this.highLightMe('prototyped_to_published')}>\n                        <path\n                            id='path6874'\n                            d='m 181.42383,-4.0683594 5.18392,15.3553234 -15.14681,3.480614 c 26.97521,14.497097 48.38501,37.525806 60.88086,65.484375 l 16.41911,5.795641 4.09261,-14.231188 C 238.22018,39.231643 213.06477,12.507292 181.42383,-4.0683594 Z'\n                            style={{ isolation: 'auto', mixBlendMode: 'normal' }}\n                            color='#000'\n                            overflow='visible'\n                            fill='#fe912a'\n                        />\n                        <path\n                            id='path6993'\n                            d='m 228.26421,71.982698 16.39604,5.833631 3.93328,-14.097941'\n                            fill='none'\n                            fillRule='evenodd'\n                            stroke='#fff'\n                        />\n                        <path\n                            d='m 224.76421,65.357698 16.39604,5.833631 3.93328,-14.097941'\n                            id='path6995'\n                            fill='none'\n                            fillRule='evenodd'\n                            stroke='#fff'\n                        />\n                    </g>\n                    <g id='published_to_prototyped' style={this.highLightMe('published_to_prototyped')}>\n                        <path\n                            id='path6855'\n                            d='m 164.61328,27.712891 -16.76273,3.798407 6.57718,15.455499 c 19.64736,10.327117 35.3679,26.809879 44.75391,46.923828 l 6.94786,-12.105746 13.33339,3.763949 C 208.07457,60.73778 188.78631,40.399355 164.61328,27.712891 Z'\n                            style={{ isolation: 'auto', mixBlendMode: 'normal' }}\n                            color='#000'\n                            overflow='visible'\n                            fill='#ffc95c'\n                        />\n                        <path\n                            id='path6997'\n                            d='m 163.43006,52.336437 -6.45235,-15.202795 16.61701,-3.535534'\n                            fill='none'\n                            fillRule='evenodd'\n                            stroke='#fff'\n                        />\n                        <path\n                            d='M 171.82695,57.993291 165.3746,42.790496 181.99161,39.254962'\n                            id='path6999'\n                            fill='none'\n                            fillRule='evenodd'\n                            stroke='#fff'\n                        />\n                    </g>\n                    <g id='created_to_prototyped' style={this.highLightMe('created_to_prototyped')}>\n                        <path\n                            id='path6870'\n                            d='M 35.433594,-4.7226562 C -17.800688,22.43674 -51.366944,77.095386 -51.511719,136.85742 c 0.08726,60.42038 34.333636,115.59607 88.439453,142.48828 l -5.963174,-14.43529 14.818643,-3.6858 C -1.8626488,238.10436 -32.152993,189.83798 -32.251953,136.87891 -32.191581,84.271252 -2.3316563,36.239603 44.818359,12.90625 l 7.576833,-14.3582512 z'\n                            style={{ isolation: 'auto', mixBlendMode: 'normal' }}\n                            color='#000'\n                            overflow='visible'\n                            fill='#8b103e'\n                        />\n                        <path\n                            id='path7001'\n                            d='m 25.625,1.1122031 16.25,3 -7.125,13.7499999'\n                            fill='none'\n                            fillRule='evenodd'\n                            stroke='#fff'\n                        />\n                        <path\n                            d='m 16.375,7.1122031 16.25,2.9999999 -7.125,13.75'\n                            id='path7003'\n                            fill='none'\n                            fillRule='evenodd'\n                            stroke='#fff'\n                        />\n                    </g>\n                    <g id='prototyped_to_created' style={this.highLightMe('prototyped_to_created')}>\n                        <path\n                            id='path6840'\n                            d='M 52.171875,26.720703 C 10.473112,47.61586 -15.897048,90.22032 -16,136.86133 c 0.06835,46.84095 26.630186,89.61173 68.585938,110.43945 l 18.169686,-5.17409 -8.489999,-14.63841 C 27.868397,210.36444 6.0894455,175.28511 6,136.86133 6.0597413,98.328986 27.932967,63.153267 62.464844,46.056641 l -14.466177,-4.2932 z'\n                            style={{ isolation: 'auto', mixBlendMode: 'normal' }}\n                            color='#000'\n                            overflow='visible'\n                            fill='#e34856'\n                        />\n                        <path\n                            id='path7005'\n                            d='m 39.421204,240.07329 17.677669,-4.94975 -7.778174,-14.49569'\n                            fill='none'\n                            fillRule='evenodd'\n                            stroke='#fff'\n                        />\n                        <path\n                            d='m 27.930719,230.8809 17.677669,-4.94975 -7.778174,-14.49569'\n                            id='path7007'\n                            fill='none'\n                            fillRule='evenodd'\n                            stroke='#fff'\n                        />\n                    </g>\n                    <g id='deprecated_to_retired' style={this.highLightMe('deprecated_to_retired')}>\n                        <path\n                            id='rect7009'\n                            d='m 530.25049,110.51652 68.24164,0 9.89949,9.52539 -9.89949,9.40863 -68.24164,0 9.54594,-9.76218 z'\n                            style={{ isolation: 'auto', mixBlendMode: 'normal' }}\n                            color='#000'\n                            overflow='visible'\n                            fill='#5c5c5c'\n                            strokeWidth='6.016'\n                            strokeLinecap='round'\n                            strokeLinejoin='round'\n                        />\n                        <path\n                            id='path7016'\n                            d='m 589.97554,111.03345 9.31051,8.95242 -9.42988,8.89273'\n                            fill='none'\n                            fillRule='evenodd'\n                            stroke='#fff'\n                            strokeWidth='.955'\n                        />\n                        <path\n                            d='m 581.28804,111.03345 9.31051,8.95242 -9.42988,8.89273'\n                            id='path7018'\n                            fill='none'\n                            fillRule='evenodd'\n                            stroke='#fff'\n                            strokeWidth='.955'\n                        />\n                    </g>\n                    <g id='published_to_deprecated' style={this.highLightMe('published_to_deprecated')}>\n                        <path\n                            style={{ isolation: 'auto', mixBlendMode: 'normal' }}\n                            d='m 306.25049,110.51652 68.24164,0 9.89949,9.52539 -9.89949,9.40863 -68.24164,0 9.54594,-9.76218 z'\n                            id='path7020'\n                            color='#000'\n                            overflow='visible'\n                            fill='#5c5c5c'\n                            strokeWidth='6.016'\n                            strokeLinecap='round'\n                            strokeLinejoin='round'\n                        />\n                        <path\n                            d='m 365.97554,111.03345 9.31051,8.95242 -9.42988,8.89273'\n                            id='path7022'\n                            fill='none'\n                            fillRule='evenodd'\n                            stroke='#fff'\n                            strokeWidth='.955'\n                        />\n                        <path\n                            id='path7024'\n                            d='m 357.28804,111.03345 9.31051,8.95242 -9.42988,8.89273'\n                            fill='none'\n                            fillRule='evenodd'\n                            stroke='#fff'\n                            strokeWidth='.955'\n                        />\n                    </g>\n                    <g id='published_to_blocked' style={this.highLightMe('published_to_blocked')}>\n                        <path\n                            style={{ isolation: 'auto', mixBlendMode: 'normal' }}\n                            d='m 306.92162,149.0749 92.7941,75.49823 1.41692,13.66474 -13.63383,0.80053 -92.79411,-75.49822 13.59185,-1.29876 z'\n                            id='path7026'\n                            color='#000'\n                            overflow='visible'\n                            fill='#65daad'\n                            strokeWidth='6.016'\n                            strokeLinecap='round'\n                            strokeLinejoin='round'\n                        />\n                        <path\n                            d='m 392.87565,219.47284 1.33665,12.84698 -12.94218,0.70939'\n                            id='path7028'\n                            fill='none'\n                            fillRule='evenodd'\n                            stroke='#fff'\n                            strokeWidth='.955'\n                        />\n                        <path\n                            id='path7030'\n                            d='m 386.23855,213.86735 1.33664,12.84698 -12.94218,0.70939'\n                            fill='none'\n                            fillRule='evenodd'\n                            stroke='#fff'\n                            strokeWidth='.955'\n                        />\n                    </g>\n                    <g\n                        id='blocked_to_published'\n                        transform='rotate(180 338.919 207.057)'\n                        style={this.highLightMe('blocked_to_published')}\n                    >\n                        <path\n                            id='path7039'\n                            d='m 306.92162,149.0749 92.7941,75.49823 1.41692,13.66474 -13.63383,0.80053 -92.79411,-75.49822 13.59185,-1.29876 z'\n                            style={{ isolation: 'auto', mixBlendMode: 'normal' }}\n                            color='#000'\n                            overflow='visible'\n                            fill='#64d0da'\n                            strokeWidth='6.016'\n                            strokeLinecap='round'\n                            strokeLinejoin='round'\n                        />\n                        <path\n                            id='path7041'\n                            d='m 392.87565,219.47284 1.33665,12.84698 -12.94218,0.70939'\n                            fill='none'\n                            fillRule='evenodd'\n                            stroke='#fff'\n                            strokeWidth='.955'\n                        />\n                        <path\n                            d='m 386.23855,213.86735 1.33664,12.84698 -12.94218,0.70939'\n                            id='path7043'\n                            fill='none'\n                            fillRule='evenodd'\n                            stroke='#fff'\n                            strokeWidth='.955'\n                        />\n                    </g>\n                    <g id='blocked_to_deprecated' style={this.highLightMe('blocked_to_deprecated')}>\n                        <path\n                            style={{ isolation: 'auto', mixBlendMode: 'normal' }}\n                            d='m 427.85405,225.05409 0,-68.24164 9.52539,-9.89949 9.40863,9.89949 0,68.24164 -9.76218,-9.54594 z'\n                            id='path7045'\n                            color='#000'\n                            overflow='visible'\n                            fill='#5c5c5c'\n                            strokeWidth='6.016'\n                            strokeLinecap='round'\n                            strokeLinejoin='round'\n                        />\n                        <path\n                            d='m 428.37098,165.32904 8.95242,-9.31051 8.89273,9.42988'\n                            id='path7047'\n                            fill='none'\n                            fillRule='evenodd'\n                            stroke='#fff'\n                            strokeWidth='.955'\n                        />\n                        <path\n                            id='path7049'\n                            d='m 428.37098,174.01654 8.95242,-9.31051 8.89273,9.42988'\n                            fill='none'\n                            fillRule='evenodd'\n                            stroke='#fff'\n                            strokeWidth='.955'\n                        />\n                    </g>\n                </g>\n            </svg>\n        );\n    }\n}\nLifeCycleImage.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    lifeCycleStatus: PropTypes.string.isRequired,\n};\n\nexport default withStyles(styles)(LifeCycleImage);\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport PropTypes from 'prop-types';\nimport { FormattedMessage } from 'react-intl';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Link } from 'react-router-dom';\nimport Paper from '@material-ui/core/Paper';\nimport CloseIcon from '@material-ui/icons/Close';\nimport CheckIcon from '@material-ui/icons/Check';\nimport green from '@material-ui/core/colors/green';\nimport yellow from '@material-ui/core/colors/yellow';\nimport LaunchIcon from '@material-ui/icons/Launch';\nimport WarningRoundedIcon from '@material-ui/icons/WarningRounded';\n\nconst useStyles = makeStyles((theme) => ({\n    stateButton: {\n        marginRight: theme.spacing(),\n    },\n    paperCenter: {\n        padding: theme.spacing(2),\n        display: 'block',\n        alignItems: 'left',\n        justifyContent: 'center',\n    },\n    iconTrue: {\n        color: green[500],\n        marginRight: theme.spacing(1),\n        display: 'block',\n        justifyContent: 'flex-start',\n        alignItems: 'center',\n    },\n    iconFalse: {\n        color: theme.palette.grey[500],\n        marginRight: theme.spacing(1),\n        display: 'block',\n        justifyContent: 'flex-start',\n        alignItems: 'center',\n    },\n    iconWarn: {\n        color: yellow[700],\n        marginRight: theme.spacing(1),\n        display: 'block',\n        justifyContent: 'flex-start',\n        alignItems: 'center',\n    },\n    grid: {\n        marginTop: theme.spacing(2),\n        display: 'flex',\n        flexDirection: 'row',\n        justifyContent: 'left',\n        alignItems: 'left',\n    },\n    labelsGrid: {\n        fontWeight: 600,\n        marginTop: theme.spacing(3),\n    },\n}));\n/**\n * This component renders the requirements list\n * @param {*} props\n */\nexport default function CheckboxLabels(props) {\n    const classes = useStyles();\n    const {\n        api, isMutualSSLEnabled, isCertAvailable, isAppLayerSecurityMandatory, isBusinessPlanAvailable,\n    } = props;\n    const isEndpointAvailable = api.endpointConfig !== null && !api.endpointConfig.implementation_status;\n    const isEnvironmentAvailable = api.gatewayEnvironments.length !== 0;\n    const isContainerMngEnvironmentAvailable = api.deploymentEnvironments\n        && api.deploymentEnvironments.some((env) => env.clusterName.length > 0);\n    const isPrototypedAvailable = (api.endpointConfig !== null\n        && api.endpointConfig.implementation_status === 'prototyped')\n        || api.endpointImplementationType === 'INLINE';\n\n    return (\n        <Paper className={classes.paperCenter}>\n            <Grid xs={12}>\n                <Typography variant='h6' component='h4'>\n                    <FormattedMessage\n                        id='Apis.Details.Configuration.Configuration.requirements'\n                        defaultMessage='Requirements'\n                    />\n                </Typography>\n                <Typography variant='caption'>\n                    <FormattedMessage\n                        id='Apis.Details.Configuration.Configuration.requirements.state.transition'\n                        defaultMessage='Requirements for next state transition'\n                    />\n                </Typography>\n            </Grid>\n            {(api.lifeCycleStatus === 'CREATED' || api.lifeCycleStatus === 'PROTOTYPED') && (\n                <>\n                    <Grid xs={12} className={classes.labelsGrid}>\n                        <Typography variant='subtitle2' component='h5'>\n                            <FormattedMessage\n                                id='Apis.Details.Configuration.Configuration.publisher'\n                                defaultMessage='Publish'\n                            />\n                        </Typography>\n                    </Grid>\n                    <Grid xs={12}>\n                        <Grid xs={12} className={classes.grid}>\n                            {isEndpointAvailable ? (\n                                <CheckIcon className={classes.iconTrue} />\n                            ) : (\n                                <CloseIcon className={classes.iconFalse} />\n                            )}\n                            <Typography>\n                                <FormattedMessage\n                                    id='Apis.Details.LifeCycle.CheckboxLabels.endpoints.provided'\n                                    defaultMessage='Endpoint provided'\n                                />\n                            </Typography>\n                            <Link to={'/apis/' + api.id + '/endpoints'} aria-label='Endpoint provided'>\n                                <LaunchIcon style={{ marginLeft: '2px' }} color='primary' fontSize='small' />\n                            </Link>\n                        </Grid>\n                        <>\n                            {isAppLayerSecurityMandatory && (\n                                <Grid xs={12} className={classes.grid}>\n                                    {isBusinessPlanAvailable ? (\n                                        <CheckIcon className={classes.iconTrue} />\n                                    ) : (\n                                        <CloseIcon className={classes.iconFalse} />\n                                    )}\n                                    <Typography>\n                                        <FormattedMessage\n                                            id='Apis.Details.LifeCycle.CheckboxLabels.business.plans.selected'\n                                            defaultMessage='Business Plan(s) selected'\n                                        />\n                                    </Typography>\n                                    <Link to={'/apis/' + api.id + '/subscriptions'} aria-label='Business Plan(s)'>\n                                        <LaunchIcon style={{ marginLeft: '2px' }} color='primary' fontSize='small' />\n                                    </Link>\n                                </Grid>\n                            )}\n                            {isMutualSSLEnabled && (\n                                <Grid xs={12} className={classes.grid}>\n                                    {isCertAvailable ? (\n                                        <CheckIcon className={classes.iconTrue} />\n                                    ) : (\n                                        <CloseIcon className={classes.iconFalse} />\n                                    )}\n                                    <Typography>\n                                        <FormattedMessage\n                                            id='Apis.Details.LifeCycle.CheckboxLabels.cert.provided'\n                                            defaultMessage='Certificate provided'\n                                        />\n                                    </Typography>\n                                    <Link\n                                        to={'/apis/' + api.id + '/runtime-configuration'}\n                                        aria-label='Certificate provided'\n                                    >\n                                        <LaunchIcon style={{ marginLeft: '2px' }} color='primary' fontSize='small' />\n                                    </Link>\n                                </Grid>\n                            ) }\n                        </>\n                        <Grid xs={12} className={classes.grid}>\n                            {isEnvironmentAvailable || isContainerMngEnvironmentAvailable ? (\n                                <CheckIcon className={classes.iconTrue} />\n                            ) : (\n                                <WarningRoundedIcon className={classes.iconWarn} />\n                            )}\n                            <Typography>\n                                <FormattedMessage\n                                    id='Apis.Details.LifeCycle.CheckboxLabels.gateway.environments.selected'\n                                    defaultMessage='Gateway Environment(s) selected'\n                                />\n                            </Typography>\n                            <Link to={'/apis/' + api.id + '/environments'} aria-label='Gateway Environment(s)'>\n                                <LaunchIcon style={{ marginLeft: '2px' }} color='primary' fontSize='small' />\n                            </Link>\n                        </Grid>\n                    </Grid>\n                    { api.type !== 'GRAPHQL' && (\n                        <>\n                            <Grid xs={12} className={classes.labelsGrid}>\n                                <Typography variant='subtitle2' component='h4'>\n                                    <FormattedMessage\n                                        id='Apis.Details.Configuration.Configuration.prototype'\n                                        defaultMessage='Deploy as a Prototype'\n                                    />\n                                </Typography>\n                            </Grid>\n                            <Grid xs={12}>\n                                <Grid xs={12} className={classes.grid}>\n                                    {isPrototypedAvailable ? (\n                                        <CheckIcon className={classes.iconTrue} />\n                                    ) : (\n                                        <CloseIcon className={classes.iconFalse} />\n                                    )}\n                                    <Typography>\n                                        <FormattedMessage\n                                            id='Apis.Details.Configuration.Configuration.prototype.endpoints.provided'\n                                            defaultMessage='Prototype Endpoint provided'\n                                        />\n                                    </Typography>\n                                    <Link to={'/apis/' + api.id + '/endpoints'} aria-label='Prototype Endpoint'>\n                                        <LaunchIcon style={{ marginLeft: '2px' }} color='primary' fontSize='small' />\n                                    </Link>\n                                </Grid>\n                                <Grid xs={12} className={classes.grid}>\n                                    {isEnvironmentAvailable || isContainerMngEnvironmentAvailable ? (\n                                        <CheckIcon className={classes.iconTrue} />\n                                    ) : (\n                                        <WarningRoundedIcon className={classes.iconWarn} />\n                                    )}\n                                    <Typography>\n                                        <FormattedMessage\n                                            id='Apis.Details.LifeCycle.CheckboxLabels.gateway.environments.selected'\n                                            defaultMessage='Gateway Environment(s) selected'\n                                        />\n                                    </Typography>\n                                    <Link to={'/apis/' + api.id + '/environments'} aria-label='Gateway Environment(s)'>\n                                        <LaunchIcon style={{ marginLeft: '2px' }} color='primary' fontSize='small' />\n                                    </Link>\n                                </Grid>\n                            </Grid>\n                        </>\n                    )}\n                </>\n            )}\n            {api.lifeCycleStatus === 'PUBLISHED' && (\n                <>\n                    <Grid xs={12} className={classes.labelsGrid}>\n                        <Typography variant='subtitle2'>\n                            <FormattedMessage\n                                id='Apis.Details.Configuration.Configuration.prototype'\n                                defaultMessage='Deploy as a Prototype'\n                            />\n                        </Typography>\n                    </Grid>\n                    <Grid xs={12}>\n                        <Grid xs={12} className={classes.grid}>\n                            {isPrototypedAvailable ? (\n                                <CheckIcon className={classes.iconTrue} />\n                            ) : (\n                                <CloseIcon className={classes.iconFalse} />\n                            )}\n                            <Typography>\n                                <FormattedMessage\n                                    id='Apis.Details.Configuration.Configuration.prototype.endpoints.provided'\n                                    defaultMessage='Prototype Endpoint provided'\n                                />\n                            </Typography>\n                            <Link to={'/apis/' + api.id + '/endpoints'} aria-label='Prototype Endpoint'>\n                                <LaunchIcon style={{ marginLeft: '2px' }} color='primary' fontSize='small' />\n                            </Link>\n                        </Grid>\n                    </Grid>\n                </>\n            )}\n        </Paper>\n    );\n}\n\nCheckboxLabels.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    api: PropTypes.shape({}).isRequired,\n    intl: PropTypes.shape({\n        formatMessage: PropTypes.func,\n    }).isRequired,\n};\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useState } from 'react';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport Box from '@material-ui/core/Box';\nimport PropTypes from 'prop-types';\nimport { useAPI } from 'AppComponents/Apis/Details/components/ApiContext';\nimport Alert from 'AppComponents/Shared/Alert';\nimport {\n    Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle,\n} from '@material-ui/core/';\nimport Slide from '@material-ui/core/Slide';\n\nconst lifecyclePending = (props) => {\n    const { currentState } = props;\n    const intl = useIntl();\n    const [isOpen, setOpen] = useState(false);\n    const [api, updateAPI] = useAPI();\n    const deleteTask = () => {\n        const { id } = api;\n        api.cleanupPendingTask(id)\n            .then(() => {\n                Alert.info(intl.formatMessage({\n                    id: 'Apis.Details.LifeCycle.LifeCycleUpdate.LifecyclePending.success',\n                    defaultMessage: 'Lifecycle task deleted successfully',\n                }));\n                updateAPI();\n            })\n            .catch((errorResponse) => {\n                console.error(errorResponse);\n                Alert.error(intl.formatMessage({\n                    id: 'Apis.Details.LifeCycle.LifeCycleUpdate.LifecyclePending.error',\n                    defaultMessage: 'Error while deleting task',\n                }));\n            });\n    };\n    return (\n        <Paper>\n            <Box display='block' p={2} mt={2}>\n                <Box display='block'>\n                    <Typography variant='h6'>\n                        <FormattedMessage\n                            id='Apis.Details.LifeCycle.LifeCycleUpdate.LifecyclePending.pending'\n                            defaultMessage='Pending lifecycle state change.'\n                        />\n                    </Typography>\n                </Box>\n                <Box display='block' mt={0.5}>\n                    <Typography variant='subtitle2'>\n                        <FormattedMessage\n                            id='Apis.Details.LifeCycle.LifeCycleUpdate.LifecyclePending.current.state'\n                            defaultMessage='Current state is'\n                        />\n                        {' '}\n                        {currentState}\n                    </Typography>\n                </Box>\n                <Box display='flex' mt={2}>\n                    <Button\n                        size='small'\n                        variant='contained'\n                        color='primary'\n                        onClick={() => setOpen(true)}\n                    >\n                        <FormattedMessage\n                            id='Apis.Details.LifeCycle.LifeCycleUpdate.LifecyclePending.delete.task'\n                            defaultMessage='Delete Task'\n                        />\n                    </Button>\n\n                </Box>\n            </Box>\n            <Dialog open={isOpen} transition={Slide}>\n                <DialogTitle>\n                    <FormattedMessage\n                        id='Apis.Details.LifeCycle.LifeCycleUpdate.LifecyclePending.dialog.title'\n                        defaultMessage='Delete Task'\n                    />\n                </DialogTitle>\n                <DialogContent>\n                    <DialogContentText>\n                        <FormattedMessage\n                            id='Apis.Details.LifeCycle.LifeCycleUpdate.LifecyclePending.dialog.text.description'\n                            defaultMessage='The life cycle task will be removed'\n                        />\n                    </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button dense onClick={() => setOpen(false)}>\n                        <FormattedMessage\n                            id='Apis.Details.LifeCycle.LifeCycleUpdate.LifecyclePending.dialog.cancel'\n                            defaultMessage='Cancel'\n                        />\n                    </Button>\n                    <Button\n                        size='small'\n                        variant='text'\n                        color='primary'\n                        onClick={deleteTask}\n                    >\n                        <FormattedMessage\n                            id='Apis.Details.LifeCycle.LifeCycleUpdate.LifecyclePending.dialog,delete'\n                            defaultMessage='Delete'\n                        />\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        </Paper>\n    );\n};\nlifecyclePending.propTypes = {\n    currentState: PropTypes.string.isRequired,\n};\nexport default lifecyclePending;\n","/*\n * Copyright (c) 2017, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { Component } from 'react';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport ApiContext from 'AppComponents/Apis/Details/components/ApiContext';\nimport { injectIntl } from 'react-intl';\nimport API from 'AppData/api';\nimport { CircularProgress } from '@material-ui/core';\nimport { ScopeValidation, resourceMethod, resourcePath } from 'AppData/ScopeValidation';\nimport Alert from 'AppComponents/Shared/Alert';\nimport Banner from 'AppComponents/Shared/Banner';\n\nimport LifeCycleImage from './LifeCycleImage';\nimport CheckboxLabels from './CheckboxLabels';\nimport LifecyclePending from './LifecyclePending';\nimport { API_SECURITY_MUTUAL_SSL_MANDATORY, API_SECURITY_OAUTH_BASIC_AUTH_API_KEY_MANDATORY }\n    from '../Configuration/components/APISecurity/components/apiSecurityConstants';\n\nconst styles = (theme) => ({\n    buttonsWrapper: {\n        marginTop: 40,\n    },\n    stateButton: {\n        marginRight: theme.spacing(),\n    },\n    paperCenter: {\n        padding: theme.spacing(2),\n        display: 'flex',\n        alignItems: 'left',\n        justifyContent: 'left',\n    },\n    subHeading: {\n        fontSize: '1rem',\n        fontWeight: 400,\n        margin: 0,\n        display: 'inline-flex',\n        lineHeight: '38px',\n    },\n});\n\n/**\n *\n *\n * @class LifeCycleUpdate\n * @extends {Component}\n */\nclass LifeCycleUpdate extends Component {\n    /**\n     * @param {*} props @inheritdoc\n     */\n    constructor(props) {\n        super(props);\n        this.updateLifeCycleState = this.updateLifeCycleState.bind(this);\n        this.api = new API();\n        this.WORKFLOW_STATUS = {\n            CREATED: 'CREATED',\n            APPROVED: 'APPROVED',\n        };\n        this.state = {\n            newState: null,\n            isUpdating: null,\n            pageError: null,\n        };\n    }\n\n    /**\n     * @param {*} apiUUID api UUID\n     * @param {*} action life cycle action\n     * @memberof LifeCycleUpdate\n     */\n    updateLCStateOfAPI(apiUUID, action) {\n        this.setState({ isUpdating: action });\n        let promisedUpdate;\n        const lifecycleChecklist = this.props.checkList.map((item) => item.value + ':' + item.checked);\n        if (lifecycleChecklist.length > 0) {\n            promisedUpdate = this.api.updateLcState(apiUUID, action, lifecycleChecklist);\n        } else {\n            promisedUpdate = this.api.updateLcState(apiUUID, action);\n        }\n        promisedUpdate\n            .then((response) => {\n            /* TODO: Handle IO erros ~tmkb */\n                this.props.handleUpdate(true);\n                const newState = response.body.lifecycleState.state;\n                const { workflowStatus } = response.body;\n                this.context.updateAPI({ enableStore: true });\n                this.setState({ newState });\n                const { intl } = this.props;\n\n                if (workflowStatus === this.WORKFLOW_STATUS.CREATED) {\n                    Alert.info(intl.formatMessage({\n                        id: 'Apis.Details.LifeCycle.LifeCycleUpdate.success.createStatus',\n                        defaultMessage: 'Lifecycle state change request has been sent',\n                    }));\n                } else {\n                    Alert.info(intl.formatMessage({\n                        id: 'Apis.Details.LifeCycle.LifeCycleUpdate.success.otherStatus',\n                        defaultMessage: 'Lifecycle state updated successfully',\n                    }));\n                }\n            })\n            .catch((error) => {\n                if (error.response) {\n                    Alert.error(error.response.body.description);\n                    this.setState({ pageError: error.response.body });\n                } else {\n                    // TODO add i18n ~tmkb\n                    const message = 'Something went wrong while updating the lifecycle';\n                    Alert.error(message);\n                    this.setState({ pageError: error.response.body });\n                }\n                console.error(error);\n            })\n            .finally(() => {\n                this.setState({ isUpdating: null });\n            });\n    }\n\n    /**\n     *\n     *\n     * @param {*} event event\n     * @memberof LifeCycleUpdate\n     */\n    updateLifeCycleState(event) {\n        event.preventDefault();\n        let action = event.currentTarget.getAttribute('data-value');\n        if (action === 'Deploy To Test') {\n            action = 'Deploy as a Prototype';\n        }\n        const {\n            api: { id: apiUUID },\n        } = this.props;\n        this.updateLCStateOfAPI(apiUUID, action);\n    }\n\n    /**\n     * @inheritdoc\n     * @memberof LifeCycleUpdate\n     */\n    render() {\n        const {\n            api, lcState, classes, theme, handleChangeCheckList, checkList, certList,\n        } = this.props;\n        const lifecycleStates = [...lcState.availableTransitions];\n        const { newState, pageError } = this.state;\n        const isWorkflowPending = api.workflowStatus && api.workflowStatus === this.WORKFLOW_STATUS.CREATED;\n        const lcMap = new Map();\n        lcMap.set('Published', 'Publish');\n        lcMap.set('Prototyped', 'Deploy as a prototype');\n        lcMap.set('Deprecated', 'Deprecate');\n        lcMap.set('Blocked', 'Block');\n        lcMap.set('Created', 'Create');\n        lcMap.set('Retired', 'Retire');\n        const isPrototype = api.endpointConfig && api.endpointConfig.implementation_status === 'prototyped';\n        const isMutualSSLEnabled = api.securityScheme.includes(API_SECURITY_MUTUAL_SSL_MANDATORY);\n        const isAppLayerSecurityMandatory = api.securityScheme.includes(\n            API_SECURITY_OAUTH_BASIC_AUTH_API_KEY_MANDATORY,\n        );\n        const isCertAvailable = certList.length !== 0;\n        const isBusinessPlanAvailable = api.policies.length !== 0;\n        const lifecycleButtons = lifecycleStates.map((item) => {\n            const state = { ...item, displayName: item.event };\n            if (state.event === 'Deploy as a Prototype') {\n                let { displayName } = state;\n                if (lcState.state === 'Prototyped') {\n                    displayName = 'Redeploy';\n                }\n                return {\n                    ...state,\n                    displayName,\n                    disabled: !isPrototype || api.endpointConfig == null,\n                };\n            }\n            if (state.event === 'Publish') {\n                let { displayName } = state;\n                if (lcState.state === 'Published') {\n                    displayName = 'Redeploy';\n                }\n                return {\n                    ...state,\n                    displayName,\n                    disabled:\n                        api.endpointConfig === null\n                        || (isMutualSSLEnabled && !isCertAvailable)\n                        || (isAppLayerSecurityMandatory && !isBusinessPlanAvailable)\n                        || api.endpointConfig.implementation_status === 'prototyped',\n                };\n            }\n            return {\n                ...state,\n                disabled: false,\n            };\n        });\n        return (\n            <Grid container>\n                {isWorkflowPending ? (\n                    <Grid item xs={12}>\n                        <LifecyclePending currentState={lcState.state} />\n                    </Grid>\n                ) : (\n                    <Grid item xs={12}>\n                        {theme.custom.lifeCycleImage ? (\n                            <img src={theme.custom.lifeCycleImage} alt='life cycles' />\n                        ) : (\n                            <Grid container spacing={3}>\n                                <Grid item xs={8}>\n                                    <LifeCycleImage lifeCycleStatus={newState || api.lifeCycleStatus} />\n                                </Grid>\n                                {(api.lifeCycleStatus === 'CREATED'\n                                    || api.lifeCycleStatus === 'PROTOTYPED') && (\n                                    <Grid item xs={3}>\n                                        <CheckboxLabels\n                                            api={api}\n                                            isMutualSSLEnabled={isMutualSSLEnabled}\n                                            isAppLayerSecurityMandatory={isAppLayerSecurityMandatory}\n                                            isCertAvailable={isCertAvailable}\n                                            isBusinessPlanAvailable={isBusinessPlanAvailable}\n                                        />\n                                    </Grid>\n                                )}\n                            </Grid>\n                        )}\n                    </Grid>\n                )}\n                <Grid item xs={12}>\n                    {!isWorkflowPending && (\n                        <FormGroup row>\n                            {checkList.map((checkItem, index) => (\n                                <FormControlLabel\n                                    key={checkList[index].value}\n                                    control={(\n                                        <Checkbox\n                                            checked={checkList[index].checked}\n                                            onChange={handleChangeCheckList(index)}\n                                            value={checkList[index].value}\n                                            color='primary'\n                                        />\n                                    )}\n                                    label={checkList[index].label}\n                                />\n                            ))}\n                        </FormGroup>\n                    )}\n                    <ScopeValidation resourcePath={resourcePath.API_CHANGE_LC} resourceMethod={resourceMethod.POST}>\n                        <div className={classes.buttonsWrapper}>\n                            {!isWorkflowPending\n                                && lifecycleButtons.map((transitionState) => {\n                                    /* Skip when transitions available for current state ,\n                            this occurs in states where have allowed re-publishing in prototype and published sates */\n                                    return (\n                                        <Button\n                                            disabled={transitionState.disabled || this.state.isUpdating}\n                                            variant='contained'\n                                            color='primary'\n                                            className={classes.stateButton}\n                                            key={transitionState.event}\n                                            data-value={transitionState.event}\n                                            onClick={this.updateLifeCycleState}\n                                        >\n                                            {transitionState.displayName}\n                                            {this.state.isUpdating === transitionState.event && (\n                                                <CircularProgress size={18} />\n                                            )}\n                                        </Button>\n                                    );\n                                })}\n                        </div>\n                    </ScopeValidation>\n                </Grid>\n                {/* Page error banner */}\n                {pageError && (\n                    <Grid item xs={11}>\n                        <Banner\n                            onClose={() => this.setState({ pageError: null })}\n                            disableActions\n                            dense\n                            paperProps={{ elevation: 1 }}\n                            type='error'\n                            message={pageError}\n                        />\n                    </Grid>\n                )}\n                {/* end of Page error banner */}\n            </Grid>\n        );\n    }\n}\n\nLifeCycleUpdate.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    api: PropTypes.shape({}).isRequired,\n    checkList: PropTypes.arrayOf(PropTypes.shape({})).isRequired,\n    lcState: PropTypes.shape({}).isRequired,\n    handleChangeCheckList: PropTypes.func.isRequired,\n    handleUpdate: PropTypes.func.isRequired,\n    theme: PropTypes.shape({}).isRequired,\n    intl: PropTypes.shape({\n        formatMessage: PropTypes.func,\n    }).isRequired,\n};\n\nLifeCycleUpdate.contextType = ApiContext;\n\nexport default withStyles(styles, { withTheme: true })(injectIntl(LifeCycleUpdate));\n","/*\n * Copyright (c) 2017, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Person from '@material-ui/icons/Person';\nimport { withStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport { FormattedMessage } from 'react-intl';\n\nconst styles = (theme) => ({\n    firstCol: {\n        width: 100,\n    },\n    personIcon: {\n        fontSize: theme.typography.fontSize,\n    },\n    avatar: {\n        width: 25,\n        height: 25,\n    },\n});\nconst LifeCycleHistory = (props) => {\n    const { classes } = props;\n    return (\n        <Paper>\n            <Table className={classes.table}>\n                <TableHead>\n                    <TableRow>\n                        <TableCell className={classes.firstCol}>\n                            <FormattedMessage id='Apis.Details.LifeCycle.LifeCycleHistory.user' defaultMessage='User' />\n                        </TableCell>\n                        <TableCell>\n                            <FormattedMessage\n                                id='Apis.Details.LifeCycle.LifeCycleHistory.action'\n                                defaultMessage='Action'\n                            />\n                        </TableCell>\n                        <TableCell>\n                            <FormattedMessage id='Apis.Details.LifeCycle.LifeCycleHistory.time' defaultMessage='Time' />\n                        </TableCell>\n                    </TableRow>\n                </TableHead>\n                <TableBody>\n                    {props.lcHistory.reverse().map((entry) => entry.previousState && (\n                        <TableRow key={entry.postState}>\n                            <TableCell component='th' scope='row'>\n                                <Avatar className={classes.avatar}>\n                                    <Person className={classes.personIcon} />\n                                </Avatar>\n                                <div>{entry.user}</div>\n                            </TableCell>\n                            <TableCell>\n                                <FormattedMessage\n                                    id='Apis.Details.LifeCycle.LifeCycleHistory.lifecycle.state.history'\n                                    defaultMessage='LC has changed from {previous} to {post}'\n                                    values={{ previous: entry.previousState, post: entry.postState }}\n                                />\n                            </TableCell>\n                            <TableCell>{moment(entry.updatedTime).fromNow()}</TableCell>\n                        </TableRow>\n                    ))}\n                </TableBody>\n            </Table>\n        </Paper>\n    );\n};\nLifeCycleHistory.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    lcHistory: PropTypes.arrayOf(PropTypes.shape({})).isRequired,\n};\nexport default withStyles(styles)(LifeCycleHistory);\n","/*\n * Copyright (c) 2017, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { Component } from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport PropTypes from 'prop-types';\nimport Api from 'AppData/api';\nimport { Progress } from 'AppComponents/Shared';\nimport { withStyles } from '@material-ui/core/styles';\nimport { FormattedMessage } from 'react-intl';\nimport { isRestricted } from 'AppData/AuthManager';\nimport ApiContext from 'AppComponents/Apis/Details/components/ApiContext';\n\nimport LifeCycleUpdate from './LifeCycleUpdate';\nimport LifeCycleHistory from './LifeCycleHistory';\n\nconst styles = (theme) => ({\n    root: {\n        flexGrow: 1,\n        marginTop: 10,\n        maxWidth: theme.custom.contentAreaWidth,\n    },\n    titleWrapper: {\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems: 'center',\n    },\n    historyHead: {\n        marginTop: theme.spacing(2),\n        marginBottom: theme.spacing(2),\n    },\n});\n/**\n *\n *\n * @class LifeCycle\n * @extends {Component}\n */\nclass LifeCycle extends Component {\n    /**\n     * Creates an instance of LifeCycle.\n     * @param {Object} props\n     * @memberof LifeCycle\n     */\n    constructor(props) {\n        super(props);\n        this.api = new Api();\n        this.state = {\n            lcHistory: null,\n            checkList: [],\n            certList: [],\n        };\n        this.updateData = this.updateData.bind(this);\n        this.handleChangeCheckList = this.handleChangeCheckList.bind(this);\n    }\n\n    /**\n     *\n     * @inheritdoc\n     * @memberof LifeCycle\n     */\n    componentDidMount() {\n        this.updateData();\n    }\n\n    handleChangeCheckList = (index) => (event, checked) => {\n        const { checkList } = this.state;\n        checkList[index].checked = checked;\n        this.setState({ checkList });\n    };\n\n    /**\n     *\n     *\n     * @memberof LifeCycle\n     */\n    updateData() {\n        const { api: { id } } = this.props;\n        const promisedAPI = Api.get(id);\n        const promisedLcState = this.api.getLcState(id);\n        const privateJetModeEnabled = false;\n        const promisedLcHistory = this.api.getLcHistory(id);\n        const promisedClientCerts = Api.getAllClientCertificates(id);\n        Promise.all([promisedAPI, promisedLcState, promisedLcHistory, promisedClientCerts])\n            .then((response) => {\n                const api = response[0];\n                const lcState = response[1].body;\n                const lcHistory = response[2].body.list;\n                const clientCerts = response[3].body;\n\n                if (privateJetModeEnabled) {\n                    if (!api.hasOwnGateway) {\n                        const transitions = lcState.availableTransitionBeanList;\n                        const PUBLISHED = 'Published';\n\n                        for (const transition of transitions) {\n                            if (transition.targetState === PUBLISHED && lcState.state !== PUBLISHED) {\n                                const publishInPrivateJetMode = {\n                                    event: 'Publish In Private Jet Mode',\n                                    targetState: 'Published In Private Jet Mode',\n                                };\n                                lcState.availableTransitionBeanList.push(publishInPrivateJetMode);\n                            }\n                        }\n                    }\n                }\n                // Creating checklist\n                const checkList = [];\n                let index = 0;\n                for (const item of lcState.checkItems) {\n                    checkList.push({\n                        index,\n                        label: item.name,\n                        value: item.name,\n                        checked: false,\n                    });\n                    index++;\n                }\n                this.setState({\n                    api,\n                    lcState,\n                    lcHistory,\n                    privateJetModeEnabled,\n                    checkList,\n                    certList: [...clientCerts.certificates],\n                });\n            })\n            .catch((error) => {\n                if (process.env.NODE_ENV !== 'production') {\n                    console.error(error);\n                }\n            });\n    }\n\n    /**\n     *\n     *\n     * @returns\n     * @memberof LifeCycle\n     */\n    render() {\n        const { classes } = this.props;\n        const {\n            api, lcState, privateJetModeEnabled, checkList, lcHistory, certList,\n        } = this.state;\n        const apiFromContext = this.context.api;\n        if (apiFromContext && isRestricted(['apim:api_publish'], apiFromContext)) {\n            return (\n                <Grid container direction='row' alignItems='center' spacing={4} style={{ marginTop: 20 }}>\n                    <Grid item>\n                        <Typography variant='body2' color='primary'>\n                            <FormattedMessage\n                                id='Apis.Details.LifeCycle.LifeCycle.change.not.allowed'\n                                defaultMessage={\n                                    '* You are not authorized to change the life cycle state of the API'\n                                    + ' due to insufficient permissions'\n                                }\n                            />\n                        </Typography>\n                    </Grid>\n                </Grid>\n            );\n        }\n        if (!lcState) {\n            return <Progress />;\n        }\n        return (\n            <>\n                <Typography variant='h4' component='h2' gutterBottom>\n                    <FormattedMessage id='Apis.Details.LifeCycle.LifeCycle.lifecycle' defaultMessage='Lifecycle' />\n                </Typography>\n                <div className={classes.contentWrapper}>\n                    <Grid container>\n                        <Grid item xs={12}>\n                            <LifeCycleUpdate\n                                handleUpdate={this.updateData}\n                                lcState={lcState}\n                                checkList={checkList}\n                                handleChangeCheckList={this.handleChangeCheckList}\n                                api={api}\n                                privateJetModeEnabled={privateJetModeEnabled}\n                                certList={certList}\n                            />\n                        </Grid>\n                        <Grid item xs={12}>\n                            {lcHistory.length > 1 && (\n                                <div>\n                                    <Typography\n                                        variant='h6'\n                                        component='h3'\n                                        gutterBottom\n                                        className={classes.historyHead}\n                                    >\n                                        <FormattedMessage\n                                            id='Apis.Details.LifeCycle.LifeCycle.history'\n                                            defaultMessage='History'\n                                        />\n                                    </Typography>\n                                    <LifeCycleHistory lcHistory={lcHistory} />\n                                </div>\n                            )}\n                        </Grid>\n                    </Grid>\n                </div>\n            </>\n        );\n    }\n}\n\nLifeCycle.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    api: PropTypes.shape({}).isRequired,\n};\n\nLifeCycle.contextType = ApiContext;\n\nexport default withStyles(styles)(LifeCycle);\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport green from '@material-ui/core/colors/green';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport Icon from '@material-ui/core/Icon';\nimport TextField from '@material-ui/core/TextField';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Dropzone from 'react-dropzone';\nimport InlineMessage from 'AppComponents/Shared/InlineMessage';\nimport Api from 'AppData/api';\nimport APIProduct from 'AppData/APIProduct';\nimport APIValidation from 'AppData/APIValidation';\nimport AppContext from 'AppComponents/Shared/AppContext';\nimport Alert from 'AppComponents/Shared/Alert';\nimport Configurations from 'Config';\n\nconst styles = theme => ({\n    button: {\n        marginLeft: theme.spacing(2),\n        color: theme.palette.getContrastText(theme.palette.primary.main),\n    },\n    contentWrapper: {\n        maxWidth: theme.custom.contentAreaWidth,\n    },\n    addNewOther: {\n        padding: theme.spacing(2),\n    },\n    radioGroup: {\n        display: 'flex',\n        flexDirection: 'row',\n        width: 300,\n    },\n    expansionPanel: {\n        marginBottom: theme.spacing(1),\n    },\n    group: {\n        display: 'flex',\n        flexDirection: 'row',\n    },\n    formControlFirst: {\n        display: 'block',\n    },\n    formControl: {\n        display: 'block',\n        marginTop: 20,\n    },\n    formControlLabel: {\n        background: '#efefef',\n        borderRadius: 5,\n        paddingRight: 10,\n        marginLeft: 0,\n        marginTop: 10,\n    },\n    typeTextWrapper: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    FormControlOdd: {\n        padding: 0,\n        backgroundColor: theme.palette.background.paper,\n        width: '100%',\n        marginTop: 0,\n    },\n    acceptDrop: {\n        backgroundColor: green[50],\n    },\n    dropzone: {\n        border: '1px dashed ' + theme.palette.primary.main,\n        borderRadius: '5px',\n        cursor: 'pointer',\n        height: 75,\n        padding: `${theme.spacing(2)}px 0px`,\n        position: 'relative',\n        textAlign: 'center',\n        width: '100%',\n        margin: '10px 0',\n    },\n    dropZoneWrapper: {\n        height: '100%',\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        justifyContent: 'center',\n        '& span.material-icons': {\n            color: theme.palette.primary.main,\n        },\n    },\n    uploadedFile: {\n        fontSize: 11,\n    },\n});\n\nclass CreateEditForm extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            type: 'HOWTO',\n            sourceType: 'INLINE',\n            name: '',\n            summary: '',\n            sourceUrl: '',\n            file: null,\n            disableName: false,\n            otherTypeName: null,\n            nameNotDuplicate: true,\n            nameMaxLengthExceeds: false,\n            invalidUrl: false,\n            nameEmpty: false,\n            summeryEmpty: false,\n            urlEmpty: false,\n            visibility: 'API_LEVEL'\n        };\n    }\n\n    changeType = (e) => {\n        const { value } = e.target;\n        if (value === 'PUBLIC_FORUM' || value === 'SUPPORT_FORUM') {\n            this.setState({ sourceType: 'URL' });\n        }\n        this.setState({ type: value });\n    };\n    changeSource = (e) => {\n        const { value } = e.target;\n        this.validate();\n        this.setState({ sourceType: value });\n    };\n    setDisable = (item) => {\n        const { type } = this.state;\n        if (item === 'INLINE' || item === 'MARKDOWN' || item === 'FILE') {\n            if (type === 'PUBLIC_FORUM' || type === 'SUPPORT_FORUM') {\n                return true;\n            }\n        }\n    };\n    handleChange = name => (e) => {\n        const { value } = e.target;\n        if (name === 'name') {\n            this.setState({ name: value });\n        } else if (name === 'summary') {\n            this.setState({ summary: value });\n        } else if (name === 'sourceUrl') {\n            this.setState({ sourceUrl: value });\n        } else if (name === 'otherTypeName') {\n            this.setState({ otherTypeName: value });\n        }else if (name === 'visibility') {\n            this.setState({ visibility: value });\n        }\n    };\n\n    onDrop = (acceptedFile) => {\n        const { intl } = this.props;\n        var specialChars = /[`!@#$%^*()+\\-={};'\"\\\\|,<>\\/?~]/;\n        if (specialChars.test(acceptedFile[0].name)) {\n            this.setState({ file: null });\n            Alert.error(intl.formatMessage({\n                id: 'Apis.Details.Documents.CreateEditForm.source.file.name.error.invalid',\n                defaultMessage: 'Error when validating the document source file name',\n            }));\n        } else {\n            this.setState({ file: acceptedFile });\n        }\n    };\n\n    addDocument = (apiId) => {\n        const { apiType } = this.props;\n        const restAPI = apiType === Api.CONSTS.APIProduct ? new APIProduct() : new Api();\n        const {\n            name, type, summary, sourceType, sourceUrl, file, otherTypeName, visibility,\n        } = this.state;\n        const docPromise = restAPI.addDocument(apiId, {\n            name,\n            type,\n            summary,\n            sourceType,\n            visibility,\n            sourceUrl,\n            otherTypeName,\n            inlineContent: '',\n        });\n        return { docPromise, file };\n    };\n    updateDocument = (apiId) => {\n        const { apiType } = this.props;\n        const restAPI = apiType === Api.CONSTS.APIProduct ? new APIProduct() : new Api();\n        const {\n            name, type, summary, sourceType, sourceUrl, file, otherTypeName, visibility,\n        } = this.state;\n        const { docId } = this.props;\n        const docPromise = restAPI.updateDocument(apiId, docId, {\n            name,\n            type,\n            summary,\n            sourceType,\n            visibility,\n            sourceUrl,\n            otherTypeName,\n            inlineContent: '',\n        });\n        return { docPromise, file };\n    };\n    getDocument() {\n        const { apiId, docId, apiType } = this.props;\n        const restAPI = apiType === Api.CONSTS.APIProduct ? new APIProduct() : new Api();\n        if (docId && apiId) {\n            const docPromise = restAPI.getDocument(apiId, docId);\n            docPromise\n                .then((doc) => {\n                    const {\n                        name, type, summary, sourceType, sourceUrl, otherTypeName, visibility,\n                    } = doc.body;\n                    this.setState({\n                        name,\n                        type,\n                        summary,\n                        sourceType,\n                        sourceUrl,\n                        otherTypeName,\n                        visibility,\n                    });\n                })\n                .catch((error) => {\n                    if (process.env.NODE_ENV !== 'production') {\n                        console.log(error);\n                    }\n                    const { status } = error;\n                    if (status === 404) {\n                        this.setState({ apiNotFound: true });\n                    }\n                });\n        }\n    }\n    validate(field=null, value=null) {\n        let invalidUrl = false;\n        if (field === 'url') {\n            invalidUrl = value ? APIValidation.url.validate(value).error : false;\n            this.setState({ invalidUrl });\n            if (value === '') {\n                this.setState({ urlEmpty: true });\n            } else {\n                this.setState({ urlEmpty: false });\n            }\n        } else if (field === 'name') {\n            if (value) {\n                const promise = APIValidation.apiDocument.validate({ id: this.props.apiId, name: value });\n                promise\n                    .then((isDocumentPresent) => {\n                        this.setState({ nameNotDuplicate: !isDocumentPresent });\n                    })\n                    .catch((error) => {\n                        if (error.status === 404) {\n                            this.setState({ nameNotDuplicate: true });\n                        } else {\n                            Alert.error('Error when validating document name');\n                        }\n                    });\n            } else {\n                this.setState({ nameNotDuplicate: true });\n            }\n\n            if (value === '') {\n                this.setState({ nameEmpty: true, nameMaxLengthExceeds: false });\n            } else if (value && value.length > 60) {\n                this.setState({ nameEmpty: false, nameMaxLengthExceeds: true });\n            } else {\n                this.setState({ nameEmpty: false, nameMaxLengthExceeds: false });\n            }\n        } else if (field === 'summary') {\n            if (value === '') {\n                this.setState({ summeryEmpty: true });\n            } else {\n                this.setState({ summeryEmpty: false });\n            }\n        }\n    }\n    componentDidMount() {\n        this.getDocument();\n        const { apiId, docId } = this.props;\n        if (apiId && docId) {\n            this.setState({ disableName: true });\n        }\n    }\n    showNameHelper() {\n        const { nameEmpty, nameNotDuplicate, nameMaxLengthExceeds } = this.state;\n        if (nameMaxLengthExceeds) {\n            return (\n                <FormattedMessage\n                    id='Apis.Details.Documents.CreateEditForm.exceeds.document.name.length.helper.text'\n                    defaultMessage='Document name exceeds the maximum length of 60 characters'\n                />\n            );\n        } else if (nameNotDuplicate && !nameEmpty) {\n            return (\n                <FormattedMessage\n                    id='Apis.Details.Documents.CreateEditForm.document.name.helper.text'\n                    defaultMessage='Provide the name for the document'\n                />\n            );\n        } else if (nameEmpty) {\n            return (\n                <FormattedMessage\n                    id='Apis.Details.Documents.CreateEditForm.empty.document.name.helper.text'\n                    defaultMessage='Document name cannot be empty'\n                />\n            );\n        } else {\n            return (\n                <FormattedMessage\n                    id='Apis.Details.Documents.CreateEditForm.duplicate.document.name.helper.text'\n                    defaultMessage='Duplicate document name'\n                />\n            );\n        }\n    }\n    getUrlHelperText() {\n        const { invalidUrl, urlEmpty} = this.state;\n\n        if (invalidUrl) {\n            return (\n                <FormattedMessage\n                    id='Apis.Details.Documents.CreateEditForm.source.url.helper.text.error.invalid'\n                    defaultMessage='Enter a valid URL to the source'\n                />\n            );\n        } else if (urlEmpty) {\n            return (\n                <FormattedMessage\n                    id='Apis.Details.Documents.CreateEditForm.source.url.helper.text.error.empty'\n                    defaultMessage='URL Field cannot be empty'\n                />\n            );\n        } else {\n            return (\n                <FormattedMessage\n                    id='Apis.Details.Documents.CreateEditForm.source.url.helper.text'\n                    defaultMessage='Provide the URL to the source'\n                />\n            );\n        }\n    }\n    render() {\n        const {\n            name,\n            type,\n            summary,\n            sourceType,\n            sourceUrl,\n            file,\n            disableName,\n            otherTypeName,\n            invalidUrl,\n            nameNotDuplicate,\n            nameMaxLengthExceeds,\n            nameEmpty,\n            summeryEmpty,\n            urlEmpty,\n            visibility\n        } = this.state;\n        const { classes, setSaveDisabled } = this.props;\n        const { settings: settingsContext } = this.context;\n        if (\n            name !== '' &&\n            summary !== '' &&\n            nameNotDuplicate &&\n            !nameMaxLengthExceeds &&\n            ((!invalidUrl && sourceUrl !== '') || sourceType !== 'URL')\n        ) {\n            setSaveDisabled(false);\n        } else {\n            setSaveDisabled(true);\n        }\n        return (\n            <div className={classes.addNewOther}>\n                <FormControl margin='normal' className={classes.FormControlOdd}>\n                    <TextField\n                        fullWidth\n                        id='doc-name'\n                        InputProps={{\n                            onBlur: ({ target: { value } }) => {\n                                this.validate('name', value);\n                            },\n                        }}\n                        label={\n                            <FormattedMessage\n                                id='Apis.Details.Documents.CreateEditForm.document.name'\n                                defaultMessage='Name *'\n                            />\n                        }\n                        helperText={this.showNameHelper()}\n                        type='text'\n                        variant='outlined'\n                        name='name'\n                        margin='normal'\n                        value={name}\n                        onChange={this.handleChange('name')}\n                        InputLabelProps={{\n                            shrink: true,\n                        }}\n                        autoFocus\n                        disabled={disableName}\n                        error={!nameNotDuplicate || nameEmpty || nameMaxLengthExceeds}\n                    />\n                </FormControl>\n                <FormControl margin='normal' className={classes.FormControlOdd}>\n                    <TextField\n                        fullWidth\n                        id='doc-summery'\n                        multiline\n                        InputProps={{\n                            onBlur: ({ target: { value } }) => {\n                                this.validate('summary', value);\n                            },\n                            onKeyUp: ({ target: { value } }) => {\n                                this.validate('summary', value);\n                            },\n                        }}\n                        margin='normal'\n                        variant='outlined'\n                        label={\n                            <FormattedMessage\n                                id='Apis.Details.Documents.CreateEditForm.document.summary'\n                                defaultMessage='Summary *'\n                            />\n                        }\n                        helperText={\n                            summeryEmpty ? (\n                                <FormattedMessage\n                                    id='Apis.Details.Documents.CreateEditForm.document.summary.error.empty'\n                                    defaultMessage='Document summary can not be empty'\n                                />\n                            ) : (\n                                <FormattedMessage\n                                    id='Apis.Details.Documents.CreateEditForm.document.summary.helper.text'\n                                    defaultMessage='Provide a brief description for the document'\n                                />\n                            )\n                        }\n                        type='text'\n                        name='summary'\n                        margin='normal'\n                        value={summary}\n                        onChange={this.handleChange('summary')}\n                        InputLabelProps={{\n                            shrink: true,\n                        }}\n                        error={summeryEmpty}\n                    />\n                </FormControl>\n                {settingsContext.docVisibilityEnabled && \n                <FormControl margin='normal' className={classes.FormControlOdd}>\n                <TextField\n                    fullWidth\n                    id='docVisibility-selector'\n                    select\n                    variant='outlined'\n                    label={\n                        <FormattedMessage\n                            id='Apis.Details.Documents.CreateEditForm.document.docVisibility'\n                            defaultMessage='Document Visibility'\n                        />\n                    }\n                    helperText={\n                        summeryEmpty ? (\n                            <FormattedMessage\n                                id='Apis.Details.Documents.CreateEditForm.document.summary.error.empty'\n                                defaultMessage='Document summary can not be empty'\n                            />\n                        ) : (\n                            <FormattedMessage\n                                id='Apis.Details.Documents.CreateEditForm.document.summary.helper.text'\n                                defaultMessage='Provide a brief description for the document'\n                            />\n                        )\n                    }\n                    type='text'\n                    name='visibility'\n                    margin='normal'\n                    value={visibility}\n                    onChange={this.handleChange('visibility')}\n                    error={summeryEmpty}\n                >\n                    <MenuItem value='API_LEVEL'>\n                        <FormattedMessage\n                            id='Apis.Details.Documents.CreateEditForm.document.docVisibility.dropdown.public'\n                            defaultMessage='Same as API Visibility'\n                        />\n                    </MenuItem>\n                    <MenuItem value='PRIVATE'>\n                        <FormattedMessage\n                            id='Apis.Details.Documents.CreateEditForm.document.docVisibility.dropdown.private'\n                            defaultMessage='Private'\n                        />\n                    </MenuItem>\n                    <MenuItem value='OWNER_ONLY'>\n                        <FormattedMessage\n                            id='Apis.Details.Documents.CreateEditForm.document.docVisibility.dropdown.ownerOnly'\n                            defaultMessage='Owner Only'\n                        />\n                    </MenuItem>\n                </TextField>\n            </FormControl>}\n                <FormControl component='fieldset' className={classes.formControlFirst}>\n                    <FormLabel component='legend'>\n                        <FormattedMessage\n                            id='Apis.Details.Documents.CreateEditForm.document.create.type'\n                            defaultMessage='Type'\n                        />\n                    </FormLabel>\n                    <RadioGroup\n                        aria-label='Type'\n                        name='type'\n                        className={classes.group}\n                        value={type}\n                        onChange={this.changeType}\n                    >\n                        <FormControlLabel\n                            className={classes.formControlLabel}\n                            value='HOWTO'\n                            control={<Radio color='primary'/>}\n                            label={\n                                <div className={classes.typeTextWrapper}>\n                                    <Icon>help_outline</Icon>\n                                    <div>\n                                        <FormattedMessage\n                                            id='Apis.Details.Documents.CreateEditForm.document.create.type.how.to'\n                                            defaultMessage='How To'\n                                        />\n                                    </div>\n                                </div>\n                            }\n                        />\n                        <FormControlLabel\n                            className={classes.formControlLabel}\n                            value='SAMPLES'\n                            control={<Radio color='primary'/>}\n                            label={\n                                <div className={classes.typeTextWrapper}>\n                                    <Icon>code</Icon>\n                                    <div>\n                                        <FormattedMessage\n                                            id='Apis.Details.Documents.CreateEditForm.document.create.type.sample'\n                                            defaultMessage='Sample &amp; SDK'\n                                        />\n                                    </div>\n                                </div>\n                            }\n                        />\n                        <FormControlLabel\n                            className={classes.formControlLabel}\n                            value='PUBLIC_FORUM'\n                            control={<Radio color='primary'/>}\n                            label={\n                                <div className={classes.typeTextWrapper}>\n                                    <Icon>forum</Icon>\n                                    <div>\n                                        <FormattedMessage\n                                            id='Apis.Details.Documents.CreateEditForm.document.create.type.public.forum'\n                                            defaultMessage='Public Forum'\n                                        />\n                                    </div>\n                                </div>\n                            }\n                        />\n                        <FormControlLabel\n                            className={classes.formControlLabel}\n                            value='SUPPORT_FORUM'\n                            control={<Radio color='primary'/>}\n                            label={\n                                <div className={classes.typeTextWrapper}>\n                                    <Icon>forum</Icon>\n                                    <div>\n                                        <FormattedMessage\n                                            id={\n                                                'Apis.Details.Documents.CreateEditForm.document.create.type.support.' +\n                                                'forum'\n                                            }\n                                            defaultMessage='Support Forum'\n                                        />\n                                    </div>\n                                </div>\n                            }\n                        />\n                        <FormControlLabel\n                            className={classes.formControlLabel}\n                            value='OTHER'\n                            control={<Radio color='primary'/>}\n                            label={\n                                <div className={classes.typeTextWrapper}>\n                                    <Icon>video_label</Icon>\n                                    <div>\n                                        <FormattedMessage\n                                            id='Apis.Details.Documents.CreateEditForm.document.create.type.other'\n                                            defaultMessage='Other'\n                                        />\n                                    </div>\n                                </div>\n                            }\n                        />\n                    </RadioGroup>\n                </FormControl>\n                {type === 'OTHER' && (\n                    <FormControl margin='normal' className={classes.FormControlOdd}>\n                        <TextField\n                            fullWidth\n                            id='other-doc-type'\n                            label={\n                                <FormattedMessage\n                                    id={\n                                        'Apis.Details.Documents.CreateEditForm.document.create.type.other.document.' +\n                                        'category'\n                                    }\n                                    defaultMessage='Other Document Type *'\n                                />\n                            }\n                            helperText={\n                                <FormattedMessage\n                                    id={\n                                        'Apis.Details.Documents.CreateEditForm.document.create.type.other.document.' +\n                                        'category.helper.text'\n                                    }\n                                    defaultMessage='Provide the document type'\n                                />\n                            }\n                            type='text'\n                            name='otherTypeName'\n                            margin='normal'\n                            value={otherTypeName}\n                            variant='outlined'\n                            onChange={this.handleChange('otherTypeName')}\n                            InputLabelProps={{\n                                shrink: true,\n                            }}\n                        />\n                    </FormControl>\n                )}\n                <FormControl component='fieldset' className={classes.formControl}>\n                    <FormLabel component='legend'>\n                        <FormattedMessage id='Apis.Details.Documents.CreateEditForm.source' defaultMessage='Source' />\n                    </FormLabel>\n                    <RadioGroup\n                        aria-label='Source'\n                        name='sourceType'\n                        className={classes.group}\n                        value={sourceType}\n                        onChange={this.changeSource}\n                    >\n                        <FormControlLabel\n                            disabled={this.setDisable('INLINE')}\n                            value='INLINE'\n                            control={<Radio color='primary'/>}\n                            label={\n                                <FormattedMessage\n                                    id='Apis.Details.Documents.CreateEditForm.source.inline'\n                                    defaultMessage='Inline'\n                                />\n                            }\n                        />\n                        <FormControlLabel\n                            disabled={this.setDisable('MARKDOWN')}\n                            value='MARKDOWN'\n                            control={<Radio color='primary'/>}\n                            label={\n                                <FormattedMessage\n                                    id='Apis.Details.Documents.CreateEditForm.source.markdown'\n                                    defaultMessage='Markdown'\n                                />\n                            }\n                        />\n                        <FormControlLabel\n                            disabled={this.setDisable('URL')}\n                            value='URL'\n                            control={<Radio color='primary'/>}\n                            label={\n                                <FormattedMessage\n                                    id='Apis.Details.Documents.CreateEditForm.source.url'\n                                    defaultMessage='URL'\n                                />\n                            }\n                        />\n                        <FormControlLabel\n                            disabled={this.setDisable('FILE')}\n                            value='FILE'\n                            control={<Radio color='primary'/>}\n                            label={\n                                <FormattedMessage\n                                    id='Apis.Details.Documents.CreateEditForm.source.file'\n                                    defaultMessage='File'\n                                />\n                            }\n                        />\n                    </RadioGroup>\n                </FormControl>\n                {sourceType === 'URL' && (\n                    <FormControl margin='normal' className={classes.FormControlOdd}>\n                        <TextField\n                            fullWidth\n                            id='url'\n                            InputProps={{\n                                onBlur: ({ target: { value } }) => {\n                                    this.validate('url', value);\n                                },\n                                onKeyUp: ({ target: { value } }) => {\n                                    this.validate('url', value);\n                                },\n                            }}\n                            margin='normal'\n                            label={\n                                <FormattedMessage\n                                    id='Apis.Details.Documents.CreateEditForm.source.url.url'\n                                    defaultMessage='URL'\n                                />\n                            }\n                            helperText={this.getUrlHelperText()}\n                            type='text'\n                            name='sourceUrl'\n                            margin='normal'\n                            value={sourceUrl}\n                            onChange={this.handleChange('sourceUrl')}\n                            InputLabelProps={{\n                                shrink: true,\n                            }}\n                            error={invalidUrl || urlEmpty}\n                            variant='outlined'\n                        />\n                    </FormControl>\n                )}\n                {sourceType === 'FILE' && (\n                    <Dropzone\n                        multiple={false}\n                        accept={Configurations.app.supportedDocTypes}\n                        className={classes.dropzone}\n                        activeClassName={classes.acceptDrop}\n                        rejectClassName={classes.rejectDrop}\n                        onDrop={(dropFile) => {\n                            this.onDrop(dropFile);\n                        }}\n                    >\n                        {({ getRootProps, getInputProps }) => (\n                            <div {...getRootProps()}>\n                                <input {...getInputProps()} />\n                                <div className={classes.dropZoneWrapper}>\n                                    <Icon className={classes.dropIcon} style={{ fontSize: 56 }}>\n                                        cloud_upload\n                                    </Icon>\n                                    {file && file.length > 0 && (\n                                        <div className={classes.uploadedFile}>\n                                            <Icon>file</Icon> {file[0].name}\n                                        </div>\n                                    )}\n                                </div>\n                            </div>\n                        )}\n                    </Dropzone>\n                )}\n                {(sourceType === 'INLINE' || sourceType === 'MARKDOWN') && (\n                    <InlineMessage type='info' height={60}>\n                        <div className={classes.contentWrapper}>\n                            <Typography component='p' className={classes.content}>\n                                <FormattedMessage\n                                    id='Apis.Details.Documents.CreateEditForm.document.content.info'\n                                    defaultMessage={\n                                        'Please save the document. The content can be edited in the next ' + 'step.'\n                                    }\n                                />\n                            </Typography>\n                        </div>\n                    </InlineMessage>\n                )}\n            </div>\n        );\n    }\n}\nCreateEditForm.contextType = AppContext;\nCreateEditForm.defaultProps = {\n    apiId: null,\n    docId: null,\n};\nCreateEditForm.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    intl: PropTypes.shape({}).isRequired,\n    docId: PropTypes.shape({}),\n    apiId: PropTypes.shape({}),\n    saveDisabled: PropTypes.bool.isRequired,\n    setSaveDisabled: PropTypes.func.isRequired,\n    apiType: PropTypes.oneOf([Api.CONSTS.API, Api.CONSTS.APIProduct]).isRequired,\n};\n\nexport default injectIntl(withStyles(styles)(CreateEditForm));\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useContext } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { FormattedMessage } from 'react-intl';\nimport APIContext from 'AppComponents/Apis/Details/components/ApiContext';\n\nfunction GoToEdit(props) {\n    const { doc } = props;\n    const [open, setOpen] = React.useState(true);\n    const { api, isAPIProduct } = useContext(APIContext);\n    const urlPrefix = isAPIProduct ? 'api-products' : 'apis';\n    const listingPath = `/${urlPrefix}/${api.id}/documents`;\n    let docContentEditPath = null;\n    if (doc && doc.body && doc.body.documentId) {\n        docContentEditPath = `/${urlPrefix}/${api.id}/documents/${doc.body.documentId}/edit-content`;\n    }\n\n    let displayAddContent;\n    if (doc.body.sourceType === 'INLINE'  || doc.body.sourceType === 'MARKDOWN') {\n        displayAddContent = true;\n    } else {\n        displayAddContent= false;\n    }\n\n    console.info('printing doc', doc);\n    function handleClose() {\n        setOpen(false);\n    }\n\n    return (\n        <Dialog\n            open={open}\n            onClose={handleClose}\n            aria-labelledby='alert-dialog-title'\n            aria-describedby='alert-dialog-description'\n        >\n            <DialogTitle id='alert-dialog-title'>\n                {' '}\n                <FormattedMessage\n                    id='Apis.Details.Documents.GoToEdit.title'\n                    defaultMessage='Document Created Successfully'\n                />\n            </DialogTitle>\n            <DialogContent>\n                <DialogContentText id='alert-dialog-description'>\n                    {displayAddContent ? (\n                    <FormattedMessage\n                        id='Apis.Details.Documents.GoToEdit.description.content'\n                        defaultMessage= 'You can add content to the document or go back to the document listing page.'\n                    />\n                    ) : (\n                    <FormattedMessage\n                        id='Apis.Details.Documents.GoToEdit.description.file'\n                        defaultMessage= {'You can go back to the document listing page and upload' + \n                        ' the file by editing the document.'}\n                    />\n                    )}\n                </DialogContentText>\n            </DialogContent>\n            <DialogActions>\n                {displayAddContent && (<Link\n                    to={{\n                        pathname: docContentEditPath,\n                        state: { doc: doc.body },\n                    }}\n                >\n                    <Button color='primary'>\n                        <FormattedMessage\n                            id='Apis.Details.Documents.GoToEdit.add.content'\n                            defaultMessage='Add Content'\n                        />\n                    </Button>\n                </Link>)}\n                <Link to={listingPath}>\n                    <Button color='primary' autoFocus>\n                        <FormattedMessage\n                            id='Apis.Details.Documents.GoToEdit.back.to.listing'\n                            defaultMessage='Back to Listing'\n                        />\n                    </Button>\n                </Link>\n            </DialogActions>\n        </Dialog>\n    );\n}\nGoToEdit.propTypes = {\n    doc: PropTypes.shape({}).isRequired,\n};\nexport default GoToEdit;\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useRef, useContext, useState } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport Button from '@material-ui/core/Button';\nimport Icon from '@material-ui/core/Icon';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Alert from 'AppComponents/Shared/Alert';\nimport Api from 'AppData/api';\nimport APIProduct from 'AppData/APIProduct';\nimport CreateEditForm from './CreateEditForm';\nimport APIContext from 'AppComponents/Apis/Details/components/ApiContext';\nimport GoToEdit from './GoToEdit';\n\nconst styles = theme => ({\n    root: {\n        flexGrow: 1,\n        marginTop: 10,\n    },\n    titleWrapper: {\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems: 'center',\n    },\n    titleLink: {\n        color: theme.palette.primary.main,\n    },\n    contentWrapper: {\n        maxWidth: theme.custom.contentAreaWidth,\n    },\n    addNewWrapper: {\n        backgroundColor: theme.palette.background.paper,\n        color: theme.palette.getContrastText(theme.palette.background.paper),\n        border: 'solid 1px ' + theme.palette.grey['300'],\n        borderRadius: theme.shape.borderRadius,\n        marginTop: theme.spacing(2),\n        marginBottom: theme.spacing(3),\n    },\n    addNewHeader: {\n        padding: theme.spacing(2),\n        backgroundColor: theme.palette.grey['300'],\n        fontSize: theme.typography.h6.fontSize,\n        color: theme.typography.h6.color,\n        fontWeight: theme.typography.h6.fontWeight,\n    },\n    addNewOther: {\n        padding: theme.spacing(2),\n    },\n    button: {\n        marginLeft: theme.spacing(2),\n        color: theme.palette.getContrastText(theme.palette.primary.main),\n    },\n    mainTitle: {\n        color: theme.palette.primary.dark,\n    },\n});\n\nfunction Create(props) {\n    const { api, isAPIProduct } = useContext(APIContext);\n    const [newDoc, setNewDoc] = useState(null);\n    const [saveDisabled, setSaveDisabled] = useState(true);\n    const { classes, intl, history } = props;\n    const urlPrefix = isAPIProduct ? 'api-products' : 'apis';\n    const listingPath = `/${urlPrefix}/${api.id}/documents`;\n    const restAPI = api.apiType === Api.CONSTS.APIProduct ? new APIProduct() : new Api();\n    let createEditForm = useRef(null);\n\n    const addDocument = (apiId) => {\n        const promiseWrapper = createEditForm.addDocument(apiId);\n        promiseWrapper.docPromise\n            .then((doc) => {\n                const { documentId, name } = doc.body;\n                if (promiseWrapper.file && documentId) {\n                    const filePromise = restAPI.addFileToDocument(apiId, documentId, promiseWrapper.file[0]);\n                    filePromise\n                        .then((doc) => {\n                            Alert.info(`${name} ${intl.formatMessage({\n                                id: 'Apis.Details.Documents.Create.successful.file.upload.message',\n                                defaultMessage: 'File uploaded successfully.',\n                            })}`);\n                            history.push(listingPath);\n                        })\n                        .catch((error) => {\n                            if (process.env.NODE_ENV !== 'production') {\n                                console.log(error);\n                                Alert.error(intl.formatMessage({\n                                    id: 'Apis.Details.Documents.Create.markdown.editor.upload.error',\n                                    defaultMessage: 'Error uploading the file',\n                                }));\n                            }\n                        });\n                } else {\n                    Alert.info(`${doc.body.name} ${intl.formatMessage({\n                        id: 'Apis.Details.Documents.Create.markdown.editor.success',\n                        defaultMessage: ' added successfully.',\n                    })}`);\n                    setNewDoc(doc);\n                }\n            })\n            .catch((error) => {\n                if (process.env.NODE_ENV !== 'production') {\n                    console.log(error);\n                    Alert.error(intl.formatMessage({\n                        id: 'Apis.Details.Documents.Create.markdown.editor.add.error',\n                        defaultMessage: 'Error adding the document',\n                    }));\n                }\n            });\n    };\n    return (\n        <React.Fragment>\n            <Grid container spacing={3}>\n                <Grid item sm={12} md={12} />\n                {/*\n            Following two grids control the placement of whole create page\n            For centering the content better use `container` props, but instead used an empty grid item for flexibility\n             */}\n                <Grid item sm={0} md={0} lg={2} />\n                <Grid item sm={12} md={12} lg={8}>\n                    <Grid container spacing={5}>\n                        <Grid item md={12}>\n                            <div className={classes.titleWrapper}>\n                                <Link to={listingPath} className={classes.titleLink}>\n                                    <Typography variant='h5' component='h2' align='left' className={classes.mainTitle}>\n                                        <FormattedMessage\n                                            id='Apis.Details.Documents.Create.heading'\n                                            defaultMessage='Documents'\n                                        />\n                                    </Typography>\n                                </Link>\n                                <Icon>keyboard_arrow_right</Icon>\n                                <Typography variant='h5' component='h3'>\n                                    <FormattedMessage\n                                        id='Apis.Details.Documents.Create.title'\n                                        defaultMessage='Add New Document'\n                                    />\n                                </Typography>\n                            </div>\n                        </Grid>\n                        <Grid item md={12}>\n                            <Paper elevation={0}>\n                                <CreateEditForm\n                                    innerRef={(node) => {\n                                        createEditForm = node;\n                                    }}\n                                    apiType={api.apiType}\n                                    apiId={api.id}\n                                    saveDisabled={saveDisabled}\n                                    setSaveDisabled={setSaveDisabled}\n                                />\n                                <Divider />\n\n                                <div className={classes.addNewOther}>\n                                    <Button\n                                        variant='contained'\n                                        color='primary'\n                                        onClick={() => addDocument(api.id)}\n                                        disabled={saveDisabled}\n                                    >\n                                        <FormattedMessage\n                                            id='Apis.Details.Documents.Create.markdown.editor.add.document.button'\n                                            defaultMessage='Add Document'\n                                        />\n                                    </Button>\n                                    <Button className={classes.button} onClick={() => history.push(listingPath)}>\n                                        <FormattedMessage\n                                            id='Apis.Details.Documents.Create.markdown.editor.add.document.cancel.button'\n                                            defaultMessage='Cancel'\n                                        />\n                                    </Button>\n                                </div>\n                            </Paper>\n                        </Grid>\n                    </Grid>\n                </Grid>\n            </Grid>\n            {newDoc && <GoToEdit doc={newDoc} />}\n        </React.Fragment>\n    );\n}\n\nCreate.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    intl: PropTypes.func.isRequired,\n    apiType: PropTypes.oneOf([Api.CONSTS.API, Api.CONSTS.APIProduct]).isRequired,\n};\n\nexport default injectIntl(withRouter(withStyles(styles)(Create)));\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useState, useContext, Suspense, lazy } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport Slide from '@material-ui/core/Slide';\nimport Icon from '@material-ui/core/Icon';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport Api from 'AppData/api';\nimport Alert from 'AppComponents/Shared/Alert';\nimport APIContext from 'AppComponents/Apis/Details/components/ApiContext';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Configurations from 'Config';\n\nconst MonacoEditor = lazy(() => import('react-monaco-editor' /* webpackChunkName: \"MDMonacoEditor\" */));\nconst ReactMarkdown = lazy(() => import('react-markdown' /* webpackChunkName: \"MDReactMarkdown\" */));\n\nconst styles = {\n    appBar: {\n        position: 'relative',\n    },\n    flex: {\n        flex: 1,\n    },\n    popupHeader: {\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems: 'center',\n    },\n    splitWrapper: {\n        padding: 0,\n    },\n    docName: {\n        alignItems: 'center',\n        display: 'flex',\n    },\n    markdownViewWrapper: {\n        height: '100vh',\n        overflowY: 'auto',\n    },\n    button: {\n        height: 30,\n        marginLeft: 30,\n    },\n};\n\nfunction Transition(props) {\n    return <Slide direction=\"up\" {...props} />;\n}\n\nfunction MarkdownEditor(props) {\n    const skipHtml = Configurations.app.markdown.skipHtml;\n    const { intl, showAtOnce, history } = props;\n    const { api, isAPIProduct } = useContext(APIContext);\n    const [isUpdating, setIsUpdating] = useState(false);\n    const [open, setOpen] = useState(showAtOnce);\n    const [code, setCode] = useState(\n        intl.formatMessage({\n            id: 'documents.markdown.editor.default',\n            defaultMessage: '#Enter your markdown content',\n        }),\n    );\n    const toggleOpen = () => {\n        if (!open) updateDoc();\n        if (open && showAtOnce) {\n            const urlPrefix = isAPIProduct ? 'api-products' : 'apis';\n            const listingPath = `/${urlPrefix}/${api.id}/documents`;\n            history.push(listingPath);\n        }\n        setOpen(!open);\n    };\n    const updateCode = newCode => {\n        setCode(newCode);\n    };\n    const editorDidMount = (editor, monaco) => {\n        editor.focus();\n    };\n    const addContentToDoc = () => {\n        const restAPI = new Api();\n        setIsUpdating(true);\n        const docPromise = restAPI.addInlineContentToDocument(api.id, props.docId, 'MARKDOWN', code);\n        docPromise\n            .then(doc => {\n                Alert.info(\n                    `${doc.obj.name} ${intl.formatMessage({\n                        id: 'Apis.Details.Documents.MarkdownEditor.update.success.message',\n                        defaultMessage: 'updated successfully.',\n                    })}`,\n                );\n                toggleOpen();\n                setIsUpdating(false);\n            })\n            .catch(error => {\n                if (process.env.NODE_ENV !== 'production') {\n                    console.log(error);\n                }\n                const { status } = error;\n                if (status === 404) {\n                    this.setState({ apiNotFound: true });\n                }\n                setIsUpdating(false);\n            });\n    };\n    const updateDoc = () => {\n        const restAPI = new Api();\n\n        const docPromise = restAPI.getInlineContentOfDocument(api.id, props.docId);\n        docPromise\n            .then(doc => {\n                setCode(doc.text);\n            })\n            .catch(error => {\n                if (process.env.NODE_ENV !== 'production') {\n                    console.log(error);\n                }\n                const { status } = error;\n                if (status === 404) {\n                    this.setState({ apiNotFound: true });\n                }\n            });\n    };\n\n    const { classes } = props;\n    return (\n        <div>\n            <Button onClick={toggleOpen} aria-label={'Edit Content of ' + props.docName}>\n                <Icon>code</Icon>\n                <FormattedMessage\n                    id=\"Apis.Details.Documents.MarkdownEditor.edit.content\"\n                    defaultMessage=\"Edit Content\"\n                />\n            </Button>\n            <Dialog fullScreen open={open} onClose={toggleOpen} TransitionComponent={Transition}>\n                <Paper square className={classes.popupHeader}>\n                    <IconButton color=\"inherit\" onClick={toggleOpen} aria-label=\"Close\">\n                        <Icon>close</Icon>\n                    </IconButton>\n                    <Typography variant=\"h4\" className={classes.docName}>\n                        <FormattedMessage\n                            id=\"Apis.Details.Documents.MarkdownEditor.edit.content.of\"\n                            defaultMessage=\"Edit Content of\"\n                        />{' '}\n                        \"{props.docName}\"\n                    </Typography>\n                    <Button className={classes.button} variant=\"contained\" disabled={isUpdating} color=\"primary\" onClick={addContentToDoc}>\n                        <FormattedMessage\n                            id=\"Apis.Details.Documents.MarkdownEditor.update.content.button\"\n                            defaultMessage=\"Update Content\"\n                        />\n                        {isUpdating && <CircularProgress size={24} />}\n                    </Button>\n                    <Button className={classes.button} onClick={toggleOpen}>\n                        <FormattedMessage\n                            id=\"Apis.Details.Documents.MarkdownEditor.cancel.button\"\n                            defaultMessage=\"Cancel\"\n                        />\n                    </Button>\n                </Paper>\n                <div className={classes.splitWrapper}>\n                    <Grid container spacing={7}>\n                        <Grid item xs={6}>\n                            <Suspense fallback={<CircularProgress />}>\n                                <MonacoEditor\n                                    width=\"100%\"\n                                    height=\"100vh\"\n                                    language=\"markdown\"\n                                    theme=\"vs-dark\"\n                                    value={code}\n                                    options={{ selectOnLineNumbers: true }}\n                                    onChange={updateCode}\n                                    editorDidMount={editorDidMount}\n                                />\n                            </Suspense>\n                        </Grid>\n                        <Grid item xs={6}>\n                            <div className={classes.markdownViewWrapper}>\n                                <Suspense fallback={<CircularProgress />}>\n                                    <ReactMarkdown skipHtml={skipHtml} source={code} />\n                                </Suspense>\n                            </div>\n                        </Grid>\n                    </Grid>\n                </div>\n            </Dialog>\n        </div>\n    );\n}\n\nMarkdownEditor.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    intl: PropTypes.shape({}).isRequired,\n};\n\nexport default injectIntl(withRouter(withStyles(styles)(MarkdownEditor)));\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, {useState, useRef, useContext} from 'react';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport Slide from '@material-ui/core/Slide';\nimport Icon from '@material-ui/core/Icon';\nimport Paper from '@material-ui/core/Paper';\nimport Alert from 'AppComponents/Shared/Alert';\nimport CreateEditForm from './CreateEditForm';\nimport Api from 'AppData/api';\nimport { isRestricted } from 'AppData/AuthManager';\nimport APIContext from 'AppComponents/Apis/Details/components/ApiContext';\n\nconst styles = {\n    appBar: {\n        position: 'relative',\n    },\n    flex: {\n        flex: 1,\n    },\n    popupHeader: {\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems: 'center',\n    },\n    splitWrapper: {\n        padding: 0,\n    },\n    docName: {\n        alignItems: 'center',\n        display: 'flex',\n    },\n    button: {\n        height: 30,\n        marginLeft: 30,\n    },\n    editMetaButton: {\n        whiteSpace: 'nowrap',\n    },\n};\n\nfunction Transition(props) {\n    return <Slide direction='up' {...props} />;\n}\n\nfunction Edit(props) {\n    const restAPI = new Api();\n\n    const { intl, apiType } = props;\n    const [open, setOpen] = useState(false);\n    const [saveDisabled, setSaveDisabled] = useState(false);\n    let createEditForm = useRef(null);\n    const { api } = useContext(APIContext);\n\n    const toggleOpen = () => {\n        setOpen(!open);\n    };\n\n    const updateDoc = () => {\n        const { apiId } = props;\n        const promiseWrapper = createEditForm.updateDocument(apiId);\n        promiseWrapper.docPromise\n            .then((doc) => {\n                const { documentId, name } = doc.body;\n                if (promiseWrapper.file && documentId) {\n                    const filePromise = restAPI.addFileToDocument(apiId, documentId, promiseWrapper.file[0]);\n                    filePromise\n                        .then((doc) => {\n                            Alert.info(`${name} ${intl.formatMessage({\n                                id: 'Apis.Details.Documents.Edit.markdown.editor.upload.success.message',\n                                defaultMessage: 'File uploaded successfully.',\n                            })}`);\n                            props.getDocumentsList();\n                            toggleOpen();\n                        })\n                        .catch((error) => {\n                            if (process.env.NODE_ENV !== 'production') {\n                                console.log(error);\n                                Alert.error(intl.formatMessage({\n                                    id: 'Apis.Details.Documents.Edit.markdown.editor.upload.error.message',\n                                    defaultMessage: 'Error uploading the file.',\n                                }));\n                            }\n                        });\n                } else {\n                    Alert.info(`${name} ${intl.formatMessage({\n                        id: 'Apis.Details.Documents.Edit.markdown.editor.update.success.message',\n                        defaultMessage: 'Updated successfully.',\n                    })}`);\n                    props.getDocumentsList();\n                    toggleOpen();\n                }\n            })\n            .catch((error) => {\n                if (process.env.NODE_ENV !== 'production') {\n                    console.log(error);\n                    Alert.error(intl.formatMessage({\n                        id: 'Apis.Details.Documents.Edit.markdown.editor.update.error.message',\n                        defaultMessage: 'Error adding the document',\n                    }));\n                }\n            });\n    };\n\n    const { classes, docId, apiId } = props;\n    return (\n        <div>\n            <Button\n                onClick={toggleOpen}\n                disabled={isRestricted(['apim:api_create', 'apim:api_publish'], api)}\n                className={classes.editMetaButton}\n                aria-label={'Edit Meta Data of ' + props.docName}\n            >\n                <Icon>edit</Icon>\n                <FormattedMessage\n                    id='Apis.Details.Documents.Edit.documents.text.editor.edit'\n                    defaultMessage='Edit Meta Data'\n                />\n            </Button>\n            <Dialog open={open} onClose={toggleOpen} TransitionComponent={Transition} fullScreen>\n                <Paper square className={classes.popupHeader}>\n                    <IconButton color='inherit' onClick={toggleOpen} aria-label='Close'>\n                        <Icon>close</Icon>\n                    </IconButton>\n                    <Typography variant='h4' className={classes.docName}>\n                        <FormattedMessage\n                            id='Apis.Details.Documents.Edit.documents.text.editor.edit.content'\n                            defaultMessage='Edit '\n                        />\n                        \"{props.docName}\"\n                    </Typography>\n                    <Button className={classes.button} variant='contained' color='primary' onClick={updateDoc} disabled={saveDisabled}>\n                        <FormattedMessage\n                            id='Apis.Details.Documents.Edit.documents.text.editor.update.content'\n                            defaultMessage='Save'\n                        />\n                    </Button>\n                    <Button className={classes.button} onClick={toggleOpen}>\n                        <FormattedMessage\n                            id='Apis.Details.Documents.Edit.documents.text.editor.cancel'\n                            defaultMessage='Cancel'\n                        />\n                    </Button>\n                </Paper>\n                <div className={classes.splitWrapper}>\n                    <CreateEditForm\n                        innerRef={(node) => {\n                            createEditForm = node;\n                        }}\n                        docId={docId}\n                        apiId={apiId}\n                        apiType={apiType}\n                        saveDisabled={saveDisabled}\n                        setSaveDisabled={setSaveDisabled}\n                    />\n                </div>\n            </Dialog>\n        </div>\n    );\n}\nEdit.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    apiId: PropTypes.shape({}).isRequired,\n    docId: PropTypes.shape({}).isRequired,\n    getDocumentsList: PropTypes.shape({}).isRequired,\n    intl: PropTypes.shape({}).isRequired,\n    api: PropTypes.shape({\n        id: PropTypes.string,\n        apiType: PropTypes.oneOf([Api.CONSTS.API, Api.CONSTS.APIProduct]),\n    }).isRequired,\n};\n\nexport default injectIntl(withStyles(styles)(Edit));\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useContext, useState } from 'react';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport PropTypes from 'prop-types';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport API from 'AppData/api.js';\nimport APIProduct from 'AppData/APIProduct';\nimport Icon from '@material-ui/core/Icon';\nimport Alert from 'AppComponents/Shared/Alert';\nimport { isRestricted } from 'AppData/AuthManager';\nimport APIContext from 'AppComponents/Apis/Details/components/ApiContext';\n\nfunction Delete(props) {\n    const { intl } = props;\n    const [open, setOpen] = useState(false);\n    const { api } = useContext(APIContext);\n\n    const runAction = (action) => {\n        if (action === 'yes') {\n            deleteDoc();\n        } else {\n            setOpen(!open);\n        }\n    };\n    const toggleOpen = () => {\n        setOpen(!open);\n    };\n    const deleteDoc = () => {\n        const {\n            apiId, docId, getDocumentsList, apiType,\n        } = props;\n        const restApi = apiType === API.CONSTS.APIProduct ? new APIProduct() : new API();\n        const docPromise = restApi.deleteDocument(apiId, docId);\n        docPromise\n            .then(() => {\n                Alert.info(`${intl.formatMessage({\n                    id: 'Apis.Details.Documents.Delete.document.delete.successfully',\n                    defaultMessage: 'deleted successfully.',\n                })}`);\n                setOpen(!open);\n                getDocumentsList();\n            })\n            .catch((error) => {\n                if (process.env.NODE_ENV !== 'production') {\n                    console.log(error);\n                }\n                const { status } = error;\n                if (status === 404) {\n                    this.setState({ apiNotFound: true });\n                }\n            });\n    };\n\n    const { apiName } = props;\n    return (\n        <div>\n            <Button\n                onClick={toggleOpen}\n                disabled={isRestricted(['apim:api_create', 'apim:api_publish'], api)}\n                aria-label={'Delete Document ' + props.docName}\n            >\n                <Icon>delete_forever</Icon>\n                <FormattedMessage id='Apis.Details.Documents.Delete.document.delete' defaultMessage='Delete' />\n            </Button>\n            <Dialog\n                open={open}\n                onClose={toggleOpen}\n                aria-labelledby='alert-dialog-title'\n                aria-describedby='alert-dialog-description'\n            >\n                <DialogTitle id='alert-dialog-title'>\n                    <FormattedMessage\n                        id='Apis.Details.Documents.Delete.document.listing.delete.confirm.title'\n                        defaultMessage='Delete Document'\n                    />\n                </DialogTitle>\n                <DialogContent>\n                    <DialogContentText id='alert-dialog-description'>\n                        <FormattedMessage\n                            id='Apis.Details.Documents.Delete.document.listing.delete.confirm.body'\n                            defaultMessage={\n                                'Selected document will be deleted from the API.' +\n                                'You will not be able to undo this action.'\n                            }\n                        />\n                    </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => runAction('no')} color='default'>\n                        <FormattedMessage\n                            id='Apis.Details.Documents.Delete.document.listing.delete.cancel'\n                            defaultMessage='Cancel'\n                        />\n                    </Button>\n                    <Button onClick={() => runAction('yes')} color='primary' autoFocus>\n                        <FormattedMessage\n                            id='Apis.Details.Documents.Delete.document.listing.delete.yes'\n                            defaultMessage='Yes. Delete'\n                        />\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        </div>\n    );\n}\nDelete.propTypes = {\n    apiId: PropTypes.shape({}).isRequired,\n    apiType: PropTypes.string.isRequired,\n    docId: PropTypes.shape({}).isRequired,\n    getDocumentsList: PropTypes.shape({}).isRequired,\n    intl: PropTypes.shape({}).isRequired,\n    api: PropTypes.shape({\n        id: PropTypes.string,\n        apiType: PropTypes.oneOf([API.CONSTS.API, API.CONSTS.APIProduct]),\n    }).isRequired,\n};\n\nexport default injectIntl(Delete);\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useState, useEffect, useContext } from 'react';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport PropTypes from 'prop-types';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport API from 'AppData/api.js';\nimport APIProduct from 'AppData/APIProduct';\nimport APIContext from 'AppComponents/Apis/Details/components/ApiContext';\nimport Alert from 'AppComponents/Shared/Alert';\n\nfunction DeleteMultiple(props) {\n    const {\n        intl, docsToDelete, docs, getDocumentsList,\n    } = props;\n    const { api, isAPIProduct } = useContext(APIContext);\n    const restApi = isAPIProduct ? new APIProduct() : new API();\n\n    const [open, setOpen] = useState(true);\n\n    const runAction = (action) => {\n        if (action === 'yes') {\n            deleteDocs();\n        } else {\n            setOpen(!open);\n        }\n    };\n    const toggleOpen = () => {\n        setOpen(!open);\n    };\n    const deleteDocs = () => {\n        const docPromises = [];\n\n        docsToDelete.data.map((docIndexObj) => {\n            const doc = docs[docIndexObj.index];\n            docPromises.push(restApi.deleteDocument(api.id, doc.documentId));\n        });\n        Promise.all(docPromises)\n            .then((values) => {\n                console.log(values);\n                Alert.info(`${intl.formatMessage({\n                    id: 'Apis.Details.Documents.Delete.document.delete.successfully',\n                    defaultMessage: 'deleted successfully.',\n                })}`);\n                setOpen(!open);\n                getDocumentsList();\n            })\n            .catch((error) => {\n                if (process.env.NODE_ENV !== 'production') {\n                    console.log(error);\n                    Alert.error(`${intl.formatMessage({\n                        id: 'Apis.Details.Documents.Delete.document.delete.error',\n                        defaultMessage: 'Error while deleting documents!',\n                    })}`);\n                }\n            });\n    };\n    useEffect(() => {\n        setOpen(true);\n    }, [docsToDelete]);\n\n    return (\n        <Dialog\n            open={open}\n            onClose={toggleOpen}\n            aria-labelledby='alert-dialog-title'\n            aria-describedby='alert-dialog-description'\n        >\n            <DialogTitle id='alert-dialog-title'>\n                <FormattedMessage\n                    id='Apis.Details.Documents.Delete.document.listing.delete.confirm.title'\n                    defaultMessage='Delete Selected Documents'\n                />\n            </DialogTitle>\n            <DialogContent>\n                <DialogContentText id='alert-dialog-description'>\n                    <strong>{api.name}</strong>\n                    <FormattedMessage\n                        id='Apis.Details.Documents.Delete.document.listing.delete.confirm.body'\n                        defaultMessage={\n                            'Selected documents will be deleted from the API.' +\n                            ' You will not be able to undo this action.'\n                        }\n                    />\n                </DialogContentText>\n            </DialogContent>\n            <DialogActions>\n                <Button onClick={() => runAction('no')} color='default'>\n                    <FormattedMessage\n                        id='Apis.Details.Documents.Delete.document.listing.delete.cancel'\n                        defaultMessage='Cancel'\n                    />\n                </Button>\n                <Button onClick={() => runAction('yes')} color='primary' autoFocus>\n                    <FormattedMessage\n                        id='Apis.Details.Documents.Delete.document.listing.delete.yes'\n                        defaultMessage='Delete'\n                    />\n                </Button>\n            </DialogActions>\n        </Dialog>\n    );\n}\nDeleteMultiple.propTypes = {\n    docs: PropTypes.instanceOf(Array).isRequired,\n    getDocumentsList: PropTypes.func.isRequired,\n    docsToDelete: PropTypes.instanceOf(Array).isRequired,\n    intl: PropTypes.shape({}).isRequired,\n};\n\nexport default injectIntl(DeleteMultiple);\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, {useState, useEffect} from 'react';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport PropTypes from 'prop-types';\nimport Button from '@material-ui/core/Button';\nimport Icon from '@material-ui/core/Icon';\nimport Alert from 'AppComponents/Shared/Alert';\nimport Api from 'AppData/api';\nimport Utils from 'AppData/Utils';\n\nfunction Download(props) {\n    const { intl } = props;\n\n    const { docId, apiId } = props;\n    const [isFileAvailable, setIsFileAvailable] = useState(false);\n    const [isSuccessful, setIsSuccessful] = useState(false);\n\n    useEffect(() => {\n        const api = new Api();\n        const promised_get_content = api.getFileForDocument(apiId, docId);\n        promised_get_content\n            .then((done) => {\n                setIsSuccessful(true);\n                if (done.data.size > 0) {\n                    setIsFileAvailable(true);\n                } else {\n                    setIsFileAvailable(false);\n                }\n            })\n            .catch((error) => {\n                setIsSuccessful(true);\n                setIsFileAvailable(false);\n            });\n    }, []);\n    const handleDownload = () => {\n        const api = new Api();\n        const promised_get_content = api.getFileForDocument(apiId, docId);\n        promised_get_content\n            .then((response) => {\n                Utils.forceDownload(response);\n            })\n            .catch((error) => {\n                if (process.env.NODE_ENV !== 'production') {\n                    console.log(error);\n                    Alert.error(intl.formatMessage({\n                        id:'Apis.Details.Documents.Download.documents.markdown.editor.download.error',\n                        defaultMessage: 'Error downloading the file',\n                    }));\n                }\n            });\n    };\n\n    return (\n        isSuccessful &&\n        <Button onClick={handleDownload} disabled={!isFileAvailable} aria-label={'Download ' + props.docName}>\n            <Icon>arrow_downward</Icon>\n            <FormattedMessage\n                id='Apis.Details.Documents.Download.documents.listing.download'\n                defaultMessage='Download'\n            />\n        </Button>\n    );\n}\nDownload.propTypes = {\n    apiId: PropTypes.shape({}).isRequired,\n    docId: PropTypes.shape({}).isRequired,\n    intl: PropTypes.shape({}).isRequired,\n};\n\nexport default injectIntl(Download);\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { Suspense, lazy } from 'react';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { withStyles } from '@material-ui/core/styles';\nimport MUIDataTable from 'mui-datatables';\nimport API from 'AppData/api.js';\nimport APIProduct from 'AppData/APIProduct';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport AddCircle from '@material-ui/icons/AddCircle';\nimport Icon from '@material-ui/core/Icon';\nimport Alert from 'AppComponents/Shared/Alert';\nimport { withAPI } from 'AppComponents/Apis/Details/components/ApiContext';\nimport InlineMessage from 'AppComponents/Shared/InlineMessage';\nimport { isRestricted } from 'AppData/AuthManager';\nimport { ScopeValidation, resourceMethod, resourcePath } from 'AppData/ScopeValidation';\nimport Create from './Create';\nimport MarkdownEditor from './MarkdownEditor';\nimport Edit from './Edit';\nimport Delete from './Delete';\nimport DeleteMultiple from './DeleteMultiple';\nimport Download from './Download';\n\nconst TextEditor = lazy(() => import('./TextEditor' /* webpackChunkName: \"ListingTextEditor\" */));\n\nconst styles = theme => ({\n    root: {\n        flexGrow: 1,\n        marginTop: 10,\n    },\n    contentWrapper: {\n        maxWidth: theme.custom.contentAreaWidth,\n    },\n    addNewWrapper: {\n        backgroundColor: theme.palette.background.paper,\n        color: theme.palette.getContrastText(theme.palette.background.paper),\n        border: 'solid 1px ' + theme.palette.grey['300'],\n        borderRadius: theme.shape.borderRadius,\n        marginTop: theme.spacing(2),\n        marginBottom: theme.spacing(2),\n    },\n    addNewHeader: {\n        padding: theme.spacing(2),\n        backgroundColor: theme.palette.grey['300'],\n        fontSize: theme.typography.h6.fontSize,\n        color: theme.typography.h6.color,\n        fontWeight: theme.typography.h6.fontWeight,\n    },\n    addNewOther: {\n        padding: theme.spacing(2),\n    },\n    titleWrapper: {\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems: 'center',\n        marginBottom: theme.spacing(2),\n    },\n    mainTitle: {\n        paddingRight: 10,\n    },\n    actionTable: {\n        '& td': {\n            width: 50,\n        },\n        '& td:first-child': {\n            width: 130,\n        },\n    },\n    messageBox: {\n        marginTop: 20,\n    },\n    actions: {\n        padding: '20px 0',\n        '& button': {\n            marginLeft: 0,\n        },\n    },\n    head: {\n        fontWeight: 200,\n        marginBottom: 20,\n    },\n    buttonIcon: {\n        marginRight: theme.spacing(1),\n    },\n});\nfunction LinkGenerator(props) {\n    return props.apiType === 'APIProduct' ? (\n        <Link to={'/api-products/' + props.apiId + '/documents/' + props.docId + '/details'}>{props.docName}</Link>\n    ) : (\n        <Link to={'/apis/' + props.apiId + '/documents/' + props.docId + '/details'}>{props.docName}</Link>\n    );\n}\nclass Listing extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            docs: null,\n            showAddDocs: false,\n            docsToDelete: null,\n        };\n        this.apiId = props.api.id;\n        this.toggleAddDocs = this.toggleAddDocs.bind(this);\n        this.getDocumentsList = this.getDocumentsList.bind(this);\n    }\n    /**\n     * @inheritDoc\n     * @memberof Listing\n     */\n    componentDidMount() {\n        this.getDocumentsList();\n    }\n\n    /*\n     Get the document list attached to current API and set it to the state\n     */\n    getDocumentsList() {\n        const { api, intl } = this.props;\n        if (api.apiType === API.CONSTS.APIProduct) {\n            const apiProduct = new APIProduct();\n            const docs = apiProduct.getDocuments(api.id);\n            docs.then((response) => {\n                this.setState({ docs: response.obj.list });\n            }).catch((errorResponse) => {\n                const errorData = JSON.parse(errorResponse.message);\n                const messageTxt =\n                    'Error[' + errorData.code + ']: ' + errorData.description + ' | ' + errorData.message + '.';\n                console.error(messageTxt);\n                Alert.error(intl.formatMessage({\n                    id: 'Apis.Details.Documents.Listing.documents.listing.fetching.error.message.api.product',\n                    defaultMessage: 'Error in fetching documents list of the API Product',\n                }));\n            });\n        } else {\n            const newApi = new API();\n            const docs = newApi.getDocuments(this.props.api.id);\n            docs.then((response) => {\n                this.setState({ docs: response.obj.list });\n            }).catch((errorResponse) => {\n                const errorData = JSON.parse(errorResponse.message);\n                const messageTxt =\n                    'Error[' + errorData.code + ']: ' + errorData.description + ' | ' + errorData.message + '.';\n                console.error(messageTxt);\n                Alert.error(intl.formatMessage({\n                    id: 'Apis.Details.Documents.Listing.documents.listing.fetching.error.message',\n                    defaultMessage: 'Error in fetching documents list of the API',\n                }));\n            });\n        }\n    }\n    toggleAddDocs() {\n        this.setState((oldState) => {\n            return { showAddDocs: !oldState.showAddDocs };\n        });\n    }\n    setFoo() {\n        this.setState({ foo: 'test' });\n    }\n    render() {\n        const { classes, api, isAPIProduct } = this.props;\n        const { docs, showAddDocs, docsToDelete } = this.state;\n        const urlPrefix = isAPIProduct ? 'api-products' : 'apis';\n        const url = `/${urlPrefix}/${api.id}/documents/create`;\n        const showActionsColumn = isRestricted(['apim:api_publish', 'apim:api_create'], api) ? 'excluded' : true;\n        const options = {\n            title: false,\n            filter: false,\n            print: false,\n            download: false,\n            viewColumns: false,\n            customToolbar: false,\n            search: false,\n            onRowsDelete: (rowData, rowMeta, that = this) => {\n                that.setState({ docsToDelete: rowData });\n                return false;\n            },\n        };\n        const columns = [\n            {\n                name: 'documentId',\n                options: {\n                    display: 'excluded',\n                    filter: false,\n                },\n            },\n            {\n                name: 'name',\n                options: {\n                    customBodyRender: (value, tableMeta) => {\n                        if (tableMeta.rowData) {\n                            const docName = tableMeta.rowData[1];\n                            const docId = tableMeta.rowData[0];\n                            return (\n                                <LinkGenerator\n                                    docName={docName}\n                                    docId={docId}\n                                    apiId={this.apiId}\n                                    apiType={api.apiType}\n                                />\n                            );\n                        }\n                        return null;\n                    },\n                    filter: false,\n                    sort: false,\n                    label: (\n                        <FormattedMessage\n                            id='Apis.Details.Documents.Listing.column.header.name'\n                            defaultMessage='name'\n                        />\n                    ),\n                },\n            },\n            {\n                name: 'sourceType',\n                label: (\n                    <FormattedMessage\n                        id='Apis.Details.Documents.Listing.column.header.source.type'\n                        defaultMessage='Source Type'\n                    />\n                ),\n                options: {\n                    sort: false,\n                },\n            },\n            {\n                name: 'type',\n                label: (\n                    <FormattedMessage id='Apis.Details.Documents.Listing.column.header.type' defaultMessage='type' />\n                ),\n                options: {\n                    sort: false,\n                },\n            },\n            {\n                name: 'sourceUrl',\n                options: {\n                    display: 'excluded',\n                    filter: false,\n                },\n            },\n            {\n                name: 'action',\n                label: (\n                    <FormattedMessage\n                        id='Apis.Details.Documents.Listing.column.header.action'\n                        defaultMessage='Action'\n                    />\n                ),\n                options: {\n                    sort: false,\n                },\n                options: {\n                    display: showActionsColumn,\n                    sort: false,\n                    customBodyRender: (value, tableMeta) => {\n                        if (tableMeta.rowData) {\n                            const docName = tableMeta.rowData[1];\n                            const docId = tableMeta.rowData[0];\n                            const sourceType = tableMeta.rowData[2];\n                            const sourceUrl = tableMeta.rowData[4];\n                            if (sourceType === 'MARKDOWN') {\n                                return (\n                                    <table className={classes.actionTable}>\n                                        <tr>\n                                            <td>\n                                                <MarkdownEditor docName={docName} docId={docId} apiId={this.apiId} />\n                                            </td>\n                                            <td>\n                                                <Edit\n                                                    apiType={api.apiType}\n                                                    docName={docName}\n                                                    docId={docId}\n                                                    apiId={this.apiId}\n                                                    getDocumentsList={this.getDocumentsList}\n                                                    api\n                                                />\n                                            </td>\n                                            <td>\n                                                <Delete\n                                                    docName={docName}\n                                                    docId={docId}\n                                                    apiId={this.apiId}\n                                                    getDocumentsList={this.getDocumentsList}\n                                                    apiType={api.apiType}\n                                                    api\n                                                />\n                                            </td>\n                                        </tr>\n                                    </table>\n                                );\n                            } else if (sourceType === 'INLINE') {\n                                return (\n                                    <table className={classes.actionTable}>\n                                        <tr>\n                                            <td>\n                                                <Suspense\n                                                    fallback={\n                                                        <FormattedMessage\n                                                            id='Apis.Details.Documents.Listing.loading'\n                                                            defaultMessage='Loading...'\n                                                        />\n                                                    }\n                                                >\n                                                    <TextEditor\n                                                        docName={docName}\n                                                        docId={docId}\n                                                        apiId={this.apiId}\n                                                        apiType={api.apiType}\n                                                    />\n                                                </Suspense>\n                                            </td>\n                                            <td>\n                                                <Edit\n                                                    apiType={api.apiType}\n                                                    docName={docName}\n                                                    docId={docId}\n                                                    apiId={this.apiId}\n                                                    getDocumentsList={this.getDocumentsList}\n                                                    api\n                                                />\n                                            </td>\n                                            <td>\n                                                <Delete\n                                                    docName={docName}\n                                                    docId={docId}\n                                                    apiId={this.apiId}\n                                                    getDocumentsList={this.getDocumentsList}\n                                                    apiType={api.apiType}\n                                                    api\n                                                />\n                                            </td>\n                                        </tr>\n                                    </table>\n                                );\n                            } else if (sourceType === 'URL') {\n                                return (\n                                    <table className={classes.actionTable}>\n                                        <tr>\n                                            <td>\n                                                <a href={sourceUrl}>\n                                                <Button>\n                                                    <Icon>open_in_new</Icon>\n                                                    <FormattedMessage\n                                                        id='Apis.Details.Documents.Listing.documents.open'\n                                                        defaultMessage='Open'\n                                                    />\n                                                </Button>\n                                               </a>  \n                                            </td>\n                                            <td>\n                                                <Edit\n                                                    apiType={api.apiType}\n                                                    docName={docName}\n                                                    docId={docId}\n                                                    apiId={this.apiId}\n                                                    getDocumentsList={this.getDocumentsList}\n                                                    api\n                                                />\n                                            </td>\n                                            <td>\n                                                <Delete\n                                                    docName={docName}\n                                                    docId={docId}\n                                                    apiId={this.apiId}\n                                                    getDocumentsList={this.getDocumentsList}\n                                                    apiType={api.apiType}\n                                                    api\n                                                />\n                                            </td>\n                                        </tr>\n                                    </table>\n                                );\n                            } else if (sourceType === 'FILE') {\n                                return (\n                                    <table className={classes.actionTable}>\n                                        <tr>\n                                            <td>\n                                                <Download docId={docId} apiId={this.apiId} docName={docName} />\n                                            </td>\n                                            <td>\n                                                <Edit\n                                                    apiType={api.apiType}\n                                                    docName={docName}\n                                                    docId={docId}\n                                                    apiId={this.apiId}\n                                                    getDocumentsList={this.getDocumentsList}\n                                                    api\n                                                />\n                                            </td>\n                                            <td>\n                                                <Delete\n                                                    docName={docName}\n                                                    docId={docId}\n                                                    apiId={this.apiId}\n                                                    getDocumentsList={this.getDocumentsList}\n                                                    apiType={api.apiType}\n                                                    api\n                                                />\n                                            </td>\n                                        </tr>\n                                    </table>\n                                );\n                            } else {\n                                return <span />;\n                            }\n                        }\n                        return null;\n                    },\n                    filter: false,\n                },\n            },\n        ];\n\n        return (\n            <React.Fragment>\n                {docsToDelete && (\n                    <DeleteMultiple getDocumentsList={this.getDocumentsList} docsToDelete={docsToDelete} docs={docs} />\n                )}\n                <div className={classes.titleWrapper}>\n                    <Typography variant='h4' component='h2' className={classes.mainTitle}>\n                        <FormattedMessage\n                            id='Apis.Details.Documents.Listing.documents.listing.title'\n                            defaultMessage='Documents'\n                        />\n                    </Typography>\n                    {docs && docs.length > 0 && (\n                        <Button\n                            size='small'\n                            component={Link}\n                            className={classes.button}\n                            disabled={isRestricted(['apim:api_create', 'apim:api_publish'], api)}\n                            to={!isRestricted(['apim:api_create', 'apim:api_publish'], api) && url}\n                        >\n                            <AddCircle className={classes.buttonIcon} />\n                            <FormattedMessage\n                                id='Apis.Details.Documents.Listing.add.new.document.button'\n                                defaultMessage='Add New Document'\n                            />\n                        </Button>\n                    )}\n                </div>\n                <div>\n                    {showAddDocs && (\n                        <Create\n                            toggleAddDocs={this.toggleAddDocs}\n                            getDocumentsList={this.getDocumentsList}\n                            apiType={api.apiType}\n                        />\n                    )}\n\n                    {docs && docs.length > 0 ? (\n                        <MUIDataTable title='' data={docs} columns={columns} options={options} />\n                    ) : (\n                        <InlineMessage type='info' height={140}>\n                            <div className={classes.contentWrapper}>\n                                <Typography variant='h5' component='h3' className={classes.head}>\n                                    <FormattedMessage\n                                        id='Apis.Details.Documents.Listing.add.new.msg.title'\n                                        defaultMessage='Create Documents'\n                                    />\n                                </Typography>\n                                {api.apiType === API.CONSTS.APIProduct\n                                    ? \n                                <Typography component='p' className={classes.content}>\n                                    <FormattedMessage\n                                        id='Apis.Details.Documents.Listing.APIProduct.add.new.msg.content'\n                                        defaultMessage={\n                                            'You can add different types of documents to an API.' +\n                                            ' Proper documentation helps API publishers to market their ' +\n                                            ' APIs better and sustain competition. '\n                                        }\n                                    />\n                                </Typography>\n                                    : \n                                <Typography component='p' className={classes.content}>\n                                    <FormattedMessage\n                                        id='Apis.Details.Documents.Listing.add.new.msg.content'\n                                        defaultMessage={\n                                            'You can add different types of documents to an API.' +\n                                            ' Proper documentation helps API publishers to market their ' +\n                                            ' APIs better and sustain competition. '\n                                        }\n                                    />\n                                </Typography>\n                                }\n                                <div className={classes.actions}>\n                                    <Button\n                                        variant='contained'\n                                        color='primary'\n                                        className={classes.button}\n                                        disabled={isRestricted(['apim:api_create', 'apim:api_publish'], api)}\n                                        component={Link}\n                                        to={!isRestricted(['apim:api_create', 'apim:api_publish'], api) && url}\n                                    >\n                                        <FormattedMessage\n                                            id='Apis.Details.Documents.Listing.add.new.msg.button'\n                                            defaultMessage='Add New Document'\n                                        />\n                                    </Button>\n                                </div>\n                            </div>\n                        </InlineMessage>\n                    )}\n                </div>\n            </React.Fragment>\n        );\n    }\n}\n\nListing.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    intl: PropTypes.shape({}).isRequired,\n    api: PropTypes.shape({\n        id: PropTypes.string,\n        apiType: PropTypes.oneOf([API.CONSTS.API, API.CONSTS.APIProduct]),\n    }).isRequired,\n};\n\nexport default injectIntl(withAPI(withStyles(styles)(Listing)));\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useState, useEffect, useContext, Suspense, lazy } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport Icon from '@material-ui/core/Icon';\nimport Button from '@material-ui/core/Button';\nimport ReactSafeHtml from 'react-safe-html';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport TableRow from '@material-ui/core/TableRow';\nimport Alert from 'AppComponents/Shared/Alert';\nimport API from 'AppData/api';\nimport APIProduct from 'AppData/APIProduct';\nimport APIContext from 'AppComponents/Apis/Details/components/ApiContext';\nimport Utils from 'AppData/Utils';\nimport Configurations from 'Config';\n\nconst ReactMarkdown = lazy(() => import('react-markdown' /* webpackChunkName: \"ViewReactMD\" */));\n\nconst styles = theme => ({\n    root: {\n        flexGrow: 1,\n        marginTop: 10,\n    },\n    titleWrapper: {\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems: 'center',\n    },\n    titleLink: {\n        color: theme.palette.primary.main,\n    },\n    docTitle: {\n        fontWeight: 100,\n        fontSize: 50,\n        color: theme.palette.grey[500],\n    },\n    docBadge: {\n        padding: theme.spacing(1),\n        background: theme.palette.primary.main,\n        position: 'absolute',\n        top: 0,\n        marginTop: -22,\n        color: theme.palette.getContrastText(theme.palette.primary.main),\n    },\n    button: {\n        padding: theme.spacing(2),\n        marginTop: theme.spacing(2),\n    },\n    displayURL: {\n        padding: theme.spacing(2),\n        marginTop: theme.spacing(2),\n        background: theme.palette.grey[200],\n        color: theme.palette.getContrastText(theme.palette.grey[200]),\n        display: 'flex',\n    },\n    displayURLLink: {\n        paddingLeft: theme.spacing(2),\n    },\n    paper: {\n        marginTop: 20,\n        padding: theme.spacing(2),\n        height: '100%',\n    },\n    leftCell: {\n        width: 150,\n    },\n});\n/**\n *\n *\n * @param {*} props\n * @returns\n */\nfunction View(props) {\n    const {\n        classes,\n        fullScreen,\n        intl,\n        match: {\n            params: { documentId },\n        },\n    } = props;\n    const { api, isAPIProduct } = useContext(APIContext);\n\n    const [code, setCode] = useState('');\n    const [doc, setDoc] = useState(null);\n    const [isFileAvailable, setIsFileAvailable] = useState(true);\n    const restAPI = isAPIProduct ? new APIProduct() : new API();\n    const skipHtml = Configurations.app.markdown.skipHtml;\n\n    useEffect(() => {\n        const docPromise = restAPI.getDocument(api.id, documentId);\n        docPromise\n            .then(doc => {\n                const { body } = doc;\n                setDoc(body);\n                if (body.sourceType === 'MARKDOWN' || body.sourceType === 'INLINE') loadContentForDoc();\n\n                if (body.sourceType === 'FILE') {\n                    const promised_get_content = restAPI.getFileForDocument(api.id, documentId);\n                    promised_get_content\n                        .then((done) => {\n                            if (done.data.size > 0) {\n                                setIsFileAvailable(true);\n                            } else {\n                                setIsFileAvailable(false);\n                            }\n                        })\n                        .catch((error) => {\n                            if (process.env.NODE_ENV !== 'production') {\n                                console.log(error);\n                            }\n                            setIsFileAvailable(false);\n                        });\n                }\n            })\n            .catch(error => {\n                if (process.env.NODE_ENV !== 'production') {\n                    console.log(error);\n                }\n            });\n    }, [documentId]);\n\n    const loadContentForDoc = () => {\n        const docPromise = restAPI.getInlineContentOfDocument(api.id, documentId);\n        docPromise\n            .then(doc => {\n                setCode(doc.text);\n            })\n            .catch(error => {\n                if (process.env.NODE_ENV !== 'production') {\n                    console.log(error);\n                }\n            });\n    };\n\n    const handleDownload = () => {\n        const promised_get_content = restAPI.getFileForDocument(api.id, documentId);\n        promised_get_content\n            .then(response => {\n                Utils.forceDownload(response);\n            })\n            .catch(error => {\n                if (process.env.NODE_ENV !== 'production') {\n                    console.log(error);\n                    Alert.error(\n                        intl.formatMessage({\n                            id: 'Apis.Details.Documents.View.error.downloading',\n                            defaultMessage: 'Error downloading the file',\n                        }),\n                    );\n                }\n            });\n    };\n    const urlPrefix = isAPIProduct ? 'api-products' : 'apis';\n    const listingPath = `/${urlPrefix}/${api.id}/documents`;\n    return (\n        doc && (\n            <React.Fragment>\n                <div className={classes.root}>\n                    <div className={classes.titleWrapper}>\n                        <Link to={listingPath} className={classes.titleLink}>\n                            <Typography variant=\"h5\" component='h2' align=\"left\" className={classes.mainTitle}>\n                                <FormattedMessage id=\"Apis.Details.Documents.View.heading\" defaultMessage=\"Documents\" />\n                            </Typography>\n                        </Link>\n                        <Icon>keyboard_arrow_right</Icon>\n                        <Typography variant=\"h5\" component='h3'>{doc.name}</Typography>\n                    </div>\n                    <Paper className={classes.paper}>\n                        <Table className={classes.table}>\n                            <TableBody>\n                                <TableRow>\n                                    <TableCell className={classes.leftCell}>\n                                        <Typography variant=\"body1\">\n                                            <FormattedMessage\n                                                id=\"Apis.Details.Documents.View.meta.name\"\n                                                defaultMessage=\"Name\"\n                                            />\n                                        </Typography>\n                                    </TableCell>\n                                    <TableCell>\n                                        <Typography variant=\"body1\">{doc.name}</Typography>\n                                    </TableCell>\n                                </TableRow>\n                                <TableRow>\n                                    <TableCell>\n                                        <Typography variant=\"body1\">\n                                            <FormattedMessage\n                                                id=\"Apis.Details.Documents.View.meta.summary\"\n                                                defaultMessage=\"Summary\"\n                                            />\n                                        </Typography>\n                                    </TableCell>\n                                    <TableCell>\n                                        <Typography variant=\"body1\">{doc.summary}</Typography>\n                                    </TableCell>\n                                </TableRow>\n                                <TableRow>\n                                    <TableCell>\n                                        <Typography variant=\"body1\">\n                                            <FormattedMessage\n                                                id=\"Apis.Details.Documents.View.meta.catogery\"\n                                                defaultMessage=\"Categorized as\"\n                                            />\n                                        </Typography>\n                                    </TableCell>\n                                    <TableCell>\n                                        <Typography variant=\"body1\">\n                                            {doc.type === 'OTHER' ? doc.otherTypeName : doc.type}\n                                        </Typography>{' '}\n                                    </TableCell>\n                                </TableRow>\n                                <TableRow>\n                                    <TableCell>\n                                        <Typography variant=\"body1\">\n                                            <FormattedMessage\n                                                id=\"Apis.Details.Documents.View.meta.source\"\n                                                defaultMessage=\"Source Type\"\n                                            />\n                                        </Typography>\n                                    </TableCell>\n                                    <TableCell>\n                                        <Typography variant=\"body1\">{doc.sourceType}</Typography>{' '}\n                                    </TableCell>\n                                </TableRow>\n                            </TableBody>\n                        </Table>\n                    </Paper>\n\n                    <Paper className={classes.paper}>\n                        {doc.sourceType === 'MARKDOWN' && (\n                            <Suspense fallback={<CircularProgress />}>\n                                <ReactMarkdown skipHtml={skipHtml} source={code} />\n                            </Suspense>\n                        )}\n                        {doc.sourceType === 'INLINE' && <ReactSafeHtml html={code} />}\n                        {doc.sourceType === 'URL' && (\n                            <a className={classes.displayURL} href={doc.sourceUrl} target=\"_blank\">\n                                {doc.sourceUrl}\n                                <Icon className={classes.displayURLLink}>open_in_new</Icon>\n                            </a>\n                        )}\n                        {doc.sourceType === 'FILE' && (\n                            <Button\n                                variant=\"contained\"\n                                color=\"default\"\n                                className={classes.button}\n                                onClick={handleDownload}\n                                disabled={!isFileAvailable}\n                            >\n                                <FormattedMessage\n                                    id=\"Apis.Details.Documents.View.btn.download\"\n                                    defaultMessage=\"Download\"\n                                />\n\n                                <Icon>arrow_downward</Icon>\n                            </Button>\n                        )}\n                    </Paper>\n                </div>\n            </React.Fragment>\n        )\n    );\n}\n\nView.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    doc: PropTypes.shape({}).isRequired,\n    apiId: PropTypes.shape({}).isRequired,\n    intl: PropTypes.shape({\n        formatMessage: PropTypes.func,\n    }).isRequired,\n    fullScreen: PropTypes.shape({}).isRequired,\n};\n\nexport default injectIntl(withStyles(styles)(View));\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useEffect, useState, Suspense, lazy } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport isEmpty from 'lodash.isempty';\nimport MarkdownEditor from './MarkdownEditor';\nimport { FormattedMessage } from 'react-intl';\nimport { Progress } from 'AppComponents/Shared';\n\nconst TextEditor = lazy(() => import('./TextEditor' /* webpackChunkName: \"EditContentTextEditor\" */));\n\nfunction EditContent(props) {\n    const [doc, setDoc] = useState(null);\n    const {\n        history: {\n            location: { state, pathname },\n            replace,\n        },\n    } = props;\n    useEffect(() => {\n        // Check if we want to show the add content screen in the case of coming from GoToEdit.jsx with history -> state props\n\n        if (!isEmpty(state)) {\n            const { doc } = state;\n            if (doc) {\n                setDoc(doc);\n            }\n        }\n    }, []);\n    return (\n        <React.Fragment>\n            {doc && doc.sourceType === 'MARKDOWN' && (\n                <MarkdownEditor docName={doc.name} docId={doc.documentId} showAtOnce />\n            )}\n            {doc && doc.sourceType === 'INLINE' && (\n                <Suspense\n                    fallback={<Progress />}\n                >\n                    <TextEditor docName={doc.name} docId={doc.documentId} showAtOnce />\n                </Suspense>\n            )}\n        </React.Fragment>\n    );\n}\nexport default withRouter(EditContent);\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport { Route, Switch } from 'react-router-dom';\nimport ResourceNotFound from 'AppComponents/Base/Errors/ResourceNotFound';\nimport APIContext from 'AppComponents/Apis/Details/components/ApiContext';\nimport Listing from './Listing';\nimport View from './View';\nimport Edit from './Edit';\nimport EditContent from './EditContent';\nimport DocCreate from './Create';\n\nconst Documents = (props) => {\n    const { isAPIProduct } = useContext(APIContext);\n    const urlPrefix = isAPIProduct ? 'api-products' : 'apis';\n    return (\n        <div>\n            <Switch>\n                <Route exact path={'/' + urlPrefix + '/:apiUUID/documents'} component={Listing} />} />\n                <Route exact path={'/' + urlPrefix + '/:apiUUID/documents/:documentId/details'} component={View} />} />\n                <Route exact path={'/' + urlPrefix + '/:apiUUID/documents/:documentId/edit'} component={Edit} />} />\n                <Route\n                    exact\n                    path={'/' + urlPrefix + '/:apiUUID/documents/:documentId/edit-content'}\n                    component={EditContent}\n                />\n                } />\n                <Route exact path={'/' + urlPrefix + '/:apiUUID/documents/create'} component={DocCreate} />\n                <Route component={ResourceNotFound} />\n            </Switch>\n        </div>\n    );\n};\n\nDocuments.propTypes = {\n    api: PropTypes.shape({}).isRequired,\n};\n\nexport default Documents;\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport Radio from '@material-ui/core/Radio';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport TextField from '@material-ui/core/TextField';\nimport Divider from '@material-ui/core/Divider';\nimport Box from '@material-ui/core/Box';\nimport Typography from '@material-ui/core/Typography';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport HelpOutline from '@material-ui/icons/HelpOutline';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { isRestricted } from 'AppData/AuthManager';\nimport { useAPI } from 'AppComponents/Apis/Details/components/ApiContext';\n\nconst RateLimitingLevels = {\n    API: 'api',\n    RESOURCE: 'resource',\n};\n\n/**\n *\n * Handles the resource level and API level throttling UI switch\n * @export\n * @param {*} props\n * @returns\n */\nfunction APIRateLimiting(props) {\n    const {\n        updateAPI, operationRateLimits, onChange, value: currentApiThrottlingPolicy, isAPIProduct,\n    } = props;\n    const [apiThrottlingPolicy, setApiThrottlingPolicy] = useState(currentApiThrottlingPolicy);\n    const [isSaving, setIsSaving] = useState(false);\n\n    const isResourceLevel = apiThrottlingPolicy === null;\n    const rateLimitingLevel = isResourceLevel ? RateLimitingLevels.RESOURCE : RateLimitingLevels.API;\n    const [apiFromContext] = useAPI();\n\n    // Following effect is used to handle the controlled component case, If user provide onChange handler to\n    // control this component, Then we accept the props as the valid input and update the current state value from props\n    useEffect(() => {\n        if (onChange) {\n            if (currentApiThrottlingPolicy === '' && apiFromContext.apiThrottlingPolicy) {\n                setApiThrottlingPolicy(apiFromContext.apiThrottlingPolicy);\n            } else {\n                setApiThrottlingPolicy(currentApiThrottlingPolicy);\n            }\n        }\n    }, [onChange, currentApiThrottlingPolicy]); // Do not expect to change the onChange during the runtime\n\n    /**\n     *\n     *\n     * @param {*} event\n     */\n    function updateRateLimitingPolicy(event) {\n        // If the selected option is resource, we set the api level rate limiting to null\n        const userSelection = event.target.value === RateLimitingLevels.RESOURCE\n            ? null : '';\n        if (onChange) {\n            // Assumed controlled component\n            onChange(userSelection);\n        } else {\n            setApiThrottlingPolicy(userSelection);\n        }\n    }\n    /**\n     *\n     *\n     */\n    function saveChanges() {\n        setIsSaving(true);\n        updateAPI({ apiThrottlingPolicy }).finally(() => setIsSaving(false));\n    }\n\n    /**\n     *\n     *\n     */\n    function resetChanges() {\n        setApiThrottlingPolicy(currentApiThrottlingPolicy);\n    }\n\n    let operationRateLimitMessage = (\n        <Typography variant='body1' gutterBottom>\n            You may change the rate limiting policies per operation\n            <Typography variant='caption' display='block' gutterBottom>\n                Expand an operation below to select a rate limiting policy for an operation\n            </Typography>\n        </Typography>\n    );\n    if (isAPIProduct) {\n        operationRateLimitMessage = (\n            <Typography variant='body1' gutterBottom>\n                Rate limiting polices of the source operation will be applied\n                <Typography variant='caption' display='block' gutterBottom>\n                    Rate limiting policy of an individual operation will be govern by the policy specified in the source\n                    operation\n                </Typography>\n            </Typography>\n        );\n    }\n    return (\n        <Paper>\n            <Grid container direction='row' spacing={3} justify='flex-start' alignItems='flex-start'>\n                <Grid item md={12} xs={12}>\n                    <Box ml={1}>\n                        <Typography variant='subtitle1' component='h3' gutterBottom>\n                            Operations Configuration\n                            <Tooltip\n                                fontSize='small'\n                                title='Configurations that affects on all the resources'\n                                placement='right-end'\n                                interactive\n                            >\n                                <IconButton aria-label='Operations Configuration help text'>\n                                    <HelpOutline />\n                                </IconButton>\n                            </Tooltip>\n                        </Typography>\n                    </Box>\n                    <Divider light variant='middle' />\n                </Grid>\n                <Grid item md={1} xs={1} />\n                <Grid item md={5} xs={11}>\n                    <FormControl component='fieldset'>\n                        <FormLabel component='legend'>Rate limiting level</FormLabel>\n                        <RadioGroup\n                            aria-label='Apply rate limiting in'\n                            value={rateLimitingLevel}\n                            onChange={updateRateLimitingPolicy}\n                            row\n                        >\n                            <FormControlLabel\n                                value={RateLimitingLevels.API}\n                                control={(\n                                    <Radio\n                                        color='primary'\n                                        disabled={isRestricted(['apim:api_create'], apiFromContext)}\n                                    />\n                                )}\n                                label='API Level'\n                                labelPlacement='end'\n                            />\n                            <FormControlLabel\n                                value={RateLimitingLevels.RESOURCE}\n                                control={(\n                                    <Radio\n                                        color='primary'\n                                        disabled={isRestricted(['apim:api_create'], apiFromContext)}\n                                    />\n                                )}\n                                label='Operation Level'\n                                labelPlacement='end'\n                            />\n                        </RadioGroup>\n                    </FormControl>\n                </Grid>\n                <Grid item md={6} xs={12}>\n                    <Box minHeight={70} borderLeft={1} pl={10}>\n                        {isResourceLevel ? (\n                            operationRateLimitMessage\n                        ) : (\n                            <TextField\n                                disabled={isRestricted(['apim:api_create'], apiFromContext)}\n                                id='operation_throttling_policy'\n                                select\n                                label='Rate limiting policies'\n                                value={apiThrottlingPolicy}\n                                onChange={({ target: { value } }) => (\n                                    onChange ? onChange(value) : setApiThrottlingPolicy(value))}\n                                helperText='Selected rate limiting policy will be applied to whole API'\n                                margin='dense'\n                                variant='outlined'\n                            >\n                                {operationRateLimits.map((rateLimit) => (\n                                    <MenuItem key={rateLimit.name} value={rateLimit.name}>\n                                        {rateLimit.displayName}\n                                    </MenuItem>\n                                ))}\n                            </TextField>\n                        )}\n                    </Box>\n                </Grid>\n                {/* If onChange handler is provided we assume that component is getting controlled by its parent\n                so that, hide the save cancel action */}\n                {!onChange && (\n                    <>\n                        <Grid item md={12}>\n                            <Divider />\n                        </Grid>\n                        <Grid item>\n                            <Box ml={1}>\n                                <Button\n                                    onClick={saveChanges}\n                                    disabled={false}\n                                    variant='outlined'\n                                    size='small'\n                                    color='primary'\n                                >\n                                    Save\n                                    {isSaving && <CircularProgress size={24} />}\n                                </Button>\n                                <Box display='inline' ml={1}>\n                                    <Button size='small' onClick={resetChanges}>\n                                        Reset\n                                    </Button>\n                                </Box>\n                            </Box>\n                        </Grid>\n                    </>\n                )}\n            </Grid>\n        </Paper>\n    );\n}\nAPIRateLimiting.defaultProps = {\n    onChange: null,\n    isAPIProduct: false,\n};\nAPIRateLimiting.propTypes = {\n    updateAPI: PropTypes.func.isRequired,\n    onChange: PropTypes.oneOf([null, PropTypes.func]),\n    operationRateLimits: PropTypes.arrayOf(PropTypes.shape({})).isRequired,\n    disabledAction: PropTypes.shape({}).isRequired,\n    value: PropTypes.string.isRequired,\n    isAPIProduct: PropTypes.bool,\n};\n\nexport default React.memo(APIRateLimiting);\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport Select from '@material-ui/core/Select';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Chip from '@material-ui/core/Chip';\nimport { withStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableRow from '@material-ui/core/TableRow';\nimport ListSubheader from '@material-ui/core/ListSubheader';\nimport { injectIntl, FormattedMessage } from 'react-intl';\nimport TextField from '@material-ui/core/TextField';\nimport { Typography } from '@material-ui/core';\nimport Switch from '@material-ui/core/Switch';\n\n\nconst styles = (theme) => ({\n    root: {\n        flexGrow: 1,\n        marginTop: 10,\n    },\n    container: {\n        display: 'flex',\n        flexWrap: 'wrap',\n    },\n    textField: {\n        marginLeft: theme.spacing(),\n        marginRight: theme.spacing(),\n        width: 400,\n    },\n    mainTitle: {\n        paddingLeft: 20,\n    },\n    scopes: {\n        width: 400,\n    },\n    dropDown: {\n        width: theme.spacing(11.25),\n    },\n    divider: {\n        marginTop: 20,\n        marginBottom: 20,\n    },\n    chip: {\n        margin: theme.spacing(),\n        color: theme.palette.text.secondary,\n        minWidth: 100,\n    },\n    chipActive: {\n        margin: theme.spacing(),\n        color: theme.palette.text.secondary,\n        background: theme.palette.background.active,\n        minWidth: 100,\n        borderRadius: theme.shape.borderRadius,\n    },\n    paper: {\n        padding: 20,\n    },\n    link: {\n        cursor: 'pointer',\n    },\n    listItem: {\n        paddingLeft: 0,\n        display: 'flex',\n        alignItems: 'center',\n    },\n    formControl: {\n        paddingRight: 0,\n        marginRight: 0,\n    },\n    resourceRoot: {\n        background: theme.palette.grey['100'],\n        paddingLeft: theme.spacing(),\n        paddingRight: theme.spacing(),\n        borderRadius: theme.shape.borderRadius,\n        marginBottom: theme.spacing(),\n    },\n    deleteButton: {\n        marginLeft: 'auto',\n    },\n    pathDisplay: {\n        marginRight: theme.spacing(2),\n        marginLeft: theme.spacing(2),\n    },\n    descriptionWrapper: {\n        paddingTop: theme.spacing(),\n        paddingBottom: theme.spacing(),\n    },\n    scopeSelect: {\n        width: '100%',\n    },\n    descriptionWrapperUp: {\n        paddingBottom: '0 !important',\n    },\n    addParamRow: {\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems: 'center',\n    },\n    propsForm: {\n        display: 'flex',\n        alignItems: 'center',\n    },\n    deleteLink: {\n        cursor: 'pointer',\n    },\n    row: {\n        '& td': {\n            borderBottom: 'none',\n            verticalAlign: 'bottom',\n            width: '33%',\n            paddingLeft: 0,\n        },\n    },\n});\n\n/**\n *\n */\nclass Operation extends React.Component {\n    /**\n     *\n     * @param {any} props @inheritdoc\n     */\n    constructor(props) {\n        super(props);\n        this.state = {\n            isSecurity: false,\n        };\n        this.handleScopeChange = this.handleScopeChange.bind(this);\n        this.handlePolicyChange = this.handlePolicyChange.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n    }\n\n    /**\n     *\n     * @param {*} operationAction event triggered for handle  Scope Change\n     */\n    handleScopeChange(operationAction) {\n        const { operation } = this.props;\n        const { data } = operationAction;\n        const { value } = data || {};\n        const defValue = value[0];\n        const newoperation = {\n            ...operation,\n            scopes: [...operation.scopes],\n        };\n        newoperation.scopes = defValue;\n        this.props.handleUpdateList(newoperation);\n    }\n\n    /**\n     *\n     * @param {*} e event triggered for handle  policy Change\n     */\n    handlePolicyChange(e) {\n        const { operation } = this.props;\n        const newoperation = { ...operation };\n        newoperation.throttlingPolicy = e.target.value;\n        this.props.handleUpdateList(newoperation);\n    }\n\n    /**\n     * @param {*} event event triggered for handle  policy Change\n     */\n    handleChange(event) {\n        const { operation } = this.props;\n        const newoperation = { ...operation };\n        const { checked } = event.target;\n        if (checked) {\n            newoperation.authType = 'Any';\n        } else {\n            newoperation.authType = 'None';\n        }\n        this.setState({\n            isSecurity: checked,\n        });\n        this.props.handleUpdateList(newoperation);\n    }\n\n    /**\n     * @inheritdoc\n     */\n    render() {\n        const {\n            operation, theme, classes, apiPolicies, scopes, isOperationRateLimiting, sharedScopes, intl,\n        } = this.props;\n        const dropdownScopes = [...scopes];\n        const { isSecurity } = this.state;\n        const filteredApiScopes = dropdownScopes.filter((sharedScope) => !sharedScope.shared);\n        let chipColor = theme.custom.operationChipColor\n            ? theme.custom.operationChipColor[operation.verb.toLowerCase()]\n            : null;\n        let chipTextColor = '#000000';\n        if (!chipColor) {\n            console.log('Check the theme settings. The resourceChipColors is not populated properlly');\n            chipColor = '#cccccc';\n        } else {\n            chipTextColor = theme.palette.getContrastText(\n                theme.custom.operationChipColor[operation.verb.toLowerCase()],\n            );\n        }\n        return (\n            <TableRow style={{ borderStyle: 'hidden' }}>\n                <TableCell>\n                    <Typography variant='body1'>\n                        {operation.target}\n                    </Typography>\n                </TableCell>\n                <TableCell>\n                    <Chip\n                        label={operation.verb}\n                        style={{\n                            backgroundColor: chipColor, color: chipTextColor, height: 20, width: 40, fontSize: 9,\n                        }}\n                        className={classes.chipActive}\n                    />\n                </TableCell>\n                <TableCell>\n                    <Select\n                        className={classes.dropDown}\n                        value={isOperationRateLimiting ? operation.throttlingPolicy : ''}\n                        disabled={!isOperationRateLimiting}\n                        onChange={this.handlePolicyChange}\n                        fieldName='Throttling Policy'\n                    >\n                        {apiPolicies.map((policy) => (\n                            <MenuItem\n                                key={policy.name}\n                                value={policy.name}\n                            >\n                                {policy.displayName}\n                            </MenuItem>\n                        ))}\n                    </Select>\n                </TableCell>\n                <TableCell>\n                    <TextField\n                        id='operation_scope'\n                        select\n                        SelectProps={{\n                            multiple: true,\n                            renderValue: (selected) => (Array.isArray(selected) ? selected.join(', ') : selected),\n                        }}\n                        fullWidth\n                        label={dropdownScopes.length !== 0 || sharedScopes ? intl.formatMessage({\n                            id: 'Apis.Details.Operations.Operation.operation.scope.label.default',\n                            defaultMessage: 'Operation scope',\n                        }) : intl.formatMessage({\n                            id: 'Apis.Details.Operations.Operation.operation.scope.label.notAvailable',\n                            defaultMessage: 'No scope available',\n                        })}\n                        value={operation.scopes}\n                        onChange={({ target: { value } }) => this.handleScopeChange({\n                            data: { value: value ? [value] : [] },\n                        })}\n                        helperText={(\n                            <FormattedMessage\n                                id='Apis.Details.Operations.Operation.operation.scope.helperText'\n                                defaultMessage='Select a scope to control permissions to this operation'\n                            />\n                        )}\n                        margin='dense'\n                        variant='outlined'\n                    >\n                        <ListSubheader>\n                            <FormattedMessage\n                                id='Apis.Details.Operations.Operation.operation.scope.select.local'\n                                defaultMessage='API Scopes'\n                            />\n                        </ListSubheader>\n                        {filteredApiScopes.length !== 0 ? filteredApiScopes.map((apiScope) => (\n                            <MenuItem\n                                key={apiScope.scope.name}\n                                value={apiScope.scope.name}\n                                dense\n                            >\n                                <Checkbox checked={operation.scopes.includes(apiScope.scope.name)} color='primary' />\n                                {apiScope.scope.name}\n                            </MenuItem>\n                        )) : (\n                            <MenuItem\n                                value=''\n                                disabled\n                            >\n                                <em>\n                                    <FormattedMessage\n                                        id='Apis.Details.Operations.Operation.operation.no.api.scope.available'\n                                        defaultMessage='No API scopes available'\n                                    />\n                                </em>\n                            </MenuItem>\n                        )}\n                        <ListSubheader>\n                            <FormattedMessage\n                                id='Apis.Details.Operations.Operation.operation.scope.select.shared'\n                                defaultMessage='Shared Scopes'\n                            />\n                        </ListSubheader>\n                        {sharedScopes && sharedScopes.length !== 0 ? sharedScopes.map((sharedScope) => (\n                            <MenuItem\n                                key={sharedScope.scope.name}\n                                value={sharedScope.scope.name}\n                                dense\n                            >\n                                <Checkbox checked={operation.scopes.includes(sharedScope.scope.name)} color='primary' />\n                                {sharedScope.scope.name}\n                            </MenuItem>\n                        )) : (\n                            <MenuItem\n                                value=''\n                                disabled\n                            >\n                                <em>\n                                    <FormattedMessage\n                                        id='Apis.Details.Operations.Operation.operation.no.sharedpi.scope.available'\n                                        defaultMessage='No shared scopes available'\n                                    />\n                                </em>\n                            </MenuItem>\n                        )}\n                    </TextField>\n                </TableCell>\n                <TableCell>\n                    <Switch\n                        checked={(() => {\n                            if (operation.authType === 'None') {\n                                return false;\n                            }\n                            return true;\n                        })()}\n                        onChange={this.handleChange}\n                        value={isSecurity}\n                        color='primary'\n                    />\n                </TableCell>\n            </TableRow>\n        );\n    }\n}\n\nOperation.propTypes = {\n    classes: PropTypes.shape({\n    }).isRequired,\n    operation: PropTypes.shape({\n        target: PropTypes.string,\n        verb: PropTypes.string,\n        throttlingPolicy: PropTypes.string,\n        auth: PropTypes.string,\n    }).isRequired,\n    apiPolicies: PropTypes.shape({\n    }).isRequired,\n    isOperationRateLimiting: PropTypes.shape({\n    }).isRequired,\n    scopes: PropTypes.shape({\n    }).isRequired,\n    handleUpdateList: PropTypes.shape({}).isRequired,\n    theme: PropTypes.shape({}).isRequired,\n    intl: PropTypes.shape({\n        formatMessage: PropTypes.func,\n    }).isRequired,\n    sharedScopes: PropTypes.arrayOf(PropTypes.shape({})).isRequired,\n};\n\nexport default injectIntl(withStyles(styles, { withTheme: true })(Operation));\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport { withStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport Box from '@material-ui/core/Box';\nimport TextField from '@material-ui/core/TextField';\nimport Api from 'AppData/api';\nimport { Progress } from 'AppComponents/Shared';\nimport Table from '@material-ui/core/Table';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableRow from '@material-ui/core/TableRow';\nimport { doRedirectToLogin } from 'AppComponents/Shared/RedirectToLogin';\nimport Grid from '@material-ui/core/Grid';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport ResourceNotFound from 'AppComponents/Base/Errors/ResourceNotFound';\nimport APIRateLimiting from '../Resources/components/APIRateLimiting';\nimport Operation from './Operation';\n\n\nconst styles = (theme) => ({\n    root: {\n        flexGrow: 1,\n        marginTop: 10,\n    },\n    container: {\n        display: 'flex',\n        flexWrap: 'wrap',\n    },\n    textField: {\n        marginLeft: theme.spacing(1),\n        marginRight: theme.spacing(1),\n        width: 400,\n    },\n    mainTitle: {\n        paddingLeft: 0,\n    },\n    scopes: {\n        width: 400,\n    },\n    titleWrapper: {\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems: 'center',\n    },\n    button: {\n        marginLeft: theme.spacing(2),\n        color: theme.palette.getContrastText(theme.palette.primary.main),\n    },\n    buttonMain: {\n        color: theme.palette.getContrastText(theme.palette.primary.main),\n        marginRight: theme.spacing(1),\n    },\n    addNewWrapper: {\n        backgroundColor: theme.palette.background.paper,\n        color: theme.palette.getContrastText(theme.palette.background.paper),\n        border: 'solid 1px ' + theme.palette.grey['300'],\n        borderRadius: theme.shape.borderRadius,\n        marginTop: theme.spacing(2),\n    },\n    contentWrapper: {\n        maxWidth: theme.custom.contentAreaWidth,\n    },\n    addNewHeader: {\n        padding: theme.spacing(2),\n        backgroundColor: theme.palette.grey['300'],\n        fontSize: theme.typography.h6.fontSize,\n        color: theme.typography.h6.color,\n        fontWeight: theme.typography.h6.fontWeight,\n    },\n    addNewOther: {\n        padding: theme.spacing(2),\n    },\n    radioGroup: {\n        display: 'flex',\n        flexDirection: 'row',\n        width: 300,\n    },\n    addResource: {\n        width: 600,\n        marginTop: 0,\n    },\n    buttonIcon: {\n        marginRight: 10,\n    },\n    expansionPanel: {\n        marginBottom: theme.spacing(1),\n    },\n    expansionPanelDetails: {\n        flexDirection: 'column',\n    },\n});\n\n/**\n * This class defined for operation List\n */\nclass Operations extends React.Component {\n    /**\n     *\n     * @param {*} props the props parameters\n     */\n    constructor(props) {\n        super(props);\n        const { api } = props;\n        const { operations } = api;\n        const operationCopy = [...operations];\n        operationCopy.sort((a, b) => ((a.target + a.verb > b.target + b.verb) ? 1 : -1));\n        this.state = {\n            notFound: false,\n            apiPolicies: [],\n            operations: operationCopy,\n            apiThrottlingPolicy: api.apiThrottlingPolicy,\n            filterKeyWord: '',\n            isSaving: false,\n            sharedScopes: [],\n            apiScopesByName: {},\n            sharedScopesByName: {},\n        };\n\n        this.newApi = new Api();\n        this.handleUpdateList = this.handleUpdateList.bind(this);\n        this.handleApiThrottlePolicy = this.handleApiThrottlePolicy.bind(this);\n        this.updateOperations = this.updateOperations.bind(this);\n    }\n\n    /**\n     *\n     */\n    componentDidMount() {\n        const { api } = this.props;\n        const apiScopesByNameList = {};\n        const promisedResPolicies = Api.policies('api');\n        promisedResPolicies\n            .then((policies) => {\n                this.setState({ apiPolicies: policies.obj.list });\n            })\n            .catch((error) => {\n                if (process.env.NODE_ENV !== 'production') {\n                    console.log(error);\n                }\n                const { status } = error.status;\n                if (status === 404) {\n                    this.setState({ notFound: true });\n                } else if (status === 401) {\n                    doRedirectToLogin();\n                }\n            });\n\n        for (const scopeObject of api.scopes) {\n            const modifiedScope = {};\n            modifiedScope.scope = scopeObject.scope;\n            modifiedScope.shared = scopeObject.shared;\n            apiScopesByNameList[scopeObject.scope.name] = modifiedScope;\n        }\n        this.setState({ apiScopesByName: apiScopesByNameList });\n        this.getAllSharedScopes();\n    }\n\n    /**\n     *\n     * @param {*} event\n     */\n    setFilterByKeyWord(event) {\n        this.setState({ filterKeyWord: event.target.value.toLowerCase() });\n    }\n\n    /**\n     * @memberof Operations\n     */\n    getAllSharedScopes() {\n        Api.getAllScopes()\n            .then((response) => {\n                if (response.body && response.body.list) {\n                    const sharedScopesList = [];\n                    const sharedScopesByNameList = {};\n                    const shared = true;\n                    for (const scope of response.body.list) {\n                        const modifiedScope = {};\n                        modifiedScope.scope = scope;\n                        modifiedScope.shared = shared;\n                        sharedScopesList.push(modifiedScope);\n                        sharedScopesByNameList[scope.name] = modifiedScope;\n                    }\n                    this.setState({ sharedScopesByName: sharedScopesByNameList });\n                    this.setState({ sharedScopes: sharedScopesList });\n                }\n            });\n    }\n\n    /**\n     *\n     *\n     * @param {*} throttlePolicy\n     * @memberof Operations\n     */\n    handleApiThrottlePolicy(apiThrottlingPolicy) {\n        this.setState({ apiThrottlingPolicy });\n    }\n\n    /**\n     *\n     * @param {*} newOperation\n     */\n    handleUpdateList(newOperation) {\n        const { operations, sharedScopesByName, apiScopesByName } = this.state;\n        const updatedList = operations.map(\n            (operation) => ((operation.target === newOperation.target && operation.verb === newOperation.verb)\n                ? newOperation : operation),\n        );\n\n        for (const selectedScope of newOperation.scopes) {\n            if (selectedScope\n                && !apiScopesByName[selectedScope]\n                && apiScopesByName[selectedScope] !== '') {\n                if (selectedScope in sharedScopesByName) {\n                    apiScopesByName[selectedScope] = sharedScopesByName[selectedScope];\n                }\n            }\n        }\n        this.setState({ apiScopesByName });\n        this.setState({ operations: updatedList });\n    }\n\n    /**\n     *\n     */\n    updateOperations() {\n        const { operations, apiThrottlingPolicy, apiScopesByName } = this.state;\n        const { updateAPI } = this.props;\n        this.setState({ isSaving: true });\n        this.updateApiScopes(operations);\n        const scopes = Object.keys(apiScopesByName).map((key) => { return apiScopesByName[key]; });\n        updateAPI({ operations, apiThrottlingPolicy, scopes }).finally(() => this.setState({ isSaving: false }));\n    }\n\n    /**\n     *\n     * This method modifies the security definition scopes by removing the scopes which are not present\n     * in operations and which are shared scopes\n     * @param {Array} apiOperations Operations list\n     */\n    updateApiScopes(apiOperations) {\n        const { apiScopesByName, sharedScopesByName } = this.state;\n        Object.keys(apiScopesByName).forEach((key) => {\n            let isScopeExistsInOperation = false;\n            for (const operation of apiOperations) {\n                // Checking if the scope resides in the operation\n                if (operation.scopes.includes(key)) {\n                    isScopeExistsInOperation = true;\n                    break;\n                }\n            }\n            // Checking if the scope exists in operation and is a shared scope\n            if (!isScopeExistsInOperation && (key in sharedScopesByName)) {\n                delete apiScopesByName[key];\n            }\n        });\n        this.setState({ apiScopesByName });\n    }\n\n    /**\n     * @inheritdoc\n     */\n    render() {\n        const { api, resourceNotFoundMessage } = this.props;\n        const {\n            operations, apiPolicies, apiThrottlingPolicy, isSaving, filterKeyWord, notFound, sharedScopes,\n        } = this.state;\n        if (notFound) {\n            return <ResourceNotFound message={resourceNotFoundMessage} />;\n        }\n        if (!operations && apiPolicies.length === 0) {\n            return <Progress />;\n        }\n        const { classes } = this.props;\n        return (\n            <>\n                <Box pb={3}>\n                    <Typography variant='h5'>\n                        <FormattedMessage\n                            id='Apis.Details.Operations.Operations.title'\n                            defaultMessage='Operations'\n                        />\n                    </Typography>\n                </Box>\n\n                <Grid container spacing={2}>\n                    <Grid item md={12}>\n                        <APIRateLimiting\n                            operationRateLimits={apiPolicies}\n                            api={api}\n                            value={apiThrottlingPolicy}\n                            onChange={this.handleApiThrottlePolicy}\n                        />\n                    </Grid>\n                    <Grid item md={2}>\n                        <Box mt={4} pb={2}>\n                            <div className={classes.searchWrapper}>\n                                <TextField\n                                    id='outlined-full-width'\n                                    label='Operation'\n                                    placeholder='Filter Operations'\n                                    onChange={(e) => this.setFilterByKeyWord(e, api.operations)}\n                                    fullWidth\n                                    variant='outlined'\n                                    InputLabelProps={{\n                                        shrink: true,\n                                    }}\n                                />\n                            </div>\n                        </Box>\n                    </Grid>\n                    <Grid item md={12}>\n                        <Table>\n                            <TableRow>\n                                <TableCell>\n                                    <Typography variant='subtitle2'>\n                                        <FormattedMessage\n                                            id='Apis.Details.Operations.operation.operationName'\n                                            defaultMessage='Operation'\n                                        />\n                                    </Typography>\n                                </TableCell>\n                                <TableCell>\n                                    <Typography variant='subtitle2'>\n                                        <FormattedMessage\n                                            id='Apis.Details.Operations.Operation.OperationType'\n                                            defaultMessage='Operation Type'\n                                        />\n                                    </Typography>\n                                </TableCell>\n                                <TableCell>\n                                    <Typography variant='subtitle2'>\n                                        <FormattedMessage\n                                            id='Apis.Details.Operations.Operation.throttling.policy'\n                                            defaultMessage='Rate Limiting'\n                                        />\n                                    </Typography>\n                                </TableCell>\n                                <TableCell>\n                                    <Typography variant='subtitle2'>\n                                        <FormattedMessage\n                                            id='Apis.Details.Operations.Operation.scopes'\n                                            defaultMessage='Scope'\n                                        />\n                                    </Typography>\n                                </TableCell>\n                                <TableCell>\n                                    <Typography variant='subtitle2'>\n                                        <FormattedMessage\n                                            id='Apis.Details.Operations.Operation.authType'\n                                            defaultMessage='Security Enabled'\n                                        />\n                                    </Typography>\n                                </TableCell>\n                            </TableRow>\n                            {operations.filter(\n                                (operation) => operation.target.toLowerCase().includes(filterKeyWord),\n                            ).map((item) => {\n                                return (\n                                    <Operation\n                                        operation={item}\n                                        handleUpdateList={this.handleUpdateList}\n                                        scopes={api.scopes}\n                                        sharedScopes={sharedScopes}\n                                        isOperationRateLimiting={!apiThrottlingPolicy}\n                                        apiPolicies={apiPolicies}\n                                    />\n                                );\n                            })}\n                        </Table>\n                    </Grid>\n                    <Grid item>\n                        <Button\n                            variant='contained'\n                            color='primary'\n                            disabled={isSaving}\n                            className={classes.buttonMain}\n                            onClick={this.updateOperations}\n                        >\n                            {isSaving && <CircularProgress size={20} />}\n                            <FormattedMessage\n                                id='Apis.Details.Operations.Operation.save'\n                                defaultMessage='Save'\n                            />\n                        </Button>\n                        <Link to={'/apis/' + api.id + '/overview'}>\n                            <Button>\n                                <FormattedMessage\n                                    id='Apis.Details.Operations.Operation.cancel'\n                                    defaultMessage='Cancel'\n                                />\n                            </Button>\n                        </Link>\n                    </Grid>\n                </Grid>\n            </>\n        );\n    }\n}\n\nOperations.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    api: PropTypes.shape({\n        operations: PropTypes.array,\n        scopes: PropTypes.array,\n        updateOperations: PropTypes.func,\n        policies: PropTypes.func,\n        id: PropTypes.string,\n    }).isRequired,\n    resourceNotFoundMessage: PropTypes.shape({}).isRequired,\n    theme: PropTypes.shape({}).isRequired,\n    intl: PropTypes.shape({\n        formatMessage: PropTypes.func,\n    }).isRequired,\n    updateAPI: PropTypes.func.isRequired,\n};\n\nexport default injectIntl(withStyles(styles)(Operations));\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Grid from '@material-ui/core/Grid';\nimport Divider from '@material-ui/core/Divider';\nimport TextField from '@material-ui/core/TextField';\nimport Typography from '@material-ui/core/Typography';\n\n/**\n *\n * Renders the operation summary and description sections\n * @export\n * @param {*} props\n * @returns\n */\nexport default function DescriptionAndSummary(props) {\n    const {\n        operation, operationsDispatcher, disableUpdate, target, verb,\n    } = props;\n    return (\n        <>\n            <Grid item xs={12} md={12}>\n                <Typography variant='subtitle1'>\n                    Summary\n                    {' '}\n                    {'&'}\n                    {' '}\nDescription\n                    <Divider variant='middle' />\n                </Typography>\n            </Grid>\n            <Grid item md={1} />\n            <Grid item md={5}>\n                <TextField\n                    margin='dense'\n                    fullWidth\n                    label='Description'\n                    multiline\n                    disabled={disableUpdate}\n                    rows='4'\n                    value={operation.description}\n                    variant='outlined'\n                    onChange={\n                        ({ target: { value } }) => operationsDispatcher(\n                            { action: 'description', data: { target, verb, value } },\n                        )\n                    }\n                />\n            </Grid>\n            <Grid item md={5}>\n                <TextField\n                    label='Summary'\n                    margin='dense'\n                    variant='outlined'\n                    fullWidth\n                    disabled={disableUpdate}\n                    multiline\n                    rows='4'\n                    value={operation.summary}\n                    onChange={({ target: { value } }) => operationsDispatcher(\n                        { action: 'summary', data: { target, verb, value } },\n                    )}\n                />\n            </Grid>\n            <Grid item md={1} />\n        </>\n    );\n}\n\nDescriptionAndSummary.propTypes = {\n    disableUpdate: PropTypes.bool,\n    operation: PropTypes.shape({\n        target: PropTypes.string.isRequired,\n        verb: PropTypes.string.isRequired,\n        spec: PropTypes.shape({}).isRequired,\n    }).isRequired,\n    operationsDispatcher: PropTypes.func.isRequired,\n    target: PropTypes.string.isRequired,\n    verb: PropTypes.string.isRequired,\n};\n\nDescriptionAndSummary.defaultProps = {\n    disableUpdate: false,\n};\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nconst VERSIONS = {\n    V3: ['3.0.0', '3.0.1', '3.0.2'],\n    V2: ['2.0'],\n};\n/**\n *\n *\n * @param {*} apiProduct\n */\nfunction getAPIProductTaggedOperations(apiProduct, openAPI) {\n    const taggedOperations = { Default: [] };\n    apiProduct.apis.map((apiOperations) => {\n        return apiOperations.operations.map((operation) => {\n            const { target, verb } = operation;\n            // TODO: WARN! `toLowerCase` could cause a case sensitive issues\n            // in `verb` if definition has mixed case verbs\n            const openAPIOperation = openAPI.paths[target] && openAPI.paths[target][verb.toLowerCase()];\n            if (!openAPIOperation) {\n                console.warn(`Could not find target = ${target} `\n                        + `verb (lower cased) = ${verb.toLowerCase()} operation in OpenAPI definition`);\n                // Skipping not found operations\n                return null;\n            }\n            const operationInfo = { spec: openAPIOperation, ...operation };\n\n            if (!taggedOperations[apiOperations.name]) {\n                taggedOperations[apiOperations.name] = [];\n            }\n            taggedOperations[apiOperations.name].push(operationInfo);\n            return operationInfo;\n        });\n    });\n    return taggedOperations;\n}\n\n/**\n *\n *\n */\nfunction getTaggedOperations(api, openAPI) {\n    const taggedOperations = { Default: [] };\n    if (api.isAPIProduct()) {\n        return getAPIProductTaggedOperations(api, openAPI);\n    } else {\n        api.operations.map((apiOperation) => {\n            const { target, verb } = apiOperation;\n            // TODO: WARN! `toLowerCase` could cause a case sensitive\n            // issues in `verb` if definition has mixed case verbs\n            const openAPIOperation = openAPI.paths[target] && openAPI.paths[target][verb.toLowerCase()];\n            if (!openAPIOperation) {\n                console.warn(`Could not find target = ${target} `\n                        + `verb (lower cased) = ${verb.toLowerCase()} operation in OpenAPI definition`);\n                // Skipping not found operations\n                return null;\n            }\n            const operationInfo = { spec: openAPIOperation, ...apiOperation };\n            if (openAPIOperation.tags) {\n                openAPIOperation.tags.map((tag) => {\n                    if (!taggedOperations[tag]) {\n                        taggedOperations[tag] = [];\n                    }\n                    taggedOperations[tag].push(operationInfo);\n                    return operationInfo; // Just to satisfy an es-lint rule or could use `for ... of ...`\n                });\n            } else {\n                taggedOperations.Default.push(operationInfo);\n            }\n            return operationInfo; // Just to satisfy an es-lint rule or could use `for ... of ...`\n        });\n        return taggedOperations;\n    }\n}\n\n/**\n * Return the definition version given the parsed spec object\n *\n * @param {SwaggerObject} spec\n * @returns {String} version\n */\nfunction getVersion(spec) {\n    return spec.openapi || spec.swagger;\n}\n/**\n *Extract the path parameters from URI template. User has to give the Open API spec version as well\n * https://github.com/OAI/OpenAPI-Specification/tree/master/versions\n * @param {String} target URI template\n * @param {String} openAPIVersion Should be a valid Open API specification version (i:e \"2.0\", \"3.0.0\")\n * @returns {Array} List of parameter objects according to the given spec version\n */\nfunction extractPathParameters(target, spec) {\n    const regEx = /[^{}]+(?=})/g;\n    const params = target.match(regEx) || [];\n    let parameters = [];\n    const openAPIVersion = getVersion(spec);\n    if (VERSIONS.V3.includes(openAPIVersion)) {\n        parameters = params.map((para) => {\n            const paraObj = {};\n            paraObj.name = para;\n            paraObj.in = 'path';\n            paraObj.required = true;\n            paraObj.schema = {\n                type: 'string',\n                format: 'string',\n            };\n            return paraObj;\n        });\n    } else if (VERSIONS.V2.includes(openAPIVersion)) {\n        parameters = params.map((para) => {\n            const paraObj = {};\n            paraObj.name = para;\n            paraObj.in = 'path';\n            paraObj.required = true;\n            paraObj.type = 'string';\n            paraObj.format = 'string';\n            return paraObj;\n        });\n    }\n\n    return parameters;\n}\n\n/**\n *\n * Return the WSO2 specific scopes array (currently only use the first element of the array)\n * @param {*} operation\n * @param {*} openAPIVersion\n * @returns {Array} Scopes of the `default` security scheme\n */\nfunction getOperationScopes(operation, spec) {\n    const openAPIVersion = getVersion(spec);\n    let scopes = [];\n    if (VERSIONS.V3.includes(openAPIVersion)) {\n        if (Array.isArray(operation.security) && operation.security.find((item) => item.default)) {\n            scopes = operation.security.find((item) => item.default).default;\n        } else if (operation['x-scope']) {\n            scopes = [operation['x-scope']];\n        }\n    } else if (VERSIONS.V2.includes(openAPIVersion)) {\n        if (Array.isArray(operation.security) && operation.security.find((item) => item.default)) {\n            scopes = operation.security.find((item) => item.default).default;\n        } else if (operation['x-scope']) {\n            scopes = [operation['x-scope']];\n        }\n    }\n    return scopes;\n}\n\n/**\n * Map the api.operations array to swagger paths like object\n * @param {Array} operations Operations in API DTO\n * @returns {Object} Mapped operations object\n */\nfunction mapAPIOperations(operations) {\n    const temp = {};\n    for (const operation of operations) {\n        const { target, verb, ...rest } = operation;\n        if (!temp[target]) {\n            temp[target] = {\n                [verb]: rest,\n            };\n        } else {\n            temp[target][verb] = rest;\n        }\n    }\n    return temp;\n}\n\n/**\n *\n *\n * @param {*} selectedOperations\n * @param {*} operations\n * @returns\n */\nfunction isSelectAll(selectedOperations, operations) {\n    for (const path in operations) {\n        if (Object.prototype.hasOwnProperty.call(operations, path)) {\n            const verbs = operations[path];\n            if (\n                !selectedOperations[path]\n                || Object.keys(selectedOperations[path]).length !== Object.keys(verbs).length\n            ) {\n                return false;\n            }\n        }\n    }\n    return true;\n}\n\n/**\n * Check whether the provided object is a Ref object.\n *\n * @param {object} content : The object that needs to be checked.\n * @return {boolean} true if Ref, false otherwise.\n * */\nfunction isRef(content) {\n    let isReference = false;\n    if (typeof content === 'object') {\n        Object.keys(content).map((name) => {\n            isReference = name === '$ref';\n            return name;\n        });\n    }\n    return isReference;\n}\n\nexport {\n    mapAPIOperations,\n    getTaggedOperations,\n    getAPIProductTaggedOperations,\n    extractPathParameters,\n    getOperationScopes,\n    isSelectAll,\n    getVersion,\n    VERSIONS,\n    isRef,\n};\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Divider from '@material-ui/core/Divider';\nimport Typography from '@material-ui/core/Typography';\nimport Switch from '@material-ui/core/Switch';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport TextField from '@material-ui/core/TextField';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport HelpOutline from '@material-ui/icons/HelpOutline';\nimport LaunchIcon from '@material-ui/icons/Launch';\nimport ListSubheader from '@material-ui/core/ListSubheader';\nimport { Link } from 'react-router-dom';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\nimport { useIntl, FormattedMessage } from 'react-intl';\nimport { getOperationScopes } from '../../operationUtils';\n\n\n/**\n *\n * Renders the security , throttling policies and scopes selection section in the operation collapsed page\n * @export\n * @param {*} props\n * @returns\n */\nexport default function OperationGovernance(props) {\n    const {\n        operation, operationsDispatcher, operationRateLimits, api, disableUpdate, spec, target, verb, sharedScopes,\n    } = props;\n    const operationScopes = getOperationScopes(operation, spec);\n    const isOperationRateLimiting = api.apiThrottlingPolicy === null;\n    const filteredApiScopes = api.scopes.filter((sharedScope) => !sharedScope.shared);\n    const intl = useIntl();\n\n    return (\n        <>\n            <Grid item xs={12} md={12}>\n                <Typography gutterBottom variant='subtitle1'>\n                    <FormattedMessage\n                        id='Apis.Details.Resources.components.operationComponents.OperationGovernance.title'\n                        defaultMessage='Operation Governance'\n                    />\n                    <Typography style={{ marginLeft: '10px' }} gutterBottom variant='caption'>\n                        <FormattedMessage\n                            id='Apis.Details.Resources.components.operationComponents.OperationGovernance.subTitle'\n                            defaultMessage='(Security, Rate Limiting & Scopes)'\n                        />\n                    </Typography>\n                    <Divider variant='middle' />\n                </Typography>\n            </Grid>\n            <Grid item xs={1} />\n            <Grid item xs={11}>\n                <FormControl disabled={disableUpdate} component='fieldset'>\n                    <FormControlLabel\n                        control={(\n                            <Switch\n                                checked={operation['x-auth-type'] && operation['x-auth-type'].toLowerCase() !== 'none'}\n                                onChange={({ target: { checked } }) => operationsDispatcher({\n                                    action: 'authType',\n                                    data: { target, verb, value: checked },\n                                })}\n                                size='small'\n                                color='primary'\n                            />\n                        )}\n                        label='Security'\n                        labelPlacement='start'\n                    />\n                </FormControl>\n                <sup style={{ marginLeft: '10px' }}>\n                    <Tooltip\n                        title={(\n                            <FormattedMessage\n                                id={'Apis.Details.Resources.components.operationComponents.OperationGovernance.Security'\n                                + '.tooltip'}\n                                defaultMessage='This will enable/disable Application Level securities defined in the\n                                Runtime Configurations page.'\n                            />\n                        )}\n                        fontSize='small'\n                        aria-label='Operation security'\n                        placement='right-end'\n                        interactive\n                    >\n                        <HelpOutline />\n                    </Tooltip>\n                </sup>\n            </Grid>\n            <Grid item md={1} />\n            <Grid item md={5}>\n                <TextField\n                    select\n                    fullWidth={!isOperationRateLimiting}\n                    SelectProps={{\n                        autoWidth: true,\n                        IconComponent: isOperationRateLimiting ? ArrowDropDownIcon : 'span',\n                    }}\n                    disabled={disableUpdate || !isOperationRateLimiting}\n                    label={\n                        isOperationRateLimiting\n                            ? intl.formatMessage({\n                                id: 'Apis.Details.Resources.components.operationComponents.'\n                                + 'OperationGovernance.rate.limiting.policy',\n                                defaultMessage: 'Rate limiting policy',\n                            })\n                            : (\n                                <div>\n                                    <FormattedMessage\n                                        id={'Apis.Details.Resources.components.operationComponents.'\n                            + 'OperationGovernance.rate.limiting.governed.by'}\n                                        defaultMessage='Rate limiting is governed by '\n                                    />\n                                    <Box fontWeight='fontWeightBold' display='inline' color='primary.main'>\n                                        <FormattedMessage\n                                            id={'Apis.Details.Resources.components.operationComponents.'\n                            + 'OperationGovernance.rate.limiting.API.level'}\n                                            defaultMessage='API Level'\n                                        />\n                                    </Box>\n                                </div>\n                            )\n                    }\n                    value={\n                        isOperationRateLimiting && operation['x-throttling-tier'] ? operation['x-throttling-tier'] : ''\n                    }\n                    onChange={({ target: { value } }) => operationsDispatcher({\n                        action: 'throttlingPolicy',\n                        data: { target, verb, value },\n                    })}\n                    helperText={\n                        isOperationRateLimiting\n                            ? intl.formatMessage({\n                                id: 'Apis.Details.Resources.components.operationComponents.'\n                                + 'OperationGovernance.rate.limiting.policy.select',\n                                defaultMessage: 'Select a rate limit policy for this operation',\n                            })\n                            : (\n                                <span>\n                                    <FormattedMessage\n                                        id={'Apis.Details.Resources.components.operationComponents.'\n                            + 'OperationGovernance.rate.limiting.helperText.section1'}\n                                        defaultMessage='Use '\n                                    />\n                                    <Box fontWeight='fontWeightBold' display='inline' color='primary.main'>\n                                        <FormattedMessage\n                                            id={'Apis.Details.Resources.components.operationComponents.'\n                            + 'OperationGovernance.rate.limiting.helperText.section2'}\n                                            defaultMessage='Operation Level'\n                                        />\n                                    </Box>\n                                    <FormattedMessage\n                                        id={'Apis.Details.Resources.components.operationComponents.'\n                            + 'OperationGovernance.rate.limiting.helperText.section3'}\n                                        defaultMessage=' rate limiting to '\n                                    />\n                                    <b>\n                                        <FormattedMessage\n                                            id={'Apis.Details.Resources.components.operationComponents.'\n                            + 'OperationGovernance.rate.limiting.helperText.section4'}\n                                            defaultMessage='enable'\n                                        />\n                                    </b>\n                                    <FormattedMessage\n                                        id={'Apis.Details.Resources.components.operationComponents.'\n                            + 'OperationGovernance.rate.limiting.helperText.section5'}\n                                        defaultMessage=' rate limiting per operation'\n                                    />\n                                </span>\n                            )\n                    }\n                    margin='dense'\n                    variant='outlined'\n                >\n                    {operationRateLimits.map((rateLimit) => (\n                        <MenuItem key={rateLimit.name} value={rateLimit.name}>\n                            {rateLimit.displayName}\n                        </MenuItem>\n                    ))}\n                </TextField>\n            </Grid>\n            <Grid item md={6} />\n            <Grid item md={1} />\n            <Grid item md={5}>\n                { operation['x-auth-type'] && operation['x-auth-type'].toLowerCase() !== 'none' ? (\n                    <TextField\n                        select\n                        SelectProps={{\n                            multiple: true,\n                            renderValue: (selected) => (Array.isArray(selected) ? selected.join(', ') : selected),\n                        }}\n                        disabled={disableUpdate}\n                        fullWidth\n                        label={api.scopes.length !== 0 || sharedScopes ? intl.formatMessage({\n                            id: 'Apis.Details.Resources.components.operationComponents.'\n                            + 'OperationGovernance.operation.scope.label.default',\n                            defaultMessage: 'Operation scope',\n                        }) : intl.formatMessage({\n                            id: 'Apis.Details.Resources.components.operationComponents.'\n                            + 'OperationGovernance.operation.scope.label.notAvailable',\n                            defaultMessage: 'No scope available',\n                        })}\n                        value={operationScopes}\n                        onChange={({ target: { value } }) => operationsDispatcher({\n                            action: 'scopes',\n                            data: { target, verb, value: value ? [value] : [] },\n                        })}\n                        helperText={(\n                            <FormattedMessage\n                                id={'Apis.Details.Resources.components.operationComponents.'\n                                + 'OperationGovernance.operation.scope.helperText'}\n                                defaultMessage='Select a scope to control permissions to this operation'\n                            />\n                        )}\n                        margin='dense'\n                        variant='outlined'\n                    >\n                        <ListSubheader>\n                            <FormattedMessage\n                                id={'Apis.Details.Resources.components.operationComponents.'\n                                + 'OperationGovernance.operation.scope.select.local'}\n                                defaultMessage='API Scopes'\n                            />\n                        </ListSubheader>\n                        {filteredApiScopes.length !== 0 ? filteredApiScopes.map((apiScope) => (\n                            <MenuItem\n                                key={apiScope.scope.name}\n                                value={apiScope.scope.name}\n                                dense\n                            >\n                                <Checkbox checked={operationScopes.includes(apiScope.scope.name)} color='primary' />\n                                {apiScope.scope.name}\n                            </MenuItem>\n                        )) : (\n                            <MenuItem\n                                value=''\n                                disabled\n                            >\n                                <em>\n                                    <FormattedMessage\n                                        id={'Apis.Details.Resources.components.operationComponents.'\n                                    + 'OperationGovernance.operation.no.api.scope.available'}\n                                        defaultMessage='No API scopes available'\n                                    />\n                                </em>\n                            </MenuItem>\n                        )}\n                        <ListSubheader>\n                            <FormattedMessage\n                                id={'Apis.Details.Resources.components.operationComponents.'\n                                + 'OperationGovernance.operation.scope.select.shared'}\n                                defaultMessage='Shared Scopes'\n                            />\n                        </ListSubheader>\n                        {sharedScopes && sharedScopes.length !== 0 ? sharedScopes.map((sharedScope) => (\n                            <MenuItem\n                                key={sharedScope.scope.name}\n                                value={sharedScope.scope.name}\n                                dense\n                            >\n                                <Checkbox checked={operationScopes.includes(sharedScope.scope.name)} color='primary' />\n                                {sharedScope.scope.name}\n                            </MenuItem>\n                        )) : (\n                            <MenuItem\n                                value=''\n                                disabled\n                            >\n                                <em>\n                                    <FormattedMessage\n                                        id={'Apis.Details.Resources.components.operationComponents.'\n                                    + 'OperationGovernance.operation.no.sharedpi.scope.available'}\n                                        defaultMessage='No shared scopes available'\n                                    />\n                                </em>\n                            </MenuItem>\n                        )}\n                    </TextField>\n                ) : null }\n            </Grid>\n            <Grid item md={5} style={{ marginTop: '14px' }}>\n                { operation['x-auth-type'] && operation['x-auth-type'].toLowerCase() !== 'none' ? !disableUpdate && (\n                    <Link to={`/apis/${api.id}/scopes/create`} target='_blank'>\n                        <Typography style={{ marginLeft: '10px' }} color='primary' display='inline' variant='caption'>\n                            <FormattedMessage\n                                id={'Apis.Details.Resources.components.operationComponents.'\n                                + 'OperationGovernance.operation.scope.create.new.scope'}\n                                defaultMessage='Create New Scope'\n                            />\n                            <LaunchIcon style={{ marginLeft: '2px' }} fontSize='small' />\n                        </Typography>\n                    </Link>\n                ) : null}\n            </Grid>\n            <Grid item md={1} />\n        </>\n    );\n}\n\nOperationGovernance.propTypes = {\n    disableUpdate: PropTypes.bool,\n    operation: PropTypes.shape({\n        target: PropTypes.string.isRequired,\n        verb: PropTypes.string.isRequired,\n    }).isRequired,\n    spec: PropTypes.shape({}).isRequired,\n    operationsDispatcher: PropTypes.func.isRequired,\n    operationRateLimits: PropTypes.arrayOf(PropTypes.shape({})),\n    api: PropTypes.shape({ scopes: PropTypes.arrayOf(PropTypes.shape({})) }),\n    target: PropTypes.string.isRequired,\n    verb: PropTypes.string.isRequired,\n    sharedScopes: PropTypes.arrayOf(PropTypes.shape({})),\n};\n\nOperationGovernance.defaultProps = {\n    operationRateLimits: [],\n    api: { scopes: [] },\n    sharedScopes: [],\n    disableUpdate: false,\n};\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport deburr from 'lodash/deburr';\nimport Downshift from 'downshift';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Divider from '@material-ui/core/Divider';\nimport TextField from '@material-ui/core/TextField';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport Icon from '@material-ui/core/Icon';\nimport { FormattedMessage } from 'react-intl';\n\n/**\n * The renderInput function.\n * @param {any} inputProps The props that are being passed to the function.\n * @returns {any} HTML view of the inputs.\n */\nfunction renderInput(inputProps) {\n    const {\n        InputProps, classes, ref, ...other\n    } = inputProps;\n    return (\n        <TextField\n            InputProps={{\n                inputRef: ref,\n                classes: {\n                    root: classes.inputRoot,\n                    input: classes.inputInput,\n                },\n                ...InputProps,\n            }}\n            {...other}\n        />\n    );\n}\n\nrenderInput.propTypes = {\n    // eslint-disable-next-line react/forbid-prop-types\n    classes: PropTypes.object.isRequired,\n    // eslint-disable-next-line react/forbid-prop-types, react/require-default-props\n    InputProps: PropTypes.object,\n};\n\n/**\n * The renderSuggestion function.\n * @param {any} suggestionProps The props that are being passed to the function.\n * @returns {any} HTML view of the suggestions.\n */\nfunction renderSuggestion(suggestionProps) {\n    const {\n        suggestion, index, itemProps, highlightedIndex, selectedItem,\n    } = suggestionProps;\n    const isHighlighted = highlightedIndex === index;\n    const isSelected = (selectedItem || '').indexOf(suggestion) > -1;\n\n    return (\n        <MenuItem\n            {...itemProps}\n            key={suggestion}\n            selected={isHighlighted}\n            component='div'\n            style={{\n                fontWeight: isSelected ? 500 : 400,\n            }}\n        >\n            {suggestion}\n        </MenuItem>\n    );\n}\n\nrenderSuggestion.propTypes = {\n    highlightedIndex: PropTypes.oneOfType([PropTypes.oneOf([null]), PropTypes.number]).isRequired,\n    index: PropTypes.number.isRequired,\n    // eslint-disable-next-line react/forbid-prop-types\n    itemProps: PropTypes.object.isRequired,\n    selectedItem: PropTypes.string.isRequired,\n    suggestion: PropTypes.shape('').isRequired,\n};\n\n/**\n * The getSuggestions function.\n * @param {any} value The value that are being passed to the function.\n * @param {any} arns The arns that are being passed to the function.\n * @returns {any} suggestion values.\n */\nfunction getSuggestions(value, { showEmpty = false } = {}, arns) {\n    const inputValue = deburr(value.trim()).toLowerCase();\n    const inputLength = inputValue.length;\n    let count = 0;\n    return inputLength === 0 && !showEmpty\n        ? []\n        : arns.filter((suggestion) => {\n            const keep = count < 5 && suggestion.slice(0, inputLength).toLowerCase() === inputValue;\n            if (keep) {\n                count += 1;\n            }\n            return keep;\n        });\n}\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n    },\n    container: {\n        flexGrow: 1,\n        position: 'relative',\n    },\n    paper: {\n        position: 'absolute',\n        zIndex: 1000,\n        marginTop: theme.spacing(-2),\n        left: 0,\n        right: 0,\n    },\n    chip: {\n        margin: theme.spacing(0.5, 0.25),\n    },\n    inputRoot: {\n        flexWrap: 'wrap',\n    },\n    inputInput: {\n        width: 'auto',\n        flexGrow: 1,\n    },\n}));\n\n\n/**\n * The autocomplete component. This component lists the ARNs of a specific user role.\n * @returns {any} HTML view of the autocomplete component.\n * @param {any} props The input parameters.\n */\nexport default function IntegrationDownshift(props) {\n    const classes = useStyles();\n    const {\n        operation,\n        operationsDispatcher,\n        target,\n        verb,\n        arns,\n    } = props;\n    const [timeout, setTimeout] = useState(50000);\n    useEffect(() => {\n        if (operation['x-amzn-resource-timeout']) {\n            setTimeout(operation['x-amzn-resource-timeout']);\n        }\n    }, []);\n    const handleTimeoutMin = (event) => {\n        if (event.target.value !== '') {\n            const minutes = parseInt(event.target.value, 10);\n            const seconds = (timeout / 1000) % 60;\n            const milliSeconds = (minutes * 60 + seconds) * 1000;\n            let newTimeout = 0;\n            if (milliSeconds > 900000) {\n                newTimeout = 900000;\n            } else if (milliSeconds < 1000) {\n                newTimeout = 1000;\n            } else {\n                newTimeout = milliSeconds;\n            }\n            setTimeout(newTimeout);\n            operationsDispatcher({\n                action: 'amznResourceTimeout',\n                data: { target, verb, value: newTimeout },\n            });\n        }\n    };\n    const handleTimeoutSec = (event) => {\n        if (event.target.value !== '') {\n            const minutes = Math.floor((timeout / 1000) / 60);\n            const seconds = parseInt(event.target.value, 10);\n            const milliSeconds = (minutes * 60 + seconds) * 1000;\n            let newTimeout = 0;\n            if (milliSeconds > 900000) {\n                newTimeout = 900000;\n            } else if (milliSeconds < 1000) {\n                newTimeout = 1000;\n            } else {\n                newTimeout = milliSeconds;\n            }\n            setTimeout(newTimeout);\n            operationsDispatcher({\n                action: 'amznResourceTimeout',\n                data: { target, verb, value: newTimeout },\n            });\n        }\n    };\n    return (\n        <>\n            <Grid item md={12} xs={12}>\n                <Typography variant='subtitle1'>\n                    <FormattedMessage\n                        id='Apis.Details.Resources.components.operationComponents.AWSLambdaSettings.Title'\n                        defaultMessage='AWS Lambda Settings'\n                    />\n                    <Divider variant='middle' />\n                </Typography>\n            </Grid>\n            <Grid item md={1} xs={1} />\n            <Grid item md={7} xs={7}>\n                <Downshift\n                    id='downshift-options'\n                    onSelect={(changes) => {\n                        if (changes !== null) {\n                            operationsDispatcher({\n                                action: 'amznResourceName',\n                                data: { target, verb, value: changes },\n                            });\n                        }\n                    }}\n                >\n                    {({\n                        clearSelection,\n                        getInputProps,\n                        getItemProps,\n                        getLabelProps,\n                        getMenuProps,\n                        highlightedIndex,\n                        inputValue,\n                        isOpen,\n                        openMenu,\n                        selectedItem,\n                    }) => {\n                        const {\n                            onBlur, onChange, onFocus, ...inputProps\n                        } = getInputProps({\n                            onChange: (event) => {\n                                operationsDispatcher({\n                                    action: 'amznResourceName',\n                                    data: { target, verb, value: event.target.value },\n                                });\n                                if (event.target.value === '') {\n                                    clearSelection();\n                                }\n                            },\n                            onBlur: () => {\n                                clearSelection();\n                            },\n                            value: operation['x-amzn-resource-name'],\n                            onFocus: openMenu,\n                            placeholder: 'Select or type an ARN',\n                        });\n                        return (\n                            <div className={classes.container}>\n                                {renderInput({\n                                    variant: 'outlined',\n                                    required: true,\n                                    fullWidth: true,\n                                    classes,\n                                    InputLabelProps: getLabelProps({ shrink: true }),\n                                    label: 'Amazon Resource Name (ARN)',\n                                    helperText: 'Select or type an ARN',\n                                    InputProps: {\n                                        onBlur,\n                                        onChange,\n                                        onFocus,\n                                        endAdornment: (\n                                            <InputAdornment position='end'>\n                                                <Icon className={classes.helpIcon}>keyboard_arrow_down</Icon>\n                                            </InputAdornment>\n                                        ),\n                                    },\n                                    inputProps,\n                                })}\n\n                                <div {...getMenuProps()}>\n                                    {isOpen ? (\n                                        <Paper className={classes.paper} square>\n                                            {getSuggestions(inputValue, { showEmpty: true }, arns)\n                                                .map((suggestion, index) => renderSuggestion({\n                                                    suggestion,\n                                                    index,\n                                                    itemProps: getItemProps({ item: suggestion }),\n                                                    highlightedIndex,\n                                                    selectedItem,\n                                                }))}\n                                        </Paper>\n                                    ) : null}\n                                </div>\n                            </div>\n                        );\n                    }}\n                </Downshift>\n            </Grid>\n            <Grid item md={1} xs={1} />\n            <Grid item md={1} xs={1}>\n                <TextField\n                    id='timeout-min'\n                    label='min'\n                    variant='outlined'\n                    helperText='Set Timeout'\n                    type='number'\n                    inputProps={{\n                        min: 0,\n                        max: 15,\n                        step: 1,\n                    }}\n                    value={Math.floor((timeout / 1000) / 60)}\n                    onChange={(event) => {\n                        handleTimeoutMin(event);\n                    }}\n                />\n            </Grid>\n            <Grid item md={1} xs={1}>\n                <TextField\n                    id='timeout-sec'\n                    label='sec'\n                    variant='outlined'\n                    type='number'\n                    inputProps={{\n                        min: 0,\n                        max: 59,\n                        step: 1,\n                    }}\n                    value={(timeout / 1000) % 60}\n                    onChange={(event) => {\n                        handleTimeoutSec(event);\n                    }}\n                />\n            </Grid>\n            <Grid item md={1} xs={1} />\n        </>\n    );\n}\n\nIntegrationDownshift.propTypes = {\n    operation: PropTypes.isRequired,\n    operationsDispatcher: PropTypes.func.isRequired,\n    target: PropTypes.string.isRequired,\n    verb: PropTypes.string.isRequired,\n    arns: PropTypes.shape([]).isRequired,\n};\n","/*\n *  Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n *  WSO2 Inc. licenses this file to you under the Apache License,\n *  Version 2.0 (the \"License\"); you may not use this file except\n *  in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *  http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing,\n *  software distributed under the License is distributed on an\n *  \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n *  KIND, either express or implied. See the License for the\n *  specific language governing permissions and limitations\n *  under the License.\n */\n\n/**\n * Defining the supported data types by the OAS spec versions.\n *\n * 2.0 : https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md#dataTypeFormat\n * 3.x :https://swagger.io/docs/specification/data-models/data-types/\n * */\nconst supportedDataTypes = {\n    '2.0': {\n        body: ['integer', 'number', 'string', 'boolean', 'object'],\n        formData: ['integer', 'number', 'string', 'boolean', 'file'],\n        query: ['integer', 'number', 'string', 'boolean'],\n        path: ['integer', 'number', 'string', 'boolean'],\n        header: ['integer', 'number', 'string', 'boolean'],\n    },\n    '3.x': {\n        body: ['integer', 'number', 'string', 'boolean', 'object'],\n        query: ['integer', 'number', 'string', 'boolean'],\n        path: ['integer', 'number', 'string', 'boolean'],\n        header: ['integer', 'number', 'string', 'boolean'],\n        cookie: ['integer', 'number', 'string', 'boolean'],\n    },\n};\n\n/**\n * Util method for checking conditions.\n *\n * @param {boolean} condition : The condition to be checked\n * @param {any} matched : The value to be returned if the condition is true\n * @param {any} otherwise : The value to be returned if the condition is false.\n * @return {object} If true -> matched, false -> otherwise\n * */\nexport function iff(condition, matched, otherwise) {\n    return condition ? matched : otherwise;\n}\n\n/**\n * Method to get the supported data types for the given parameter type.\n *\n * @param {string} specVersion : The OAS version\n * @param {string} paramType : The parameter type.\n * @return {array} The list of supported parameters.\n * */\nexport function getSupportedDataTypes(specVersion, paramType) {\n    return paramType ? supportedDataTypes[specVersion === '2.0' ? '2.0' : '3.x'][paramType] : [];\n}\n\n/**\n * Get the supported data formats by each data type.\n *\n * @param {string} dataType: THe data type.\n * @return {array} The list of supported data formats.\n * */\nexport function getDataFormats(dataType) {\n    switch (dataType) {\n        case 'integer':\n            return ['int64', 'int32'];\n        case 'number':\n            return ['float', 'double'];\n        case 'string':\n            return ['date', 'date-time', 'byte', 'binary', 'password'];\n        default:\n            return [];\n    }\n}\n\n/**\n * Method to get the parameter schema based on the spec version.\n * For more info about Data Models (Schemas) refer https://swagger.io/docs/specification/data-models/\n * @param {string} specVersion : The OAS version\n * @return {object} The default schema\n * */\nexport function getParameter(specVersion) {\n    return specVersion === '2.0'\n        ? {\n            in: '', name: '', type: '', required: '',\n        }\n        : {\n            in: '', name: '', schema: { type: '' }, required: '',\n        };\n}\n\n/**\n * Get parameter types supported by spec version.\n *\n * @param {string} specVersion : The OAS version\n * @return {array} The list of supported parameter types.\n * */\nexport function getParameterTypes(specVersion) {\n    return specVersion === '2.0' ? ['query', 'header', 'body', 'formData'] : ['query', 'header', 'cookie', 'body'];\n}\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useState, useRef, useReducer } from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport TextField from '@material-ui/core/TextField';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport ClearIcon from '@material-ui/icons/Clear';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { capitalizeFirstLetter } from 'AppData/stringFormatter';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport {\n    iff,\n    getParameter,\n    getParameterTypes,\n    getSupportedDataTypes,\n} from 'AppComponents/Apis/Details/Resources/components/operationComponents/parameterUtils';\n\nconst useStyles = makeStyles(() => ({\n    formControl: {\n        minWidth: 120,\n    },\n    parameterContainer: {\n        alignItems: 'center',\n        justifyContent: 'space-between',\n    },\n    checkBox: {\n        color: '#7c7c7c',\n    },\n}));\n\n/**\n *\n * Add resource parameter according to swagger spec\n * A unique parameter is defined by a combination of a name and param type and schema or content is required\n * OpenAPI 3.0 spec: https://swagger.io/specification/#parameterObject\n *\n * @export\n * @param {*} props\n * @returns\n */\nfunction AddParameter(props) {\n    const {\n        operation, operationsDispatcher, target, verb, specVersion, intl,\n    } = props;\n    const inputLabel = useRef(null);\n    const [labelWidth, setLabelWidth] = useState(0);\n    const initParameter = getParameter(specVersion);\n\n    /**\n     *\n     *\n     * @param {*} state\n     * @param {*} action\n     * @returns\n     */\n    function newParameterReducer(state, action) {\n        const { type, value } = action;\n        switch (type) {\n            case 'in':\n            case 'name':\n            case 'required':\n                return { ...state, [type]: value };\n            case 'type': {\n                if (specVersion === '2.0') {\n                    return { ...state, [type]: value };\n                } else {\n                    return { ...state, schema: { [type]: value } };\n                }\n            }\n            case 'clear':\n                return initParameter;\n            default:\n                return state;\n        }\n    }\n    const [newParameter, newParameterDispatcher] = useReducer(newParameterReducer, initParameter);\n    React.useEffect(() => {\n        setLabelWidth(inputLabel.current.offsetWidth);\n    }, []);\n\n    let isParameterExist = false;\n    const isParameterExistValue = operation.parameters && operation.parameters.map(\n        (operations) => (operations.in === newParameter.in && operations.name === newParameter.name),\n    );\n\n    if (isParameterExistValue && isParameterExistValue.includes(true)) {\n        isParameterExist = true;\n    } else {\n        isParameterExist = false;\n    }\n\n    const classes = useStyles();\n\n    /**\n     *\n     *\n     */\n    function clearInputs() {\n        newParameterDispatcher({ type: 'clear' });\n    }\n    /**\n     *\n     *\n     */\n    function addNewParameter() {\n        if (newParameter.in === 'body') {\n            operationsDispatcher(specVersion === '2.0'\n                ? {\n                    action: 'parameter',\n                    data: {\n                        target,\n                        verb,\n                        value: {\n                            name: newParameter.name,\n                            description: '',\n                            required: newParameter.required,\n                            in: newParameter.in,\n                            schema: {\n                                type: newParameter.type,\n                            },\n                        },\n                    },\n                }\n                : {\n                    action: 'requestBody',\n                    data: {\n                        target,\n                        verb,\n                        value: {\n                            description: '',\n                            required: newParameter.required,\n                            content: { [newParameter.name]: { schema: { type: 'object' } } },\n                        },\n                    },\n                });\n        } else {\n            operationsDispatcher({ action: 'parameter', data: { target, verb, value: newParameter } });\n        }\n        clearInputs();\n    }\n\n    function isDisabled() {\n        if (specVersion === '2.0') {\n            return (!newParameter.name || !newParameter.type || !newParameter.in || isParameterExist);\n        }\n        return (!newParameter.name || !newParameter.schema.type || !newParameter.in || isParameterExist);\n    }\n\n    function getParameterNameHelperText(paramIn) {\n        if (isParameterExist) {\n            return intl.formatMessage({\n                id: 'Apis.Details.Resources.components.operationComponents.AddParameter.parameter.name.already.exists',\n                defaultMessage: 'Parameter name already exists',\n            });\n        }\n        if (paramIn === 'body') {\n            if (specVersion !== '2.0') {\n                return intl.formatMessage({\n                    id: 'Apis.Details.Resources.components.operationComponents.AddParameter.enter.content.type',\n                    defaultMessage: 'Enter Content Type',\n                });\n            }\n        }\n        return intl.formatMessage({\n            id: 'Apis.Details.Resources.components.operationComponents.AddParameter.enter.parameter.name',\n            defaultMessage: 'Enter Parameter Name',\n        });\n    }\n\n    return (\n        <Grid container direction='row' spacing={1} className={classes.parameterContainer}>\n            <Grid item xs={2} md={2}>\n                <FormControl margin='dense' variant='outlined' className={classes.formControl}>\n                    <InputLabel ref={inputLabel} htmlFor={'param-' + verb + target} error={isParameterExist}>\n                        Parameter Type\n                    </InputLabel>\n\n                    <Select\n                        value={newParameter.in}\n                        onChange={({ target: { name, value } }) => newParameterDispatcher({ type: name, value })}\n                        labelWidth={labelWidth}\n                        inputProps={{\n                            name: 'in',\n                        }}\n                        id={'param-' + verb + target}\n                        MenuProps={{\n                            getContentAnchorEl: null,\n                            anchorOrigin: {\n                                vertical: 'bottom',\n                                horizontal: 'left',\n                            },\n                        }}\n                        error={isParameterExist}\n                    >\n                        {getParameterTypes(specVersion).map((paramType) => {\n                            if ((paramType === 'body' || paramType === 'formData')\n                                && !['post', 'put', 'patch'].includes(verb)) {\n                                return null;\n                            }\n                            return (\n                                <MenuItem value={paramType} dense>\n                                    {capitalizeFirstLetter(paramType)}\n                                </MenuItem>\n                            );\n                        })}\n                    </Select>\n                    {isParameterExist\n                        ? (\n                            <FormHelperText error>\n                                <FormattedMessage\n                                    id='Apis.Details.Resources.components.operationComponents.parameter.name.exists'\n                                    defaultMessage='Parameter type already exists'\n                                />\n                            </FormHelperText>\n                        )\n                        : (\n                            <FormHelperText>\n                                <FormattedMessage\n                                    id='Apis.Details.Resources.components.operationComponents.select.parameter.type'\n                                    defaultMessage='Select the parameter type'\n                                />\n                            </FormHelperText>\n                        )}\n                </FormControl>\n            </Grid>\n            <Grid item xs={2} md={2}>\n                <TextField\n                    id={'name-' + verb + target}\n                    label={newParameter.in === 'body'\n                        ? iff(specVersion === '2.0',\n                            <FormattedMessage\n                                id='Apis.Details.Resources.components.operationComponents.parameter.name'\n                                defaultMessage='Parameter Name'\n                            />,\n                            <FormattedMessage\n                                id='Apis.Details.Resources.components.operationComponents.content.type'\n                                defaultMessage='Content Type'\n                            />)\n                        : (\n                            <FormattedMessage\n                                id='Apis.Details.Resources.components.operationComponents.parameter.name'\n                                defaultMessage='Parameter Name'\n                            />\n                        )}\n                    name='name'\n                    value={newParameter.name}\n                    onChange={({ target: { name, value } }) => newParameterDispatcher({ type: name, value })}\n                    helperText={getParameterNameHelperText(newParameter.in)}\n                    margin='dense'\n                    variant='outlined'\n                    onKeyPress={(event) => {\n                        if (event.key === 'Enter') {\n                            // key code 13 is for `Enter` key\n                            event.preventDefault(); // To prevent form submissions\n                            addNewParameter();\n                        }\n                    }}\n                    error={isParameterExist}\n                />\n            </Grid>\n            <Grid item xs={2} md={2}>\n                <FormControl margin='dense' variant='outlined' className={classes.formControl}>\n                    <InputLabel ref={inputLabel} htmlFor={'data-' + verb + target} error={isParameterExist}>\n                        <FormattedMessage\n                            id='Apis.Details.Resources.components.operationComponents.data.type'\n                            defaultMessage='Data Type'\n                        />\n                    </InputLabel>\n\n                    <Select\n                        value={newParameter.schema !== undefined ? newParameter.schema.type : newParameter.type}\n                        onChange={({ target: { name, value } }) => newParameterDispatcher({ type: name, value })}\n                        labelWidth={labelWidth}\n                        inputProps={{\n                            name: 'type',\n                        }}\n                        id={'data-' + verb + target}\n                        MenuProps={{\n                            getContentAnchorEl: null,\n                            anchorOrigin: {\n                                vertical: 'bottom',\n                                horizontal: 'left',\n                            },\n                        }}\n                        error={isParameterExist}\n                    >\n                        {getSupportedDataTypes(specVersion, newParameter.in).map((paramType) => {\n                            return (\n                                <MenuItem value={paramType} dense>\n                                    {capitalizeFirstLetter(paramType)}\n                                </MenuItem>\n                            );\n                        })}\n                    </Select>\n                    <FormHelperText>Select the data type</FormHelperText>\n                </FormControl>\n            </Grid>\n            <Grid item xs={2} md={2}>\n                <FormControl component='fieldset' className={classes.formControl}>\n                    <FormControlLabel\n                        className={classes.checkBox}\n                        control={(\n                            <Checkbox\n                                checked={newParameter.required}\n                                onChange={\n                                    ({\n                                        target: { name, value },\n                                    }) => newParameterDispatcher({ type: name, value: !value })\n                                }\n                                value={newParameter.required}\n                                inputProps={{\n                                    name: 'required',\n                                }}\n                            />\n                        )}\n                        label={(\n                            <FormattedMessage\n                                id='Apis.Details.Resources.components.operationComponents.required'\n                                defaultMessage='Required'\n                            />\n                        )}\n                    />\n                    <FormHelperText>\n                        <FormattedMessage\n                            id='Apis.Details.Resources.components.operationComponents.required.helper.text'\n                            defaultMessage='Check whether the parameter is required.'\n                        />\n                    </FormHelperText>\n                </FormControl>\n            </Grid>\n            <Grid item xs={2} md={2}>\n                <Tooltip\n                    title={(\n                        <FormattedMessage\n                            id='Apis.Details.Resources.components.operationComponents.AddParameter.add.tooltip'\n                            defaultMessage='Add new parameter'\n                        />\n                    )}\n                    placement='bottom'\n                    interactive\n                >\n                    <span>\n                        <Button\n                            style={{ marginLeft: '20px', marginBottom: '15px', marginRight: '20px' }}\n                            disabled={isDisabled()}\n                            size='small'\n                            variant='outlined'\n                            aria-label='Add Parameter'\n                            color='primary'\n                            onClick={addNewParameter}\n                        >\n                            <FormattedMessage\n                                id='Apis.Details.Resources.components.operationComponents.AddParameter.add'\n                                defaultMessage='Add'\n                            />\n                        </Button>\n                    </span>\n                </Tooltip>\n                <sup>\n                    <Tooltip\n                        title={(\n                            <FormattedMessage\n                                id='Apis.Details.Resources.components.AddParameter.clear.inputs.tooltip'\n                                defaultMessage='Clear inputs'\n                            />\n                        )}\n                        placement='bottom'\n                        interactive\n                    >\n                        <span>\n                            <IconButton onClick={clearInputs} size='small' aria-label='clear-inputs'>\n                                <ClearIcon />\n                            </IconButton>\n                        </span>\n                    </Tooltip>\n                </sup>\n            </Grid>\n        </Grid>\n    );\n}\n\nAddParameter.propTypes = {\n    operation: PropTypes.shape({}).isRequired,\n    operationsDispatcher: PropTypes.func.isRequired,\n    target: PropTypes.string.isRequired,\n    verb: PropTypes.string.isRequired,\n    specVersion: PropTypes.string.isRequired,\n    intl: PropTypes.shape({}).isRequired,\n};\n\nexport default React.memo(injectIntl(AddParameter));\n","/*\n *  Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n *  WSO2 Inc. licenses this file to you under the Apache License,\n *  Version 2.0 (the \"License\"); you may not use this file except\n *  in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *  http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing,\n *  software distributed under the License is distributed on an\n *  \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n *  KIND, either express or implied. See the License for the\n *  specific language governing permissions and limitations\n *  under the License.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { FormattedMessage } from 'react-intl';\nimport TableCell from '@material-ui/core/TableCell';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport IconButton from '@material-ui/core/IconButton';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport TableRow from '@material-ui/core/TableRow';\n\n/**\n * Component to render the Request b\n *\n * */\nfunction RequestBody(props) {\n    const {\n        contentType, content, operation, disableUpdate, hideParameterEdit, operationsDispatcher, target, verb,\n    } = props;\n    return (\n        <TableRow key={contentType}>\n            <TableCell align='left'>\n                <FormattedMessage\n                    id='Apis.Details.Resources.components.operationComponents.ListParameter.body'\n                    defaultMessage='Body'\n                />\n            </TableCell>\n            <TableCell>{contentType}</TableCell>\n            <TableCell align='left'>{content.schema.type}</TableCell>\n            <TableCell align='left'>\n                {operation.requestBody.required\n                    ? (\n                        <FormattedMessage\n                            id={'Apis.Details.Resources.components.operationComponents'\n                            + '.ListParameter.yes'}\n                            defaultMessage='Yes'\n                        />\n                    )\n                    : (\n                        <FormattedMessage\n                            id={'Apis.Details.Resources.components.operationComponents'\n                            + '.ListParameter.no'}\n                            defaultMessage='No'\n                        />\n                    )}\n            </TableCell>\n            {!disableUpdate && (\n                <TableCell align='left'>\n                    {hideParameterEdit && (\n                        <Tooltip title='Edit'>\n                            <IconButton onClick={() => {}} fontSize='small'>\n                                <EditIcon fontSize='small' />\n                            </IconButton>\n                        </Tooltip>\n                    )}\n                    <Tooltip title={(\n                        <FormattedMessage\n                            id={'Apis.Details.Resources.components.operationComponents'\n                            + '.ListParameter.delete'}\n                            defaultMessage='Delete'\n                        />\n                    )}\n                    >\n                        <IconButton\n                            disabled={disableUpdate}\n                            onClick={() => {\n                                operationsDispatcher({\n                                    action: 'requestBody',\n                                    data: {\n                                        target,\n                                        verb,\n                                        value: {\n                                            description: '',\n                                            required: false,\n                                            content: {},\n                                        },\n                                    },\n                                });\n                            }}\n                            fontSize='small'\n                        >\n                            <DeleteIcon fontSize='small' />\n                        </IconButton>\n                    </Tooltip>\n                </TableCell>\n            )}\n        </TableRow>\n    );\n}\n\nRequestBody.propTypes = {\n    contentType: PropTypes.string.isRequired,\n    content: PropTypes.shape({}).isRequired,\n    operation: PropTypes.shape({}).isRequired,\n    disableUpdate: PropTypes.bool.isRequired,\n    hideParameterEdit: PropTypes.bool.isRequired,\n    operationsDispatcher: PropTypes.func.isRequired,\n    target: PropTypes.string.isRequired,\n    verb: PropTypes.string.isRequired,\n};\n\nexport default RequestBody;\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useReducer } from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport TextField from '@material-ui/core/TextField';\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Select from '@material-ui/core/Select';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport { capitalizeFirstLetter } from 'AppData/stringFormatter';\nimport {\n    getSupportedDataTypes,\n    getDataFormats,\n    iff,\n} from 'AppComponents/Apis/Details/Resources/components/operationComponents/parameterUtils';\nimport { FormattedMessage } from 'react-intl';\n\nconst useStyles = makeStyles((theme) => ({\n    form: {\n        display: 'flex',\n        flexDirection: 'column',\n        margin: 'auto',\n        width: 'fit-content',\n    },\n    formControl: {\n        marginTop: theme.spacing(2),\n        minWidth: 120,\n    },\n    formControlLabel: {\n        marginTop: theme.spacing(1),\n    },\n}));\n\n/**\n *\n *\n * @export\n * @returns\n */\nexport default function EditParameter(props) {\n    const {\n        operationsDispatcher, target, verb, editingParameter, setEditingParameter, version,\n    } = props;\n    /**\n     *\n     *\n     * @param {*} currentParameter\n     * @param {*} paramAction\n     */\n    function parameterActionReducer(currentParameter, paramAction) {\n        const { action, value } = paramAction;\n        const nextParameter = currentParameter.schema\n            ? { ...currentParameter, schema: { ...currentParameter.schema } } : { ...currentParameter };\n        switch (action) {\n            case 'description':\n            case 'required':\n                nextParameter[action] = value;\n                break;\n            case 'type':\n            case 'format':\n                if (nextParameter.schema) {\n                    nextParameter.schema[action] = value;\n                } else {\n                    nextParameter[action] = value;\n                }\n                break;\n            default:\n                break;\n        }\n        return nextParameter;\n    }\n    const [parameter, parameterActionDispatcher] = useReducer(parameterActionReducer, editingParameter);\n    const classes = useStyles();\n\n    const handleClose = () => {\n        setEditingParameter(null);\n    };\n\n    /**\n     *\n     *\n     */\n    function handelDone() {\n        operationsDispatcher({ action: 'parameter', data: { target, verb, value: parameter } });\n        handleClose();\n    }\n    const isEditing = parameter !== null;\n    if (!isEditing) {\n        return null;\n    }\n    return (\n        <Dialog fullWidth maxWidth='md' open={isEditing} onClose={handleClose} aria-labelledby='edit-parameter'>\n            <DialogTitle disableTypography id='edit-parameter'>\n                <Typography variant='h6'>\n                    <FormattedMessage\n                        id='Apis.Details.Resources.components.operationComponents.EditParameter.title'\n                        defaultMessage='Edit'\n                    />\n                    {' '}\n                    <Typography display='inline' variant='subtitle1'>\n                        {capitalizeFirstLetter(parameter.in)}\n                        {' '}\n                        :\n                        {parameter.name}\n                    </Typography>\n                </Typography>\n            </DialogTitle>\n            <DialogContent>\n                <Grid container direction='row' spacing={2} justify='flex-start' alignItems='center'>\n                    <Grid item md={6}>\n                        <TextField\n                            value={capitalizeFirstLetter(parameter.in)}\n                            disabled\n                            fullWidth\n                            label={(\n                                <FormattedMessage\n                                    id='Apis.Details.Resources.components.operationComponents.EditParameter.type'\n                                    defaultMessage='Parameter Type'\n                                />\n                            )}\n                            margin='dense'\n                            variant='outlined'\n                        />\n                    </Grid>\n                    <Grid item md={6}>\n                        <TextField\n                            value={parameter.name}\n                            disabled\n                            fullWidth\n                            label={(\n                                <FormattedMessage\n                                    id='Apis.Details.Resources.components.operationComponents.EditParameter.name'\n                                    defaultMessage='Name'\n                                />\n                            )}\n                            margin='dense'\n                            variant='outlined'\n                        />\n                    </Grid>\n                    <Grid item md={12}>\n                        <TextField\n                            value={parameter.description}\n                            fullWidth\n                            label={(\n                                <FormattedMessage\n                                    id='Apis.Details.Resources.components.operationComponents.EditParameter.description'\n                                    defaultMessage='Description'\n                                />\n                            )}\n                            multiline\n                            rows='4'\n                            name='description'\n                            margin='normal'\n                            variant='outlined'\n                            onChange={({ target: { name, value } }) => {\n                                parameterActionDispatcher({ action: name, value });\n                            }}\n                        />\n                    </Grid>\n                    <Grid item md={6}>\n                        <FormControl\n                            required\n                            fullWidth\n                            margin='dense'\n                            variant='outlined'\n                            className={classes.formControl}\n                        >\n                            <InputLabel required id='edit-parameter-type'>\n                                <FormattedMessage\n                                    id='Apis.Details.Resources.components.operationComponents.EditParameter.data.type'\n                                    defaultMessage='Data Type'\n                                />\n                            </InputLabel>\n\n                            <Select\n                                value={parameter.schema ? parameter.schema.type : parameter.type}\n                                onChange={\n                                    ({ target: { name, value } }) => parameterActionDispatcher({ action: name, value })\n                                }\n                                inputProps={{\n                                    name: 'type',\n                                    id: 'edit-parameter-type',\n                                }}\n                                MenuProps={{\n                                    getContentAnchorEl: null,\n                                    anchorOrigin: {\n                                        vertical: 'bottom',\n                                        horizontal: 'left',\n                                    },\n                                }}\n                            >\n                                {getSupportedDataTypes(version, parameter.in).map((dataType) => (\n                                    <MenuItem value={dataType} dense>\n                                        {capitalizeFirstLetter(dataType)}\n                                    </MenuItem>\n                                ))}\n                            </Select>\n                            <FormHelperText>\n                                <FormattedMessage\n                                    id={'Apis.Details.Resources.components.operationComponents.EditParameter.'\n                                    + 'select.schema.data.type'}\n                                    defaultMessage='Select the Schema Type'\n                                />\n                            </FormHelperText>\n                        </FormControl>\n                    </Grid>\n                    <Grid item md={6}>\n                        <FormControl\n                            fullWidth\n                            margin='dense'\n                            variant='outlined'\n                            className={classes.formControl}\n                            disabled={parameter.schema\n                                ? iff(\n                                    parameter.schema.type === 'boolean' || parameter.schema.type === 'object',\n                                    true,\n                                    false,\n                                )\n                                : iff(\n                                    parameter.type === 'boolean' || parameter.type === 'object',\n                                    true,\n                                    false,\n                                )}\n                        >\n                            <InputLabel id='edit-parameter-format'>\n                                <FormattedMessage\n                                    id={'Apis.Details.Resources.components.operationComponents.EditParameter.'\n                                    + 'data.format'}\n                                    defaultMessage='Data Format'\n                                />\n                            </InputLabel>\n                            <Select\n                                value={parameter.schema ? parameter.schema.format : parameter.format}\n                                onChange={\n                                    ({ target: { name, value } }) => parameterActionDispatcher({ action: name, value })\n                                }\n                                inputProps={{\n                                    name: 'format',\n                                    id: 'edit-parameter-format',\n                                }}\n                                MenuProps={{\n                                    getContentAnchorEl: null,\n                                    anchorOrigin: {\n                                        vertical: 'bottom',\n                                        horizontal: 'left',\n                                    },\n                                }}\n                            >\n                                {getDataFormats(\n                                    parameter.schema ? parameter.schema.type : parameter.type,\n                                ).map((dataType) => (\n                                    <MenuItem value={dataType} dense>\n                                        {capitalizeFirstLetter(dataType)}\n                                    </MenuItem>\n                                ))}\n                            </Select>\n                            <FormHelperText>\n                                <FormattedMessage\n                                    id={'Apis.Details.Resources.components.operationComponents.EditParameter.'\n                                    + 'select.format.of.data.type'}\n                                    defaultMessage='Select the Format of Data Type'\n                                />\n                            </FormHelperText>\n                        </FormControl>\n                    </Grid>\n                    <Grid item>\n                        <FormControl component='fieldset'>\n                            <FormControlLabel\n                                control={(\n                                    <Checkbox\n                                        checked={parameter.required}\n                                        onChange={(\n                                            { target: { name, checked } },\n                                        ) => parameterActionDispatcher({ action: name, value: checked })}\n                                        value={parameter.required}\n                                        inputProps={{\n                                            name: 'required',\n                                        }}\n                                    />\n                                )}\n                                label={(\n                                    <FormattedMessage\n                                        id={'Apis.Details.Resources.components.operationComponents.EditParameter.'\n                                        + 'required'}\n                                        defaultMessage='Required'\n                                    />\n                                )}\n                            />\n                        </FormControl>\n                    </Grid>\n                    <Grid container direction='row' justify='flex-end' alignItems='center'>\n                        <DialogContentText>\n                            <FormattedMessage\n                                id={'Apis.Details.Resources.components.operationComponents.EditParameter.'\n                                + 'use.done.button.to.persist.changes'}\n                                defaultMessage='Use DONE button in the page to persist changes'\n                            />\n                        </DialogContentText>\n                    </Grid>\n                </Grid>\n            </DialogContent>\n            <DialogActions>\n                <Button size='small' onClick={handleClose} color='primary'>\n                    <FormattedMessage\n                        id='Apis.Details.Resources.components.operationComponents.EditParameter.close'\n                        defaultMessage='Close'\n                    />\n                </Button>\n                <Button size='small' onClick={handelDone} variant='contained' color='primary'>\n                    <FormattedMessage\n                        id='Apis.Details.Resources.components.operationComponents.EditParameter.done'\n                        defaultMessage='Done'\n                    />\n                </Button>\n            </DialogActions>\n        </Dialog>\n    );\n}\n\nEditParameter.propTypes = {\n    operationsDispatcher: PropTypes.func.isRequired,\n    target: PropTypes.string.isRequired,\n    verb: PropTypes.string.isRequired,\n    editingParameter: PropTypes.shape({}).isRequired,\n    setEditingParameter: PropTypes.func.isRequired,\n    version: PropTypes.string.isRequired,\n};\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport { makeStyles } from '@material-ui/core/styles';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport IconButton from '@material-ui/core/IconButton';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { capitalizeFirstLetter } from 'AppData/stringFormatter';\nimport { FormattedMessage } from 'react-intl';\nimport { isRef } from 'AppComponents/Apis/Details/Resources/operationUtils';\nimport RequestBody from 'AppComponents/Apis/Details/Resources/components/operationComponents/RequestBody';\nimport EditParameter from './EditParameter';\n\nconst useStyles = makeStyles({\n    root: {\n        width: '100%',\n        overflowX: 'auto',\n    },\n    table: {\n        minWidth: 650,\n    },\n});\n\n/**\n *\n * Renders the operation parameters section\n * @export\n * @param {*} props\n * @returns\n */\nexport default function ListParameters(props) {\n    const {\n        operation, operationsDispatcher, target, verb, disableUpdate, hideParameterEdit, specVersion, resolvedSpec,\n    } = props;\n    const classes = useStyles();\n    const [editingParameter, setEditingParameter] = useState(null);\n\n    return (\n        <>\n            {editingParameter !== null && (\n                <EditParameter\n                    operationsDispatcher={operationsDispatcher}\n                    target={target}\n                    verb={verb}\n                    editingParameter={editingParameter}\n                    setEditingParameter={setEditingParameter}\n                    version={specVersion}\n                />\n            )}\n            <Table className={classes.table} aria-label='parameters list'>\n                <TableHead>\n                    <TableRow>\n                        <TableCell align='left'>\n                            <FormattedMessage\n                                id='Apis.Details.Resources.components.operationComponents.ListParameter.parameter.type'\n                                defaultMessage='Parameter Type'\n                            />\n                        </TableCell>\n                        <TableCell>\n                            <FormattedMessage\n                                id='Apis.Details.Resources.components.operationComponents.ListParameter.parameter.name'\n                                defaultMessage='Name'\n                            />\n                        </TableCell>\n                        <TableCell align='left'>\n                            <FormattedMessage\n                                id='Apis.Details.Resources.components.operationComponents.ListParameter.data.type'\n                                defaultMessage='Data Type'\n                            />\n                        </TableCell>\n                        <TableCell align='left'>\n                            <FormattedMessage\n                                id='Apis.Details.Resources.components.operationComponents.ListParameter.required'\n                                defaultMessage='Required'\n                            />\n                        </TableCell>\n                        {!disableUpdate && (\n                            <TableCell align='left'>\n                                <FormattedMessage\n                                    id='Apis.Details.Resources.components.operationComponents.ListParameter.actions'\n                                    defaultMessage='Actions'\n                                />\n                            </TableCell>\n                        )}\n                    </TableRow>\n                </TableHead>\n                <TableBody>\n                    {operation.parameters\n                        && operation.parameters.map((parameter, index) => {\n                            const isRefParam = isRef(parameter);\n                            const paramCopy = isRefParam\n                                ? resolvedSpec.paths[target][verb].parameters[index] : parameter;\n                            return (\n                                <TableRow key={paramCopy.name}>\n                                    <TableCell align='left'>{capitalizeFirstLetter(paramCopy.in)}</TableCell>\n                                    <TableCell align='left'>{paramCopy.name}</TableCell>\n                                    <TableCell align='left'>\n                                        {capitalizeFirstLetter(paramCopy.schema\n                                            ? paramCopy.schema.type : paramCopy.type)}\n                                    </TableCell>\n                                    <TableCell align='left'>\n                                        {paramCopy.required\n                                            ? (\n                                                <FormattedMessage\n                                                    id={'Apis.Details.Resources.components.operationComponents'\n                                                + '.ListParameter.yes'}\n                                                    defaultMessage='Yes'\n                                                />\n                                            )\n                                            : (\n                                                <FormattedMessage\n                                                    id={'Apis.Details.Resources.components.operationComponents'\n                                                + '.ListParameter.no'}\n                                                    defaultMessage='No'\n                                                />\n                                            )}\n                                    </TableCell>\n                                    {!disableUpdate && (\n                                        <TableCell align='left'>\n                                            {!isRefParam && (\n                                                <Tooltip title={(\n                                                    <FormattedMessage\n                                                        id={'Apis.Details.Resources.components.operationComponents.'\n                                                    + 'ListParameter.edit'}\n                                                        defaultMessage='Edit'\n                                                    />\n                                                )}\n                                                >\n                                                    <IconButton\n                                                        onClick={() => setEditingParameter(parameter)}\n                                                        fontSize='small'\n                                                    >\n                                                        <EditIcon fontSize='small' />\n                                                    </IconButton>\n                                                </Tooltip>\n                                            )}\n                                            <Tooltip title={(\n                                                <FormattedMessage\n                                                    id={'Apis.Details.Resources.components.operationComponents'\n                                                + '.ListParameter.delete'}\n                                                    defaultMessage='Delete'\n                                                />\n                                            )}\n                                            >\n                                                <IconButton\n                                                    disabled={disableUpdate}\n                                                    onClick={() => operationsDispatcher({\n                                                        action: 'deleteParameter',\n                                                        data: { target, verb, value: paramCopy },\n                                                    })}\n                                                    fontSize='small'\n                                                >\n                                                    <DeleteIcon fontSize='small' />\n                                                </IconButton>\n                                            </Tooltip>\n                                        </TableCell>\n                                    )}\n                                </TableRow>\n                            );\n                        })}\n                    {operation.requestBody && (isRef(operation.requestBody)\n                        ? Object.entries(resolvedSpec.paths[target][verb].requestBody.content).map(\n                            ([contentType, content]) => {\n                                return (\n                                    <RequestBody\n                                        contentType={contentType}\n                                        content={content}\n                                        operation={operation}\n                                        disableUpdate={disableUpdate}\n                                        hideParameterEdit={hideParameterEdit}\n                                        operationsDispatcher={operationsDispatcher}\n                                        target={target}\n                                        verb={verb}\n                                    />\n                                );\n                            },\n                        ) : Object.entries(operation.requestBody.content).map(([contentType, content]) => {\n                            return (\n                                <RequestBody\n                                    contentType={contentType}\n                                    content={content}\n                                    operation={operation}\n                                    disableUpdate={disableUpdate}\n                                    hideParameterEdit={hideParameterEdit}\n                                    operationsDispatcher={operationsDispatcher}\n                                    target={target}\n                                    verb={verb}\n                                />\n                            );\n                        }))}\n                </TableBody>\n            </Table>\n        </>\n    );\n}\n\nListParameters.defaultProps = {\n    hideParameterEdit: false,\n    disableUpdate: false,\n};\nListParameters.propTypes = {\n    operation: PropTypes.shape({}).isRequired,\n    spec: PropTypes.shape({}).isRequired,\n    hideParameterEdit: PropTypes.bool,\n    operationsDispatcher: PropTypes.func.isRequired,\n    target: PropTypes.string.isRequired,\n    verb: PropTypes.string.isRequired,\n    disableUpdate: PropTypes.bool,\n    specVersion: PropTypes.string.isRequired,\n    resolvedSpec: PropTypes.shape({}).isRequired,\n};\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Grid from '@material-ui/core/Grid';\nimport Divider from '@material-ui/core/Divider';\nimport Typography from '@material-ui/core/Typography';\nimport { getVersion } from 'AppComponents/Apis/Details/Resources/operationUtils';\nimport AddParameter from './AddParameter';\nimport ListParameters from './ListParameters';\n\n/**\n * Renders the operation parameters section\n * @export\n * @param {*} props\n * @returns\n */\nexport default function Parameters(props) {\n    const {\n        operation, spec, target, verb, operationsDispatcher, disableUpdate, resolvedSpec,\n    } = props;\n    const specVersion = getVersion(spec);\n    const haveParameters = (operation.parameters && operation.parameters.length !== 0) || operation.requestBody;\n    return (\n        <>\n            <Grid item xs={12} md={12}>\n                <Typography variant='subtitle1'>\n                    Parameters\n                    <Divider variant='middle' />\n                </Typography>\n            </Grid>\n            <Grid item xs={1} />\n            <Grid item xs={11}>\n                {!disableUpdate && (\n                    <AddParameter\n                        target={target}\n                        verb={verb}\n                        operationsDispatcher={operationsDispatcher}\n                        operation={operation}\n                        specVersion={specVersion}\n                    />\n                )}\n            </Grid>\n            <Grid item md={1} />\n            <Grid item md={11}>\n                {haveParameters && (\n                    <ListParameters\n                        disableUpdate={disableUpdate}\n                        target={target}\n                        verb={verb}\n                        operationsDispatcher={operationsDispatcher}\n                        operation={operation}\n                        spec={spec}\n                        specVersion={specVersion}\n                        resolvedSpec={resolvedSpec}\n                    />\n                )}\n            </Grid>\n        </>\n    );\n}\n\nParameters.propTypes = {\n    target: PropTypes.string.isRequired,\n    verb: PropTypes.string.isRequired,\n    spec: PropTypes.shape({}).isRequired,\n    operationsDispatcher: PropTypes.func.isRequired,\n    operation: PropTypes.shape({}).isRequired,\n    disableUpdate: PropTypes.bool,\n    resolvedSpec: PropTypes.shape({}).isRequired,\n};\n\nParameters.defaultProps = {\n    disableUpdate: false,\n};\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\n/**\n *\n *\n * @export\n * @returns\n */\nexport default function CloseConfirmation(props) {\n    const { open, onClose, closeEditor } = props;\n\n    return (\n        <Dialog\n            open={open}\n            onClose={onClose}\n            aria-labelledby='alert-dialog-title'\n            aria-describedby='alert-dialog-description'\n        >\n            <DialogTitle id='alert-dialog-title'>Discard changes and Close</DialogTitle>\n            <DialogContent>\n                <DialogContentText id='alert-dialog-description'>\n                    All the unsaved changes will be lost\n                </DialogContentText>\n            </DialogContent>\n            <DialogActions>\n                <Button onClick={onClose} color='primary'>\n                    Cancel\n                </Button>\n                <Button\n                    onClick={() => {\n                        onClose();\n                        closeEditor();\n                    }}\n                    color='primary'\n                    autoFocus\n                >\n                    Close\n                </Button>\n            </DialogActions>\n        </Dialog>\n    );\n}\n\nCloseConfirmation.propTypes = {\n    open: PropTypes.bool.isRequired,\n    onClose: PropTypes.func.isRequired,\n    closeEditor: PropTypes.func.isRequired,\n};\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { Suspense, lazy, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Fade from '@material-ui/core/Fade';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { useAPI } from 'AppComponents/Apis/Details/components/ApiContext';\nimport Alert from 'AppComponents/Shared/Alert';\nimport Grid from '@material-ui/core/Grid';\nimport Banner from 'AppComponents/Shared/Banner';\nimport CloseConfirmation from './CloseConfirmation';\n\nconst MonacoEditor = lazy(() => import('react-monaco-editor' /* webpackChunkName: \"PolicyEditorMonaco\" */));\n\nconst useStyles = makeStyles((theme) => ({\n    appBar: {\n        // position: 'relative',\n        top: 'auto',\n        bottom: 0,\n    },\n    title: {\n        marginLeft: theme.spacing(2),\n        flex: 1,\n    },\n}));\n\nconst Transition = React.forwardRef((props, ref) => {\n    return <Fade in ref={ref} {...props} />;\n});\n\n/**\n *\n *\n * @export\n * @returns\n */\nexport default function PolicyEditor(props) {\n    const classes = useStyles();\n    const [api] = useAPI();\n    const {\n        open,\n        onClose,\n        prefersDarkMode,\n        originalResourcePolicy,\n        selectedPolicy,\n        setPolicyContent,\n        resourcePoliciesDispatcher,\n        direction,\n    } = props;\n    const [pageError, setPageError] = useState(null);\n    const [openConfirmation, setOpenConfirmation] = useState(false);\n    const [saving, setSaving] = useState(false);\n\n    const editorOptions = {\n        selectOnLineNumbers: true,\n        readOnly: saving,\n        smoothScrolling: true,\n        wordWrap: 'on',\n    };\n    const editorProps = {\n        language: 'xml',\n        height: 'calc(100vh)',\n        theme: prefersDarkMode ? 'vs-dark' : 'vs',\n        value: selectedPolicy.content,\n        options: editorOptions,\n        onChange: setPolicyContent,\n    };\n\n    /**\n     *\n     *\n     */\n    function confirmAndClose() {\n        // No need to confirm if user have not done any changes\n        if (selectedPolicy.content !== originalResourcePolicy.content) {\n            setOpenConfirmation(true);\n        } else {\n            onClose();\n        }\n    }\n    /**\n     *\n     *\n     */\n    function save() {\n        setSaving(true);\n        api.updateResourcePolicy(selectedPolicy)\n            .then((response) => {\n                Alert.success('Resource policy updated successfully');\n                resourcePoliciesDispatcher({ action: 'update', data: { value: response.body, direction } });\n                onClose();\n            })\n            .catch((error) => {\n                if (error.response) {\n                    Alert.error(error.response.body.description);\n                    setPageError(error.response.body);\n                } else {\n                    // TODO add i18n ~tmkb\n                    const message = error.message || 'Something went wrong while updating resource policy!';\n                    Alert.error(message);\n                    setPageError(message);\n                }\n                console.error(error);\n            })\n            .finally(() => setSaving(false));\n    }\n\n    return (\n        <Dialog fullScreen open={open} onClose={onClose} TransitionComponent={Transition}>\n            <AppBar position='fixed' color='default' className={classes.appBar}>\n                <Toolbar variant='dense'>\n                    <Grid container direction='row' justify='flex-start' alignItems='flex-start'>\n                        <Grid item>\n                            <Button\n                                disabled={saving}\n                                variant='outlined'\n                                color='primary'\n                                className={classes.title}\n                                onClick={save}\n                            >\n                                save & close\n                                {saving && <CircularProgress size={18} />}\n                            </Button>\n                        </Grid>\n                        <Grid item>\n                            <Button color='inherit' className={classes.title} onClick={confirmAndClose}>\n                                close\n                            </Button>\n                        </Grid>\n                    </Grid>\n                </Toolbar>\n            </AppBar>\n            <Grid container direction='row' justify='center' alignItems='center'>\n                {pageError && (\n                    <Grid item xs={12}>\n                        <Banner\n                            onClose={() => setPageError(null)}\n                            disableActions\n                            dense\n                            paperProps={{ elevation: 1 }}\n                            type='error'\n                            message={pageError}\n                        />\n                    </Grid>\n                )}\n            </Grid>\n            <Grid item xs={12}>\n                <Suspense fallback={<CircularProgress disableShrink />}>\n                    <MonacoEditor {...editorProps} />\n                </Suspense>\n            </Grid>\n            <CloseConfirmation\n                open={openConfirmation}\n                onClose={() => {\n                    setPolicyContent(originalResourcePolicy.content);\n                    setOpenConfirmation(false);\n                }}\n                closeEditor={onClose}\n            />\n        </Dialog>\n    );\n}\nPolicyEditor.defaultProps = {\n    open: false,\n    onClose: () => {},\n    prefersDarkMode: false,\n\n};\nPolicyEditor.propTypes = {\n    open: PropTypes.bool,\n    onClose: PropTypes.func,\n    prefersDarkMode: PropTypes.bool,\n    originalResourcePolicy: PropTypes.shape({}).isRequired,\n    selectedPolicy: PropTypes.shape({}).isRequired,\n    setPolicyContent: PropTypes.func.isRequired,\n    resourcePoliciesDispatcher: PropTypes.func.isRequired,\n    direction: PropTypes.oneOf(['in', 'out']).isRequired,\n};\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, {\n    useState, Suspense, lazy, useEffect,\n} from 'react';\nimport PropTypes from 'prop-types';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport Button from '@material-ui/core/Button';\nimport EditIcon from '@material-ui/icons/Edit';\nimport Paper from '@material-ui/core/Paper';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Box from '@material-ui/core/Box';\n\nimport PolicyEditor from './PolicyEditor';\n\nconst MonacoEditor = lazy(() => import('react-monaco-editor' /* webpackChunkName: \"SOAPToRESTMonaco\" */));\n\n/**\n *\n * Renders the operation parameters section\n * @export\n * @param {*} props\n * @returns\n */\nexport default function SOAPToRESTListing(props) {\n    const { resourcePolicy, resourcePoliciesDispatcher } = props;\n    const [resourcePolicyIn, setResourcePolicyIn] = useState(resourcePolicy.in);\n    const [resourcePolicyOut, setResourcePolicyOut] = useState(resourcePolicy.out);\n    useEffect(() => {\n        setResourcePolicyIn(resourcePolicy.in);\n        setResourcePolicyOut(resourcePolicy.out);\n    }, [resourcePolicy]);\n    // Get use preference from OS https://material-ui.com/customization/palette/#user-preference\n    const prefersDarkMode = useMediaQuery('(prefers-color-scheme: dark)');\n    const [openEditor, setOpenEditor] = useState(false);\n    const [selectedTab, setTabIndex] = useState('in');\n    const editorOptions = {\n        selectOnLineNumbers: true,\n        readOnly: true,\n        smoothScrolling: true,\n        wordWrap: 'on',\n    };\n    const selectedPolicy = selectedTab === 'in' ? resourcePolicyIn : resourcePolicyOut;\n    const editorProps = {\n        language: 'xml',\n        height: 'calc(50vh)',\n        theme: prefersDarkMode ? 'vs-dark' : 'vs',\n        value: selectedPolicy.content,\n        options: editorOptions,\n    };\n\n    /**\n     *\n     *\n     * @param {*} content\n     */\n    function setPolicyContent(content) {\n        if (selectedTab === 'in') {\n            setResourcePolicyIn({ ...resourcePolicyIn, content });\n        } else {\n            setResourcePolicyOut({ ...resourcePolicyOut, content });\n        }\n    }\n    return (\n        <>\n            <Grid item xs={12} md={12}>\n                <Typography variant='subtitle1'>\n                    Mediation\n                    <Divider variant='middle' />\n                </Typography>\n            </Grid>\n            <Grid item xs={12}>\n                <Tabs\n                    value={selectedTab}\n                    indicatorColor='primary'\n                    textColor='primary'\n                    onChange={(event, tab) => setTabIndex(tab)}\n                    aria-label='Resource mediation in/out tabs'\n                >\n                    <Tab value='in' label='In' />\n                    <Tab value='out' label='Out' />\n                </Tabs>\n                <Box p={1}>\n                    <Button onClick={() => setOpenEditor(true)} variant='outlined' size='small' color='primary'>\n                        Edit\n                        {' '}\n                        <EditIcon />\n                    </Button>\n                    {!openEditor && (\n                        <Paper elevation={4}>\n                            <Suspense fallback={<CircularProgress disableShrink />}>\n                                <MonacoEditor {...editorProps} />\n                            </Suspense>\n                        </Paper>\n                    )}\n                </Box>\n            </Grid>\n            <PolicyEditor\n                resourcePoliciesDispatcher={resourcePoliciesDispatcher}\n                setPolicyContent={setPolicyContent}\n                selectedPolicy={selectedPolicy}\n                originalResourcePolicy={resourcePolicy[selectedTab]}\n                direction={selectedTab}\n                prefersDarkMode={prefersDarkMode}\n                onClose={() => setOpenEditor(false)}\n                open={openEditor}\n            />\n        </>\n    );\n}\n\nSOAPToRESTListing.defaultProps = {\n    disableUpdate: false,\n};\nSOAPToRESTListing.propTypes = {\n    resourcePoliciesDispatcher: PropTypes.func.isRequired,\n    resourcePolicy: PropTypes.shape({}).isRequired,\n    operationsDispatcher: PropTypes.func.isRequired,\n    target: PropTypes.string.isRequired,\n    verb: PropTypes.string.isRequired,\n    disableUpdate: PropTypes.bool,\n};\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Divider from '@material-ui/core/Divider';\nimport Button from '@material-ui/core/Button';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport Typography from '@material-ui/core/Typography';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Utils from 'AppData/Utils';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport IconButton from '@material-ui/core/IconButton';\nimport Badge from '@material-ui/core/Badge';\nimport ReportProblemOutlinedIcon from '@material-ui/icons/ReportProblemOutlined';\n// spliced operation components\n\nimport { FormattedMessage } from 'react-intl';\nimport DescriptionAndSummary from './operationComponents/DescriptionAndSummary';\nimport OperationGovernance from './operationComponents/OperationGovernance';\nimport AWSLambdaSettings from './operationComponents/AWSLambdaSettings';\nimport Parameters from './operationComponents/Parameters';\nimport SOAPToRESTListing from './operationComponents/SOAPToREST/SOAPToRESTListing';\nimport { getOperationScopes } from '../operationUtils';\n\n/**\n *\n * Handle the operation UI\n * @export\n * @param {*} props\n * @returns {React.Component} @inheritdoc\n */\nfunction Operation(props) {\n    const {\n        operation,\n        operationsDispatcher,\n        highlight,\n        operationRateLimits,\n        api,\n        disableDelete,\n        disableUpdate,\n        onMarkAsDelete,\n        markAsDelete,\n        hideParameters,\n        spec,\n        resourcePolicy,\n        resourcePoliciesDispatcher,\n        target,\n        verb,\n        arns,\n        resolvedSpec,\n        sharedScopes,\n    } = props;\n    const [isExpanded, setIsExpanded] = useState(false);\n    const useStyles = makeStyles((theme) => {\n        const backgroundColor = theme.custom.resourceChipColors[verb];\n        return {\n            customButton: {\n                '&:hover': { backgroundColor },\n                backgroundColor,\n                width: theme.spacing(12),\n                color: theme.palette.getContrastText(backgroundColor),\n            },\n            paperStyles: {\n                border: `1px solid ${backgroundColor}`,\n                borderBottom: '',\n            },\n            customDivider: {\n                backgroundColor,\n            },\n            linearProgress: {\n                height: '2px',\n            },\n            highlightSelected: {\n                backgroundColor: Utils.hexToRGBA(backgroundColor, 0.1),\n            },\n            contentNoMargin: {\n                margin: theme.spacing(0),\n            },\n            overlayUnmarkDelete: {\n                position: 'absolute',\n                zIndex: theme.zIndex.operationDeleteUndo,\n                right: '10%',\n            },\n            targetText: {\n                maxWidth: 180,\n                margin: '0px 20px',\n                overflow: 'hidden',\n                whiteSpace: 'nowrap',\n                textOverflow: 'ellipsis',\n                display: 'inline-block',\n            },\n            title: {\n                display: 'inline',\n                margin: `0 ${theme.spacing(5)}px`,\n            },\n        };\n    });\n    const apiOperation = api.operations[target] && api.operations[target][verb.toUpperCase()];\n    const isUsedInAPIProduct = apiOperation && Array.isArray(\n        apiOperation.usedProductIds,\n    ) && apiOperation.usedProductIds.length;\n\n    /**\n     *\n     *\n     * @param {*} event\n     */\n    function toggleDelete(event) {\n        event.stopPropagation();\n        event.preventDefault();\n        setIsExpanded(false);\n        onMarkAsDelete({ verb, target }, !markAsDelete);\n    }\n\n    /**\n     *\n     *\n     * @param {*} event\n     * @param {*} expanded\n     */\n    function handleExpansion(event, expanded) {\n        setIsExpanded(expanded);\n    }\n    const classes = useStyles();\n    return (\n        <>\n            {markAsDelete && (\n                <Box className={classes.overlayUnmarkDelete}>\n                    <Tooltip title='Marked for delete' aria-label='Marked for delete'>\n                        <Button onClick={toggleDelete} variant='outlined' style={{ marginTop: '10px' }}>\n                            <FormattedMessage\n                                id='Apis.Details.Resources.components.Operation.undo.delete'\n                                defaultMessage='Undo Delete'\n                            />\n                        </Button>\n                    </Tooltip>\n                </Box>\n            )}\n            <ExpansionPanel\n                expanded={isExpanded}\n                onChange={handleExpansion}\n                disabled={markAsDelete}\n                className={classes.paperStyles}\n            >\n                <ExpansionPanelSummary\n                    className={highlight ? classes.highlightSelected : ''}\n                    disableRipple\n                    disableTouchRipple\n                    expandIcon={<ExpandMoreIcon />}\n                    id={verb + target}\n                    classes={{ content: classes.contentNoMargin }}\n                >\n                    <Grid container direction='row' justify='space-between' alignItems='center' spacing={0}>\n                        <Grid item md={4} style={{ display: 'flex', alignItems: 'center' }}>\n                            <Badge\n                                invisible={!operation['x-wso2-new']}\n                                color='error'\n                                variant='dot'\n                                style={{ display: 'inline-block' }}\n                            >\n                                <Button\n                                    disableFocusRipple\n                                    variant='contained'\n                                    aria-label={'HTTP verb ' + verb}\n                                    size='small'\n                                    className={classes.customButton}\n                                >\n                                    {verb}\n                                </Button>\n                            </Badge>\n                            <Typography\n                                display='inline-block'\n                                variant='h6'\n                                component='div'\n                                gutterBottom\n                                className={classes.targetText}\n                                title={target}\n                            >\n                                {target}\n                                {(operation.summary && operation.summary !== '') && (\n                                    <Typography\n                                        display='inline-block'\n                                        style={{ margin: '0px 30px' }}\n                                        variant='caption'\n                                        gutterBottom\n                                    >\n                                        {operation.summary}\n                                    </Typography>\n                                )}\n                            </Typography>\n                        </Grid>\n                        {(isUsedInAPIProduct) ? (\n                            <Grid item md={3}>\n                                <Box display='flex' justifyContent='center'>\n                                    <ReportProblemOutlinedIcon fontSize='small' />\n                                    <Box display='flex' ml={1} mt={1 / 4} fontSize='caption.fontSize'>\n                                        <FormattedMessage\n                                            id={'Apis.Details.Resources.components.Operation.this.operation.'\n                                            + 'used.in.products'}\n                                            defaultMessage={'This operation is used in {isUsedInAPIProduct} API '\n                                            + 'product(s)'}\n                                            values={{ isUsedInAPIProduct }}\n                                        />\n                                    </Box>\n                                </Box>\n                            </Grid>\n                        ) : (\n                            <Grid item md={3} />\n                        )}\n                        <Grid item md={4}>\n                            <Typography\n                                display='inline'\n                                style={{ margin: '0px 30px' }}\n                                variant='caption'\n                                gutterBottom\n                            >\n                                <b>{ getOperationScopes(operation, spec) != null && 'Scope : ' }</b>\n                                { getOperationScopes(operation, spec) != null\n                                    && getOperationScopes(operation, spec).join(', ') }\n                            </Typography>\n                        </Grid>\n                        {!(disableDelete || markAsDelete) && (\n                            <Grid item md={1} justify='flex-end' container>\n                                <Tooltip\n                                    title={\n                                        isUsedInAPIProduct\n                                            ? (\n                                                <FormattedMessage\n                                                    id={'Apis.Details.Resources.components.Operation.cannot.delete'\n                                                    + '.when.used.in.api.products'}\n                                                    defaultMessage='Cannot delete operation when used in an API product'\n                                                />\n                                            )\n                                            : (\n                                                <FormattedMessage\n                                                    id='Apis.Details.Resources.components.Operation.Delete'\n                                                    defaultMessage='Delete'\n                                                />\n                                            )\n                                    }\n                                >\n                                    <div>\n                                        <IconButton\n                                            disabled={Boolean(isUsedInAPIProduct) || disableUpdate}\n                                            onClick={toggleDelete}\n                                            aria-label='delete operation'\n                                        >\n                                            <DeleteIcon fontSize='small' />\n                                        </IconButton>\n                                    </div>\n                                </Tooltip>\n                            </Grid>\n                        )}\n                    </Grid>\n                </ExpansionPanelSummary>\n                <Divider light className={classes.customDivider} />\n                <ExpansionPanelDetails>\n                    <Grid spacing={2} container direction='row' justify='flex-start' alignItems='flex-start'>\n                        <DescriptionAndSummary\n                            operation={operation}\n                            operationsDispatcher={operationsDispatcher}\n                            disableUpdate={disableUpdate}\n                            target={target}\n                            verb={verb}\n                        />\n                        <OperationGovernance\n                            operation={operation}\n                            operationsDispatcher={operationsDispatcher}\n                            operationRateLimits={operationRateLimits}\n                            api={api}\n                            disableUpdate={disableUpdate}\n                            spec={spec}\n                            target={target}\n                            verb={verb}\n                            sharedScopes={sharedScopes}\n                        />\n                        {!hideParameters && (\n                            <Parameters\n                                operation={operation}\n                                operationsDispatcher={operationsDispatcher}\n                                operationRateLimits={operationRateLimits}\n                                api={api}\n                                disableUpdate={disableUpdate}\n                                spec={spec}\n                                target={target}\n                                verb={verb}\n                                resolvedSpec={resolvedSpec}\n                            />\n                        )}\n                        {resourcePolicy && (\n                            <SOAPToRESTListing\n                                operation={operation}\n                                operationsDispatcher={operationsDispatcher}\n                                operationRateLimits={operationRateLimits}\n                                resourcePolicy={resourcePolicy}\n                                resourcePoliciesDispatcher={resourcePoliciesDispatcher}\n                                disableUpdate={disableUpdate}\n                                spec={spec}\n                                target={target}\n                                verb={verb}\n                            />\n                        )}\n                        {\n                            api.endpointConfig\n                            && api.endpointConfig.endpoint_type\n                            && api.endpointConfig.endpoint_type === 'awslambda'\n                            && (\n                                <AWSLambdaSettings\n                                    operation={operation}\n                                    operationsDispatcher={operationsDispatcher}\n                                    target={target}\n                                    verb={verb}\n                                    arns={arns}\n                                />\n                            )\n                        }\n                    </Grid>\n                </ExpansionPanelDetails>\n            </ExpansionPanel>\n        </>\n    );\n}\nOperation.defaultProps = {\n    highlight: false,\n    disableUpdate: false,\n    hideParameters: false,\n    disableDelete: false,\n    onMarkAsDelete: () => {},\n    markAsDelete: false,\n    operationRateLimits: [], // Response body.list from apis policies for `api` throttling policies type\n};\nOperation.propTypes = {\n    api: PropTypes.shape({ scopes: PropTypes.arrayOf(PropTypes.shape({})), resourcePolicies: PropTypes.shape({}) })\n        .isRequired,\n    operationsDispatcher: PropTypes.func.isRequired,\n    onMarkAsDelete: PropTypes.func,\n    resourcePoliciesDispatcher: PropTypes.func.isRequired,\n    markAsDelete: PropTypes.bool,\n    disableDelete: PropTypes.bool,\n    disableUpdate: PropTypes.bool,\n    hideParameters: PropTypes.bool,\n    resourcePolicy: PropTypes.shape({}).isRequired,\n    operation: PropTypes.shape({\n        'x-wso2-new': PropTypes.bool,\n        summary: PropTypes.string,\n    }).isRequired,\n    target: PropTypes.string.isRequired,\n    verb: PropTypes.string.isRequired,\n    spec: PropTypes.shape({}).isRequired,\n    highlight: PropTypes.bool,\n    operationRateLimits: PropTypes.arrayOf(PropTypes.shape({})),\n    arns: PropTypes.shape([]).isRequired,\n    resolvedSpec: PropTypes.shape({}).isRequired,\n    sharedScopes: PropTypes.arrayOf(PropTypes.shape({})).isRequired,\n};\n\nexport default React.memo(Operation);\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport PropTypes from 'prop-types';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport Typography from '@material-ui/core/Typography';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\n\nconst useStyles = makeStyles((theme) => ({\n    tagClass: {\n        maxWidth: 1000,\n        overflow: 'hidden',\n        whiteSpace: 'nowrap',\n        textOverflow: 'ellipsis',\n        [theme.breakpoints.down('md')]: {\n            maxWidth: 800,\n        },\n    },\n}\n));\n\n/**\n *\n * Return a group container , User should provide the operations list as the child component\n * @export\n * @param {*} props\n * @returns {React.Component} @inheritdoc\n */\nexport default function GroupOfOperations(props) {\n    const classes = useStyles();\n    const { openAPI, children, tag } = props;\n    const currentTagInfo = openAPI.tags && openAPI.tags.find((tagInfo) => tagInfo.name === tag);\n    return (\n        <ExpansionPanel defaultExpanded>\n            <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />} id={tag}>\n                <Typography\n                    variant='h4'\n                    className={classes.tagClass}\n                    title={tag}\n                    component='h3'\n                >\n                    {tag}\n                </Typography>\n                {currentTagInfo && (\n                    <Typography style={{ margin: '0px 30px' }} variant='caption'>\n                        {currentTagInfo.description}\n                    </Typography>\n                )}\n            </ExpansionPanelSummary>\n            <ExpansionPanelDetails>{children}</ExpansionPanelDetails>\n        </ExpansionPanel>\n    );\n}\n\nGroupOfOperations.propTypes = {\n    children: PropTypes.element.isRequired,\n    openAPI: PropTypes.shape({ tags: PropTypes.arrayOf(PropTypes.string) }).isRequired,\n    tag: PropTypes.string.isRequired,\n};\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useState } from 'react';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Button from '@material-ui/core/Button';\nimport Divider from '@material-ui/core/Divider';\nimport Typography from '@material-ui/core/Typography';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport Dialog from '@material-ui/core/Dialog';\nimport IconButton from '@material-ui/core/IconButton';\nimport ErrorOutlineIcon from '@material-ui/icons/ErrorOutline';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport PropTypes from 'prop-types';\n/**\n *\n *\n * @export\n * @param {*} props\n * @returns\n */\nexport default function SpecErrors(props) {\n    const { specErrors } = props;\n    const [open, setOpen] = useState(false);\n    if (specErrors.length === 0) {\n        return null;\n    }\n    return (\n        <>\n            <sup>\n                <Tooltip title='Show errors'>\n                    <IconButton onClick={() => setOpen(true)} color='secondary' aria-label='Errors in spec'>\n                        <ErrorOutlineIcon color='error' />\n                    </IconButton>\n                </Tooltip>\n            </sup>\n            <Dialog maxWidth='md' aria-labelledby='confirmation-dialog-title' open={open}>\n                <DialogTitle id='confirmation-dialog-title'>\n                    <Typography display='inline' color='textPrimary' variant='h6'>\n                        Errors\n                        <Typography display='inline' variant='subtitle2'>\n                            {' '}\n                            in OpenAPI definition\n                        </Typography>\n                    </Typography>\n                </DialogTitle>\n                <DialogContent dividers>\n                    <List>\n                        {specErrors.map((error, index) => (\n                            <>\n                                {index % 2 !== 0 && <Divider light variant='inset' />}\n                                <ListItem>\n                                    <ListItemText\n                                        primary={error.message}\n                                        primaryTypographyProps={{\n                                            color: 'error',\n                                        }}\n                                        inset\n                                    />\n                                </ListItem>\n                            </>\n                        ))}\n                    </List>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => setOpen(false)} color='primary'>\n                        Ok\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        </>\n    );\n}\n\nSpecErrors.propTypes = {\n    specErrors: PropTypes.arrayOf(PropTypes.shape({})).isRequired,\n};\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, {\n    useReducer,\n    useRef,\n    useState,\n} from 'react';\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport APIValidation from 'AppData/APIValidation';\nimport AddIcon from '@material-ui/icons/Add';\nimport Alert from 'AppComponents/Shared/Alert';\nimport Badge from '@material-ui/core/Badge';\nimport Box from '@material-ui/core/Box';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport ClearIcon from '@material-ui/icons/Clear';\nimport Fab from '@material-ui/core/Fab';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport Grid from '@material-ui/core/Grid';\nimport IconButton from '@material-ui/core/IconButton';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Paper from '@material-ui/core/Paper';\nimport PropTypes from 'prop-types';\nimport Select from '@material-ui/core/Select';\nimport TextField from '@material-ui/core/TextField';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n    formControl: {\n        minWidth: 120,\n    },\n    paper: {\n        paddingLeft: theme.spacing(4),\n        paddingTop: theme.spacing(1.5),\n        paddingBottom: theme.spacing(0.5),\n        marginTop: '12px',\n    },\n}));\n\n/**\n *\n *\n * @param {*} props\n * @returns\n */\nfunction VerbElement(props) {\n    const {\n        verb, onClick, isButton, checked,\n    } = props;\n\n    const useMenuStyles = makeStyles((theme) => {\n        const backgroundColor = theme.custom.resourceChipColors[verb.toLowerCase()];\n        return {\n            customMenu: {\n                '&:hover': { backgroundColor },\n                backgroundColor,\n                color: theme.palette.getContrastText(backgroundColor),\n            },\n            customButton: {\n                '&:hover': { backgroundColor },\n                backgroundColor,\n                width: theme.spacing(12),\n                marginLeft: theme.spacing(1),\n                color: theme.palette.getContrastText(backgroundColor),\n            },\n        };\n    });\n    const classes = useMenuStyles();\n    if (isButton) {\n        return (\n            <Button disableFocusRipple variant='contained' className={classes.customButton} size='small'>\n                {verb}\n            </Button>\n        );\n    } else {\n        return (\n            <MenuItem dense className={classes.customMenu} onClick={onClick}>\n                <Checkbox checked={checked} />\n                {verb}\n            </MenuItem>\n        );\n    }\n}\n\nconst SUPPORTED_VERBS = ['GET', 'POST', 'PUT', 'PATCH', 'DELETE', 'HEAD', 'OPTIONS'];\n/**\n *\n *\n * @export\n * @param {*} props\n * @returns\n */\nfunction AddOperation(props) {\n    const { operationsDispatcher } = props;\n    const inputLabel = useRef(null);\n    const [labelWidth, setLabelWidth] = useState(0);\n    const intl = useIntl();\n\n    /**\n     *\n     *\n     * @param {*} state\n     * @param {*} action\n     * @returns\n     */\n    function newOperationsReducer(state, action) {\n        const { type, value } = action;\n        switch (type) {\n            case 'target':\n            case 'verbs':\n                return { ...state, [type]: value };\n            case 'clear':\n                return { verbs: [], target: '' };\n            case 'error':\n                return { ...state, error: value };\n            default:\n                return state;\n        }\n    }\n    const [newOperations, newOperationsDispatcher] = useReducer(newOperationsReducer, { verbs: [] });\n    React.useEffect(() => {\n        setLabelWidth(inputLabel.current.offsetWidth);\n    }, []);\n    const classes = useStyles();\n\n    /**\n     *\n     *\n     */\n    function clearInputs() {\n        newOperationsDispatcher({ type: 'clear' });\n    }\n    /**\n     *\n     *\n     */\n    function addOperation() {\n        if (\n            APIValidation.operationTarget.validate(newOperations.target).error !== null\n            || APIValidation.operationVerbs.validate(newOperations.verbs).error !== null\n        ) {\n            Alert.warning(intl.formatMessage({\n                id: 'Apis.Details.Resources.components.AddOperation.operation.target.or.verb.cannot.be.empty.warning',\n                defaultMessage: \"Operation target or operation verb(s) can't be empty\",\n            }));\n            return;\n        }\n        if (newOperations.target.indexOf(' ') >= 0) {\n            Alert.warning(intl.formatMessage({\n                id: 'Apis.Details.Resources.components.AddOperation.operation.target.cannot.contains.white.spaces',\n                defaultMessage: 'Operation target cannot contains white spaces',\n            }));\n            return;\n        }\n        operationsDispatcher({ action: 'add', data: newOperations });\n        clearInputs();\n    }\n    return (\n        <Paper className={classes.paper}>\n            <Grid container direction='row' spacing={0} justify='center' alignItems='center'>\n                <Grid item md={5} xs={12}>\n                    <FormControl margin='dense' variant='outlined' className={classes.formControl}>\n                        <InputLabel ref={inputLabel} htmlFor='operation-verb'>\n                            <FormattedMessage\n                                id='Apis.Details.Resources.components.AddOperation.http.verb'\n                                defaultMessage='HTTP Verb'\n                            />\n                        </InputLabel>\n\n                        <Select\n                            multiple\n                            renderValue={(verbs) => {\n                                const remaining = [];\n                                const verbElements = verbs.map((verb, index) => {\n                                    if (index < 2) {\n                                        return <VerbElement isButton verb={verb} />;\n                                    }\n                                    remaining.push(verb.toUpperCase());\n                                    return null;\n                                });\n                                const allSelected = verbs.length === SUPPORTED_VERBS.length;\n                                return (\n                                    <>\n                                        {verbElements}\n                                        {remaining.length > 0 && (\n                                            <Tooltip title={remaining.join(', ')} placement='top'>\n                                                <Box display='inline' color='text.hint' m={1} fontSize='subtitle1'>\n                                                    {allSelected ? 'All selected' : `${verbs.length - 2} more`}\n                                                </Box>\n                                            </Tooltip>\n                                        )}\n                                    </>\n                                );\n                            }}\n                            value={newOperations.verbs}\n                            onChange={({ target: { name, value } }) => newOperationsDispatcher({ type: name, value })}\n                            labelWidth={labelWidth}\n                            inputProps={{\n                                name: 'verbs',\n                                id: 'operation-verb',\n                            }}\n                            MenuProps={{\n                                getContentAnchorEl: null,\n                                anchorOrigin: {\n                                    vertical: 'bottom',\n                                    horizontal: 'left',\n                                },\n                            }}\n                        >\n                            {SUPPORTED_VERBS.map((verb) => (\n                                <VerbElement\n                                    checked={newOperations.verbs.includes(verb.toLowerCase())}\n                                    value={verb.toLowerCase()}\n                                    verb={verb}\n                                />\n                            ))}\n                        </Select>\n\n                        <FormHelperText id='my-helper-text'>\n                            {newOperations.verbs.includes('options') && (\n                                // TODO: Add i18n to tooltip text ~tmkb\n                                <Tooltip\n                                    title={\n                                        'Select the OPTIONS method to send OPTIONS calls to the backend.'\n                                        + ' If the OPTIONS method is not selected, OPTIONS calls will be returned '\n                                        + 'from the Gateway with allowed methods.'\n                                    }\n                                    placement='bottom'\n                                >\n                                    <Badge color='error' variant='dot'>\n                                        <FormattedMessage\n                                            id='Apis.Details.Resources.components.AddOperation.option'\n                                            defaultMessage='OPTIONS'\n                                        />\n                                    </Badge>\n                                </Tooltip>\n                            )}\n                        </FormHelperText>\n                    </FormControl>\n                </Grid>\n                <Grid item md={5} xs={8}>\n                    <TextField\n                        id='operation-target'\n                        label='URI Pattern'\n                        error={Boolean(newOperations.error)}\n                        autoFocus\n                        name='target'\n                        value={newOperations.target}\n                        onChange={({ target: { name, value } }) => newOperationsDispatcher(\n                            { type: name, value: value.startsWith('/') ? value : `/${value}` },\n                        )}\n                        placeholder='Enter URI pattern'\n                        helperText={newOperations.error || 'Enter URI pattern'}\n                        fullWidth\n                        margin='dense'\n                        variant='outlined'\n                        InputLabelProps={{\n                            shrink: true,\n                        }}\n                        onKeyPress={(event) => {\n                            if (event.key === 'Enter') {\n                                // key code 13 is for `Enter` key\n                                event.preventDefault(); // To prevent form submissions\n                                addOperation();\n                            }\n                        }}\n                    />\n                </Grid>\n                <Grid item md={2} xs={4}>\n                    <Tooltip\n                        title={(\n                            <FormattedMessage\n                                id='Apis.Details.Resources.components.AddOperation.add.tooltip'\n                                defaultMessage='Add new operation'\n                            />\n                        )}\n                        placement='bottom'\n                        interactive\n                    >\n                        <span>\n                            <Fab\n                                style={{ marginLeft: '20px', marginBottom: '15px', marginRight: '20px' }}\n                                size='small'\n                                color='primary'\n                                aria-label='Add new operation'\n                                onClick={addOperation}\n                            >\n                                <AddIcon />\n                            </Fab>\n                        </span>\n                    </Tooltip>\n                    <sup>\n                        <Tooltip\n                            title={(\n                                <FormattedMessage\n                                    id='Apis.Details.Resources.components.AddOperation.clear.inputs.tooltip'\n                                    defaultMessage='Clear inputs'\n                                />\n                            )}\n                            placement='bottom'\n                            interactive\n                        >\n                            <span>\n                                <IconButton onClick={clearInputs} size='small' aria-label='clear-inputs'>\n                                    <ClearIcon />\n                                </IconButton>\n                            </span>\n                        </Tooltip>\n                    </sup>\n                </Grid>\n            </Grid>\n        </Paper>\n    );\n}\n\nAddOperation.propTypes = {\n    operationsDispatcher: PropTypes.func.isRequired,\n};\n\nexport default React.memo(AddOperation);\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Box from '@material-ui/core/Box';\nimport LaunchIcon from '@material-ui/icons/Launch';\nimport { Link } from 'react-router-dom';\nimport Typography from '@material-ui/core/Typography';\n\n\nconst useStyles = makeStyles((theme) => ({\n    link: {\n        color: theme.palette.primary.dark,\n        marginLeft: theme.spacing(2),\n        display: 'inline',\n    },\n}));\n\n/**\n *\n * Simply reders the edit api definition link in the bottom of the resources listing\n * @export\n * @param {*} props\n * @returns\n */\nexport default function GoToDefinitionLink(props) {\n    const { api, message } = props;\n    const classes = useStyles();\n    return (\n        <Box m={1}>\n            <Link to={`/apis/${api.id}/api definition`}>\n                <Typography className={classes.link} variant='caption'>\n                    {message}\n                    <LaunchIcon style={{ marginLeft: '2px' }} fontSize='small' />\n                </Typography>\n            </Link>\n        </Box>\n    );\n}\nGoToDefinitionLink.defaultProps = {\n    message: 'Edit API Definition',\n};\nGoToDefinitionLink.propTypes = {\n    api: PropTypes.shape({ id: PropTypes.string }).isRequired,\n    message: PropTypes.string,\n};\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Box from '@material-ui/core/Box';\nimport Grid from '@material-ui/core/Grid';\nimport DeleteSweepIcon from '@material-ui/icons/DeleteSweep';\nimport isEmpty from 'lodash.isempty';\nimport IconButton from '@material-ui/core/IconButton';\nimport ClearAllIcon from '@material-ui/icons/ClearAll';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { isRestricted } from 'AppData/AuthManager';\nimport { useAPI } from 'AppComponents/Apis/Details/components/ApiContext';\n\n/**\n *\n *\n * @param {*} props\n * @returns\n */\nexport default function OperationsSelector(props) {\n    const { selectedOperations, setSelectedOperation, operations } = props;\n    const [apiFromContext] = useAPI();\n\n    // TODO: Following logic introduce a limitation in showing `indeterminate` icon state if user\n    // select all -> unchecked one operation -> recheck same operation again ~tmkb\n    const isIndeterminate = !isEmpty(selectedOperations);\n    /**\n     *\n     *\n     * @param {*} event\n     */\n    function handleSelector() {\n        setSelectedOperation(isIndeterminate ? {} : operations);\n    }\n    return (\n        <Grid container direction='row' justify='space-between' alignItems='center'>\n            <Grid item />\n            <Grid item>\n                <Box mr={17.25}>\n                    <Tooltip title={isIndeterminate ? 'Clear selections' : 'Mark all for delete'}>\n                        <div>\n                            <IconButton\n                                disabled={isRestricted(['apim:api_create'], apiFromContext)}\n                                onClick={handleSelector}\n                                aria-label='Mark all for delete'\n                                size='large'\n                            >\n                                {isIndeterminate ? <ClearAllIcon /> : <DeleteSweepIcon />}\n                            </IconButton>\n                        </div>\n                    </Tooltip>\n                </Box>\n            </Grid>\n        </Grid>\n    );\n}\n\nOperationsSelector.defaultProps = {};\n\nOperationsSelector.propTypes = {\n    selectedOperations: PropTypes.shape({}).isRequired,\n    setSelectedOperation: PropTypes.func.isRequired,\n    operations: PropTypes.shape({}).isRequired,\n};\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useState } from 'react';\nimport { isRestricted } from 'AppData/AuthManager';\nimport PropTypes from 'prop-types';\nimport Button from '@material-ui/core/Button';\nimport Box from '@material-ui/core/Box';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\n/**\n *\n *\n * @export\n * @param {*} props\n * @returns\n */\nexport default function SaveOperations(props) {\n    const { updateOpenAPI, operationsDispatcher, api } = props;\n    const [isSaving, setIsSaving] = useState(false);\n    const [isOpen, setIsOpen] = useState(false);\n    /**\n     * Handle the Save button event,\n     *\n     */\n    function saveChanges() {\n        setIsSaving(true);\n        updateOpenAPI('save').finally(() => setIsSaving(false));\n    }\n    return (\n        <>\n            <Box>\n                <Button\n                    disabled={isSaving || isRestricted(['apim:api_create'], api)}\n                    onClick={saveChanges}\n                    variant='contained'\n                    color='primary'\n                >\n                    Save\n                    {isSaving && <CircularProgress size={24} />}\n                </Button>\n                <Box display='inline' ml={1}>\n                    <Button onClick={() => setIsOpen(true)}>Reset</Button>\n                </Box>\n            </Box>\n            <Dialog\n                open={isOpen}\n                aria-labelledby='bulk-delete-dialog-title'\n                aria-describedby='bulk-delete-dialog-description'\n                onBackdropClick={() => setIsOpen(false)}\n            >\n                <DialogTitle id='bulk-delete-dialog-title'>Discard changes</DialogTitle>\n                <DialogContent>\n                    <DialogContentText id='bulk-delete-dialog-description'>\n                        Please confirm the discard all changes action\n                    </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => setIsOpen(false)}>CLOSE</Button>\n                    <Box ml={1}>\n                        <Button\n                            onClick={() => {\n                                operationsDispatcher({ action: 'init' });\n                                setIsOpen(false);\n                            }}\n                            color='error'\n                        >\n                        RESET\n                        </Button>\n                    </Box>\n                </DialogActions>\n            </Dialog>\n        </>\n    );\n}\nSaveOperations.propTypes = {\n    updateOpenAPI: PropTypes.func.isRequired,\n    operationsDispatcher: PropTypes.func.isRequired,\n};\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, {\n    useReducer, useEffect, useState, useCallback, useMemo,\n} from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport { useAPI } from 'AppComponents/Apis/Details/components/ApiContext';\nimport cloneDeep from 'lodash.clonedeep';\nimport isEmpty from 'lodash/isEmpty';\nimport Alert from 'AppComponents/Shared/Alert';\nimport Banner from 'AppComponents/Shared/Banner';\nimport API from 'AppData/api';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport PropTypes from 'prop-types';\nimport SwaggerParser from '@apidevtools/swagger-parser';\nimport { isRestricted } from 'AppData/AuthManager';\nimport CONSTS from 'AppData/Constants';\nimport Operation from './components/Operation';\nimport GroupOfOperations from './components/GroupOfOperations';\nimport SpecErrors from './components/SpecErrors';\nimport AddOperation from './components/AddOperation';\nimport GoToDefinitionLink from './components/GoToDefinitionLink';\nimport APIRateLimiting from './components/APIRateLimiting';\nimport {\n    extractPathParameters, isSelectAll, mapAPIOperations, getVersion, VERSIONS,\n} from './operationUtils';\nimport OperationsSelector from './components/OperationsSelector';\nimport SaveOperations from './components/SaveOperations';\n\n/**\n * This component handles the Resource page in API details though it's written in a sharable way\n * that anyone could use this to render resources in anywhere else if needed.\n *\n * @export\n * @returns {React.Component} @inheritdoc\n */\nexport default function Resources(props) {\n    const {\n        operationProps,\n        disableRateLimiting,\n        hideAPIDefinitionLink,\n        disableMultiSelect,\n        disableUpdate,\n        disableAddOperation,\n    } = props;\n\n    const [api, updateAPI] = useAPI();\n    const [pageError, setPageError] = useState(false);\n    const [operationRateLimits, setOperationRateLimits] = useState([]);\n    const [markedOperations, setSelectedOperation] = useState({});\n    const [sharedScopes, setSharedScopes] = useState();\n    const [sharedScopesByName, setSharedScopesByName] = useState();\n    const [openAPISpec, setOpenAPISpec] = useState({});\n    const [securityDefScopes, setSecurityDefScopes] = useState({});\n    const [apiThrottlingPolicy, setApiThrottlingPolicy] = useState(api.apiThrottlingPolicy);\n    const [arns, setArns] = useState([]);\n    const [resolvedSpec, setResolvedSpec] = useState({ spec: {}, errors: [] });\n\n    /**\n     *\n     *\n     * @param {*} currentPolicies\n     * @param {*} policyAction\n     * @returns\n     */\n    function resourcePoliciesReducer(currentPolicies, policyAction) {\n        const { action, data } = policyAction;\n        const { value } = data || {}; // target, verb,\n        let nextResourcePolicies = { ...currentPolicies };\n        switch (action) {\n            case 'init':\n                nextResourcePolicies = value;\n                break;\n            case 'update':\n                nextResourcePolicies[value.resourcePath][value.httpVerb][data.direction] = value;\n                break;\n            default:\n                break;\n        }\n        return nextResourcePolicies;\n    }\n    const [resourcePolicies, resourcePoliciesDispatcher] = useReducer(resourcePoliciesReducer, null);\n\n    /**\n     *\n     *\n     * @param {*} currenPaths\n     * @param {*} action\n     */\n    function operationsReducer(currentOperations, operationAction) {\n        const { action, data } = operationAction;\n        const { target, verb, value } = data || {};\n        let updatedOperation;\n        let addedOperations;\n        if (target && verb) {\n            updatedOperation = cloneDeep(currentOperations[target][verb]);\n        } else {\n            addedOperations = cloneDeep(currentOperations);\n        }\n\n        switch (action) {\n            case 'init':\n                setSelectedOperation({});\n                return data || openAPISpec.paths;\n            case 'description':\n            case 'summary':\n                updatedOperation[action] = value;\n                break;\n            case 'authType':\n                updatedOperation['x-auth-type'] = value ? 'Any' : 'None';\n                break;\n            case 'parameter':\n                if (updatedOperation.parameters) {\n                    // Get the index to check whether the same parameter exists.\n                    const index = updatedOperation.parameters.findIndex(\n                        (e) => e.in === value.in && e.name === value.name,\n                    );\n                    if (index === -1) { // Parameter with name and in does not exists.\n                        if (value.in === 'body') {\n                            // Get the index of existing body param.\n                            // This replaces if a new body parameter is added when another one exists.\n                            const bodyIndex = updatedOperation.parameters.findIndex((parameter) => {\n                                return parameter.in === 'body';\n                            });\n                            if (bodyIndex !== -1) {\n                                updatedOperation.parameters[bodyIndex] = value;\n                            } else {\n                                updatedOperation.parameters.push(value);\n                            }\n                        } else {\n                            updatedOperation.parameters.push(value);\n                        }\n                    } else {\n                        updatedOperation.parameters[index] = value;\n                    }\n                } else {\n                    updatedOperation.parameters = [value];\n                }\n                break;\n            case 'requestBody':\n                updatedOperation[action] = value;\n                break;\n            case 'deleteParameter':\n                updatedOperation.parameters = updatedOperation.parameters.filter((parameter) => {\n                    return !(parameter.in === value.in && parameter.name === value.name);\n                });\n                break;\n            case 'throttlingPolicy':\n                updatedOperation['x-throttling-tier'] = value;\n                break;\n            case 'amznResourceName':\n                updatedOperation['x-amzn-resource-name'] = value;\n                break;\n            case 'amznResourceTimeout':\n                updatedOperation['x-amzn-resource-timeout'] = value;\n                break;\n            case 'scopes': {\n                if (!updatedOperation.security) {\n                    updatedOperation.security = [{ default: [] }];\n                } else if (!updatedOperation.security.find((item) => item.default)) {\n                    updatedOperation.security.push({ default: [] });\n                }\n                const defValue = value[0];\n                updatedOperation.security.find((item) => item.default).default = defValue;\n                for (const selectedScope of defValue) {\n                    if (selectedScope\n                        && !securityDefScopes[selectedScope]\n                        && securityDefScopes[selectedScope] !== '') {\n                        let scopeDescription = '';\n                        if (selectedScope in sharedScopesByName) {\n                            if (sharedScopesByName[selectedScope].scope.description !== null) {\n                                scopeDescription = sharedScopesByName[selectedScope].scope.description;\n                            }\n                            securityDefScopes[selectedScope] = scopeDescription;\n                        }\n                        setSecurityDefScopes(securityDefScopes);\n                    }\n                }\n                break;\n            }\n            case 'add': {\n                const parameters = extractPathParameters(data.target, openAPISpec);\n                if (!addedOperations[data.target]) {\n                    // If target is not there add an empty object\n                    addedOperations[data.target] = {};\n                }\n                let alreadyExistCount = 0;\n                for (const currentVerb of data.verbs) {\n                    if (addedOperations[data.target][currentVerb]) {\n                        const message = `Operation already exist with ${data.target} and ${currentVerb}`;\n                        Alert.warning(message);\n                        console.warn(message);\n                        alreadyExistCount++;\n                    } else {\n                        // use else condition because continue is not allowed by es-lint rules\n                        addedOperations[data.target][currentVerb] = {\n                            'x-wso2-new': true, // This is to identify unsaved newly added operations, Remove when PUT\n                            'x-auth-type': 'Application & Application User', // By default security is enabled\n                            responses: { 200: { description: 'ok' } },\n                            parameters,\n                        };\n                    }\n                }\n                if (alreadyExistCount === data.verbs.length) {\n                    Alert.error('Operation(s) already exist!');\n                    return currentOperations;\n                }\n                return addedOperations;\n            }\n            default:\n                return currentOperations;\n        }\n        return { ...currentOperations, [target]: { ...currentOperations[target], [verb]: updatedOperation } };\n    }\n    const [operations, operationsDispatcher] = useReducer(operationsReducer, {});\n    /**\n     *\n     *\n     * @param {*} operation\n     * @param {*} checked\n     */\n    function onOperationSelectM(operation, checked) {\n        const { target, verb } = operation;\n        setSelectedOperation((currentSelections) => {\n            const nextSelectedOperations = cloneDeep(currentSelections);\n            if (!nextSelectedOperations[target]) {\n                nextSelectedOperations[target] = {};\n            }\n            if (checked) {\n                nextSelectedOperations[target][verb] = checked;\n            } else {\n                delete nextSelectedOperations[target][verb];\n            }\n            if (isEmpty(nextSelectedOperations[target])) {\n                delete nextSelectedOperations[target];\n            }\n            return nextSelectedOperations;\n        });\n    }\n    const onMarkAsDelete = useCallback(onOperationSelectM, [setSelectedOperation]);\n\n    // can't depends on API id because we need to consider the changes in operations in api object\n    // memoized (https://reactjs.org/docs/hooks-reference.html#usememo) to improve pref,\n    // localized to inject local apiThrottlingPolicy data\n    const localAPI = useMemo(\n        () => ({\n            id: api.id,\n            apiThrottlingPolicy,\n            scopes: api.scopes,\n            operations: api.isAPIProduct() ? {} : mapAPIOperations(api.operations),\n            endpointConfig: api.endpointConfig,\n        }),\n        [api, apiThrottlingPolicy],\n    );\n\n    /**\n     * This method sets the securityDefinitionScopes from the spec\n     * @param {Object} spec The original swagger content.\n     */\n    function setSecurityDefScopesFromSpec(spec) {\n        const openAPIVersion = getVersion(spec);\n        if (VERSIONS.V3.includes(openAPIVersion)) {\n            if (spec.components && spec.components.securitySchemes && spec.components.securitySchemes.default) {\n                const { flows } = spec.components.securitySchemes.default;\n                if (flows.implicit.scopes) {\n                    setSecurityDefScopes(cloneDeep(flows.implicit.scopes));\n                }\n            }\n        } else if (VERSIONS.V2.includes(openAPIVersion)) {\n            if (spec.securityDefinitions && spec.securityDefinitions.default) {\n                if (spec.securityDefinitions.default.scopes) {\n                    setSecurityDefScopes(cloneDeep(spec.securityDefinitions.default.scopes));\n                }\n            }\n        }\n    }\n\n    /**\n     * This method sets the scopes of the spec from the securityDefinitionScopes\n     */\n    function setSpecScopesFromSecurityDefScopes() {\n        const openAPIVersion = getVersion(openAPISpec);\n        if (VERSIONS.V3.includes(openAPIVersion)) {\n            if (openAPISpec.components\n                && openAPISpec.components.securitySchemes\n                && openAPISpec.components.securitySchemes.default) {\n                openAPISpec.components.securitySchemes.default.flows.implicit.scopes = securityDefScopes;\n            }\n        } else if (VERSIONS.V2.includes(openAPIVersion)) {\n            if (openAPISpec.securityDefinitions && openAPISpec.securityDefinitions.default) {\n                openAPISpec.securityDefinitions.default.scopes = securityDefScopes;\n            }\n        }\n    }\n\n    /**\n     *\n     * @param {*} rawSpec The original swagger content.\n     * @returns {null}\n     */\n    function resolveAndUpdateSpec(rawSpec) {\n        /*\n         * Deep copying the spec.\n         * Otherwise it will resolved to the original parameter passed (rawSpec) to the validate method.\n         * We will not alter the provided spec.\n         */\n        const specCopy = cloneDeep(rawSpec);\n        /*\n        * Used SwaggerParser.validate() because we can get the errors as well.\n        */\n        SwaggerParser.validate(specCopy, (err, result) => {\n            setResolvedSpec(() => {\n                const errors = err ? [err] : [];\n                return {\n                    spec: result,\n                    errors,\n                };\n            });\n        });\n        operationsDispatcher({ action: 'init', data: rawSpec.paths });\n        setOpenAPISpec(rawSpec);\n        setSecurityDefScopesFromSpec(rawSpec);\n    }\n\n    /**\n     *\n     * Update the swagger using /swagger PUT operation and then fetch the updated API Object doing a apis/{api-uuid} GET\n     * @param {JSON} spec Updated full OpenAPI spec ready to PUT\n     * @returns {Promise} Promise resolving to updated API object\n     */\n    function updateSwagger(spec) {\n        return api\n            .updateSwagger(spec)\n            .then((response) => resolveAndUpdateSpec(response.body))\n            .then(updateAPI)\n            .catch((error) => {\n                console.error(error);\n                if (error.response) {\n                    setPageError(error.response.body);\n                    Alert.error('Error while updating the API');\n                } else {\n                    Alert.error('Error while updating the definition');\n                }\n            });\n    }\n\n    /**\n     *\n     * This method modifies the security definition scopes by removing the scopes which are not present\n     * in operations and which are shared scopes\n     * @param {Array} apiOperations Operations list\n     */\n    function updateSecurityDefinition(apiOperations) {\n        Object.keys(securityDefScopes).forEach((key) => {\n            let isScopeExistsInOperation = false;\n            for (const [, verbs] of Object.entries(apiOperations)) {\n                for (const [, verbInfo] of Object.entries(verbs)) {\n                    // Checking if the scope resides in the operation\n                    for (const secDef of verbInfo.security || []) {\n                        if (secDef\n                            && secDef.default\n                            && secDef.default.includes(key)) {\n                            isScopeExistsInOperation = true;\n                            break;\n                        }\n                    }\n\n                    if (isScopeExistsInOperation) {\n                        break;\n                    }\n                }\n                if (isScopeExistsInOperation) {\n                    break;\n                }\n            }\n            // Checking if the scope exists in operation and is a shared scope\n            if (!isScopeExistsInOperation && (key in sharedScopesByName)) {\n                delete securityDefScopes[key];\n            }\n        });\n        setSecurityDefScopes(securityDefScopes);\n    }\n\n    /**\n     *\n     * Save the OpenAPI changes using REST API, type parameter is required to\n     * identify the locally created data structured, i:e type `operation` will assume that `data` contains the\n     * object structure of locally created operation object which is a combination of REST API\n     * response `operations` field and OpenAPI spec operation information\n     * @param {String} type Type of data object\n     * @param {Object} data Data object\n     * @returns {Promise|null} A promise object which resolve to Swagger PUT response body.\n     */\n    function updateOpenAPI(type) {\n        const copyOfOperations = cloneDeep(operations);\n        switch (type) {\n            case 'save':\n                if (isSelectAll(markedOperations, copyOfOperations)) {\n                    const message = 'At least one operation is required for the API';\n                    Alert.warning(message);\n                    return Promise.reject(new Error(message));\n                }\n                for (const [target, verbs] of Object.entries(markedOperations)) {\n                    for (const verb of Object.keys(verbs)) {\n                        delete copyOfOperations[target][verb];\n                        if (isEmpty(copyOfOperations[target])) {\n                            delete copyOfOperations[target];\n                        }\n                    }\n                }\n                // TODO: use better alternative (optimize performance) to identify newly added operations ~tmkb\n                for (const [, verbs] of Object.entries(copyOfOperations)) {\n                    for (const [, verbInfo] of Object.entries(verbs)) {\n                        if (verbInfo['x-wso2-new']) {\n                            delete verbInfo['x-wso2-new'];\n                        }\n                    }\n                }\n                break;\n            default:\n                return Promise.reject(new Error('Unsupported resource operation!'));\n        }\n        updateSecurityDefinition(copyOfOperations);\n        setSpecScopesFromSecurityDefScopes();\n        if (apiThrottlingPolicy !== api.apiThrottlingPolicy) {\n            return updateAPI({ apiThrottlingPolicy })\n                .catch((error) => {\n                    console.error(error);\n                    Alert.error('Error while updating the API');\n                })\n                .then(() => updateSwagger({ ...openAPISpec, paths: copyOfOperations }));\n        } else {\n            return updateSwagger({ ...openAPISpec, paths: copyOfOperations });\n        }\n    }\n\n    useEffect(() => {\n        API.getAmznResourceNames(api.id)\n            .then((response) => {\n                if (response.body && response.body.list) {\n                    setArns(response.body.list);\n                }\n            });\n    }, []);\n\n    useEffect(() => {\n        if (api.apitype !== 'APIProduct') {\n            API.getAllScopes()\n                .then((response) => {\n                    if (response.body && response.body.list) {\n                        const sharedScopesList = [];\n                        const sharedScopesByNameList = {};\n                        const shared = true;\n                        for (const scope of response.body.list) {\n                            const modifiedScope = {};\n                            modifiedScope.scope = scope;\n                            modifiedScope.shared = shared;\n                            sharedScopesList.push(modifiedScope);\n                            sharedScopesByNameList[scope.name] = modifiedScope;\n                        }\n                        setSharedScopes(sharedScopesList);\n                        setSharedScopesByName(sharedScopesByNameList);\n                    }\n                });\n        }\n    }, []);\n\n    useEffect(() => {\n        // Update the Swagger spec object when API object gets changed\n        api.getSwagger()\n            .then((response) => {\n                resolveAndUpdateSpec(response.body);\n            })\n            .catch((error) => {\n                if (error.response) {\n                    Alert.error(error.response.body.description);\n                    setPageError(error.response.body);\n                }\n                console.error(error);\n            });\n        if (api.isSOAPToREST()) {\n            const promisedInPolicies = api.getResourcePolicies('in');\n            const promisedOutPolicies = api.getResourcePolicies('out');\n            Promise.all([promisedInPolicies, promisedOutPolicies])\n                .then(([inPolicies, outPolicies]) => {\n                    const mappedPolicies = {};\n                    for (const policy of inPolicies.body.list) {\n                        const { resourcePath, httpVerb } = policy;\n                        if (!mappedPolicies[resourcePath]) {\n                            mappedPolicies[resourcePath] = {\n                                [httpVerb]: { in: policy },\n                            };\n                        } else {\n                            mappedPolicies[resourcePath][httpVerb] = { in: policy };\n                        }\n                    }\n                    for (const policy of outPolicies.body.list) {\n                        const { resourcePath, httpVerb } = policy;\n                        if (!mappedPolicies[resourcePath]) {\n                            mappedPolicies[resourcePath] = {\n                                [httpVerb]: { out: policy },\n                            };\n                        } else {\n                            mappedPolicies[resourcePath][httpVerb].out = policy;\n                        }\n                    }\n                    resourcePoliciesDispatcher({ action: 'init', data: { value: mappedPolicies } });\n                })\n                .catch((error) => {\n                    if (error.response) {\n                        Alert.error(error.response.body.description);\n                        setPageError(error.response.body);\n                    }\n                    setPageError(error.message);\n                    console.error(error);\n                });\n        }\n        // Fetch API level throttling policies only when the page get mounted for the first time `componentDidMount`\n        API.policies('api').then((response) => {\n            setOperationRateLimits(response.body.list);\n        });\n        // TODO: need to handle the error cases through catch ~tmkb\n    }, [api.id]);\n\n    // Note: Make sure not to use any hooks after/within this condition , because it returns conditionally\n    // If you do so, You will probably get `Rendered more hooks than during the previous render.` exception\n    if ((!pageError && isEmpty(openAPISpec)) || (resolvedSpec.errors.length === 0 && isEmpty(resolvedSpec.spec))) {\n        return (\n            <Grid container direction='row' justify='center' alignItems='center'>\n                <Grid item>\n                    <CircularProgress disableShrink />\n                </Grid>\n            </Grid>\n        );\n    }\n    return (\n        <Grid container direction='row' justify='flex-start' spacing={2} alignItems='stretch'>\n            {pageError && (\n                <Grid item md={12}>\n                    <Banner onClose={() => setPageError(null)} disableActions type='error' message={pageError} />\n                </Grid>\n            )}\n            {!disableRateLimiting && (\n                <Grid item md={12}>\n                    <APIRateLimiting\n                        operationRateLimits={operationRateLimits}\n                        value={apiThrottlingPolicy}\n                        onChange={setApiThrottlingPolicy}\n                        isAPIProduct={api.isAPIProduct()}\n                    />\n                </Grid>\n            )}\n            {!isRestricted(['apim:api_create'], api) && !disableAddOperation && (\n                <Grid item md={12} xs={12}>\n                    <AddOperation operationsDispatcher={operationsDispatcher} />\n                </Grid>\n            )}\n            {resolvedSpec.errors.length > 0 && <SpecErrors specErrors={resolvedSpec.errors} />}\n            <Grid item md={12}>\n                <Paper>\n                    {!disableMultiSelect && (\n                        <OperationsSelector\n                            operations={operations}\n                            selectedOperations={markedOperations}\n                            setSelectedOperation={setSelectedOperation}\n                        />\n                    )}\n                    {Object.entries(operations).map(([target, verbObject]) => (\n                        <Grid key={target} item md={12}>\n                            <GroupOfOperations openAPI={openAPISpec} tag={target}>\n                                <Grid\n                                    container\n                                    direction='column'\n                                    justify='flex-start'\n                                    spacing={1}\n                                    alignItems='stretch'\n                                >\n                                    {Object.entries(verbObject).map(([verb, operation]) => {\n                                        return CONSTS.HTTP_METHODS.includes(verb) ? (\n                                            <Grid key={`${target}/${verb}`} item>\n                                                <Operation\n                                                    target={target}\n                                                    verb={verb}\n                                                    highlight\n                                                    resourcePoliciesDispatcher={resourcePoliciesDispatcher}\n                                                    resourcePolicy={\n                                                        resourcePolicies\n                                                        && resourcePolicies[target.slice(1)]\n                                                        && resourcePolicies[target.slice(1)][verb]\n                                                    }\n                                                    operationsDispatcher={operationsDispatcher}\n                                                    spec={openAPISpec}\n                                                    operation={operation}\n                                                    operationRateLimits={operationRateLimits}\n                                                    api={localAPI}\n                                                    markAsDelete={Boolean(markedOperations[target]\n                                                        && markedOperations[target][verb])}\n                                                    onMarkAsDelete={onMarkAsDelete}\n                                                    disableUpdate={\n                                                        disableUpdate || isRestricted(['apim:api_create'], api)\n                                                    }\n                                                    disableMultiSelect={disableMultiSelect}\n                                                    arns={arns}\n                                                    {...operationProps}\n                                                    resolvedSpec={resolvedSpec.spec}\n                                                    sharedScopes={sharedScopes}\n                                                />\n                                            </Grid>\n                                        ) : null;\n                                    })}\n                                </Grid>\n                            </GroupOfOperations>\n                        </Grid>\n                    ))}\n                </Paper>\n                <Grid\n                    style={{ marginTop: '25px' }}\n                    container\n                    direction='row'\n                    justify='space-between'\n                    alignItems='center'\n                >\n                    {!disableUpdate && (\n                        <SaveOperations\n                            operationsDispatcher={operationsDispatcher}\n                            updateOpenAPI={updateOpenAPI}\n                            api={api}\n                        />\n                    )}\n                    {!hideAPIDefinitionLink && <GoToDefinitionLink api={api} />}\n                </Grid>\n            </Grid>\n        </Grid>\n    );\n}\n\nResources.defaultProps = {\n    operationProps: { disableDelete: false },\n    disableUpdate: false,\n    disableRateLimiting: false,\n    disableMultiSelect: false,\n    hideAPIDefinitionLink: false,\n    disableAddOperation: false,\n};\n\nResources.propTypes = {\n    disableRateLimiting: PropTypes.bool,\n    hideAPIDefinitionLink: PropTypes.bool,\n    disableMultiSelect: PropTypes.bool,\n    disableAddOperation: PropTypes.bool,\n    disableUpdate: PropTypes.bool,\n    operationProps: PropTypes.shape({\n        disableDelete: PropTypes.bool,\n    }),\n};\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport { FormattedMessage } from 'react-intl';\n\nimport Resources from './Resources';\n\n/**\n *\n *\n * @export\n * @param {*} props\n * @returns\n */\nexport default function APIOperations() {\n    return (\n        <>\n            <Box mb={4}>\n                <Typography variant='h4' component='h2' gutterBottom>\n                    <FormattedMessage\n                        id='Apis.Details.Resources.APIOperations.title'\n                        defaultMessage='Resources'\n                    />\n                </Typography>\n            </Box>\n            <Resources />\n        </>\n    );\n}\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useState, useEffect } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport { Link } from 'react-router-dom';\nimport Button from '@material-ui/core/Button';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { FormattedMessage } from 'react-intl';\nimport EditIcon from '@material-ui/icons/Edit';\nimport { useAPI } from 'AppComponents/Apis/Details/components/ApiContext';\nimport Box from '@material-ui/core/Box';\nimport API from 'AppData/api';\nimport { isRestricted } from 'AppData/AuthManager';\n\nimport Resources from 'AppComponents/Apis/Details/Resources/Resources';\nimport APIRateLimiting from '../Resources/components/APIRateLimiting';\n\n/**\n *\n *\n * @export\n * @param {*} props\n * @returns\n */\nexport default function APIProductOperations() {\n    const [api, updateAPI] = useAPI();\n    const [apiThrottlingPolicy, setApiThrottlingPolicy] = useState(api.apiThrottlingPolicy);\n    const [operationRateLimits, setOperationRateLimits] = useState([]);\n    const [isSaving, setIsSaving] = useState(false);\n    useEffect(() => {\n        // Fetch API level throttling policies only when the page get mounted for the first time `componentDidMount`\n        API.policies('api').then((response) => {\n            setOperationRateLimits(response.body.list);\n        });\n        // TODO: need to handle the error cases through catch ~tmkb\n    }, []);\n\n    /**\n     *\n     *\n     */\n    function saveChanges() {\n        setIsSaving(true);\n        updateAPI({ apiThrottlingPolicy }).finally(() => setIsSaving(false));\n    }\n    return (\n        <Grid container spacing={3}>\n            <Grid item md={12}>\n                <Typography variant='h4' gutterBottom>\n                    Product Resources\n                    <Box component='div' display='inline'>\n                        <Link to={'/api-products/' + api.id + '/resources/edit'}>\n                            <Button size='small'>\n                                <EditIcon />\n                                <FormattedMessage\n                                    id='Apis.Details.Resources.Resources.edit.resources.button'\n                                    defaultMessage='Edit Resources'\n                                />\n                            </Button>\n                        </Link>\n                    </Box>\n                </Typography>\n            </Grid>\n            <Grid item md={12}>\n                <APIRateLimiting\n                    operationRateLimits={operationRateLimits}\n                    api={api}\n                    isAPIProduct\n                    value={apiThrottlingPolicy}\n                    onChange={setApiThrottlingPolicy}\n                />\n            </Grid>\n            {!isRestricted(['apim:api_create'], api) && (\n                <Grid item md={12}>\n                    <Box ml={1}>\n                        <Button onClick={saveChanges} disabled={false} variant='contained' size='small' color='primary'>\n                            Save\n                            {isSaving && <CircularProgress size={24} />}\n                        </Button>\n                        <Box display='inline' ml={1}>\n                            <Button\n                                size='small'\n                                variant='outlined'\n                                onClick={() => setApiThrottlingPolicy(api.apiThrottlingPolicy)}\n                            >\n                                Reset\n                            </Button>\n                        </Box>\n                    </Box>\n                </Grid>\n            )}\n\n            <Grid item md={12}>\n                <Resources\n                    hideAPIDefinitionLink\n                    disableUpdate\n                    disableRateLimiting\n                    operationProps={{ disableDelete: true }}\n                    disableMultiSelect\n                    disableAddOperation\n                />\n            </Grid>\n        </Grid>\n    );\n}\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n/* eslint-disable array-callback-return */\n/* eslint no-param-reassign: [\"error\", { \"props\": true, \"ignorePropertyModificationsFor\": [\"operationObj\"] }] */\n\nimport React, { useState, useContext } from 'react';\nimport { Link } from 'react-router-dom';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { FormattedMessage } from 'react-intl';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport cloneDeep from 'lodash.clonedeep';\nimport APIContext from 'AppComponents/Apis/Details/components/ApiContext';\nimport { doRedirectToLogin } from 'AppComponents/Shared/RedirectToLogin';\nimport ProductResourcesEditWorkspace from './ProductResourcesEditWorkspace';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n        marginTop: 10,\n    },\n    titleWrapper: {\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems: 'center',\n        paddingBottom: theme.spacing(2),\n    },\n    buttonWrapper: {\n        marginTop: theme.spacing(4),\n    },\n}));\n\n\n/**\n *\n *\n * @returns\n */\nfunction ProductResourcesEdit() {\n    const classes = useStyles();\n\n    // Get the current api product object from the context\n    const { api, updateAPI } = useContext(APIContext);\n    const apiCopy = cloneDeep(api);\n    const { apis } = apiCopy;\n\n    // Define states\n    const [apiResources, setApiResources] = useState(apis);\n    const [updating, setUpdating] = useState(false);\n    // Initialize the rest api libraries\n\n    const save = () => {\n        setUpdating(true);\n\n        const updatePromise = updateAPI({ apis: apiResources }, true);\n        updatePromise\n            .then(() => {\n                setUpdating(false);\n            })\n            .catch((error) => {\n                setUpdating(false);\n                if (process.env.NODE_ENV !== 'production') console.log(error);\n                const { status } = error;\n                if (status === 401) {\n                    doRedirectToLogin();\n                }\n            });\n    };\n\n    return (\n        <div className={classes.root}>\n            <div className={classes.titleWrapper}>\n                <Typography variant='h4' align='left' className={classes.mainTitle}>\n                    <FormattedMessage\n                        id='Apis.Details.ProductResources.ProductResourcesEdit.title'\n                        defaultMessage='Manage Resources'\n                    />\n                </Typography>\n            </div>\n            <div className={classes.contentWrapper}>\n                <ProductResourcesEditWorkspace\n                    apiResources={apiResources}\n                    setApiResources={setApiResources}\n                    api={api}\n                />\n                <div className={classes.buttonWrapper}>\n                    <Grid container direction='row' alignItems='flex-start' spacing={4}>\n                        <Grid item>\n                            <div>\n                                <Button variant='contained' color='primary' onClick={save} disabled={updating}>\n                                    {updating && (\n                                        <FormattedMessage\n                                            id='Apis.Details.ProductResources.ProductResourcesEdit.updating'\n                                            defaultMessage='Updating ...'\n                                        />\n                                    )}\n                                    {!updating && (\n                                        <FormattedMessage\n                                            id='Apis.Details.ProductResources.ProductResourcesEdit.save'\n                                            defaultMessage='Save'\n                                        />\n                                    )}\n                                </Button>\n                            </div>\n                        </Grid>\n                        <Grid item>\n                            <Link to={'/apis/' + api.id + '/overview'}>\n                                <Button>\n                                    <FormattedMessage\n                                        id='Apis.Details.ProductResources.ProductResourcesEdit.cancel'\n                                        defaultMessage='Cancel'\n                                    />\n                                </Button>\n                            </Link>\n                        </Grid>\n                    </Grid>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default ProductResourcesEdit;\n","/*\n *  Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n *  WSO2 Inc. licenses this file to you under the Apache License,\n *  Version 2.0 (the \"License\"); you may not use this file except\n *  in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *  http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing,\n *  software distributed under the License is distributed on an\n *  \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n *  KIND, either express or implied. See the License for the\n *  specific language governing permissions and limitations\n *  under the License.\n */\n\nimport React, { useState } from 'react';\nimport {\n    Typography,\n    Grid,\n    withStyles,\n    RadioGroup,\n    FormControlLabel,\n    Radio,\n    FormControl,\n    Divider,\n    Button,\n    Card,\n    CardContent,\n    CardActions,\n} from '@material-ui/core';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport PropTypes from 'prop-types';\n\nconst styles = (theme) => ({\n    inlineMessageContainer: {\n        marginBottom: theme.spacing(1),\n    },\n    endpointTypeCard: {\n        margin: theme.spacing(1),\n        maxWidth: theme.spacing(32),\n        transition: 'box-shadow 0.3s ease-in-out',\n        height: theme.spacing(40),\n        display: 'flex',\n        flexDirection: 'column',\n    },\n    cardContent: {\n        height: theme.spacing(40),\n    },\n    content: {\n        marginTop: theme.spacing(1),\n    },\n    cardActions: {\n        justifyContent: 'flex-end',\n        borderTop: 'solid #e0e0e0 thin',\n    },\n});\n\n/**\n * Component to create new endpoint.\n * This component will render if the api object does not have an endpoint configuration, letting users to create a\n * new endpoint configuration based on their requirement.\n * Following endpoint types are supported.\n * 1. HTTP/ SOAP endpoints\n * 2. Prototyped/ Mock endpoints\n * 3. AWS Lambda endpoints\n * 4. Dynamic Endpoints\n *\n * @param {any} props The input props.\n * @return {any} The HTML representation of the component.\n * */\nfunction NewEndpointCreate(props) {\n    const {\n        classes,\n        intl,\n        generateEndpointConfig,\n        apiType,\n    } = props;\n    const [endpointImplType, setImplType] = useState('mock');\n    const endpointTypes = [\n        {\n            type: 'http',\n            name: intl.formatMessage({\n                id: 'Apis.Details.Endpoints.NewEndpointCreate.create.http.endpoint',\n                defaultMessage: 'HTTP/ REST Endpoint',\n            }),\n            description: intl.formatMessage({\n                id: 'Apis.Details.Endpoints.NewEndpointCreate.create.http.endpoint.description',\n                defaultMessage: 'A REST API endpoint based on a URI template.',\n            }),\n            options: null,\n            disabled: ['SOAPTOREST'],\n        },\n        {\n            type: 'address',\n            name: intl.formatMessage({\n                id: 'Apis.Details.Endpoints.NewEndpointCreate.create.soap.endpoint',\n                defaultMessage: 'HTTP/ SOAP Endpoint',\n            }),\n            description: intl.formatMessage({\n                id: 'Apis.Details.Endpoints.NewEndpointCreate.create.soap.endpoint.description',\n                defaultMessage: 'The direct URI of the web service.',\n            }),\n            options: null,\n            disabled: ['GRAPHQL'],\n        },\n        {\n            type: 'prototyped',\n            name: intl.formatMessage({\n                id: 'Apis.Details.Endpoints.NewEndpointCreate.create.prototype.endpoint',\n                defaultMessage: 'Prototype Endpoint',\n            }),\n            description: intl.formatMessage({\n                id: 'Apis.Details.Endpoints.NewEndpointCreate.create.prototype.endpoint.description',\n                defaultMessage: 'Use the inbuilt JavaScript engine to prototype the API or provide an endpoint'\n                    + ' to a prototype API. The inbuilt JavaScript engine does support prototype SOAP APIs',\n            }),\n            options: [\n                {\n                    type: 'mock',\n                    name: intl.formatMessage({\n                        id: 'Apis.Details.Endpoints.NewEndpointCreate.prototype.implementation',\n                        defaultMessage: 'Prototype Implementation',\n                    }),\n                    disabled: ['SOAP', 'SOAPTOREST'],\n                },\n                {\n                    type: 'prototyped',\n                    name: intl.formatMessage({\n                        id: 'Apis.Details.Endpoints.NewEndpointCreate.default.prototype.endpoints',\n                        defaultMessage: 'Prototype Endpoint',\n                    }),\n                    disabled: [],\n                },\n            ],\n            disabled: ['GRAPHQL'],\n        },\n        {\n            type: 'dynamic',\n            name: intl.formatMessage({\n                id: 'Apis.Details.Endpoints.NewEndpointCreate.create.dynamic.endpoint',\n                defaultMessage: 'Dynamic Endpoint',\n            }),\n            description: intl.formatMessage({\n                id: 'Apis.Details.Endpoints.NewEndpointCreate.create.dynamic.endpoint.description',\n                defaultMessage: 'If you need to send the request to the URI specified in the TO header.',\n            }),\n            options: null,\n            disabled: [],\n        },\n        {\n            type: 'awslambda',\n            name: intl.formatMessage({\n                id: 'Apis.Details.Endpoints.NewEndpointCreate.create.awslambda.endpoint',\n                defaultMessage: 'AWS Lambda Endpoint',\n            }),\n            description: intl.formatMessage({\n                id: 'Apis.Details.Endpoints.NewEndpointCreate.create.awslambda.endpoint.description',\n                defaultMessage: 'If you need to invoke AWS Lambda functions through API gateway.',\n            }),\n            options: null,\n            disabled: ['SOAPTOREST', 'GRAPHQL'],\n        },\n    ];\n\n    return (\n        <>\n            <Typography variant='h4' align='left' className={classes.titleWrapper}>\n                <FormattedMessage\n                    id='Apis.Details.Endpoints.NewEndpointCreate.add.endpoints.header'\n                    defaultMessage='Select an Endpoint Type to Add'\n                />\n            </Typography>\n            <Grid container justify='flex-start' spacing={2}>\n                {endpointTypes.filter((type) => !type.disabled.includes(apiType)).map(((type) => {\n                    return (\n                        <Grid item className={classes.inlineMessageContainer}>\n                            <Card className={classes.endpointTypeCard}>\n                                <CardContent className={classes.cardContent}>\n                                    <Typography variant='h5' component='h3' className={classes.head}>\n                                        {type.name}\n                                    </Typography>\n                                    <Divider />\n                                    <Typography component='p' className={classes.content}>\n                                        {type.description}\n                                    </Typography>\n                                    {type.options\n                                        ? (\n                                            <div>\n                                                <FormControl component='fieldset' className={classes.formControl}>\n                                                    <RadioGroup\n                                                        aria-label='EndpointType'\n                                                        name='endpointType'\n                                                        className={classes.radioGroup}\n                                                        value={endpointImplType}\n                                                        onChange={(event) => { setImplType(event.target.value); }}\n                                                    >\n                                                        {type.options.filter((types) => !types.disabled\n                                                            .includes(apiType)).map(((option) => {\n                                                            return (\n                                                                <FormControlLabel\n                                                                    value={option.type}\n                                                                    control={<Radio color='primary' />}\n                                                                    label={option.name}\n                                                                />\n                                                            );\n                                                        }))}\n                                                    </RadioGroup>\n                                                </FormControl>\n                                            </div>\n                                        )\n                                        : <div /> }\n                                </CardContent>\n                                <CardActions className={classes.cardActions}>\n                                    <Button\n                                        color='primary'\n                                        className={classes.button}\n                                        onClick={() => generateEndpointConfig(type.type, endpointImplType)}\n                                    >\n                                        <FormattedMessage\n                                            id='Apis.Details.Endpoints.NewEndpointCreate.create.button'\n                                            defaultMessage='Add'\n                                        />\n                                    </Button>\n                                </CardActions>\n                            </Card>\n                        </Grid>\n                    );\n                }))}\n            </Grid>\n        </>\n    );\n}\n\nNewEndpointCreate.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    intl: PropTypes.shape({}).isRequired,\n    generateEndpointConfig: PropTypes.func.isRequired,\n    apiType: PropTypes.string.isRequired,\n};\n\nexport default withStyles(styles)(injectIntl(NewEndpointCreate));\n","/*\n *  Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n *  WSO2 Inc. licenses this file to you under the Apache License,\n *  Version 2.0 (the \"License\"); you may not use this file except\n *  in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *  http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing,\n *  software distributed under the License is distributed on an\n *  \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n *  KIND, either express or implied. See the License for the\n *  specific language governing permissions and limitations\n *  under the License.\n */\n\nimport React, {\n    useContext,\n    lazy,\n    Suspense,\n    useState,\n} from 'react';\nimport { isRestricted } from 'AppData/AuthManager';\nimport { APIContext } from 'AppComponents/Apis/Details/components/ApiContext';\nimport {\n    Chip,\n    ExpansionPanel,\n    ExpansionPanelDetails,\n    ExpansionPanelSummary,\n    Grid,\n    Typography,\n    makeStyles,\n    Button,\n} from '@material-ui/core';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport { FormattedMessage } from 'react-intl';\nimport PropTypes from 'prop-types';\nimport Utils from 'AppData/Utils';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nconst MonacoEditor = lazy(() => import('react-monaco-editor' /* webpackChunkName: \"GenResourceMonaco\" */));\n\n/**\n * The generic resource component.\n *\n * @param {any} props The input props\n * @return {any} The HTML representation of the component.\n * */\nfunction GenericResource(props) {\n    const {\n        resourcePath, resourceMethod, scriptContent, onChange, originalScript, setMockValueDetails,\n    } = props;\n    const { api } = useContext(APIContext);\n    const [showReset, setShowReset] = useState(false);\n\n    const useStyles = makeStyles((theme) => {\n        let chipColor = theme.custom.resourceChipColors ? theme.custom.resourceChipColors[resourceMethod] : null;\n        let chipTextColor = '#000000';\n        if (!chipColor) {\n            console.log('Check the theme settings. The resourceChipColors is not populated properlly');\n            chipColor = '#cccccc';\n        } else {\n            chipTextColor = theme.palette.getContrastText(theme.custom.resourceChipColors[resourceMethod]);\n        }\n\n        return {\n            editor: {\n                width: '100%',\n                height: '500px',\n            },\n            chipActive: {\n                borderRadius: '5px',\n                width: '80%',\n                backgroundColor: chipColor,\n                color: chipTextColor,\n                ...theme.typography.button,\n            },\n            resourcePathContainer: {\n                paddingTop: theme.spacing(1),\n            },\n            prototypeResourceHeader: {\n                borderBottom: `${chipColor} 1px solid`,\n            },\n            chipExpansionPanel: {\n                backgroundColor: Utils.hexToRGBA(chipColor, 0.1),\n                border: `${chipColor} 1px solid`,\n            },\n            scriptResetButton: {\n                display: 'flex',\n                justifyContent: 'space-between',\n                marginBottom: '10px',\n            },\n\n        };\n    });\n\n    const classes = useStyles();\n\n    return (\n        <Grid item>\n            <ExpansionPanel className={classes.chipExpansionPanel}>\n                <ExpansionPanelSummary className={classes.prototypeResourceHeader} expandIcon={<ExpandMoreIcon />}>\n                    <Grid container spacing={12}>\n                        <Grid xs={1}>\n                            <Chip label={resourceMethod} className={classes.chipActive} />\n                        </Grid>\n                        <Grid xs className={classes.resourcePathContainer}>\n                            <Typography>{resourcePath}</Typography>\n                        </Grid>\n                    </Grid>\n                </ExpansionPanelSummary>\n                <ExpansionPanelDetails className={classes.genericResourceContent}>\n                    <Grid container direction='column'>\n                        <Grid item className={classes.scriptResetButton}>\n                            <Typography variant='subtitle2'>\n                                <FormattedMessage\n                                    id='Apis.Details.Endpoints.Prototype.InlineEndpoints.script'\n                                    defaultMessage='Script'\n                                />\n                            </Typography>\n                            {showReset\n                            && (\n                                <Button\n                                    variant='contained'\n                                    color='primary'\n                                    onClick={() => {\n                                        setMockValueDetails({ resourcePath, resourceMethod });\n                                        onChange(originalScript, resourcePath, resourceMethod);\n                                    }}\n                                >\n                                    Reset\n                                </Button>\n                            )}\n                        </Grid>\n                        <Grid item>\n                            <Suspense fallback={<CircularProgress />}>\n                                <MonacoEditor\n                                    height='50vh'\n                                    width='100%'\n                                    theme='vs-dark'\n                                    value={scriptContent}\n                                    options={{\n                                        selectOnLineNumbers: true,\n                                        readOnly: `${isRestricted(['apim:api_create'], api)}`,\n                                    }}\n                                    language='javascript'\n                                    onChange={(content) => {\n                                        setShowReset(true);\n                                        setMockValueDetails({ resourcePath, resourceMethod });\n                                        onChange(content, resourcePath, resourceMethod);\n                                    }}\n                                />\n                            </Suspense>\n                        </Grid>\n                    </Grid>\n                </ExpansionPanelDetails>\n            </ExpansionPanel>\n        </Grid>\n    );\n}\n\nGenericResource.propTypes = {\n    resourcePath: PropTypes.string.isRequired,\n    resourceMethod: PropTypes.string.isRequired,\n    scriptContent: PropTypes.string.isRequired,\n    classes: PropTypes.shape({}).isRequired,\n    theme: PropTypes.shape({}).isRequired,\n    onChange: PropTypes.func.isRequired,\n};\n\nexport default React.memo(GenericResource);\n","/*\n *  Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n *  WSO2 Inc. licenses this file to you under the Apache License,\n *  Version 2.0 (the \"License\"); you may not use this file except\n *  in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *  http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing,\n *  software distributed under the License is distributed on an\n *  \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n *  KIND, either express or implied. See the License for the\n *  specific language governing permissions and limitations\n *  under the License.\n */\n\nimport React, {\n    useState, useEffect, useContext, useCallback,\n} from 'react';\nimport PropTypes from 'prop-types';\nimport { Grid } from '@material-ui/core';\nimport GenericResource from 'AppComponents/Apis/Details/Endpoints/Prototype/GenericResource';\nimport { APIContext } from 'AppComponents/Apis/Details/components/ApiContext';\n\nconst xMediationScriptProperty = 'x-mediation-script';\n\nconst defaultScript = '/* mc.setProperty(\\'CONTENT_TYPE\\', \\'application/json\\');\\n\\t'\n    + 'mc.setPayloadJSON(\\'{ \"data\" : \"sample JSON\"}\\');*/\\n'\n    + '/*Uncomment the above comment block to send a sample response.*/';\n\n/**\n * The inline endpoints component.\n * This component lists the api resources to add custom mediation scripts.\n *\n * @param {any} props The input props.\n * @return {any} The HTML representation of the component.\n * */\nfunction InlineEndpoints(props) {\n    const { api } = useContext(APIContext);\n    const {\n        paths, updatePaths,\n    } = props;\n    const [mockValueDetails, setMockValueDetails] = useState({ resourcePath: '', resourceMethod: '' });\n\n    /**\n     * Handles the onChange event of the script editor.\n     *\n     * @param {string} value The editor content\n     * @param {string} path The path value of the resource.\n     * @param {string} method The resource method.\n     * */\n    const onScriptChange = useCallback(\n        (value, path, method) => {\n            const tmpPaths = JSON.parse(JSON.stringify(paths));\n            tmpPaths[path][method][xMediationScriptProperty] = value;\n            updatePaths(tmpPaths);\n        },\n        [mockValueDetails.resourcePath, mockValueDetails.resourceMethod],\n    );\n\n    const [mockScripts, setMockScripts] = useState([]);\n\n    useEffect(() => {\n        const promisedResponse = api.getGeneratedMockScriptsOfAPI(api.id);\n        promisedResponse.then((response) => {\n            setMockScripts(response.obj.list);\n        });\n    }, []);\n\n    function getGeneratedMockScriptOfAPI(resourcePath, resourceMethod) {\n        for (let i = 0; i < mockScripts.length; i++) {\n            if (mockScripts[i].verb.toLowerCase() === resourceMethod.toLowerCase()\n                && mockScripts[i].path === resourcePath) {\n                return mockScripts[i].content;\n            }\n        }\n        return null;\n    }\n\n    return (\n        <>\n            <Grid container spacing={1} direction='column'>\n                {Object.keys(paths).map((path) => {\n                    return (\n                        Object.keys(paths[path]).map((method) => {\n                            const mediationScript = paths[path][method][xMediationScriptProperty];\n                            const script = mediationScript === undefined ? defaultScript : mediationScript;\n                            const originalScript = getGeneratedMockScriptOfAPI(path, method);\n                            return (\n                                <GenericResource\n                                    resourcePath={path}\n                                    resourceMethod={method}\n                                    onChange={onScriptChange}\n                                    scriptContent={script}\n                                    originalScript={originalScript}\n                                    setMockValueDetails={setMockValueDetails}\n                                />\n                            );\n                        })\n                    );\n                })}\n            </Grid>\n        </>\n    );\n}\n\nInlineEndpoints.propTypes = {\n    paths: PropTypes.shape({}).isRequired,\n    updatePaths: PropTypes.func.isRequired,\n};\n\nexport default React.memo(InlineEndpoints);\n","/**\n * Copyright (c)  WSO2 Inc. (http://wso2.com) All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the 'License');\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an 'AS IS' BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport cloneDeep from 'lodash.clonedeep';\n\n/**\n * Utility method to get the endpoint property name based on the given endpoint type and category.\n *\n * @param {string} type The type of the endpoint (load_balance/ failover)\n * @param {string} category The endpoint category (production/ sandbox)\n * @return {string} The property name of the endpoints.\n */\nfunction getEndpointTypeProperty(type, category) {\n    if (type !== 'failover') {\n        return category;\n    } else {\n        return category === 'sandbox_endpoints' ? 'sandbox_failovers' : 'production_failovers';\n    }\n}\n\n/**\n * Merge the loadbalance/ failover endpoints to single object.\n *\n * @param {object} endpointConfig The endpoint config object\n * @return {object} {production: [], sandbox: []}\n * */\nfunction mergeEndpoints(endpointConfig) {\n    const type = endpointConfig.endpoint_type;\n    if (type === 'load_balance') {\n        return { production: endpointConfig.production_endpoints, sandbox: endpointConfig.sandbox_endpoints };\n    } else if (type === 'failover') {\n        const prodEps = [endpointConfig.production_endpoints].concat(endpointConfig.production_failovers);\n        const sandboxEps = [endpointConfig.sandbox_endpoints].concat(endpointConfig.sandbox_failovers);\n        return { production: prodEps, sandbox: sandboxEps };\n    }\n    return { production: [endpointConfig.production_endpoints], sandbox: [endpointConfig.sandbox_endpoints] };\n}\n\n/**\n * Method to get the endpoints templates based on the selected endpoint type (loadbalance/ failover) and whether is\n * http or address endpoint.\n *\n * @param {string} endpointType The endpoint type\n * @param {bool} isAddressEndpoint Whether the endpoint is soap or not.\n * @param {object} currentEndpointConfig The existing endpoint information.\n * @return {object} A endpoint template object.\n * */\nfunction getEndpointTemplateByType(endpointType, isAddressEndpoint, currentEndpointConfig) {\n    const tmpEndpointConfig = {};\n    if (endpointType === 'failover') {\n        tmpEndpointConfig.endpoint_type = endpointType;\n        tmpEndpointConfig.production_failovers = currentEndpointConfig.production_failovers\n            ? currentEndpointConfig.production_failovers : [];\n        tmpEndpointConfig.sandbox_failovers = currentEndpointConfig.sandbox_failovers\n            ? currentEndpointConfig.sandbox_failovers : [];\n        tmpEndpointConfig.production_endpoints = Array.isArray(currentEndpointConfig.production_endpoints)\n            ? currentEndpointConfig.production_endpoints[0] : currentEndpointConfig.production_endpoints;\n        tmpEndpointConfig.sandbox_endpoints = Array.isArray(currentEndpointConfig.sandbox_endpoints)\n            ? currentEndpointConfig.sandbox_endpoints[0] : currentEndpointConfig.sandbox_endpoints;\n        tmpEndpointConfig.failOver = 'True';\n    } else if (endpointType === 'load_balance') {\n        tmpEndpointConfig.endpoint_type = endpointType;\n        tmpEndpointConfig.algoClassName = 'org.apache.synapse.endpoints.algorithms.RoundRobin';\n        tmpEndpointConfig.algoCombo = 'org.apache.synapse.endpoints.algorithms.RoundRobin';\n        tmpEndpointConfig.sessionManagement = '';\n        tmpEndpointConfig.sessionTimeOut = '';\n        if (currentEndpointConfig.production_endpoints) {\n            tmpEndpointConfig.production_endpoints = Array.isArray(currentEndpointConfig.production_endpoints)\n                ? currentEndpointConfig.production_endpoints : [currentEndpointConfig.production_endpoints];\n        }\n        if (currentEndpointConfig.sandbox_endpoints) {\n            tmpEndpointConfig.sandbox_endpoints = Array.isArray(currentEndpointConfig.sandbox_endpoints)\n                ? currentEndpointConfig.sandbox_endpoints : [currentEndpointConfig.sandbox_endpoints];\n        }\n        tmpEndpointConfig.failOver = 'False';\n    } else {\n        tmpEndpointConfig.endpoint_type = isAddressEndpoint === true ? 'address' : 'http';\n        tmpEndpointConfig.production_endpoints = Array.isArray(currentEndpointConfig.production_endpoints)\n            ? currentEndpointConfig.production_endpoints[0] : currentEndpointConfig.production_endpoints;\n        tmpEndpointConfig.sandbox_endpoints = Array.isArray(currentEndpointConfig.sandbox_endpoints)\n            ? currentEndpointConfig.sandbox_endpoints[0] : currentEndpointConfig.sandbox_endpoints;\n        tmpEndpointConfig.failOver = 'False';\n    }\n    return tmpEndpointConfig;\n}\n\n/**\n * Returns all the endpoints as a list.\n *\n * @param {object} endpointConfig The endpoint config object from the api.\n * @return {array} The list of endpoints.\n * */\nfunction endpointsToList(endpointConfig) {\n    const config = cloneDeep(endpointConfig);\n    const endpoints = [];\n    if (Array.isArray(config.production_endpoints)) {\n        endpoints.push(...config.production_endpoints);\n    } else {\n        endpoints.push(config.production_endpoints);\n    }\n\n    if (Array.isArray(config.sandbox_endpoints)) {\n        endpoints.push(...config.sandbox_endpoints);\n    } else {\n        endpoints.push(config.sandbox_endpoints);\n    }\n\n    if (config.endpoint_type === 'failover') {\n        if (config.sandbox_failovers) {\n            endpoints.push(...config.sandbox_failovers);\n        }\n        if (config.production_failovers) {\n            endpoints.push(...config.production_failovers);\n        }\n    }\n    return endpoints;\n}\n\n/**\n * Returns an endpoint config object template based on the implementation method.\n * Eg: Managed, Prototyped.\n *\n * @param {string} implementationType The endpoint implementation type.\n * @return {object} The endpoint template.\n * */\nfunction getEndpointConfigByImpl(implementationType) {\n    const tmpEndpointConfig = {};\n    if (implementationType === 'PROTOTYPED') {\n        tmpEndpointConfig.endpoint_type = 'http';\n        tmpEndpointConfig.implementation_status = 'prototyped';\n        tmpEndpointConfig.production_endpoints = { config: null, url: 'http://localhost' };\n        tmpEndpointConfig.sandbox_endpoints = { config: null, url: 'http://localhost' };\n    } else {\n        tmpEndpointConfig.endpoint_type = 'http';\n        tmpEndpointConfig.production_endpoints = { url: '' };\n        tmpEndpointConfig.sandbox_endpoints = { url: '' };\n        tmpEndpointConfig.failOver = 'False';\n    }\n    return tmpEndpointConfig;\n}\n\n/**\n * Get the endpoint config based on the selected endpoint type.\n * Supported endpoint types:\n * 1. http\n * 2. address\n * 3. prototyped\n * 4. awslambda\n * 5. default (Dynamic)\n *\n * @param {string} endpointType The selected endpoint type.\n * @return {endpointConfig} Endpoint config object.\n * */\nfunction createEndpointConfig(endpointType) {\n    const tmpEndpointConfig = {};\n    switch (endpointType) {\n        case 'http':\n            tmpEndpointConfig.endpoint_type = 'http';\n            tmpEndpointConfig.failOver = 'False';\n            break;\n        case 'address':\n            tmpEndpointConfig.endpoint_type = 'address';\n            tmpEndpointConfig.failOver = 'False';\n            break;\n        case 'prototyped':\n            tmpEndpointConfig.implementation_status = 'prototyped';\n            tmpEndpointConfig.endpoint_type = 'http';\n            tmpEndpointConfig.production_endpoints = { config: null, url: 'http://localhost' };\n            tmpEndpointConfig.sandbox_endpoints = { config: null, url: 'http://localhost' };\n            break;\n        case 'awslambda':\n            tmpEndpointConfig.endpoint_type = 'awslambda';\n            tmpEndpointConfig.access_method = 'role-supplied';\n            tmpEndpointConfig.amznAccessKey = '';\n            tmpEndpointConfig.amznSecretKey = '';\n            tmpEndpointConfig.amznRegion = '';\n            break;\n        default:\n            tmpEndpointConfig.endpoint_type = 'default';\n            tmpEndpointConfig.production_endpoints = { url: 'default' };\n            tmpEndpointConfig.sandbox_endpoints = { url: 'default' };\n            tmpEndpointConfig.failOver = 'False';\n            break;\n    }\n    return tmpEndpointConfig;\n}\n\n/**\n * Get the endpoint template based on endpoint type.\n *\n * @param {string} type: Endpoint type (HTTP/ Address)\n * @return {object} Endpoint Template\n * */\nfunction getEndpointTemplate(type) {\n    if (type === 'address') {\n        return { url: '', endpoint_type: 'address', template_not_supported: false };\n    }\n    return { url: '', template_not_supported: false };\n}\n\nexport {\n    getEndpointTypeProperty,\n    mergeEndpoints,\n    getEndpointTemplateByType,\n    endpointsToList,\n    getEndpointConfigByImpl,\n    createEndpointConfig,\n    getEndpointTemplate,\n};\n","/**\n * Copyright (c)  WSO2 Inc. (http://wso2.com) All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the 'License');\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an 'AS IS' BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React, { useEffect, useState } from 'react';\nimport {\n    ExpansionPanel,\n    ExpansionPanelDetails,\n    ExpansionPanelSummary,\n    Grid,\n    Typography,\n    withStyles,\n    Box,\n} from '@material-ui/core';\nimport PropTypes from 'prop-types';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport { isRestricted } from 'AppData/AuthManager';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport Certificates from './GeneralConfiguration/Certificates';\nimport API from '../../../../data/api'; // TODO: Use webpack aliases instead of relative paths ~tmkb\nimport Alert from '../../../Shared/Alert';\nimport { endpointsToList } from './endpointUtils';\n\nconst styles = (theme) => ({\n    configHeaderContainer: {\n        display: 'flex',\n        justifyContent: 'space-between',\n    },\n    generalConfigContent: {\n        boxShadow: 'inset -1px 2px 3px 0px #c3c3c3',\n    },\n    secondaryHeading: {\n        fontSize: theme.typography.pxToRem(15),\n        color: theme.palette.text.secondary,\n        display: 'flex',\n    },\n    heading: {\n        fontSize: theme.typography.pxToRem(15),\n        flexBasis: '33.33%',\n        flexShrink: 0,\n        fontWeight: '900',\n    },\n    endpointConfigSection: {\n        padding: '10px',\n    },\n    generalConfigPanel: {\n        width: '100%',\n    },\n    securityHeading: {\n        fontWeight: 600,\n    },\n    sandboxEndpointSwitch: {\n        marginLeft: theme.spacing(2),\n    },\n});\n\n/**\n * The component which holds the general configurations of the endpoints.\n *\n * @param {any} props The input properties to the component\n * @returns {any} The HTML representation of the component.\n * */\nfunction GeneralConfiguration(props) {\n    const {\n        intl,\n        epConfig,\n        endpointType,\n        classes,\n    } = props;\n    const [isConfigExpanded, setConfigExpand] = useState(false);\n    const [endpointCertificates, setEndpointCertificates] = useState([]);\n    const [aliasList, setAliasList] = useState([]);\n\n    /**\n     * Method to upload the certificate content by calling the rest api.\n     * */\n    const saveCertificate = (certificate, endpoint, alias) => {\n        return API.addCertificate(certificate, endpoint, alias)\n            .then((resp) => {\n                if (resp.status === 201) {\n                    Alert.info(intl.formatMessage({\n                        id: 'Apis.Details.Endpoints.GeneralConfiguration.Certificates.certificate.add.success',\n                        defaultMessage: 'Certificate added successfully',\n                    }));\n                    const tmpCertificates = [...endpointCertificates];\n                    tmpCertificates.push({\n                        alias: resp.obj.alias,\n                        endpoint: resp.obj.endpoint,\n                    });\n                    setEndpointCertificates(tmpCertificates);\n                }\n            })\n            .catch((err) => {\n                console.error(err.message);\n                if (err.message === 'Conflict') {\n                    Alert.error(intl.formatMessage({\n                        id: 'Apis.Details.Endpoints.GeneralConfiguration.Certificates.certificate.alias.exist',\n                        defaultMessage: 'Adding Certificate Failed. Certificate Alias Exists.',\n                    }));\n                } else if (err.response) {\n                    Alert.error(err.response.body.description);\n                } else {\n                    Alert.error(intl.formatMessage({\n                        id: 'Apis.Details.Endpoints.GeneralConfiguration.Certificates.certificate.error',\n                        defaultMessage: 'Something went wrong while adding the certificate.',\n                    }));\n                }\n            });\n    };\n    /**\n     * Method to delete the selected certificate.\n     *\n     * @param {string} alias The alias of the certificate to be deleted.\n     * */\n    const deleteCertificate = (alias) => {\n        return API.deleteEndpointCertificate(alias)\n            .then((resp) => {\n                setEndpointCertificates(() => {\n                    if (resp.status === 200) {\n                        return endpointCertificates.filter((cert) => {\n                            return cert.alias !== alias;\n                        });\n                    } else {\n                        return -1;\n                    }\n                });\n                Alert.info(intl.formatMessage({\n                    id: 'Apis.Details.Endpoints.GeneralConfiguration.Certificates.certificate.delete.success',\n                    defaultMessage: 'Certificate Deleted Successfully',\n                }));\n            })\n            .catch((err) => {\n                console.log(err);\n                Alert.info(intl.formatMessage({\n                    id: 'Apis.Details.Endpoints.GeneralConfiguration.Certificates.certificate.delete.error',\n                    defaultMessage: 'Error Deleting Certificate',\n                }));\n            });\n    };\n\n    // Get the certificates from backend.\n    useEffect(() => {\n        if (!isRestricted(['apim:ep_certificates_view'])) {\n            const endpointCertificatesList = [];\n            const aliases = [];\n\n            let endpoints = endpointsToList(epConfig);\n            const filteredEndpoints = [];\n            const epLookup = [];\n            for (const ep of endpoints) {\n                if (ep) {\n                    if (!epLookup.includes(ep.url)) {\n                        filteredEndpoints.push(ep);\n                        epLookup.push(ep.url);\n                    }\n                }\n            }\n            endpoints = filteredEndpoints;\n\n            for (const ep of endpoints) {\n                if (ep && ep.url) {\n                    const params = {};\n                    params.endpoint = ep.url;\n                    API.getEndpointCertificates(params)\n                        .then((response) => {\n                            const { certificates } = response.obj;\n                            for (const cert of certificates) {\n                                endpointCertificatesList.push(cert);\n                                aliases.push(cert.alias);\n                            }\n                        })\n                        .catch((err) => {\n                            console.error(err);\n                        });\n                }\n            }\n            setEndpointCertificates(endpointCertificatesList);\n            setAliasList(aliases);\n        } else {\n            setEndpointCertificates([]);\n        }\n    }, []);\n\n    return (\n        <>\n            <ExpansionPanel\n                expanded={isConfigExpanded}\n                onChange={() => setConfigExpand(!isConfigExpanded)}\n                className={classes.generalConfigPanel}\n                disabled={isRestricted(['apim:ep_certificates_view'])}\n            >\n                <ExpansionPanelSummary\n                    expandIcon={<ExpandMoreIcon />}\n                    id={endpointType.key + '-panel1bh-header'}\n                    className={classes.configHeaderContainer}\n                >\n                    {endpointType.key === 'default' || endpointType.key === 'awslambda' ? (\n                        <div />\n                    ) : (\n                        <Typography\n                            className={classes.secondaryHeading}\n                            hidden={endpointType.key === 'default' || endpointType.key === 'awslambda'}\n                        >\n                            <FormattedMessage\n                                id='Apis.Details.Endpoints.GeneralConfiguration.certificates.sub.heading'\n                                defaultMessage='Certificates'\n                            />\n                            :\n                            {' '}\n                            {endpointCertificates.length}\n                            {isRestricted(['apim:ep_certificates_view']) && (\n                                <Box ml={2}>\n                                    <Typography variant='body2' color='primary'>\n                                        <FormattedMessage\n                                            id='Apis.Details.Endpoints.GeneralConfiguration.not.allowed'\n                                            defaultMessage={'*You are not authorized to view certificates'\n                                        + ' due to insufficient permissions'}\n                                        />\n                                    </Typography>\n                                </Box>\n                            )}\n                        </Typography>\n                    )}\n                </ExpansionPanelSummary>\n                <ExpansionPanelDetails className={classes.generalConfigContent}>\n                    <Grid\n                        container\n                        className={classes.endpointConfigSection}\n                        hidden={endpointType.key === 'default' || endpointType.key === 'awslambda'}\n                    >\n                        <Certificates\n                            endpoints={endpointsToList(epConfig)}\n                            certificates={endpointCertificates}\n                            uploadCertificate={saveCertificate}\n                            deleteCertificate={deleteCertificate}\n                            aliasList={aliasList}\n                        />\n                    </Grid>\n                </ExpansionPanelDetails>\n            </ExpansionPanel>\n        </>\n    );\n}\n\nGeneralConfiguration.propTypes = {\n    epConfig: PropTypes.shape({}).isRequired,\n    endpointType: PropTypes.shape({}).isRequired,\n    classes: PropTypes.shape({}).isRequired,\n    intl: PropTypes.shape({}).isRequired,\n};\n\nexport default injectIntl(withStyles(styles)(GeneralConfiguration));\n","/**\n * Copyright (c)  WSO2 Inc. (http://wso2.com) All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the 'License');\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an 'AS IS' BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React, { useEffect, useState, useContext } from 'react';\nimport {\n    Divider,\n    Icon,\n    IconButton,\n    InputAdornment,\n    TextField,\n    withStyles,\n} from '@material-ui/core';\nimport { FormattedMessage } from 'react-intl';\nimport PropTypes from 'prop-types';\nimport green from '@material-ui/core/colors/green';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Chip from '@material-ui/core/Chip';\nimport { isRestricted } from 'AppData/AuthManager';\nimport APIContext from 'AppComponents/Apis/Details/components/ApiContext';\nimport API from 'AppData/api';\n\nconst styles = (theme) => ({\n    endpointInputWrapper: {\n        width: '100%',\n        display: 'flex',\n        justifyContent: 'space-between',\n    },\n    textField: {\n        width: '100%',\n    },\n    input: {\n        marginLeft: theme.spacing(1),\n        flex: 1,\n    },\n    iconButton: {\n        padding: theme.spacing(1),\n    },\n    iconButtonValid: {\n        padding: theme.spacing(1),\n        color: green[500],\n    },\n    divider: {\n        width: 1,\n        height: 28,\n        margin: 4,\n    },\n    endpointValidChip: {\n        color: 'green',\n        border: '1px solid green',\n    },\n    endpointInvalidChip: {\n        color: '#ffd53a',\n        border: '1px solid #ffd53a',\n    },\n    endpointErrorChip: {\n        color: 'red',\n        border: '1px solid red',\n    },\n});\n/**\n * This component represents a single endpoint view of the endpoints listing. This component holds the actions that\n * affect the endpont. Eg: Delete, advance configuration.\n *\n * @param {any} props The input props\n * @returns {any} The HTML representation of the component.\n * */\nfunction GenericEndpoint(props) {\n    const {\n        category,\n        endpointURL,\n        editEndpoint,\n        classes,\n        type,\n        setAdvancedConfigOpen,\n        esCategory,\n        setESConfigOpen,\n        deleteEndpoint,\n        index,\n        readOnly,\n        autoFocus,\n        name,\n        id,\n        apiId,\n    } = props;\n    const [serviceUrl, setServiceUrl] = useState(endpointURL);\n    const { api } = useContext(APIContext);\n    const [isEndpointValid, setIsEndpointValid] = useState();\n    const [statusCode, setStatusCode] = useState('');\n    const [isUpdating, setUpdating] = useState(false);\n    const [isErrorCode, setIsErrorCode] = useState(false);\n    const iff = (condition, then, otherwise) => (condition ? then : otherwise);\n\n    useEffect(() => {\n        setServiceUrl(endpointURL);\n    }, [endpointURL]);\n\n    function testEndpoint(endpoint, apiID) {\n        setUpdating(true);\n        const restApi = new API();\n        restApi.testEndpoint(endpoint, apiID)\n            .then((result) => {\n                if (result.body.error !== null) {\n                    setStatusCode(result.body.error);\n                    setIsErrorCode(true);\n                } else {\n                    setStatusCode(result.body.statusCode + ' ' + result.body.statusMessage);\n                    setIsErrorCode(false);\n                }\n                if (result.body.statusCode >= 200 && result.body.statusCode < 300) {\n                    setIsEndpointValid(true);\n                    setIsErrorCode(false);\n                } else {\n                    setIsEndpointValid(false);\n                }\n            }).finally(() => {\n                setUpdating(false);\n            });\n    }\n\n    return (\n        <div className={classes.endpointInputWrapper}>\n            <TextField\n                disabled={isRestricted(['apim:api_create'], api)}\n                label={name}\n                id={id}\n                className={classes.textField}\n                value={serviceUrl}\n                placeholder={!serviceUrl ? 'http://appserver/resource' : ''}\n                onChange={(event) => setServiceUrl(event.target.value)}\n                onBlur={() => editEndpoint(index, category, serviceUrl)}\n                error={!serviceUrl}\n                helperText={!serviceUrl\n                    ? (\n                        <FormattedMessage\n                            id='Apis.Details.Endpoints.GenericEndpoint.no.ep.error'\n                            defaultMessage='Endpoint URL should not be empty'\n                        />\n                    ) : ''}\n                variant='outlined'\n                margin='normal'\n                required\n                InputProps={{\n                    readOnly,\n                    autoFocus,\n                    endAdornment: (\n                        <InputAdornment position='end'>\n                            {statusCode && (\n                                <Chip\n                                    label={statusCode}\n                                    className={isEndpointValid ? classes.endpointValidChip : iff(\n                                        isErrorCode,\n                                        classes.endpointErrorChip, classes.endpointInvalidChip,\n                                    )}\n                                    variant='outlined'\n                                />\n                            )}\n                            {!api.isWebSocket() && (\n                                <IconButton\n                                    className={isEndpointValid ? classes.iconButtonValid : classes.iconButton}\n                                    aria-label='TestEndpoint'\n                                    onClick={() => testEndpoint(serviceUrl, apiId)}\n                                    disabled={(isRestricted(['apim:api_create'], api)) || isUpdating}\n                                >\n                                    {isUpdating\n                                        ? <CircularProgress size={20} />\n                                        : (\n                                            <Icon>\n                                        check_circle\n                                            </Icon>\n                                        )}\n                                </IconButton>\n                            )}\n                            {type === 'prototyped'\n                                ? <div />\n                                : (\n                                    <>\n                                        <IconButton\n                                            className={classes.iconButton}\n                                            aria-label='Settings'\n                                            onClick={() => setAdvancedConfigOpen(index, type, category)}\n                                            disabled={(isRestricted(['apim:api_create'], api))}\n                                        >\n                                            <Icon>\n                                            settings\n                                            </Icon>\n                                        </IconButton>\n                                        <IconButton\n                                            className={classes.iconButton}\n                                            aria-label='Security'\n                                            onClick={() => setESConfigOpen(type, esCategory)}\n                                            disabled={(isRestricted(['apim:api_create'], api))}\n                                        >\n                                            <Icon>\n                                            security\n                                            </Icon>\n                                        </IconButton>\n                                    </>\n                                )}\n                            {(index > 0) ? <Divider className={classes.divider} /> : <div />}\n                            {(type === 'load_balance' || type === 'failover') ? (\n                                <IconButton\n                                    className={classes.iconButton}\n                                    aria-label='Delete'\n                                    color='secondary'\n                                    onClick={() => deleteEndpoint(index, type, category)}\n                                    disabled={(isRestricted(['apim:api_create'], api))}\n                                >\n                                    <Icon>\n                                        delete\n                                    </Icon>\n                                </IconButton>\n                            ) : (<div />)}\n                        </InputAdornment>\n                    ),\n                }}\n            />\n        </div>\n    );\n}\n\nGenericEndpoint.defaultProps = {\n    readOnly: false,\n    autoFocus: false,\n    name: 'Service URL',\n    id: '',\n};\n\nGenericEndpoint.propTypes = {\n    endpointURL: PropTypes.string.isRequired,\n    deleteEndpoint: PropTypes.func.isRequired,\n    classes: PropTypes.shape({}).isRequired,\n    type: PropTypes.string.isRequired,\n    setAdvancedConfigOpen: PropTypes.func.isRequired,\n    setESConfigOpen: PropTypes.func.isRequired,\n    index: PropTypes.number.isRequired,\n    editEndpoint: PropTypes.func.isRequired,\n    category: PropTypes.string.isRequired,\n    readOnly: PropTypes.bool,\n    autoFocus: PropTypes.bool,\n    name: PropTypes.string,\n    id: PropTypes.string,\n    apiId: PropTypes.string.isRequired,\n};\n\nexport default withStyles(styles)(GenericEndpoint);\n","/**\n * Copyright (c)  WSO2 Inc. (http://wso2.com) All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the 'License');\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an 'AS IS' BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React, { useState, useContext } from 'react';\n\nimport {\n    Icon,\n    IconButton,\n    InputAdornment,\n    TextField,\n    withStyles,\n} from '@material-ui/core';\nimport { FormattedMessage } from 'react-intl';\nimport PropTypes from 'prop-types';\nimport { isRestricted } from 'AppData/AuthManager';\nimport APIContext from 'AppComponents/Apis/Details/components/ApiContext';\n\nconst styles = (theme) => ({\n    endpointInputWrapper: {\n        width: '100%',\n        display: 'flex',\n        justifyContent: 'space-between',\n    },\n    textField: {\n        width: '100%',\n    },\n    input: {\n        marginLeft: theme.spacing(1),\n        flex: 1,\n    },\n    iconButton: {\n        padding: theme.spacing(1),\n    },\n});\n\n/**\n * This component represents the view and functions of endpoint add.\n *\n * @param {any} props The input props.\n * @returns {any} HTML representation of the component.\n * */\nfunction GenericEndpointAdd(props) {\n    const {\n        classes,\n        addEndpoint,\n    } = props;\n    const [serviceUrl, setServiceUrl] = useState('');\n    const { api } = useContext(APIContext);\n\n    /**\n     * The method to handle endpoint add button click action.\n     * */\n    const onAddEndpoint = () => {\n        setServiceUrl('');\n        addEndpoint(serviceUrl);\n    };\n\n    return (\n        <div className={classes.endpointInputWrapper}>\n            <TextField\n                label={(\n                    <FormattedMessage\n                        id='Apis.Details.Endpoints.GenericEndpoint.service.url.input'\n                        defaultMessage='Service URL'\n                    />\n                )}\n                disabled={isRestricted(['apim:api_create'], api)}\n                className={classes.textField}\n                value={serviceUrl}\n                fullWidth\n                onChange={(event) => setServiceUrl(event.target.value)}\n                variant='outlined'\n                margin='normal'\n                placeholder='Enter the Endpoint URL and press + button'\n                InputProps={{\n                    endAdornment: (\n                        <InputAdornment position='end'>\n                            <IconButton\n                                onClick={onAddEndpoint}\n                                color='green'\n                                className={classes.iconButton}\n                                aria-label='Search'\n                                disabled={serviceUrl === ''}\n                            >\n                                <Icon>\n                                    add\n                                </Icon>\n                            </IconButton>\n                        </InputAdornment>\n                    ),\n                }}\n            />\n        </div>\n    );\n}\n\nGenericEndpointAdd.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    addEndpoint: PropTypes.func.isRequired,\n};\n\nexport default withStyles(styles)(GenericEndpointAdd);\n","/**\n * Copyright (c)  WSO2 Inc. (http://wso2.com) All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the 'License');\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an 'AS IS' BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React, { useEffect, useRef, useState } from 'react';\nimport { Grid, withStyles } from '@material-ui/core';\nimport { injectIntl } from 'react-intl';\nimport PropTypes from 'prop-types';\nimport GenericEndpoint from './GenericEndpoint';\nimport GenericEndpointAdd from './GenericEndpointAdd';\n\nconst styles = (theme) => ({\n    endpointInputWrapper: {\n        display: 'flex',\n    },\n    epInput: {\n        width: '100%',\n    },\n    epTypeWrapper: {\n        display: 'flex',\n        padding: '5px',\n    },\n    epTypeName: {\n        paddingTop: '10px',\n        fontWeight: 600,\n    },\n    epConfig: {\n        justifyContent: 'flex-end',\n    },\n    leftArrow: {\n        paddingTop: '6px',\n    },\n    leftArrowLight: {\n        color: '#c5c5c5',\n        paddingTop: '6px',\n    },\n    dialogHeader: {\n        fontWeight: 600,\n    },\n    listItemOdd: {\n        background: '#ececec',\n        borderRadius: '5px',\n        '&:hover': {\n            backgroundColor: theme.palette.grey[300],\n        },\n        '&:focus': {\n            backgroundColor: theme.palette.grey[400],\n        },\n    },\n    listItem: {\n        borderRadius: '5px',\n        '&:hover': {\n            backgroundColor: theme.palette.grey[300],\n        },\n        '&:focus': {\n            backgroundColor: theme.palette.grey[400],\n        },\n    },\n});\n\n/**\n * The Component for endpoint listing.\n * @param {*} props The props that are being passed to the component.\n * @returns {any} The HTML view of the ep listing component.\n */\nfunction EndpointListing(props) {\n    const {\n        classes,\n        category,\n        apiEndpoints,\n        epType,\n        failOvers,\n        editEndpoint,\n        addNewEndpoint,\n        removeEndpoint,\n        setAdvancedConfigOpen,\n        apiId,\n    } = props;\n    const [endpointType, setEndpointType] = useState(epType);\n    const [endpoints, setEndpoints] = useState([{ url: 'http://myservice/endpoint' }]);\n    const selectedRef = useRef(null);\n\n    /**\n     * Method to add a new endpoint.\n     *\n     * @param {string} url The url of the endpoint that needs to be added.\n     * */\n    const addEndpoint = (url) => {\n        addNewEndpoint(category, epType, url);\n    };\n\n    useEffect(() => {\n        setEndpointType(epType);\n        setEndpoints(() => {\n            if (apiEndpoints !== null && epType === 'failover') {\n                return ([apiEndpoints].concat(failOvers));\n            } else {\n                if (apiEndpoints !== undefined) {\n                    return Array.isArray(apiEndpoints) ? apiEndpoints : [apiEndpoints];\n                }\n                return [{ url: 'http://myservice/' }];\n            }\n        });\n    }, [props]);\n\n    return (\n        <div className={classes.listingWrapper} ref={selectedRef}>\n            <Grid container xs={12}>\n                <Grid xs={12}>\n                    {(endpointType === 'failover' || endpointType === 'load_balance')\n                        ? <GenericEndpointAdd addEndpoint={addEndpoint} /> : <div />}\n                </Grid>\n                <Grid xs={12}>\n                    {\n                        (endpoints.map((ep, index) => {\n                            if (index > 0) {\n                                return (\n                                    <GenericEndpoint\n                                        readOnly\n                                        endpointURL={endpoints[index] ? endpoints[index].url : ''}\n                                        type={endpointType}\n                                        index={index}\n                                        category={category}\n                                        editEndpoint={editEndpoint}\n                                        deleteEndpoint={removeEndpoint}\n                                        setAdvancedConfigOpen={setAdvancedConfigOpen}\n                                        apiId={apiId}\n                                    />\n                                );\n                            }\n                            return (<div />);\n                        }))\n                    }\n                </Grid>\n            </Grid>\n        </div>\n    );\n}\n\nEndpointListing.propTypes = {\n    classes: PropTypes.shape({\n        epTypeWrapper: PropTypes.shape({}),\n        epTypeName: PropTypes.shape({}),\n        listingWrapper: PropTypes.shape({}),\n        epConfig: PropTypes.shape({}),\n    }).isRequired,\n    epType: PropTypes.string.isRequired,\n    category: PropTypes.string.isRequired,\n    apiEndpoints: PropTypes.shape({}).isRequired,\n    failOvers: PropTypes.shape({}).isRequired,\n    addNewEndpoint: PropTypes.func.isRequired,\n    removeEndpoint: PropTypes.func.isRequired,\n    editEndpoint: PropTypes.func.isRequired,\n    setAdvancedConfigOpen: PropTypes.func.isRequired,\n    apiId: PropTypes.string.isRequired,\n};\n\nexport default injectIntl(withStyles(styles)(EndpointListing));\n","/**\n * Copyright (c)  WSO2 Inc. (http://wso2.com) All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the 'License');\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an 'AS IS' BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React, { useEffect, useState, useContext } from 'react';\nimport {\n    TextField, MenuItem, Grid, Button, withStyles,\n} from '@material-ui/core';\nimport PropTypes from 'prop-types';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport { isRestricted } from 'AppData/AuthManager';\nimport APIContext from 'AppComponents/Apis/Details/components/ApiContext';\n\nconst algorithms = [\n    {\n        key: 'org.apache.synapse.endpoints.algorithms.RoundRobin',\n        value: 'Round-Robin',\n    },\n    { key: 'other', value: 'Other' },\n];\nconst sessionManagementOps = [\n    { key: 'http', value: 'Transport' },\n    { key: 'soap', value: 'SOAP' },\n    { key: 'simpleClientSession', value: 'Client Id' },\n    { key: 'none', value: 'None' },\n];\n\nconst defaultTemplateObj = {\n    algoClassName: algorithms[0].key,\n    algoCombo: algorithms[0].key,\n    sessionManagement: sessionManagementOps[0].key,\n    sessionTimeOut: 300,\n};\n\nconst styles = (theme) => ({\n    configButtonContainer: {\n        display: 'flex',\n        justifyContent: 'flex-end',\n        paddingTop: theme.spacing(1),\n    },\n});\n\n/**\n * The component for loadbalance endpoint configuration.\n * @param {any} props The props that are being passed.\n * @returns {any} The HTML contents of the Configuration component.\n */\nfunction LoadBalanceConfig(props) {\n    const {\n        algoClassName,\n        algoCombo,\n        sessionManagement,\n        sessionTimeOut,\n        handleLBConfigChange,\n        closeLBConfigDialog,\n        classes,\n    } = props;\n    const [lbConfig, setLbConfigObject] = useState(defaultTemplateObj);\n    const [algoClassNameError, setAlgoClassNameError] = useState(false);\n    const { api } = useContext(APIContext);\n\n    useEffect(() => {\n        setLbConfigObject(() => {\n            const tmpLBConfig = { ...defaultTemplateObj };\n            if (algoCombo) {\n                tmpLBConfig.algoCombo = algoCombo;\n            }\n            if (sessionManagement) {\n                tmpLBConfig.sessionManagement = sessionManagement;\n            }\n            if (algoClassName) {\n                tmpLBConfig.algoClassName = algoClassName;\n            }\n            if (sessionTimeOut) {\n                tmpLBConfig.sessionTimeOut = sessionTimeOut;\n            }\n            return tmpLBConfig;\n        });\n    }, [props]);\n\n    /**\n     * Method to capture the alogrithm select changes.\n     *\n     * @param {any} event The event triggered by the element.\n     * */\n    const handleAlgorithmChange = (event) => {\n        const { value } = event.target;\n        setLbConfigObject({\n            ...lbConfig,\n            algoCombo: value,\n            algoClassName: value === 'other' ? '' : defaultTemplateObj.algoClassName,\n        });\n    };\n\n    /**\n     * Method to capture the onChange event of the elements.\n     *\n     * @param {any} event The event triggered by the element.\n     * @param {string} field The respective field which is being changed.\n     * */\n    const handleFieldChange = (event, field) => {\n        setLbConfigObject({ ...lbConfig, [field]: event.target.value });\n    };\n\n    /**\n     * Method to set the configuration changes to the original endpoints config object.\n     * */\n    const submitConfiguration = () => {\n        handleLBConfigChange(lbConfig);\n    };\n\n    return (\n        <>\n            <Grid container direction='column'>\n                <TextField\n                    id='algorithmSelect'\n                    select\n                    label={(\n                        <FormattedMessage\n                            id='Apis.Details.Endpoints.LoadBalanceConfig.algorithm'\n                            defaultMessage='Algorithm'\n                        />\n                    )}\n                    value={lbConfig.algoCombo}\n                    onChange={handleAlgorithmChange}\n                    helperText='Please select the Loadbalance Algorithm.'\n                    margin='normal'\n                    disabled={isRestricted(['apim:api_create'], api)}\n                >\n                    {algorithms.map((algo) => (\n                        <MenuItem key={algo.key} value={algo.key} selected={lbConfig.algoCombo}>\n                            {algo.value}\n                        </MenuItem>\n                    ))}\n                </TextField>\n                {(lbConfig.algoCombo === 'other')\n                    ? (\n                        <TextField\n                            id='customAlgoInput'\n                            label={(\n                                <FormattedMessage\n                                    id='Apis.Details.Endpoints.LoadBalanceConfig.class.name.for.algorithm'\n                                    defaultMessage='Class Name for Algorithm'\n                                />\n                            )}\n                            required\n                            error={algoClassNameError}\n                            value={lbConfig.algoClassName}\n                            onChange={(event) => handleFieldChange(event, 'algoClassName')}\n                            onBlur={() => setAlgoClassNameError(lbConfig.algoClassName === '')}\n                            helperText='Enter the class name of the loadbalance algorithm'\n                            disabled={isRestricted(['apim:api_create'], api)}\n                            margin='normal'\n                        />\n                    ) : <div /> }\n                <TextField\n                    id='sessionMgtSelect'\n                    select\n                    label={(\n                        <FormattedMessage\n                            id='Apis.Details.Endpoints.LoadBalanceConfig.session.management'\n                            defaultMessage='Session Management'\n                        />\n                    )}\n                    value={lbConfig.sessionManagement}\n                    onChange={(event) => handleFieldChange(event, 'sessionManagement')}\n                    helperText='Please select the Session Management mechanism.'\n                    margin='normal'\n                    disabled={isRestricted(['apim:api_create'], api)}\n                >\n                    {sessionManagementOps.map((option) => (\n                        <MenuItem key={option.key} value={option.key}>\n                            {option.value}\n                        </MenuItem>\n                    ))}\n                </TextField>\n                <TextField\n                    id='sessionTimeout'\n                    label={(\n                        <FormattedMessage\n                            id='Apis.Details.Endpoints.LoadBalanceConfig.session.timeout'\n                            defaultMessage='Session Timeout (Millis)'\n                        />\n                    )}\n                    value={lbConfig.sessionTimeOut}\n                    onChange={(event) => handleFieldChange(event, 'sessionTimeOut')}\n                    type='number'\n                    placeholder='300'\n                    margin='normal'\n                    disabled={isRestricted(['apim:api_create'], api)}\n                />\n            </Grid>\n            <Grid className={classes.configButtonContainer}>\n                <Button\n                    color='primary'\n                    variant='contained'\n                    autoFocus\n                    onClick={submitConfiguration}\n                    disabled={lbConfig.algoClassName === '' || isRestricted(['apim:api_create'], api)}\n                    style={{ marginRight: '10px' }}\n                >\n                    <FormattedMessage\n                        id='Apis.Details.Endpoints.EndpointOverview.loadbalance.config.save.button'\n                        defaultMessage='Save'\n                    />\n                </Button>\n                <Button\n                    onClick={closeLBConfigDialog}\n                >\n                    <FormattedMessage\n                        id='Apis.Details.Endpoints.EndpointOverview.loadbalance.config.cancel.button'\n                        defaultMessage='Close'\n                    />\n                </Button>\n            </Grid>\n        </>\n    );\n}\n\nLoadBalanceConfig.propTypes = {\n    api: PropTypes.shape({}).isRequired,\n    classes: PropTypes.shape({}).isRequired,\n    algoClassName: PropTypes.string.isRequired,\n    algoCombo: PropTypes.string.isRequired,\n    sessionManagement: PropTypes.string.isRequired,\n    sessionTimeOut: PropTypes.string.isRequired,\n    handleLBConfigChange: PropTypes.func.isRequired,\n    closeLBConfigDialog: PropTypes.func.isRequired,\n};\n\nexport default injectIntl(withStyles(styles)(LoadBalanceConfig));\n","/**\n * Copyright (c)  WSO2 Inc. (http://wso2.com) All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the 'License');\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an 'AS IS' BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React, { useContext, useEffect, useState } from 'react';\nimport {\n    Dialog,\n    DialogContent,\n    DialogTitle,\n    ExpansionPanel,\n    ExpansionPanelDetails,\n    ExpansionPanelSummary,\n    Grid,\n    Icon,\n    IconButton,\n    MenuItem,\n    TextField,\n    Typography,\n    withStyles,\n} from '@material-ui/core';\nimport PropTypes from 'prop-types';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport cloneDeep from 'lodash.clonedeep';\nimport { isRestricted } from 'AppData/AuthManager';\nimport APIContext from 'AppComponents/Apis/Details/components/ApiContext';\nimport EndpointListing from 'AppComponents/Apis/Details/Endpoints/EndpointListing';\nimport LoadBalanceConfig from 'AppComponents/Apis/Details/Endpoints/LoadBalanceConfig';\nimport Collapse from '@material-ui/core/Collapse';\nimport InlineMessage from 'AppComponents/Shared/InlineMessage';\nimport { getEndpointTypeProperty } from './endpointUtils';\n\nconst styles = (theme) => ({\n    endpointTypeSelect: {\n        width: '50%',\n        marginTop: theme.spacing(1),\n    },\n    configHeaderContainer: {\n        display: 'flex',\n        justifyContent: 'space-between',\n    },\n    generalConfigContent: {\n        boxShadow: 'inset -1px 2px 3px 0px #c3c3c3',\n    },\n    secondaryHeading: {\n        fontSize: theme.typography.pxToRem(15),\n        color: theme.palette.text.secondary,\n        display: 'flex',\n    },\n    heading: {\n        fontSize: theme.typography.pxToRem(15),\n        flexBasis: '33.33%',\n        flexShrink: 0,\n        fontWeight: '900',\n    },\n    endpointConfigSection: {\n        padding: '10px',\n    },\n    generalConfigPanel: {\n        width: '100%',\n    },\n    endpointsTypeSelectWrapper: {\n        display: 'flex',\n        marginTop: theme.spacing(2),\n        marginBottom: theme.spacing(2),\n    },\n    lbConfigBtn: {\n        position: 'relative',\n        top: '10px',\n    },\n    endpointName: {\n        fontWeight: 600,\n    },\n    wrapper: {\n        width: '100%',\n    },\n});\n\nconst endpointTypes = [\n    { key: 'none', value: 'None' },\n    { key: 'failover', value: 'Failover' },\n    { key: 'load_balance', value: 'Load Balanced' },\n];\n\n/**\n * The component which holds the load balance and failover configuration.\n *\n * @param {any} props The input properties to the component\n * @returns {any} The HTML representation of the component.\n * */\nfunction LoadbalanceFailoverConfig(props) {\n    const {\n        epConfig,\n        classes,\n        endpointsDispatcher,\n        toggleAdvanceConfig,\n        globalEpType,\n        handleEndpointCategorySelect,\n    } = props;\n    const { api } = useContext(APIContext);\n    const [isConfigExpanded, setConfigExpand] = useState(false);\n    const [endpointType, setEndpointType] = useState(props);\n    const [isLBConfigOpen, setLBConfigOpen] = useState(false);\n\n    useEffect(() => {\n        const epType = epConfig.endpoint_type;\n        if (epType === 'http' || epType === 'address') {\n            setEndpointType('none');\n        } else {\n            setEndpointType(epType);\n        }\n    }, [props]);\n\n    /**\n     * Method to add new loadbalance/ failover endpoint to the existing endpoints.\n     *\n     * @param {string} category The endpoint category (production/ sandbox)\n     * @param {string} type The endpoint type. (load_balance/ failover)\n     * @param {string} newURL The url of the new endpoint.\n     * */\n    const addEndpoint = (category, type, newURL) => {\n        const endpointConfigCopy = cloneDeep(epConfig);\n        const endpointTemplate = {\n            endpoint_type: globalEpType.key,\n            template_not_supported: false,\n            url: newURL,\n        };\n        const epConfigProperty = getEndpointTypeProperty(type, category);\n        let endpointList = endpointConfigCopy[epConfigProperty];\n        /**\n         * Check whether we have existing endpoints added.\n         * */\n        if (endpointList) {\n            if (!Array.isArray(endpointList)) {\n                endpointList = [endpointList].concat(endpointTemplate);\n            } else {\n                endpointList = endpointList.concat(endpointTemplate);\n            }\n        } else {\n            endpointList = [endpointTemplate];\n        }\n        endpointConfigCopy[epConfigProperty] = endpointList;\n        endpointsDispatcher({ action: 'add_endpoint', value: endpointConfigCopy });\n    };\n\n    /**\n     * Method to handle the loadbalance configuration changes.\n     *\n     * @param {object} lbConfig The modified loadbalance configuration.\n     * */\n    const handleLBConfigChange = (lbConfig) => {\n        endpointsDispatcher({ action: 'set_lb_config', value: { ...epConfig, ...lbConfig } });\n        setLBConfigOpen(false);\n    };\n\n    const getEndpointTypeHeading = () => {\n        switch (endpointType) {\n            case 'none':\n                return (\n                    <FormattedMessage\n                        id='Apis.Details.Endpoints.LoadbalanceFailoverConfig.none.heading'\n                        defaultMessage='Not Configured'\n                    />\n                );\n            case 'failover':\n                return (\n                    <FormattedMessage\n                        id='Apis.Details.Endpoints.LoadbalanceFailoverConfig.failover.heading'\n                        defaultMessage='Failover Endpoints'\n                    />\n                );\n            default:\n                return (\n                    <FormattedMessage\n                        id='Apis.Details.Endpoints.LoadbalanceFailoverConfig.loadbalance.heading'\n                        defaultMessage='Load Balanced Endpoints'\n                    />\n                );\n        }\n    };\n\n    /**\n     * Method to remove the selected endpoint from the endpoints list.\n     *\n     * @param {number} index The selected endpoint index\n     * @param {string} epType The type of the endpoint. (loadbalance/ failover)\n     * @param {string} category The endpoint category (production/ sandbox)\n     * */\n    const removeEndpoint = (index, epType, category) => {\n        const tmpEndpointConfig = cloneDeep(epConfig);\n        const endpointConfigProperty = getEndpointTypeProperty(epType, category);\n        const indexToRemove = epType === 'failover' ? index - 1 : index;\n        const tmpEndpoints = tmpEndpointConfig[endpointConfigProperty];\n        tmpEndpoints.splice(indexToRemove, 1);\n        endpointsDispatcher({\n            action: 'remove_endpoint',\n            value: { ...epConfig, [endpointConfigProperty]: tmpEndpoints },\n        });\n    };\n\n    const editEndpoint = () => {};\n    const handleEndpointTypeSelect = (event) => {\n        setEndpointType(event.target.value);\n        handleEndpointCategorySelect(event);\n    };\n\n    return (\n        <>\n            <ExpansionPanel\n                expanded={isConfigExpanded || endpointType === 'load_balance' || endpointType === 'failover'}\n                onChange={() => setConfigExpand(!isConfigExpanded)}\n                className={classes.generalConfigPanel}\n            >\n                <ExpansionPanelSummary\n                    expandIcon={<ExpandMoreIcon />}\n                    aria-controls='panel1bh-content'\n                    id='panel1bh-header'\n                    className={classes.configHeaderContainer}\n                >\n                    <Typography className={classes.secondaryHeading}>\n                        {getEndpointTypeHeading()}\n                    </Typography>\n                </ExpansionPanelSummary>\n                <ExpansionPanelDetails className={classes.generalConfigContent}>\n                    {(!epConfig.production_endpoints && !epConfig.sandbox_endpoints)\n                        ? (\n                            <InlineMessage>\n                                <div className={classes.contentWrapper}>\n                                    <Typography component='p' className={classes.content}>\n                                        <FormattedMessage\n                                            id='Apis.Details.Endpoints.LoadbalanceFailoverConfig.no.endpoints.message'\n                                            defaultMessage='Add Production/ Sandbox endpoints to configure.'\n                                        />\n                                    </Typography>\n                                </div>\n                            </InlineMessage>\n                        )\n                        : (\n                            <Grid container item xs={12}>\n                                <Grid xs={12} className={classes.endpointsTypeSelectWrapper}>\n                                    <TextField\n                                        disabled={isRestricted(['apim:api_create'], api)}\n                                        id='certificateEndpoint'\n                                        label={(\n                                            <FormattedMessage\n                                                id='Apis.Details.Endpoints.LoadbalanceFailoverConfig.endpoint.type'\n                                                defaultMessage='Endpoint Type'\n                                            />\n                                        )}\n                                        value={endpointType}\n                                        placeholder='Endpoint'\n                                        onChange={handleEndpointTypeSelect}\n                                        margin='normal'\n                                        variant='outlined'\n                                        select\n                                        className={classes.endpointTypeSelect}\n                                    >\n                                        {endpointTypes.map((type) => {\n                                            return <MenuItem value={type.key}>{type.value}</MenuItem>;\n                                        })}\n                                    </TextField>\n                                    <div className={classes.lpConfigWrapper}>\n                                        <IconButton\n                                            className={classes.lbConfigBtn}\n                                            disabled={epConfig.endpoint_type !== 'load_balance'}\n                                            aria-label='Delete'\n                                            onClick={() => setLBConfigOpen(true)}\n                                        >\n                                            <Icon>\n                                            settings\n                                            </Icon>\n                                        </IconButton>\n                                    </div>\n                                </Grid>\n                                <Grid xs={12} container spacing={2}>\n                                    <Collapse className={classes.wrapper} in={endpointType !== 'none'}>\n                                        {epConfig.production_endpoints\n                                    && (\n                                        <Grid xs={12} className={classes.endpointsWrapperLeft}>\n                                            <Typography className={classes.endpointName}>\n                                                {epConfig.endpoint_type === 'failover'\n                                                    ? (\n                                                        <FormattedMessage\n                                                            id={'Apis.Details.Endpoints.'\n                                                            + 'LoadbalanceFailoverConfig.production.'\n                                                            + 'failover.endpoint'}\n                                                            defaultMessage='Production Failover Endpoints'\n                                                        />\n                                                    )\n                                                    : (\n                                                        <FormattedMessage\n                                                            id={'Apis.Details.Endpoints.LoadbalanceFailoverConfig.'\n                                                    + 'production.loadbalance.endpoint'}\n                                                            defaultMessage='Production Loadbalanced Endpoints'\n                                                        />\n                                                    )}\n                                            </Typography>\n                                            <EndpointListing\n                                                apiEndpoints={epConfig.production_endpoints}\n                                                failOvers={epConfig.production_failovers}\n                                                epType={epConfig.endpoint_type}\n                                                addNewEndpoint={addEndpoint}\n                                                removeEndpoint={removeEndpoint}\n                                                editEndpoint={editEndpoint}\n                                                setAdvancedConfigOpen={toggleAdvanceConfig}\n                                                category='production_endpoints'\n                                                apiId={api.id}\n                                            />\n                                        </Grid>\n                                    )}\n                                        {epConfig.sandbox_endpoints\n                                    && (\n                                        <Grid xs={12} className={classes.endpointsWrapperRight}>\n                                            <Typography className={classes.endpointName}>\n                                                {epConfig.endpoint_type === 'failover'\n                                                    ? (\n                                                        <FormattedMessage\n                                                            id={'Apis.Details.Endpoints.'\n                                                            + 'LoadbalanceFailoverConfig.sandbox.'\n                                                            + 'failover.endpoint'}\n                                                            defaultMessage='Sandbox Failover Endpoints'\n                                                        />\n                                                    )\n                                                    : (\n                                                        <FormattedMessage\n                                                            id={'Apis.Details.Endpoints.LoadbalanceFailoverConfig.'\n                                                    + 'sandbox.loadbalance.endpoint'}\n                                                            defaultMessage='Sandbox Loadbalanced Endpoints'\n                                                        />\n                                                    )}\n                                            </Typography>\n                                            <EndpointListing\n                                                apiEndpoints={epConfig.sandbox_endpoints}\n                                                failOvers={epConfig.sandbox_failovers}\n                                                epType={epConfig.endpoint_type}\n                                                addNewEndpoint={addEndpoint}\n                                                removeEndpoint={removeEndpoint}\n                                                editEndpoint={editEndpoint}\n                                                setAdvancedConfigOpen={toggleAdvanceConfig}\n                                                category='sandbox_endpoints'\n                                                apiId={api.id}\n                                            />\n                                        </Grid>\n                                    )}\n                                    </Collapse>\n                                </Grid>\n                            </Grid>\n                        )}\n                </ExpansionPanelDetails>\n            </ExpansionPanel>\n            <Dialog open={isLBConfigOpen}>\n                <DialogTitle>\n                    <Typography className={classes.configDialogHeader}>\n                        <FormattedMessage\n                            id='Apis.Details.Endpoints.LoadbalanceFailoverConfig.load.balance.configuration.title'\n                            defaultMessage='Load Balance Configurations'\n                        />\n                    </Typography>\n                </DialogTitle>\n                <DialogContent>\n                    <LoadBalanceConfig\n                        handleLBConfigChange={handleLBConfigChange}\n                        closeLBConfigDialog={() => setLBConfigOpen(false)}\n                        algoCombo={epConfig.algoCombo}\n                        algoClassName={epConfig.algoClassName}\n                        sessionTimeOut={epConfig.sessionTimeOut}\n                        sessionManagement={epConfig.sessionManagement}\n                    />\n                </DialogContent>\n            </Dialog>\n        </>\n    );\n}\n\nLoadbalanceFailoverConfig.propTypes = {\n    epConfig: PropTypes.shape({}).isRequired,\n    endpointSecurityInfo: PropTypes.shape({}).isRequired,\n    endpointType: PropTypes.shape({}).isRequired,\n    classes: PropTypes.shape({}).isRequired,\n    endpointsDispatcher: PropTypes.func.isRequired,\n    toggleAdvanceConfig: PropTypes.func.isRequired,\n    handleEndpointCategorySelect: PropTypes.func.isRequired,\n    globalEpType: PropTypes.shape({}).isRequired,\n    intl: PropTypes.shape({}).isRequired,\n};\n\nexport default injectIntl(withStyles(styles)(LoadbalanceFailoverConfig));\n","/**\n * Copyright (c)  WSO2 Inc. (http://wso2.com) All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the 'License');\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an 'AS IS' BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React, { useContext, useEffect, useState } from 'react';\nimport {\n    Divider,\n    FormControl,\n    Grid,\n    Input,\n    InputLabel,\n    MenuItem,\n    Select,\n    TextField,\n    Typography,\n    Button,\n    withStyles,\n} from '@material-ui/core';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport PropTypes from 'prop-types';\nimport { isRestricted } from 'AppData/AuthManager';\nimport APIContext from 'AppComponents/Apis/Details/components/ApiContext';\n\nconst itemHeight = 48;\nconst itemPaddingTop = 8;\nconst MenuProps = {\n    PaperProps: {\n        style: {\n            maxHeight: (itemHeight * 4.5) + itemPaddingTop, width: 250,\n        },\n    },\n};\nconst styles = (theme) => ({\n    formControl: {\n        width: '500px',\n    },\n    subTitle: {\n        fontSize: '1rem',\n        paddingTop: theme.spacing(1),\n        paddingBottom: theme.spacing(1),\n        marginBottom: theme.spacing(1),\n    },\n    configContainer: {\n        paddingTop: '10px',\n    },\n    configSubContainer: {\n        paddingBottom: '10px',\n        marginTop: '5px',\n        padding: '5px',\n    },\n    textField: {\n        marginRight: theme.spacing(1),\n        width: '45%',\n    },\n    advanceDialogActions: {\n        display: 'flex',\n        justifyContent: 'flex-end',\n    },\n});\n\n/**\n * The component for advanced endpoint configurations.\n * @param {any} props The input props\n * @returns {any} The HTML representation of the compoenent.\n */\nfunction AdvanceEndpointConfig(props) {\n    const { api } = useContext(APIContext);\n    const {\n        classes,\n        intl,\n        advanceConfig,\n        isSOAPEndpoint,\n        onSaveAdvanceConfig,\n        onCancel,\n    } = props;\n    const [advanceConfigObj, setAdvanceConfig] = useState(() => {\n        const config = {};\n        if (isSOAPEndpoint) {\n            config.format = 'soap11';\n            config.optimize = 'SWA';\n        }\n        config.actionDuration = '30000';\n        config.actionSelect = 'fault';\n        config.factor = '';\n        config.retryDelay = '';\n        config.retryErroCode = [];\n        config.retryTimeOut = '';\n        config.suspendDuration = '';\n        config.suspendErrorCode = [];\n        config.suspendMaxDuration = '';\n        return config;\n    });\n\n    /**\n     * The error codes definition.\n     * */\n    const errorCodes = [\n        {\n            key: '101001',\n            value: '101001 : ' + intl.formatMessage({\n                id: 'Apis.Details.Endpoints.AdvancedConfig.AdvanceEndpointConfig.receiver.io.error.receiving',\n                defaultMessage: 'Receiver IO error Receiving',\n            }),\n        },\n        {\n            key: '101500',\n            value: '101500 : ' + intl.formatMessage({\n                id: 'Apis.Details.Endpoints.AdvancedConfig.AdvanceEndpointConfig.sender.io.error.sending',\n                defaultMessage: 'Sender IO Error Sending',\n            }),\n        },\n        {\n            key: '101000',\n            value: '101000 : ' + intl.formatMessage({\n                id: 'Apis.Details.Endpoints.AdvancedConfig.AdvanceEndpointConfig.receiver.io.error.sending',\n                defaultMessage: 'Retriever IO Error Sending',\n            }),\n        },\n        {\n            key: '101501',\n            value: '101501 : ' + intl.formatMessage({\n                id: 'Apis.Details.Endpoints.AdvancedConfig.AdvanceEndpointConfig.sender.io.error.receiving',\n                defaultMessage: 'Sender IO Error Receiving',\n            }),\n        },\n        {\n            key: '101503',\n            value: '101503 : ' + intl.formatMessage({\n                id: 'Apis.Details.Endpoints.AdvancedConfig.AdvanceEndpointConfig.connection.failed',\n                defaultMessage: 'Connection Failed',\n            }),\n        },\n        {\n            key: '101504',\n            value: '101504 : ' + intl.formatMessage({\n                id: 'Apis.Details.Endpoints.AdvancedConfig.AdvanceEndpointConfig.connection.timed.out',\n                defaultMessage: 'Connection Timed Out',\n            }),\n        },\n        {\n            key: '101505',\n            value: '101505 : ' + intl.formatMessage({\n                id: 'Apis.Details.Endpoints.AdvancedConfig.AdvanceEndpointConfig.connection.closed',\n                defaultMessage: 'Connection Closed',\n            }),\n        },\n        {\n            key: '101506',\n            value: '101506 : ' + intl.formatMessage({\n                id: 'Apis.Details.Endpoints.AdvancedConfig.AdvanceEndpointConfig.tpp.protocol.violation',\n                defaultMessage: 'TTP Protocol Violation',\n            }),\n        },\n        {\n            key: '101507',\n            value: '101507 : ' + intl.formatMessage({\n                id: 'Apis.Details.Endpoints.AdvancedConfig.AdvanceEndpointConfig.connect.cancel',\n                defaultMessage: 'Connect Cancel',\n            }),\n        },\n        {\n            key: '101508',\n            value: '101508 : ' + intl.formatMessage({\n                id: 'Apis.Details.Endpoints.AdvancedConfig.AdvanceEndpointConfig.connect.timeout',\n                defaultMessage: 'Connect Timeout',\n            }),\n        },\n        {\n            key: '101509',\n            value: '101509 : ' + intl.formatMessage({\n                id: 'Apis.Details.Endpoints.AdvancedConfig.AdvanceEndpointConfig.send.abort',\n                defaultMessage: 'Send Abort',\n            }),\n        },\n        {\n            key: '101510',\n            value: '101510 : ' + intl.formatMessage({\n                id: 'Apis.Details.Endpoints.AdvancedConfig.AdvanceEndpointConfig.response.processing.failure',\n                defaultMessage: 'Response Processing Failure',\n            }),\n        }];\n\n    /**\n     * Supported action items.\n     * */\n    const actionItems = [\n        {\n            key: 'fault',\n            value: intl.formatMessage({\n                id: 'Apis.Details.Endpoints.AdvancedConfig.AdvanceEndpointConfig.execute.fault.sequence',\n                defaultMessage: 'Execute Fault Sequence',\n            }),\n        },\n        {\n            key: 'discard',\n            value: intl.formatMessage({\n                id: 'Apis.Details.Endpoints.AdvancedConfig.AdvanceEndpointConfig.discard.message',\n                defaultMessage: 'Discard Message',\n            }),\n        },\n    ];\n\n    /**\n     * Message types for the address endpoint type.\n     * */\n    const messageTypes = [\n        { key: 'soap11', value: 'SOAP 1.1' },\n        { key: 'soap12', value: 'SOAP 1.2' },\n        {\n            key: 'POX',\n            value: intl.formatMessage({\n                id: 'Apis.Details.Endpoints.AdvancedConfig.AdvanceEndpointConfig.plain.old.xml',\n                defaultMessage: 'Plain Old XML (POX)',\n            }),\n        },\n        {\n            key: 'REST',\n            value: intl.formatMessage({\n                id: 'Apis.Details.Endpoints.AdvancedConfig.AdvanceEndpointConfig.representational.state.transfer',\n                defaultMessage: 'Representational State Transfer (REST)',\n            }),\n        },\n        {\n            key: 'GET',\n            value: 'GET',\n        },\n        {\n            key: 'leave-as-is',\n            value: intl.formatMessage({\n                id: 'Apis.Details.Endpoints.AdvancedConfig.AdvanceEndpointConfig.leave.as.is',\n                defaultMessage: 'Leave As-Is',\n            }),\n        },\n    ];\n\n    /**\n     * Address endpoint message optimizations.\n     * */\n    const optimizeOptions = [\n        { key: 'SWA', value: 'SWA' },\n        { key: 'MTOM', value: 'MTOM' },\n        {\n            key: 'leave-as-is',\n            value: intl.formatMessage({\n                id: 'Apis.Details.Endpoints.AdvancedConfig.AdvanceEndpointConfig.leave.as.is',\n                defaultMessage: 'Leave As-Is',\n            }),\n        },\n    ];\n\n    useEffect(() => {\n        setAdvanceConfig(() => {\n            if (advanceConfig === {}) {\n                return { ...advanceConfigObj };\n            }\n            return { ...advanceConfigObj, ...advanceConfig };\n        });\n    }, [props]);\n\n    /**\n     * Method to handle the advance endpoint field change. In each change, the advance config object is getting updated.\n     *\n     * @param {any} event The HTML event triggered by the element.\n     * @param {string} field The HTML element that is being changed.\n     * */\n    const handleConfigFieldChange = (event, field) => {\n        const di = { ...advanceConfigObj, [field]: event.target.value };\n        setAdvanceConfig(di);\n    };\n\n    return (\n        <Grid container direction='column' className={classes.configContainer}>\n            {(isSOAPEndpoint) ? (\n                <Grid item container className={classes.configSubContainer}>\n                    <Typography className={classes.subTitle}>\n                        <FormattedMessage\n                            id='Apis.Details.Endpoints.AdvancedConfig.AdvanceEndpointConfig.message.content'\n                            defaultMessage='Message Content'\n                        />\n                    </Typography>\n                    <FormControl className={classes.formControl}>\n                        <InputLabel htmlFor='err-code-select'>\n                            <FormattedMessage\n                                id='Apis.Details.Endpoints.AdvancedConfig.AdvanceEndpointConfig.format.select'\n                                defaultMessage='Format'\n                            />\n                        </InputLabel>\n                        <Select\n                            autoWidth={false}\n                            value={advanceConfigObj.format}\n                            onChange={(event) => handleConfigFieldChange(event, 'format')}\n                            input={<Input id='err-code-select' />}\n                            MenuProps={MenuProps}\n                        >\n                            {messageTypes.map((messageType) => (\n                                <MenuItem key={messageType.key} value={messageType.key}>\n                                    {messageType.value}\n                                </MenuItem>\n                            ))}\n                        </Select>\n                    </FormControl>\n                    <FormControl className={classes.formControl}>\n                        <InputLabel htmlFor='err-code-select'>\n                            <FormattedMessage\n                                id='Apis.Details.Endpoints.AdvancedConfig.AdvanceEndpointConfig.optimize.select'\n                                defaultMessage='Optimize'\n                            />\n                        </InputLabel>\n                        <Select\n                            autoWidth={false}\n                            value={advanceConfigObj.optimize}\n                            onChange={(event) => handleConfigFieldChange(event, 'optimize')}\n                            input={<Input id='err-code-select' />}\n                            MenuProps={MenuProps}\n                        >\n                            {optimizeOptions.map((option) => (\n                                <MenuItem key={option.key} value={option.key}>\n                                    {option.value}\n                                </MenuItem>\n                            ))}\n                        </Select>\n                    </FormControl>\n                    <Divider />\n                </Grid>\n            ) : (<div />)}\n            <Grid item container className={classes.configSubContainer}>\n                <Typography className={classes.subTitle}>\n                    <FormattedMessage id='Endpoint.Suspension.State' defaultMessage='Endpoint Suspension State' />\n                </Typography>\n                <FormControl className={classes.formControl}>\n                    <InputLabel htmlFor='err-code-select'>\n                        <FormattedMessage\n                            id='Apis.Details.Endpoints.AdvancedConfig.AdvanceEndpointConfig.error.code'\n                            defaultMessage='Error Code'\n                        />\n                    </InputLabel>\n                    <Select\n                        multiple\n                        autoWidth={false}\n                        value={advanceConfigObj.suspendErrorCode}\n                        onChange={(event) => handleConfigFieldChange(event, 'suspendErrorCode')}\n                        input={<Input id='err-code-select' />}\n                        MenuProps={MenuProps}\n                        variant='outlined'\n                    >\n                        {errorCodes.map((code) => (\n                            <MenuItem key={code.key} value={code.key}>\n                                {code.value}\n                            </MenuItem>\n                        ))}\n                    </Select>\n                </FormControl>\n                <TextField\n                    className={classes.textField}\n                    id='initial-duration-input'\n                    value={advanceConfigObj.suspendDuration}\n                    onChange={(event) => handleConfigFieldChange(event, 'suspendDuration')}\n                    label={(\n                        <FormattedMessage\n                            id='Apis.Details.Endpoints.AdvancedConfig.AdvanceEndpointConfig.initial.duration.ms'\n                            defaultMessage='Initial Duration (ms)'\n                        />\n                    )}\n                    margin='normal'\n                    type='number'\n                />\n                <TextField\n                    className={classes.textField}\n                    id='max-duration-input'\n                    value={advanceConfigObj.suspendMaxDuration}\n                    onChange={(event) => handleConfigFieldChange(event, 'suspendMaxDuration')}\n                    label={(\n                        <FormattedMessage\n                            id='Apis.Details.Endpoints.AdvancedConfig.AdvanceEndpointConfig.max.duration.ms'\n                            defaultMessage='Max Duration (ms)'\n                        />\n                    )}\n                    margin='normal'\n                    type='number'\n                />\n                <TextField\n                    className={classes.textField}\n                    value={advanceConfigObj.factor}\n                    onChange={(event) => handleConfigFieldChange(event, 'factor')}\n                    id='factor-input'\n                    label={(\n                        <FormattedMessage\n                            id='Apis.Details.Endpoints.AdvancedConfig.AdvanceEndpointConfig.factor'\n                            defaultMessage='Factor'\n                        />\n                    )}\n                    margin='normal'\n                />\n            </Grid>\n            <Divider />\n            <Grid item container className={classes.configSubContainer}>\n                <Typography className={classes.subTitle}>\n                    <FormattedMessage\n                        id='Apis.Details.Endpoints.AdvancedConfig.AdvanceEndpointConfig.endpoint.timeout.state'\n                        defaultMessage='Endpoint Timeout State'\n                    />\n                </Typography>\n                <FormControl className={classes.formControl}>\n                    <InputLabel htmlFor='err-code-select'>\n                        <FormattedMessage\n                            id='Apis.Details.Endpoints.AdvancedConfig.AdvanceEndpointConfig.error.code'\n                            defaultMessage='Error Code'\n                        />\n                    </InputLabel>\n                    <Select\n                        multiple\n                        autoWidth={false}\n                        value={advanceConfigObj.retryErroCode}\n                        onChange={(event) => handleConfigFieldChange(event, 'retryErroCode')}\n                        input={<Input id='err-code-select' />}\n                        MenuProps={MenuProps}\n                    >\n                        {errorCodes.map((code) => (\n                            <MenuItem key={code.key} value={code.key}>\n                                {code.value}\n                            </MenuItem>\n                        ))}\n                    </Select>\n                </FormControl>\n                <TextField\n                    className={classes.textField}\n                    id='retries-input'\n                    value={advanceConfigObj.retryTimeOut}\n                    onChange={(event) => handleConfigFieldChange(event, 'retryTimeOut')}\n                    label={(\n                        <FormattedMessage\n                            id='Apis.Details.Endpoints.AdvancedConfig.AdvanceEndpointConfig.retries.before.suspension'\n                            defaultMessage='Retries Before Suspension'\n                        />\n                    )}\n                    type='number'\n                    margin='normal'\n                />\n                <TextField\n                    className={classes.textField}\n                    id='retry-delay-input'\n                    value={advanceConfigObj.retryDelay}\n                    onChange={(event) => handleConfigFieldChange(event, 'retryDelay')}\n                    label={(\n                        <FormattedMessage\n                            id='Apis.Details.Endpoints.AdvancedConfig.AdvanceEndpointConfig.retry.delay.ms'\n                            defaultMessage='Retry Delay (ms)'\n                        />\n                    )}\n                    type='number'\n                    margin='normal'\n                />\n            </Grid>\n            <Divider />\n            <Grid item container className={classes.configSubContainer}>\n                <Typography className={classes.subTitle}>\n                    <FormattedMessage id='Connection.Timeout' defaultMessage='Connection Timeout' />\n                </Typography>\n                <FormControl className={classes.formControl}>\n                    <InputLabel htmlFor='err-code-select'>\n                        <FormattedMessage\n                            id='Apis.Details.Endpoints.AdvancedConfig.AdvanceEndpointConfig.action'\n                            defaultMessage='Action'\n                        />\n                    </InputLabel>\n                    <Select\n                        autoWidth={false}\n                        value={advanceConfigObj.actionSelect}\n                        onChange={(event) => handleConfigFieldChange(event, 'actionSelect')}\n                        input={<Input id='err-code-select' />}\n                        MenuProps={MenuProps}\n                    >\n                        {actionItems.map((item) => (\n                            <MenuItem key={item.key} value={item.key}>\n                                {item.value}\n                            </MenuItem>\n                        ))}\n                    </Select>\n                </FormControl>\n                <TextField\n                    className={classes.textField}\n                    id='duration-input'\n                    value={advanceConfigObj.actionDuration}\n                    onChange={(event) => handleConfigFieldChange(event, 'actionDuration')}\n                    label={(\n                        <FormattedMessage\n                            id='Apis.Details.Endpoints.AdvancedConfig.AdvanceEndpointConfig.duration.ms'\n                            defaultMessage='Duration (ms)'\n                        />\n                    )}\n                    type='number'\n                    margin='normal'\n                />\n            </Grid>\n            <Grid className={classes.advanceDialogActions}>\n                <Button\n                    onClick={() => onSaveAdvanceConfig(advanceConfigObj)}\n                    color='primary'\n                    autoFocus\n                    disabled={isRestricted(['apim:api_create'], api)}\n                    variant='contained'\n                    style={{ marginRight: '10px' }}\n                >\n                    <FormattedMessage\n                        id='Apis.Details.Endpoints.AdvancedConfig.AdvanceEndpointConfig.config.save.button'\n                        defaultMessage='Save'\n                    />\n                </Button>\n                <Button onClick={onCancel}>\n                    <FormattedMessage\n                        id='Apis.Details.Endpoints.AdvancedConfig.AdvanceEndpointConfig.cancel.button'\n                        defaultMessage='Close'\n                    />\n                </Button>\n            </Grid>\n        </Grid>\n    );\n}\n\nAdvanceEndpointConfig.propTypes = {\n    classes: PropTypes.shape({\n        configContainer: PropTypes.shape({}),\n        configSubContainer: PropTypes.shape({}),\n        subTitle: PropTypes.shape({}),\n        formControl: PropTypes.shape({}),\n\n    }).isRequired,\n    intl: PropTypes.shape({\n        formatMessage: PropTypes.func,\n    }).isRequired,\n    advanceConfig: PropTypes.shape({}).isRequired,\n    isSOAPEndpoint: PropTypes.bool.isRequired,\n    onSaveAdvanceConfig: PropTypes.func.isRequired,\n    onCancel: PropTypes.func.isRequired,\n};\n\nexport default injectIntl(withStyles(styles, { withTheme: true })(AdvanceEndpointConfig));\n","/* eslint-disable react/jsx-no-bind */\n/**\n * Copyright (c)  WSO2 Inc. (http://wso2.com) All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the 'License');\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an 'AS IS' BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport React, { useState } from 'react';\nimport { injectIntl } from 'react-intl';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\nimport EditIcon from '@material-ui/icons/Edit';\nimport SaveIcon from '@material-ui/icons/Save';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableRow from '@material-ui/core/TableRow';\nimport IconButton from '@material-ui/core/IconButton';\n\nconst useStyles = makeStyles(() => ({\n    link: {\n        cursor: 'pointer',\n    },\n}));\n\n/**\n * EditableParameterRow for OAuth Endpoint Security\n * @param {*} props properties\n * @returns {*} EditableParameterRow component\n */\nfunction EditableParameterRow(props) {\n    const {\n        oldName, oldValue,\n        handleUpdateList, handleDelete,\n        intl, isRestricted, api,\n    } = props;\n    const [newName, setName] = useState(oldName);\n    const [newValue, setValue] = useState(oldValue);\n    const [editMode, setEditMode] = useState(false);\n\n    /**\n     * Set edit mode\n     */\n    const updateEditMode = () => {\n        setEditMode(!editMode);\n    };\n\n    /**\n     * Update name field\n     * @param {*} event value entered for name field\n     */\n    const handleKeyChange = (event) => {\n        const { value } = event.target;\n        setName(value);\n    };\n\n    /**\n     * Update value field\n     * @param {*} event value entered for the value field\n     */\n    const handleValueChange = (event) => {\n        const { value } = event.target;\n        setValue(value);\n    };\n\n    /**\n     * Validate if the field is empty\n     * @param {*} itemValue value of the field\n     * @returns {*} boolean value\n     */\n    const validateEmpty = (itemValue) => {\n        if (itemValue === null) {\n            return false;\n        } else if (itemValue === '') {\n            return true;\n        } else {\n            return false;\n        }\n    };\n\n    /**\n     * Save the updated values in the custom parameters object\n     */\n    const saveRow = () => {\n        const oldRow = { oldName, oldValue };\n        const newRow = { newName: newName || oldName, newValue: newValue || oldValue };\n        handleUpdateList(oldRow, newRow);\n        setEditMode(false);\n    };\n\n    /**\n     * Delete name-value pair in the custom parameters object\n     */\n    const deleteRow = () => {\n        handleDelete(oldName);\n    };\n\n    /**\n     * Keyboard event listener to save the name-value pair on Enter\n     * @param {*} e event containing the key that was pressed\n     */\n    const handleKeyDown = (e) => {\n        if (e.key === 'Enter') {\n            saveRow();\n        }\n    };\n\n    // Styles definition\n    const classes = useStyles();\n\n    return (\n        <TableRow>\n            {editMode ? (\n                <TableCell>\n                    <TextField\n                        fullWidth\n                        required\n                        id='outlined-required'\n                        label={intl.formatMessage({\n                            id: 'Apis.Details.Endpoints.GeneralConfiguration.EditableParameterRow.Parameter.Name',\n                            defaultMessage: 'Parameter Name',\n                        })}\n                        margin='normal'\n                        variant='outlined'\n                        className={classes.addProperty}\n                        value={newName}\n                        onChange={handleKeyChange}\n                        onKeyDown={handleKeyDown}\n                        error={validateEmpty(newName)}\n                    />\n                </TableCell>\n            ) : (\n                <TableCell>{oldName}</TableCell>\n            )}\n            {editMode ? (\n                <TableCell>\n                    <TextField\n                        fullWidth\n                        required\n                        id='outlined-required'\n                        label={intl.formatMessage({\n                            id: 'Apis.Details.Endpoints.GeneralConfiguration.EditableParameterRow.Parameter.Value',\n                            defaultMessage: 'Parameter Value',\n                        })}\n                        margin='normal'\n                        variant='outlined'\n                        className={classes.addProperty}\n                        value={newValue}\n                        onChange={handleValueChange}\n                        onKeyDown={handleKeyDown}\n                        error={validateEmpty(newValue)}\n                    />\n                </TableCell>\n            ) : (\n                <TableCell>{oldValue}</TableCell>\n            )}\n            <TableCell align='right'>\n                {editMode ? (\n                    <>\n                        <IconButton\n                            className={classes.link}\n                            aria-label='save'\n                            onClick={saveRow}\n                            onKeyDown={() => {}}\n                            disabled={validateEmpty(newName) || validateEmpty(newValue)}\n                            color='inherit'\n                        >\n                            <SaveIcon className={classes.buttonIcon} />\n                        </IconButton>\n                    </>\n                ) : (\n                    <IconButton\n                        className={classes.link}\n                        aria-label='edit'\n                        onClick={updateEditMode}\n                        onKeyDown={() => {}}\n                        color='inherit'\n                        disabled={isRestricted(['apim:api_create', 'apim:api_publish'], api)}\n                    >\n                        <EditIcon className={classes.buttonIcon} />\n                    </IconButton>\n                )}\n                <IconButton\n                    className={classes.link}\n                    aria-label='remove'\n                    onClick={deleteRow}\n                    onKeyDown={() => {}}\n                    color='inherit'\n                    disabled={isRestricted(['apim:api_create', 'apim:api_publish'], api)}\n                >\n                    <DeleteForeverIcon className={classes.buttonIcon} />\n                </IconButton>\n            </TableCell>\n        </TableRow>\n    );\n}\n\nEditableParameterRow.propTypes = {\n    oldName: PropTypes.string.isRequired,\n    oldValue: PropTypes.string.isRequired,\n    classes: PropTypes.shape({}).isRequired,\n    handleUpdateList: PropTypes.func.isRequired,\n    handleDelete: PropTypes.func.isRequired,\n};\n\nexport default injectIntl(EditableParameterRow);\n","/**\n * Copyright (c)  WSO2 Inc. (http://wso2.com) All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the 'License');\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an 'AS IS' BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React, { useState, useEffect, useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n    Grid, TextField, MenuItem, InputAdornment,\n    Icon,\n    ListItem,\n    ListItemAvatar,\n    ListItemText,\n} from '@material-ui/core';\nimport { RemoveRedEye } from '@material-ui/icons';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport { withStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport Button from '@material-ui/core/Button';\nimport AddCircle from '@material-ui/icons/AddCircle';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableRow from '@material-ui/core/TableRow';\nimport isEmpty from 'lodash.isempty';\nimport { isRestricted } from 'AppData/AuthManager';\nimport APIContext from 'AppComponents/Apis/Details/components/ApiContext';\nimport APIValidation from 'AppData/APIValidation';\nimport Alert from 'AppComponents/Shared/Alert';\nimport EditableParameterRow from './EditableParameterRow';\n\nconst styles = () => ({\n    FormControl: {\n        padding: 0,\n        width: '100%',\n    },\n    radioWrapper: {\n        display: 'flex',\n        flexDirection: 'row',\n    },\n    addParameter: {\n        marginRight: '16px',\n    },\n    marginRight: {\n        marginRight: '8px',\n    },\n    buttonIcon: {\n        marginRight: '16px',\n    },\n    button: {\n        marginTop: '5px',\n    },\n    listItem: {\n        marginTop: '25px',\n    },\n    eye: {\n        cursor: 'pointer',\n    },\n});\n\n/**\n * The base component for advanced endpoint configurations.\n * @param {any} props The props that are being passed\n * @returns {any} The html representation of the component.\n */\nfunction EndpointSecurity(props) {\n    const { api } = useContext(APIContext);\n    const {\n        intl, securityInfo, onChangeEndpointAuth, classes, isProduction,\n        saveEndpointSecurityConfig,\n        closeEndpointSecurityConfig,\n    } = props;\n    const [endpointSecurityInfo, setEndpointSecurityInfo] = useState({\n        type: '',\n        username: '',\n        password: '',\n        grantType: '',\n        tokenUrl: '',\n        clientId: '',\n        clientSecret: '',\n        customParameters: {},\n    });\n    const [securityValidity, setSecurityValidity] = useState();\n\n    const [showAddParameter, setShowAddParameter] = useState(false);\n    const [clientSecretIsMasked, setClientSecretIsMasked] = useState(true);\n    // Implementation of useState variables for parameter name and value\n    const [parameterName, setParameterName] = useState(null);\n    const [parameterValue, setParameterValue] = useState(null);\n    const endpointType = isProduction ? 'production' : 'sandbox';\n    const [isUsernameUpdated, setIsUsernameUpdated] = useState(false);\n    const [isPasswordUpdated, setIsPasswordUpdated] = useState(false);\n    const iff = (condition, then, otherwise) => (condition ? then : otherwise);\n\n    const authTypes = [\n        {\n            key: 'NONE',\n            value: intl.formatMessage({\n                id: 'Apis.Details.Endpoints.GeneralConfiguration.EndpointSecurity.none',\n                defaultMessage: 'None',\n            }),\n        },\n        {\n            key: 'BASIC',\n            value: intl.formatMessage({\n                id: 'Apis.Details.Endpoints.GeneralConfiguration.EndpointSecurity.basic',\n                defaultMessage: 'Basic Auth',\n            }),\n        },\n        {\n            key: 'DIGEST',\n            value: intl.formatMessage({\n                id: 'Apis.Details.Endpoints.GeneralConfiguration.EndpointSecurity.digest.auth',\n                defaultMessage: 'Digest Auth',\n            }),\n        },\n        {\n            key: 'OAUTH',\n            value: intl.formatMessage({\n                id: 'Apis.Details.Endpoints.GeneralConfiguration.EndpointSecurity.oauth',\n                defaultMessage: 'OAuth 2.0',\n            }),\n        },\n    ];\n    const grantTypes = [\n        {\n            key: 'CLIENT_CREDENTIALS',\n            value: intl.formatMessage({\n                id: 'Apis.Details.Endpoints.GeneralConfiguration.EndpointSecurity.oauth.grant.type.client',\n                defaultMessage: 'Client Credentials',\n            }),\n        },\n        {\n            key: 'PASSWORD',\n            value: intl.formatMessage({\n                id: 'Apis.Details.Endpoints.GeneralConfiguration.EndpointSecurity.oauth.grant.type.password',\n                defaultMessage: 'Resource Owner Password',\n            }),\n        },\n    ];\n    useEffect(() => {\n        let tmpSecurity = {};\n        if (securityInfo !== null) {\n            tmpSecurity = { ...securityInfo };\n            const {\n                type, username, password, grantType, tokenUrl, clientId, clientSecret, customParameters,\n            } = securityInfo;\n            tmpSecurity.type = type === null ? 'NONE' : type;\n            tmpSecurity.username = username;\n            tmpSecurity.password = password === '' ? '**********' : password;\n            tmpSecurity.grantType = grantType;\n            tmpSecurity.tokenUrl = tokenUrl;\n            tmpSecurity.clientId = clientId === '' ? '********' : clientId;\n            tmpSecurity.clientSecret = clientSecret === '' ? '********' : clientSecret;\n            tmpSecurity.customParameters = customParameters;\n        }\n        setEndpointSecurityInfo(tmpSecurity);\n    }, [props]);\n\n    /**\n     * Validating whether token url is in a proper format\n     * @param {*} value value of the field\n     * @returns {*} boolean value\n     */\n    const validateTokenUrl = (value) => {\n        const state = APIValidation.url.required().validate(value).error;\n        if (state === null) {\n            return true;\n        } else {\n            return false;\n        }\n    };\n\n    /**\n     * Validate Security Info properties\n     * @param {*} field value of the field\n     */\n    const validateAndUpdateSecurityInfo = (field) => {\n        if (!endpointSecurityInfo[field]) {\n            setSecurityValidity({ ...securityValidity, [field]: false });\n        } else {\n            let validity = true;\n            if (field === 'tokenUrl') {\n                validity = validateTokenUrl(endpointSecurityInfo[field]);\n            }\n            setSecurityValidity({ ...securityValidity, [field]: validity });\n        }\n        const type = isProduction ? 'production' : 'sandbox';\n        onChangeEndpointAuth(endpointSecurityInfo, type);\n    };\n\n    /**\n     * Show or hide the Add Parameter component\n     */\n    const toggleAddParameter = () => {\n        setShowAddParameter(!showAddParameter);\n    };\n\n    /**\n     * Show or hide the Client Secret\n     */\n    const toggleClientSecretMask = () => {\n        setClientSecretIsMasked(!clientSecretIsMasked);\n    };\n\n    /**\n     * Set the custom parameter name or value property\n     * @param {*} name name of the field edited\n     * @returns {*} fills the parameter name or parameter value states\n     */\n    const handleParameterChange = (name) => (event) => {\n        const { value } = event.target;\n        if (name === 'parameterName') {\n            setParameterName(value);\n        } else if (name === 'parameterValue') {\n            setParameterValue(value);\n        }\n    };\n\n    /**\n     * Check if the field is empty or not\n     * @param {*} itemValue value of the field\n     * @returns {*} boolean value\n     */\n    const validateEmpty = (itemValue) => {\n        if (itemValue === null) {\n            return false;\n        } else if (itemValue === '') {\n            return true;\n        } else {\n            return false;\n        }\n    };\n\n    /**\n     * Add new custom parameter\n     */\n    const handleAddToList = () => {\n        const customParametersCopy = endpointSecurityInfo.customParameters;\n\n        if (customParametersCopy !== null\n            && Object.prototype.hasOwnProperty.call(customParametersCopy, parameterName)) {\n            Alert.warning('Parameter name: ' + parameterName + ' already exists');\n        } else {\n            customParametersCopy[parameterName] = parameterValue;\n            setParameterName(null);\n            setParameterValue(null);\n        }\n        setEndpointSecurityInfo({ ...endpointSecurityInfo, customParameters: customParametersCopy });\n        onChangeEndpointAuth(endpointSecurityInfo, endpointType);\n    };\n\n    /**\n     * Update existing custom parameter name-value pair\n     * @param {*} oldRow previous name-value pair\n     * @param {*} newRow new name-value pair\n     */\n    const handleUpdateList = (oldRow, newRow) => {\n        const customParametersCopy = endpointSecurityInfo.customParameters;\n        const { oldName, oldValue } = oldRow;\n        const { newName, newValue } = newRow;\n        if (customParametersCopy !== null\n            && Object.prototype.hasOwnProperty.call(customParametersCopy, newName) && oldName === newName) {\n            // Only the value is updated\n            if (newValue && oldValue !== newValue) {\n                customParametersCopy[oldName] = newValue;\n            }\n        } else {\n            delete customParametersCopy[oldName];\n            customParametersCopy[newName] = newValue;\n        }\n        setEndpointSecurityInfo({ ...endpointSecurityInfo, customParameters: customParametersCopy });\n        onChangeEndpointAuth(endpointSecurityInfo, endpointType);\n    };\n\n    /**\n     * Delete existing custom parameter name-value pair\n     * @param {*} oldName name property of the name-value pair to be removed\n     */\n    const handleDelete = (oldName) => {\n        const customParametersCopy = endpointSecurityInfo.customParameters;\n        if (customParametersCopy !== null && Object.prototype.hasOwnProperty.call(customParametersCopy, oldName)) {\n            delete customParametersCopy[oldName];\n        }\n        setEndpointSecurityInfo({ ...endpointSecurityInfo, customParameters: customParametersCopy });\n        onChangeEndpointAuth(endpointSecurityInfo, endpointType);\n    };\n\n    /**\n     * Keyboard shortcut to execute adding custom parameters when pressing the Enter key\n     * @param {*} event event containing the key that was pressed\n     */\n    const handleKeyDown = (event) => {\n        if (event.key === 'Enter') {\n            handleAddToList();\n        }\n    };\n\n    /**\n     * Render the custom parameters component\n     * @returns {*} list of items added\n     */\n    const renderCustomParameters = () => {\n        const items = [];\n        for (const name in endpointSecurityInfo.customParameters) {\n            if (Object.prototype.hasOwnProperty.call(endpointSecurityInfo.customParameters, name)) {\n                items.push(<EditableParameterRow\n                    oldName={name}\n                    oldValue={endpointSecurityInfo.customParameters[name]}\n                    handleUpdateList={handleUpdateList}\n                    handleDelete={handleDelete}\n                    customParameters={endpointSecurityInfo.customParameters}\n                    {...props}\n                    isRestricted={isRestricted}\n                    api={api}\n                />);\n            }\n        }\n        return items;\n    };\n\n    return (\n        <Grid container direction='row' spacing={2}>\n            <Grid item xs={6}>\n                <TextField\n                    disabled={isRestricted(['apim:api_create'], api)}\n                    fullWidth\n                    select\n                    value={endpointSecurityInfo && endpointSecurityInfo.type}\n                    variant='outlined'\n                    onChange={(event) => {\n                        setEndpointSecurityInfo({\n                            ...endpointSecurityInfo,\n                            type: event.target.value,\n                        });\n                    }}\n                    inputProps={{\n                        name: 'key',\n                        id: 'auth-type-select',\n                    }}\n                    onBlur={() => validateAndUpdateSecurityInfo(isProduction)}\n                >\n                    {authTypes.map((type) => (\n                        <MenuItem value={type.key}>{type.value}</MenuItem>\n                    ))}\n                </TextField>\n            </Grid>\n            <Grid item xs={6} />\n\n            {(endpointSecurityInfo.type === 'OAUTH')\n                && (\n                    <>\n                        <Grid item xs={6}>\n                            <TextField\n                                disabled={isRestricted(['apim:api_create'], api)}\n                                required\n                                fullWidth\n                                select\n                                label={(\n                                    <FormattedMessage\n                                        id={'Apis.Details.Endpoints.GeneralConfiguration'\n                                        + '.EndpointSecurity.grant.type.input'}\n                                        defaultMessage='Grant Type'\n                                    />\n                                )}\n                                variant='outlined'\n                                onChange={(event) => setEndpointSecurityInfo(\n                                    { ...endpointSecurityInfo, grantType: event.target.value },\n                                )}\n                                value={endpointSecurityInfo.grantType}\n                                inputProps={{\n                                    name: 'key',\n                                    id: 'grant-type-select',\n                                }}\n                                onBlur={() => validateAndUpdateSecurityInfo('grantType')}\n                            >\n                                {grantTypes.map((type) => (\n                                    <MenuItem value={type.key}>{type.value}</MenuItem>\n                                ))}\n                            </TextField>\n                        </Grid>\n\n\n                        {(endpointSecurityInfo.grantType === 'CLIENT_CREDENTIALS'\n                        || endpointSecurityInfo.grantType === 'PASSWORD') && (\n                            <>\n                                <Grid item xs={6}>\n                                    <TextField\n                                        disabled={isRestricted(['apim:api_create'], api)}\n                                        required\n                                        fullWidth\n                                        error={securityValidity && securityValidity.tokenUrl === false}\n                                        helperText={\n                                            securityValidity && securityValidity.tokenUrl === false ? (\n                                                <FormattedMessage\n                                                    id={'Apis.Details.Endpoints.GeneralConfiguration'\n                                            + '.EndpointSecurity.no.tokenUrl.error'}\n                                                    defaultMessage={'Token URL should not be empty'\n                                                    + ' or formatted incorrectly'}\n                                                />\n                                            ) : (\n                                                <FormattedMessage\n                                                    id={'Apis.Details.Endpoints.GeneralConfiguration.'\n                                            + 'EndpointSecurity.tokenUrl.message'}\n                                                    defaultMessage='Enter Token URL'\n                                                />\n                                            )\n                                        }\n                                        variant='outlined'\n                                        id='auth-tokenUrl'\n                                        label={(\n                                            <FormattedMessage\n                                                id={'Apis.Details.Endpoints.GeneralConfiguration.'\n                                                + 'EndpointSecurity.token.url.input'}\n                                                defaultMessage='Token URL'\n                                            />\n                                        )}\n                                        onChange={(event) => setEndpointSecurityInfo(\n                                            { ...endpointSecurityInfo, tokenUrl: event.target.value },\n                                        )}\n                                        value={endpointSecurityInfo.tokenUrl}\n                                        onBlur={() => validateAndUpdateSecurityInfo('tokenUrl')}\n                                    />\n                                </Grid>\n\n                                <Grid item xs={6}>\n                                    <TextField\n                                        disabled={isRestricted(['apim:api_create'], api)}\n                                        required\n                                        fullWidth\n                                        error={securityValidity && securityValidity.clientId === false}\n                                        helperText={\n                                            securityValidity && securityValidity.clientId === false ? (\n                                                <FormattedMessage\n                                                    id={'Apis.Details.Endpoints.GeneralConfiguration.'\n                                            + 'EndpointSecurity.no.clientId.error'}\n                                                    defaultMessage='Client ID should not be empty'\n                                                />\n                                            ) : (\n                                                <FormattedMessage\n                                                    id={'Apis.Details.Endpoints.GeneralConfiguration.'\n                                                    + 'EndpointSecurity.clientId.message'}\n                                                    defaultMessage='Enter Client ID'\n                                                />\n                                            )\n                                        }\n                                        variant='outlined'\n                                        id='auth-clientId'\n                                        label={(\n                                            <FormattedMessage\n                                                id={'Apis.Details.Endpoints.GeneralConfiguration.'\n                                                + 'EndpointSecurity.clientId.input'}\n                                                defaultMessage='Client ID'\n                                            />\n                                        )}\n                                        onChange={(event) => setEndpointSecurityInfo(\n                                            { ...endpointSecurityInfo, clientId: event.target.value },\n                                        )}\n                                        value={endpointSecurityInfo.clientId}\n                                        onBlur={() => validateAndUpdateSecurityInfo('clientId')}\n                                        InputProps={{\n                                            autoComplete: 'new-password',\n                                        }}\n                                    />\n                                </Grid>\n\n                                <Grid item xs={6}>\n                                    <TextField\n                                        disabled={isRestricted(['apim:api_create'], api)}\n                                        required\n                                        fullWidth\n                                        error={securityValidity && securityValidity.clientSecret === false}\n                                        helperText={\n                                            securityValidity && securityValidity.clientSecret === false ? (\n                                                <FormattedMessage\n                                                    id={'Apis.Details.Endpoints.GeneralConfiguration.'\n                                            + 'EndpointSecurity.no.clientSecret.error'}\n                                                    defaultMessage='Client Secret should not be empty'\n                                                />\n                                            ) : (\n                                                <FormattedMessage\n                                                    id={'Apis.Details.Endpoints.GeneralConfiguration.'\n                                            + 'EndpointSecurity.clientSecret.message'}\n                                                    defaultMessage='Enter Client Secret'\n                                                />\n                                            )\n                                        }\n                                        variant='outlined'\n                                        id='auth-clientSecret'\n                                        type={clientSecretIsMasked ? 'password' : 'text'}\n                                        label={(\n                                            <FormattedMessage\n                                                id={'Apis.Details.Endpoints.GeneralConfiguration.'\n                                                + 'EndpointSecurity.clientSecret.input'}\n                                                defaultMessage='Client Secret'\n                                            />\n                                        )}\n                                        onChange={(event) => setEndpointSecurityInfo(\n                                            { ...endpointSecurityInfo, clientSecret: event.target.value },\n                                        )}\n                                        value={endpointSecurityInfo.clientSecret}\n                                        onBlur={() => validateAndUpdateSecurityInfo('clientSecret')}\n                                        InputProps={{\n                                            autoComplete: 'new-password',\n                                            endAdornment: (\n                                                <InputAdornment position='end'>\n                                                    <RemoveRedEye\n                                                        className={classes.eye}\n                                                        onClick={toggleClientSecretMask}\n                                                    />\n                                                </InputAdornment>\n                                            ),\n                                        }}\n                                    />\n                                </Grid>\n                            </>\n                        )}\n                    </>\n                )}\n\n            {(endpointSecurityInfo.type === 'BASIC'\n                || endpointSecurityInfo.type === 'DIGEST'\n                || endpointSecurityInfo.grantType === 'PASSWORD') && (\n                <>\n                    <Grid item xs={6}>\n                        <TextField\n                            disabled={isRestricted(['apim:api_create'], api)}\n                            required\n                            fullWidth\n                            error={securityValidity && securityValidity.username === false}\n                            helperText={\n                                securityValidity && securityValidity.username === false ? (\n                                    <FormattedMessage\n                                        id={'Apis.Details.Endpoints.GeneralConfiguration.'\n                                        + 'EndpointSecurity.no.username.error'}\n                                        defaultMessage='Username should not be empty'\n                                    />\n                                ) : (\n                                    <FormattedMessage\n                                        id={'Apis.Details.Endpoints.GeneralConfiguration.'\n                                        + 'EndpointSecurity.username.message'}\n                                        defaultMessage='Enter Username'\n                                    />\n                                )\n                            }\n                            variant='outlined'\n                            id='auth-userName'\n                            label={(\n                                <FormattedMessage\n                                    id='Apis.Details.Endpoints.GeneralConfiguration.EndpointSecurity.user.name.input'\n                                    defaultMessage='Username'\n                                />\n                            )}\n                            onChange={(event) => {\n                                setEndpointSecurityInfo({ ...endpointSecurityInfo, username: event.target.value });\n                                setIsUsernameUpdated(true);\n                            }}\n                            value={endpointSecurityInfo.username}\n                            onBlur={() => validateAndUpdateSecurityInfo('username')}\n                        />\n                    </Grid>\n\n                    <Grid item xs={6}>\n                        <TextField\n                            disabled={isRestricted(['apim:api_create'], api)}\n                            required\n                            fullWidth\n                            error={(securityValidity && securityValidity.password === false)\n                                || (isUsernameUpdated && !isPasswordUpdated)}\n                            helperText={\n                                securityValidity && securityValidity.password === false ? (\n                                    <FormattedMessage\n                                        id={'Apis.Details.Endpoints.GeneralConfiguration.'\n                                        + 'EndpointSecurity.no.password.error'}\n                                        defaultMessage='Password should not be empty'\n                                    />\n                                ) : iff(isUsernameUpdated && !isPasswordUpdated,\n                                    <FormattedMessage\n                                        id={'Apis.Details.Endpoints.GeneralConfiguration.'\n                                        + 'EndpointSecurity.change.password.error'}\n                                        defaultMessage='Password change is required when the username is changed'\n                                    />,\n                                    <FormattedMessage\n                                        id={'Apis.Details.Endpoints.GeneralConfiguration.'\n                                        + 'EndpointSecurity.password.message'}\n                                        defaultMessage='Enter Password'\n                                    />)\n                            }\n                            variant='outlined'\n                            type='password'\n                            id='auth-password'\n                            label={(\n                                <FormattedMessage\n                                    id='Apis.Details.Endpoints.GeneralConfiguration.EndpointSecurity.password.input'\n                                    defaultMessage='Password'\n                                />\n                            )}\n                            value={endpointSecurityInfo.password}\n                            onChange={(event) => {\n                                setEndpointSecurityInfo({ ...endpointSecurityInfo, password: event.target.value });\n                                setIsPasswordUpdated(true);\n                            }}\n                            onBlur={() => validateAndUpdateSecurityInfo('password')}\n                            InputProps={{\n                                autoComplete: 'new-password',\n                            }}\n                        />\n                    </Grid>\n                </>\n            )}\n\n            {endpointSecurityInfo.type === 'OAUTH' && (endpointSecurityInfo.grantType === 'CLIENT_CREDENTIALS'\n            || endpointSecurityInfo.grantType === 'PASSWORD')\n            && (\n                <Grid item xs={12}>\n                    <ListItem\n                        className={classes.listItem}\n                    >\n                        <ListItemAvatar>\n                            <Icon color='primary'>info</Icon>\n                        </ListItemAvatar>\n                        <ListItemText>\n                            <FormattedMessage\n                                id='Apis.Details.Endpoints.GeneralConfiguration.EndpointSecurity.add.new.parameter.info'\n                                defaultMessage={'You can add any additional payload parameters'\n                                + ' required for the endpoint below'}\n                            />\n                        </ListItemText>\n                    </ListItem>\n                    <Button\n                        size='medium'\n                        className={classes.button}\n                        onClick={toggleAddParameter}\n                        disabled={isRestricted(['apim:api_create', 'apim:api_publish'], api)}\n                    >\n                        <AddCircle className={classes.buttonIcon} />\n                        <FormattedMessage\n                            id='Apis.Details.Endpoints.GeneralConfiguration.EndpointSecurity.add.new.parameter'\n                            defaultMessage='Add New Parameter'\n                        />\n                    </Button>\n                </Grid>\n            )}\n\n            <Grid item xs={12} />\n\n            {(endpointSecurityInfo.type === 'OAUTH')\n            && (!isEmpty(endpointSecurityInfo.customParameters) || showAddParameter) && (\n                <Grid item xs={12}>\n                    <Table className={classes.table}>\n                        <TableHead>\n                            <TableRow>\n                                <TableCell>\n                                    <FormattedMessage\n                                        id={'Apis.Details.Endpoints.GeneralConfiguration'\n                                            + '.EndpointSecurity.label.parameter.name'}\n                                        defaultMessage='Parameter Name'\n                                    />\n                                </TableCell>\n                                <TableCell>\n                                    <FormattedMessage\n                                        id={'Apis.Details.Endpoints.GeneralConfiguration'\n                                            + '.EndpointSecurity.label.parameter.value'}\n                                        defaultMessage='Parameter Value'\n                                    />\n                                </TableCell>\n                                <TableCell />\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            {showAddParameter\n                            && (\n                                <>\n                                    <TableRow>\n                                        <TableCell>\n                                            <TextField\n                                                fullWidth\n                                                required\n                                                id='outlined-required'\n                                                label={intl.formatMessage({\n                                                    id: 'Apis.Details.Endpoints.GeneralConfiguration'\n                                                    + '.EndpointSecurity.input.parameter.name',\n                                                    defaultMessage: 'Parameter Name',\n                                                })}\n                                                margin='normal'\n                                                variant='outlined'\n                                                className={classes.addParameter}\n                                                value={parameterName === null ? '' : parameterName}\n                                                onChange={handleParameterChange('parameterName')}\n                                                onKeyDown={handleKeyDown('parameterName')}\n                                                helperText={validateEmpty(parameterName)\n                                                    ? 'Invalid parameter name' : ''}\n                                                error={validateEmpty(parameterName)}\n                                                disabled={isRestricted(\n                                                    ['apim:api_create', 'apim:api_publish'],\n                                                    api,\n                                                )}\n                                            />\n                                        </TableCell>\n                                        <TableCell>\n                                            <TextField\n                                                fullWidth\n                                                required\n                                                id='outlined-required'\n                                                label={intl.formatMessage({\n                                                    id: 'Apis.Details.Endpoints.GeneralConfiguration'\n                                                        + '.EndpointSecurity.input.parameter.value',\n                                                    defaultMessage: 'Parameter Value',\n                                                })}\n                                                margin='normal'\n                                                variant='outlined'\n                                                className={classes.addParameter}\n                                                value={parameterValue === null ? '' : parameterValue}\n                                                onChange={handleParameterChange('parameterValue')}\n                                                onKeyDown={handleKeyDown('parameterValue')}\n                                                error={validateEmpty(parameterValue)}\n                                                disabled={isRestricted(\n                                                    ['apim:api_create', 'apim:api_publish'],\n                                                    api,\n                                                )}\n                                            />\n                                        </TableCell>\n                                        <TableCell align='right'>\n                                            <Button\n                                                variant='contained'\n                                                color='primary'\n                                                disabled={\n                                                    !parameterValue\n                                                            || !parameterName\n                                                            || isRestricted(\n                                                                ['apim:api_create', 'apim:api_publish'], api,\n                                                            )\n                                                }\n                                                onClick={handleAddToList}\n                                                className={classes.marginRight}\n                                            >\n                                                <FormattedMessage\n                                                    id='Apis.Details.Properties.Properties.add'\n                                                    defaultMessage='Add'\n                                                />\n                                            </Button>\n\n                                            <Button onClick={toggleAddParameter}>\n                                                <FormattedMessage\n                                                    id='Apis.Details.Properties.Properties.cancel'\n                                                    defaultMessage='Cancel'\n                                                />\n                                            </Button>\n                                        </TableCell>\n                                    </TableRow>\n                                </>\n                            )}\n                            {((endpointType === 'production') || (endpointType === 'sandbox')) && (\n                                renderCustomParameters()\n                            )}\n                        </TableBody>\n                    </Table>\n                </Grid>\n            )}\n            <Grid className={classes.advanceDialogActions}>\n                <Button\n                    onClick={() => saveEndpointSecurityConfig(endpointSecurityInfo, endpointType)}\n                    color='primary'\n                    autoFocus\n                    variant='contained'\n                    style={{ marginTop: '10px', marginRight: '10px', marginBottom: '10px' }}\n                    disabled={(endpointSecurityInfo.type !== 'NONE'\n                                && endpointSecurityInfo.grantType !== 'CLIENT_CREDENTIALS'\n                                && (!isUsernameUpdated && !isPasswordUpdated))\n                                || (isUsernameUpdated && !isPasswordUpdated)}\n                >\n                    <FormattedMessage\n                        id='Apis.Details.Endpoints.GeneralConfiguration.EndpointSecurityConfig.config.save.button'\n                        defaultMessage='Submit'\n                    />\n                </Button>\n                <Button\n                    onClick={closeEndpointSecurityConfig}\n                    style={{ marginTop: '10px', marginBottom: '10px' }}\n                >\n                    <FormattedMessage\n                        id='Apis.Details.Endpoints.GeneralConfiguration.EndpointSecurityConfig.cancel.button'\n                        defaultMessage='Close'\n                    />\n                </Button>\n            </Grid>\n        </Grid>\n    );\n}\n\nEndpointSecurity.propTypes = {\n    intl: PropTypes.shape({}).isRequired,\n    securityInfo: PropTypes.shape({}).isRequired,\n    onChangeEndpointAuth: PropTypes.func.isRequired,\n};\n\nexport default withStyles(styles)(injectIntl(EndpointSecurity));\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n    Grid,\n    TextField,\n    makeStyles,\n    Typography,\n    Tooltip,\n    RadioGroup,\n    FormControl,\n    FormControlLabel,\n    MenuItem,\n    InputLabel,\n    Select,\n    Radio,\n} from '@material-ui/core';\nimport Icon from '@material-ui/core/Icon';\nimport LaunchIcon from '@material-ui/icons/Launch';\nimport { FormattedMessage } from 'react-intl';\nimport { Link } from 'react-router-dom';\nimport API from 'AppData/api';\nimport Configurations from 'Config';\nimport Banner from 'AppComponents/Shared/Banner';\n\nconst useStyles = makeStyles((theme) => ({\n    typography: {\n        display: 'inline-block',\n    },\n    textField: {\n        marginLeft: theme.spacing(1),\n        marginRight: theme.spacing(1),\n        width: 300,\n    },\n    selectField: {\n        marginLeft: theme.spacing(1),\n        marginRight: theme.spacing(1),\n        width: 300,\n    },\n    helpIcon: {\n        fontSize: 20,\n    },\n    banner: {\n        marginLeft: theme.spacing(1),\n        marginRight: theme.spacing(1),\n        marginTop: theme.spacing(1),\n        marginBottom: theme.spacing(1),\n    },\n}));\n\n/**\n * The credentials component. This component holds the access and secret key pair.\n * @param {any} props The parameters to credentials component.\n * @returns {any} HTML view of the credentials component.\n */\nexport default function Credentials(props) {\n    const {\n        apiId,\n        endpointConfig,\n        endpointsDispatcher,\n    } = props;\n    const classes = useStyles();\n    const [pageError, setPageError] = useState(null);\n    const inputLabel = useRef(null);\n    const handleChange = (event) => {\n        const newEndpointConfig = { ...endpointConfig };\n        newEndpointConfig.access_method = event.target.value;\n        newEndpointConfig.amznAccessKey = '';\n        newEndpointConfig.amznSecretKey = '';\n        newEndpointConfig.amznRegion = '';\n        endpointsDispatcher({ action: 'set_awsCredentials', value: newEndpointConfig });\n        setPageError(null);\n    };\n    const { regions } = Configurations.apis.endpoint.aws;\n    useEffect(() => {\n        API.getAmznResourceNames(apiId)\n            .catch((error) => {\n                setPageError(error.response.body.error);\n            });\n    }, []);\n    return (\n        <>\n            <Typography className={classes.typography}>\n                <FormattedMessage\n                    id={'Apis.Details.Endpoints.EndpointOverview.awslambda'\n                    + '.endpoint.accessMethod'}\n                    defaultMessage='Access Method'\n                />\n            </Typography>\n            <RadioGroup\n                aria-label='accessMethod'\n                name='accessMethod'\n                value={endpointConfig.access_method}\n                onChange={handleChange}\n            >\n                <div>\n                    <FormControlLabel\n                        value='role-supplied'\n                        control={<Radio color='primary' />}\n                        label={\n                            (\n                                <FormattedMessage\n                                    id={'Apis.Details.Endpoints.EndpointOverview.awslambda'\n                                    + '.endpoint.accessMethod.roleSupplied'}\n                                    defaultMessage='Using IAM role-supplied temporary AWS credentials'\n                                />\n                            )\n                        }\n                    />\n                    <Tooltip\n                        title={\n                            (\n                                <FormattedMessage\n                                    id={'Apis.Details.Endpoints.EndpointOverview.awslambda'\n                                    + '.endpoint.tooltip'}\n                                    defaultMessage={'You can and should use an IAM role to manage temporary '\n                                    + 'credentials for applications that run on an EC2 instance'}\n                                />\n                            )\n                        }\n                    >\n                        <Icon className={classes.helpIcon}>help_outline</Icon>\n                    </Tooltip>\n                </div>\n                <div>\n                    <FormControlLabel\n                        value='stored'\n                        control={<Radio color='primary' />}\n                        label={\n                            (\n                                <FormattedMessage\n                                    id={'Apis.Details.Endpoints.EndpointOverview.awslambda'\n                                    + '.endpoint.accessMethod.stored'}\n                                    defaultMessage='Using stored AWS credentials'\n                                />\n                            )\n                        }\n                    />\n                </div>\n            </RadioGroup>\n            <Grid item>\n                <TextField\n                    required\n                    disabled={endpointConfig.access_method === 'role-supplied'}\n                    id='outlined-required'\n                    label={\n                        (\n                            <FormattedMessage\n                                id={'Apis.Details.Endpoints.EndpointOverview.awslambda'\n                                + '.endpoint.accessKey'}\n                                defaultMessage='Access Key'\n                            />\n                        )\n                    }\n                    margin='normal'\n                    variant='outlined'\n                    className={classes.textField}\n                    value={endpointConfig.amznAccessKey}\n                    onChange={(event) => {\n                        const newEndpointConfig = { ...endpointConfig };\n                        newEndpointConfig.amznAccessKey = event.target.value;\n                        endpointsDispatcher({ action: 'set_awsCredentials', value: newEndpointConfig });\n                    }}\n                />\n                <TextField\n                    required\n                    disabled={endpointConfig.access_method === 'role-supplied'}\n                    id='outlined-password-input-required'\n                    label={\n                        (\n                            <FormattedMessage\n                                id={'Apis.Details.Endpoints.EndpointOverview.awslambda'\n                                + '.endpoint.secretKey'}\n                                defaultMessage='Secret Key'\n                            />\n                        )\n                    }\n                    type='password'\n                    margin='normal'\n                    variant='outlined'\n                    className={classes.textField}\n                    value={endpointConfig.amznSecretKey}\n                    onChange={(event) => {\n                        const newEndpointConfig = { ...endpointConfig };\n                        newEndpointConfig.amznSecretKey = event.target.value;\n                        endpointsDispatcher({ action: 'set_awsCredentials', value: newEndpointConfig });\n                    }}\n                />\n                <FormControl\n                    required\n                    margin='normal'\n                    variant='outlined'\n                    disabled={endpointConfig.access_method === 'role-supplied'}\n                >\n                    <InputLabel ref={inputLabel}>\n                        <FormattedMessage\n                            id={'Apis.Details.Endpoints.EndpointOverview.awslambda'\n                            + '.endpoint.region'}\n                            defaultMessage='Region'\n                        />\n                    </InputLabel>\n                    <Select\n                        labelId='region-label'\n                        autoWidth={false}\n                        className={classes.selectField}\n                        onChange={(event) => {\n                            const newEndpointConfig = { ...endpointConfig };\n                            newEndpointConfig.amznRegion = event.target.value;\n                            endpointsDispatcher({ action: 'set_awsCredentials', value: newEndpointConfig });\n                        }}\n                        value={endpointConfig.amznRegion}\n                        MenuProps={{\n                            anchorOrigin: {\n                                vertical: 'bottom',\n                                horizontal: 'left',\n                            },\n                            getContentAnchorEl: null,\n                            keepMounted: true,\n                            PaperProps: {\n                                style: {\n                                    maxHeight: 300,\n                                },\n                            },\n                        }}\n                    >\n                        {Object.entries(regions).map(([key, value]) => ((\n                            <MenuItem key={key} value={key}>\n                                {value}\n                            </MenuItem>\n                        )))}\n                    </Select>\n                </FormControl>\n            </Grid>\n            <Grid item>\n                <Link to={`/apis/${apiId}/resources`}>\n                    <Typography style={{ marginLeft: '10px' }} color='primary' display='inline' variant='caption'>\n                        <FormattedMessage\n                            id={'Apis.Details.Endpoints.EndpointOverview.awslambda'\n                            + '.endpoint.linkToResources'}\n                            defaultMessage='Go to Resources to map ARNs'\n                        />\n                        <LaunchIcon style={{ marginLeft: '2px' }} fontSize='small' />\n                    </Typography>\n                </Link>\n            </Grid>\n            {pageError\n                && (\n                    <Grid item className={classes.banner}>\n                        <Banner\n                            disableActions\n                            dense\n                            paperProps={{ elevation: 1 }}\n                            type='warning'\n                            message={pageError}\n                        />\n                    </Grid>\n                )}\n        </>\n    );\n}\n\nCredentials.propTypes = {\n    apiId: PropTypes.shape('').isRequired,\n    endpointConfig: PropTypes.shape({}).isRequired,\n    endpointsDispatcher: PropTypes.func.isRequired,\n};\n","/**\n * Copyright (c)  WSO2 Inc. (http://wso2.com) All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the 'License');\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an 'AS IS' BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React, {\n    useEffect, useState, useCallback,\n} from 'react';\nimport {\n    FormControl,\n    Grid,\n    Paper,\n    Typography,\n    withStyles,\n    Radio,\n    FormControlLabel,\n    Collapse,\n    RadioGroup, Checkbox, Dialog, DialogTitle, DialogContent, IconButton, Button, DialogActions, Icon,\n} from '@material-ui/core';\nimport PropTypes from 'prop-types';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport { isRestricted } from 'AppData/AuthManager';\nimport LaunchIcon from '@material-ui/icons/Launch';\nimport { Progress } from 'AppComponents/Shared';\n\nimport cloneDeep from 'lodash.clonedeep';\nimport InlineMessage from 'AppComponents/Shared/InlineMessage';\nimport InlineEndpoints from 'AppComponents/Apis/Details/Endpoints/Prototype/InlineEndpoints';\nimport {\n    getEndpointTypeProperty,\n    createEndpointConfig,\n    getEndpointTemplate,\n} from './endpointUtils';\nimport GeneralConfiguration from './GeneralConfiguration';\nimport LoadbalanceFailoverConfig from './LoadbalanceFailoverConfig';\nimport GenericEndpoint from './GenericEndpoint';\nimport AdvanceEndpointConfig from './AdvancedConfig/AdvanceEndpointConfig';\nimport EndpointSecurity from './GeneralConfiguration/EndpointSecurity';\nimport Credentials from './AWSLambda/Credentials.jsx';\n\nconst styles = (theme) => ({\n    listing: {\n        margin: theme.spacing(1),\n        padding: theme.spacing(1),\n    },\n    endpointContainer: {\n        paddingLeft: theme.spacing(2),\n        padding: theme.spacing(1),\n    },\n    endpointName: {\n        paddingLeft: theme.spacing(1),\n        fontSize: '1rem',\n        paddingTop: theme.spacing(1),\n        paddingBottom: theme.spacing(1),\n    },\n    endpointTypesWrapper: {\n        padding: theme.spacing(3),\n        marginTop: theme.spacing(2),\n    },\n    sandboxHeading: {\n        display: 'flex',\n        alignItems: 'center',\n    },\n    radioGroup: {\n        display: 'flex',\n        flexDirection: 'row',\n    },\n    endpointsWrapperLeft: {\n        padding: theme.spacing(1),\n        borderRight: '#c4c4c4',\n        borderRightStyle: 'solid',\n        borderRightWidth: 'thin',\n    },\n    endpointsWrapperRight: {\n        padding: theme.spacing(1),\n    },\n    endpointsTypeSelectWrapper: {\n        marginLeft: theme.spacing(2),\n        marginRight: theme.spacing(2),\n        padding: theme.spacing(1),\n        display: 'flex',\n        justifyContent: 'space-between',\n    },\n    endpointTypesSelectWrapper: {\n        display: 'flex',\n    },\n    defaultEndpointWrapper: {\n        paddingLeft: theme.spacing(1),\n        paddingRight: theme.spacing(1),\n        marginRight: theme.spacing(1),\n    },\n    configDialogHeader: {\n        fontWeight: '600',\n    },\n    addLabel: {\n        padding: theme.spacing(2),\n    },\n    buttonIcon: {\n        marginRight: theme.spacing(1),\n    },\n    button: {\n        textTransform: 'none',\n    },\n});\n\nconst endpointTypes = [\n    { key: 'http', value: 'HTTP/REST Endpoint' },\n    { key: 'default', value: 'Dynamic Endpoints' },\n    { key: 'address', value: 'HTTP/SOAP Endpoint' },\n    { key: 'prototyped', value: 'Prototype Endpoint' },\n    { key: 'INLINE', value: 'Prototype Implementation' },\n    { key: 'awslambda', value: 'AWS Lambda' },\n];\n\n/**\n * The endpoint overview component. This component holds the views of endpoint creation and configuration.\n * @param {any} props The props that are being passed to the component.\n * @returns {any} HTML view of the endpoints overview.\n */\nfunction EndpointOverview(props) {\n    const {\n        classes,\n        api,\n        endpointsDispatcher,\n        swaggerDef,\n        updateSwagger,\n        saveAndRedirect,\n    } = props;\n    const { endpointConfig, endpointSecurity } = api;\n    const [endpointType, setEndpointType] = useState(endpointTypes[0]);\n    const [supportedEnpointTypes, setSupportedEndpointType] = useState([]);\n\n    const [epConfig, setEpConfig] = useState(endpointConfig);\n    const [endpointSecurityInfo, setEndpointSecurityInfo] = useState(null);\n    const [advanceConfigOptions, setAdvancedConfigOptions] = useState({\n        open: false,\n        index: 0,\n        type: '',\n        category: '',\n        config: undefined,\n    });\n    const [endpointSecurityConfig, setEndpointSecurityConfig] = useState({\n        open: false,\n        type: '',\n        category: '',\n        config: undefined,\n    });\n    const [endpointCategory, setEndpointCategory] = useState({ sandbox: false, prod: false });\n    const [typeChangeConfirmation, setTypeChangeConfirmation] = useState({ openDialog: false });\n    const [previousEndpointSecurity, setPreviousEndpointSecurity] = useState(null);\n\n    const handleToggleEndpointSecurity = () => {\n        const tmpSecurityInfo = endpointSecurityInfo === null ? {\n            production: {\n                enabled: false,\n                type: null,\n                username: null,\n                password: null,\n                grantType: null,\n                tokenUrl: null,\n                clientId: null,\n                clientSecret: null,\n                customParameters: {},\n            },\n            sandbox: {\n                enabled: false,\n                type: null,\n                username: null,\n                password: null,\n                grantType: null,\n                tokenUrl: null,\n                clientId: null,\n                clientSecret: null,\n                customParameters: {},\n            },\n        } : endpointSecurityInfo;\n        setEndpointSecurityInfo(tmpSecurityInfo);\n    };\n\n    /**\n     * Method to get the type of the endpoint. (HTTP/REST or HTTP/SOAP)\n     * In failover/ loadbalance cases, the endpoint type is presented in the endpoints list. Therefore that property\n     * needs to be extracted separately.\n     *\n     * @param {Object} apiObject  The representative type of the endpoint.\n     * @return {string} The type of the endpoint.\n     * */\n    const getEndpointType = (apiObject) => {\n        const type = apiObject.endpointConfig && apiObject.endpointConfig.endpoint_type;\n        if (apiObject.endpointImplementationType === 'INLINE') {\n            return endpointTypes[4];\n        } else if (apiObject.endpointImplementationType === 'ENDPOINT'\n            && apiObject.endpointConfig.implementation_status === 'prototyped') {\n            return endpointTypes[3];\n        } else if (type === 'http') {\n            return endpointTypes[0];\n        } else if (type === 'default') {\n            return endpointTypes[1];\n        } else if (type === 'address') {\n            return endpointTypes[2];\n        } else if (type === 'awslambda') {\n            return endpointTypes[5];\n        } else {\n            const availableEndpoints = (endpointConfig.production_endpoints && endpointConfig.production_endpoints)\n                || (endpointConfig.sandbox_endpoints && endpointConfig.sandbox_endpoints);\n            // Handle the all endpoints de-select condition... Rollback to http.\n            if (!availableEndpoints) {\n                return endpointTypes[0];\n            }\n            if (Array.isArray(availableEndpoints)) {\n                return availableEndpoints[0].endpoint_type !== undefined\n                    ? endpointTypes[2] : endpointTypes[0];\n            }\n            return availableEndpoints.endpoint_type !== undefined\n                ? endpointTypes[2] : endpointTypes[0];\n        }\n    };\n\n    /**\n     * Method to get the supported endpoint types by api type.\n     *\n     * @param {Object} apiObject  The representative type of the endpoint.\n     * @return {string} The supported endpoint types.\n     * */\n    const getSupportedType = (apiObject) => {\n        const { type } = apiObject;\n        let supportedEndpointTypes = [];\n        if (type === 'GRAPHQL') {\n            supportedEndpointTypes = [\n                { key: 'http', value: 'HTTP/REST Endpoint' },\n                { key: 'default', value: 'Dynamic Endpoints' },\n            ];\n        } else if (type === 'SOAP' || type === 'SOAPTOREST') {\n            supportedEndpointTypes = [\n                { key: 'http', value: 'HTTP/REST Endpoint' },\n                { key: 'address', value: 'HTTP/SOAP Endpoint' },\n                { key: 'default', value: 'Dynamic Endpoints' },\n                { key: 'prototyped', value: 'Prototype Endpoint' },\n            ];\n        } else {\n            supportedEndpointTypes = [\n                { key: 'http', value: 'HTTP/REST Endpoint' },\n                { key: 'address', value: 'HTTP/SOAP Endpoint' },\n                { key: 'default', value: 'Dynamic Endpoints' },\n                { key: 'prototyped', value: 'Prototype Endpoint' },\n                { key: 'INLINE', value: 'Prototype Implementation' },\n                { key: 'awslambda', value: 'AWS Lambda' },\n            ];\n        }\n        return supportedEndpointTypes;\n    };\n\n    useEffect(() => {\n        const supportedTypeLists = getSupportedType(api);\n        const epType = getEndpointType(api);\n        if (epType.key !== 'INLINE') {\n            setEndpointCategory({\n                prod: !!endpointConfig.production_endpoints,\n                sandbox: !!endpointConfig.sandbox_endpoints,\n            });\n        }\n        setSupportedEndpointType(supportedTypeLists);\n        setEpConfig(endpointConfig);\n        setEndpointType(epType);\n        if (endpointConfig.endpoint_security) {\n            setEndpointSecurityInfo(endpointConfig.endpoint_security);\n        } else {\n            setEndpointSecurityInfo(endpointSecurity);\n        }\n        if (endpointSecurity) {\n            setPreviousEndpointSecurity(endpointSecurity);\n        }\n    }, [props]);\n\n    const getEndpoints = (type) => {\n        if (epConfig[type]) {\n            return epConfig[type].length > 0\n                ? epConfig[type][0].url : epConfig[type].url;\n        }\n        return '';\n    };\n\n    const handleOnChangeEndpointCategoryChange = (category) => {\n        let endpointConfigCopy = cloneDeep(endpointConfig);\n        if (category === 'prod') {\n            const endpointProp = 'production_endpoints';\n            if (endpointCategory[category]) {\n                delete endpointConfigCopy[endpointProp];\n                if (endpointConfigCopy.endpointType === 'failover') {\n                    delete endpointConfigCopy.production_failovers;\n                }\n            } else if (endpointConfigCopy.endpointType === 'load_balance') {\n                endpointConfigCopy[endpointProp] = [getEndpointTemplate(endpointType.key)];\n            } else if (endpointConfigCopy.endpointType === 'failover') {\n                endpointConfigCopy[endpointProp] = getEndpointTemplate(endpointType.key);\n                endpointConfigCopy.production_failovers = [];\n            } else {\n                endpointConfigCopy[endpointProp] = getEndpointTemplate(endpointType.key);\n            }\n        } else {\n            const endpointProp = 'sandbox_endpoints';\n            if (endpointCategory[category]) {\n                delete endpointConfigCopy[endpointProp];\n                if (endpointConfigCopy.endpointType === 'failover') {\n                    delete endpointConfigCopy.sandbox_failovers;\n                }\n            } else if (endpointConfigCopy.endpointType === 'load_balance') {\n                endpointConfigCopy[endpointProp] = [getEndpointTemplate(endpointType.key)];\n            } else if (endpointConfigCopy.endpointType === 'failover') {\n                endpointConfigCopy[endpointProp] = getEndpointTemplate(endpointType.key);\n                endpointConfigCopy.sandbox_failovers = [];\n            } else {\n                endpointConfigCopy[endpointProp] = getEndpointTemplate(endpointType.key);\n            }\n        }\n        // Check whether, config has either prod/ sandbox endpoints. If not, reSet the endpoint type to http\n        if (!endpointConfigCopy.production_endpoints && !endpointConfigCopy.sandbox_endpoints) {\n            endpointConfigCopy = createEndpointConfig('http');\n        }\n        endpointsDispatcher({ action: 'select_endpoint_category', value: endpointConfigCopy });\n    };\n\n    /**\n     * Method to modify the endpoint represented by the given parameters.\n     *\n     * If url is null, remove the endpoint from the endpoint config.\n     *\n     * @param {number} index The index of the endpoint in the listing.\n     * @param {string} category The endpoint category. (production/ sand box)\n     * @param {string} url The new endpoint url.\n     * */\n    const editEndpoint = (index, category, url) => {\n        let modifiedEndpoint = null;\n        // Make a copy of the endpoint config.\n        const endpointConfigCopy = cloneDeep(epConfig);\n        /*\n        * If the index > 0, it means that the endpoint is load balance or fail over.\n        * Otherwise it is the default endpoint. (index = 0)\n        * */\n        if (index > 0) {\n            const endpointTypeProperty = getEndpointTypeProperty(endpointConfigCopy.endpoint_type, category);\n            modifiedEndpoint = endpointConfigCopy[endpointTypeProperty];\n            /*\n            * In failover case, the failover endpoints are a separate object. But in endpoint listing, since we\n            *  consider all the endpoints as a single list, to get the real index of the failover endpoint we use\n            *  index - 1.\n            * */\n            if (endpointConfigCopy.endpoint_type === 'failover') {\n                modifiedEndpoint[index - 1].url = url.trim();\n            } else {\n                modifiedEndpoint[index].url = url.trim();\n            }\n            endpointConfigCopy[endpointTypeProperty] = modifiedEndpoint;\n        } else if (url !== '') {\n            modifiedEndpoint = endpointConfigCopy[category];\n\n            /*\n            * In this case, we are editing the default endpoint.\n            * If the endpoint type is load balance, the production_endpoints or the sandbox_endpoint object is an\n            *  array. Otherwise, in failover mode, the default endpoint is an object.\n            *\n            * So, we check whether the endpoints is an array or an object.\n            *\n            * If This is the first time a user creating an endpoint endpoint config object does not have\n            *  production_endpoints or sandbox_endpoints object.\n            * Therefore create new object and add to the endpoint config.\n            * */\n            if (!modifiedEndpoint) {\n                modifiedEndpoint = getEndpointTemplate(endpointConfigCopy.endpoint_type);\n                modifiedEndpoint.url = url.trim();\n            } else if (Array.isArray(modifiedEndpoint)) {\n                if (url === '') {\n                    modifiedEndpoint.splice(0, 1);\n                } else {\n                    modifiedEndpoint[0].url = url.trim();\n                }\n            } else {\n                modifiedEndpoint.url = url.trim();\n            }\n            endpointConfigCopy[category] = modifiedEndpoint;\n        } else {\n            /*\n            * If the url is empty, delete the respective endpoint object.\n            * */\n            delete endpointConfigCopy[category];\n        }\n        endpointsDispatcher({ action: category, value: modifiedEndpoint });\n    };\n\n    const handleEndpointCategorySelect = (event) => {\n        endpointsDispatcher({\n            action: 'endpoint_type',\n            value: { category: event.target.value, endpointType: endpointType.key },\n        });\n    };\n\n    /**\n     * Handles the endpoint type change functionality.\n     *\n     * @param {string} value The selected endpoint type.\n     * */\n    const changeEndpointType = (value) => {\n        setTypeChangeConfirmation({ openDialog: false });\n        const selectedKey = typeChangeConfirmation.type || value;\n        if (selectedKey === 'INLINE') {\n            const tmpConfig = createEndpointConfig('prototyped');\n            endpointsDispatcher({\n                action: 'set_inline',\n                value: {\n                    endpointConfig: tmpConfig,\n                    endpointImplementationType: 'INLINE',\n                },\n            });\n        } else if (selectedKey === 'prototyped') {\n            const tmpConfig = createEndpointConfig(selectedKey);\n            endpointsDispatcher({\n                action: 'set_prototyped',\n                value: {\n                    endpointImplementationType: 'ENDPOINT',\n                    endpointConfig: tmpConfig,\n                },\n            });\n        } else if (selectedKey === 'awslambda') {\n            const generatedEndpointConfig = createEndpointConfig(selectedKey);\n            endpointsDispatcher({\n                action: 'select_endpoint_type',\n                value: {\n                    endpointImplementationType: 'ENDPOINT',\n                    endpointConfig: { ...generatedEndpointConfig },\n                },\n            });\n        } else {\n            const generatedEndpointConfig = createEndpointConfig(selectedKey);\n            endpointsDispatcher({\n                action: 'select_endpoint_type',\n                value: {\n                    endpointImplementationType: 'ENDPOINT',\n                    endpointConfig: { ...generatedEndpointConfig },\n                },\n            });\n        }\n    };\n\n    /**\n     * Handles the endpoint type select event. If endpoint config has existing values, show confirmation dialog.\n     * @param {any} event The select event.\n     * */\n    const handleEndpointTypeSelect = (event) => {\n        // Check whether the endpoint Config has values.\n        if (epConfig.production_endpoints || epConfig.sandbox_endpoints) {\n            // Show confirmation dialog\n            setTypeChangeConfirmation({ type: event.target.value, openDialog: true });\n        } else {\n            changeEndpointType(event.target.value);\n        }\n    };\n\n    /**\n     * Method to get the advance configuration from the selected endpoint.\n     *\n     * @param {number} index The selected endpoint index\n     * @param {string} epType The type of the endpoint. (loadbalance/ failover)\n     * @param {string} category The endpoint category (Production/ sandbox)\n     * @return {object} The advance config object of the endpoint.\n     * */\n    const getAdvanceConfig = (index, epType, category) => {\n        const endpointTypeProperty = getEndpointTypeProperty(epType, category);\n        let advanceConfig = {};\n        if (index > 0) {\n            if (epConfig.endpoint_type === 'failover') {\n                advanceConfig = epConfig[endpointTypeProperty][index - 1].config;\n            } else {\n                advanceConfig = epConfig[endpointTypeProperty][index].config;\n            }\n        } else {\n            const endpointInfo = epConfig[endpointTypeProperty];\n            if (Array.isArray(endpointInfo)) {\n                advanceConfig = endpointInfo[0].config;\n            } else {\n                advanceConfig = endpointInfo.config;\n            }\n        }\n        return advanceConfig;\n    };\n\n    /**\n     * Method to open/ close the advance configuration dialog. This method also sets some information about the\n     * seleted endpoint type/ category and index.\n     *\n     * @param {number} index The index of the selected endpoint.\n     * @param {string} type The endpoint type\n     * @param {string} category The endpoint category.\n     * */\n    const toggleAdvanceConfig = (index, type, category) => {\n        const advanceEPConfig = getAdvanceConfig(index, type, category);\n        setAdvancedConfigOptions(() => {\n            return ({\n                open: !advanceConfigOptions.open,\n                index,\n                type,\n                category,\n                config: advanceEPConfig === undefined ? {} : advanceEPConfig,\n            });\n        });\n    };\n\n    const toggleEndpointSecurityConfig = (type, category) => {\n        handleToggleEndpointSecurity();\n        setEndpointSecurityConfig(() => {\n            return ({\n                open: !endpointSecurityConfig.open,\n                type,\n                category,\n                config: endpointSecurityInfo === undefined ? {} : endpointSecurityInfo,\n            });\n        });\n    };\n\n    /**\n     * Method to handle the endpoint security changes.\n     * @param {string} value The value\n     * @param {string} type The security property that is being modified.\n     * */\n    const handleEndpointSecurityChange = (value, type) => {\n        endpointsDispatcher({\n            action: 'endpointSecurity',\n            value: { ...endpointSecurityInfo, [type]: value },\n        });\n    };\n\n    const saveEndpointSecurityConfig = (endpointSecurityObj, enType) => {\n        endpointsDispatcher({\n            action: 'endpointSecurity',\n            value: {\n                ...endpointSecurityInfo,\n                [enType]: {\n                    ...endpointSecurityInfo[enType],\n                    enabled: endpointSecurityObj.type !== 'NONE'\n                        ? endpointSecurityInfo[enType].enabled = true : endpointSecurityInfo[enType].enabled = false,\n                },\n            },\n        });\n        setEndpointSecurityConfig({ open: false });\n    };\n\n    const closeEndpointSecurityConfig = () => {\n        setEndpointSecurityConfig({ open: false });\n    };\n\n    /**\n     * Method to save the advance configurations.\n     *\n     * @param {object} advanceConfig The advance configuration object.\n     * */\n    const saveAdvanceConfig = (advanceConfig) => {\n        const config = cloneDeep(epConfig);\n        const endpointConfigProperty = getEndpointTypeProperty(\n            advanceConfigOptions.type, advanceConfigOptions.category,\n        );\n        const selectedEndpoints = config[endpointConfigProperty];\n        if (Array.isArray(selectedEndpoints)) {\n            if (advanceConfigOptions.type === 'failover') {\n                selectedEndpoints[advanceConfigOptions.index - 1].config = advanceConfig;\n            } else {\n                selectedEndpoints[advanceConfigOptions.index].config = advanceConfig;\n            }\n        } else {\n            selectedEndpoints.config = advanceConfig;\n        }\n        setAdvancedConfigOptions({ open: false });\n        endpointsDispatcher({\n            action: 'set_advance_config',\n            value: { ...config, [endpointConfigProperty]: selectedEndpoints },\n        });\n    };\n\n    /**\n     * Method to close the advance configuration dialog box.\n     * */\n    const closeAdvanceConfig = () => {\n        setAdvancedConfigOptions({ open: false });\n    };\n\n    /**\n     * Method to update the resource paths object in the swagger.\n     * @param {any} paths The updated paths object.\n     * */\n    const updatePaths = useCallback(\n        (paths) => {\n            updateSwagger({ ...swaggerDef, paths });\n        },\n        [swaggerDef],\n    );\n\n    const iff = (condition, then, otherwise) => (condition ? then : otherwise);\n\n    /**\n     *\n     *\n     * @param {*} event\n     */\n    function epCategoryOnChangeHandler(event) {\n        handleOnChangeEndpointCategoryChange('prod', event);\n    }\n\n    return (\n        <div className={classes.overviewWrapper}>\n            <Grid container spacing={2}>\n                <Grid item xs={12}>\n                    {api.type === 'WS' ? <div /> : (\n                        <FormControl component='fieldset' className={classes.formControl}>\n                            <RadioGroup\n                                aria-label='EndpointType'\n                                name='endpointType'\n                                className={classes.radioGroup}\n                                value={endpointType.key}\n                                onChange={handleEndpointTypeSelect}\n                            >\n                                {supportedEnpointTypes.map((endpoint) => {\n                                    if (api.lifeCycleStatus === 'CREATED') {\n                                        return (\n                                            <FormControlLabel\n                                                value={endpoint.key}\n                                                control={(\n                                                    <Radio\n                                                        disabled={(isRestricted(['apim:api_create'], api))}\n                                                        color='primary'\n                                                    />\n                                                )}\n                                                label={endpoint.value}\n                                            />\n                                        );\n                                    } else if (api.lifeCycleStatus === 'PROTOTYPED') {\n                                        if (endpoint.key === 'prototyped' || endpoint.key === 'INLINE') {\n                                            return (\n                                                <FormControlLabel\n                                                    value={endpoint.key}\n                                                    control={(\n                                                        <Radio\n                                                            disabled={(isRestricted(['apim:api_create'], api))}\n                                                            color='primary'\n                                                        />\n                                                    )}\n                                                    label={endpoint.value}\n                                                />\n                                            );\n                                        }\n                                    } else if (endpoint.key !== 'prototyped' && endpoint.key !== 'INLINE') {\n                                        return (\n                                            <FormControlLabel\n                                                value={endpoint.key}\n                                                control={(\n                                                    <Radio\n                                                        disabled={(isRestricted(['apim:api_create'], api))}\n                                                        color='primary'\n                                                    />\n                                                )}\n                                                label={endpoint.value}\n                                            />\n                                        );\n                                    }\n                                    return <div />;\n                                })}\n                            </RadioGroup>\n                        </FormControl>\n                    )}\n                </Grid>\n                <Grid item xs={12}>\n                    {endpointType.key === 'INLINE' ? iff(Object.keys(swaggerDef.paths).length !== 0,\n                        <InlineEndpoints paths={swaggerDef.paths} updatePaths={updatePaths} />, <Progress />)\n                        : (\n                            <Paper className={classes.endpointContainer}>\n                                {endpointType.key === 'awslambda'\n                                    ? (\n                                        <Credentials\n                                            apiId={api.id}\n                                            endpointConfig={endpointConfig}\n                                            endpointsDispatcher={endpointsDispatcher}\n                                        />\n                                    )\n                                    : (\n                                        <>\n                                            {endpointType.key === 'prototyped'\n                                                ? (\n                                                    <Typography>\n                                                        <FormattedMessage\n                                                            id={'Apis.Details.Endpoints.'\n                                                                + 'EndpointOverview.prototype.endpoint'\n                                                                + '.prototype.label'}\n                                                            defaultMessage='Prototype Endpoint'\n                                                        />\n                                                    </Typography>\n                                                )\n                                                : (\n                                                    <FormControlLabel\n                                                        control={(\n                                                            <Checkbox\n                                                                checked={endpointCategory.prod}\n                                                                value='prod'\n                                                                color='primary'\n                                                                onChange={epCategoryOnChangeHandler}\n                                                                inputProps={{ 'aria-label': 'Production Endpoint' }}\n                                                            />\n                                                        )}\n                                                        label={(\n                                                            <Typography>\n                                                                <FormattedMessage\n                                                                    id={'Apis.Details.'\n                                                                        + 'Endpoints.EndpointOverview'\n                                                                        + '.production.endpoint.production.label'}\n                                                                    defaultMessage='Production Endpoint'\n                                                                />\n                                                            </Typography>\n                                                        )}\n                                                    />\n                                                )}\n                                            <Collapse in={endpointCategory.prod}>\n                                                {endpointType.key === 'default'\n                                                    ? (\n\n                                                        <InlineMessage>\n                                                            <div className={classes.contentWrapper}>\n                                                                <Typography component='p' className={classes.content}>\n                                                                    <FormattedMessage\n                                                                        id={'Apis.Details.Endpoints.EndpointOverview'\n                                                                            + '.upload.mediation.message'}\n                                                                        defaultMessage={\n                                                                            'Please upload a mediation'\n                                                                            + ' sequence file to'\n                                                                            + ' Message Mediation Policies,'\n                                                                            + ' which sets the endpoints.'\n                                                                        }\n                                                                    />\n                                                                    <IconButton\n                                                                        onClick={saveAndRedirect}\n                                                                    >\n                                                                        <LaunchIcon\n                                                                            style={{ marginLeft: '2px' }}\n                                                                            fontSize='small'\n                                                                            color='primary'\n                                                                        />\n                                                                    </IconButton>\n                                                                </Typography>\n                                                            </div>\n                                                            <Button\n                                                                className={classes.button}\n                                                                aria-label='Settings'\n                                                                onClick={() => toggleAdvanceConfig(\n                                                                    0, '', 'production_endpoints',\n                                                                )}\n                                                                disabled={\n                                                                    (isRestricted(\n                                                                        ['apim:api_create'], api,\n                                                                    )\n                                                                    )\n                                                                }\n                                                                variant='outlined'\n                                                            >\n                                                                <Icon\n                                                                    className={classes.buttonIcon}\n                                                                >\n                                                                    settings\n                                                                </Icon>\n                                                                <Typography>\n                                                                    <FormattedMessage\n                                                                        id={'Apis.Details.Endpoints.EndpointOverview'\n                                                                            + '.advance.endpoint.configuration'}\n                                                                        defaultMessage='Advanced Configurations'\n                                                                    />\n                                                                </Typography>\n                                                            </Button>\n                                                            <Button\n                                                                className={classes.button}\n                                                                aria-label='Settings'\n                                                                onClick={() => toggleEndpointSecurityConfig(\n                                                                    '', 'production',\n                                                                )}\n                                                                disabled={\n                                                                    (isRestricted(\n                                                                        ['apim:api_create'], api,\n                                                                    )\n                                                                    )\n                                                                }\n                                                                variant='outlined'\n                                                            >\n                                                                <Icon\n                                                                    className={classes.buttonIcon}\n                                                                >\n                                                                    security\n                                                                </Icon>\n                                                                <Typography>\n                                                                    <FormattedMessage\n                                                                        id={'Apis.Details.Endpoints.EndpointOverview'\n                                                                            + '.endpoint.security.configuration'}\n                                                                        defaultMessage={'Endpoint '\n                                                                        + 'Security Configurations'}\n                                                                    />\n                                                                </Typography>\n                                                            </Button>\n                                                        </InlineMessage>\n                                                    )\n                                                    : (\n                                                        <GenericEndpoint\n                                                            autoFocus\n                                                            name={endpointType.key === 'prototyped'\n                                                                ? (\n                                                                    <FormattedMessage\n                                                                        id={'Apis.Details.Endpoints.'\n                                                                            + 'EndpointOverview.prototype'\n                                                                            + '.endpoint.prototype.header'}\n                                                                        defaultMessage='Prototype Endpoint'\n                                                                    />\n                                                                ) : (\n                                                                    <FormattedMessage\n                                                                        id={'Apis.Details.Endpoints.'\n                                                                            + 'EndpointOverview.production'\n                                                                            + '.endpoint.production.header'}\n                                                                        defaultMessage='Production Endpoint'\n                                                                    />\n                                                                )}\n                                                            id='primaryEndpoint'\n                                                            className={classes.defaultEndpointWrapper}\n                                                            endpointURL={getEndpoints('production_endpoints')}\n                                                            type=''\n                                                            index={0}\n                                                            category='production_endpoints'\n                                                            editEndpoint={editEndpoint}\n                                                            setAdvancedConfigOpen={toggleAdvanceConfig}\n                                                            esCategory='production'\n                                                            setESConfigOpen={toggleEndpointSecurityConfig}\n                                                            apiId={api.id}\n                                                        />\n                                                    )}\n                                            </Collapse>\n                                            {endpointType.key === 'prototyped' ? <div />\n                                                : (\n                                                    <div>\n                                                        <FormControlLabel\n                                                            control={(\n                                                                <Checkbox\n                                                                    checked={endpointCategory.sandbox}\n                                                                    value='sandbox'\n                                                                    name=''\n                                                                    color='secondary'\n                                                                    inputProps={{ 'aria-label': 'Sandbox Endpoint' }}\n                                                                    onChange={(event) => (\n                                                                        handleOnChangeEndpointCategoryChange(\n                                                                            'sandbox', event,\n                                                                        ))}\n                                                                />\n                                                            )}\n                                                            label={(\n                                                                <FormattedMessage\n                                                                    id={'Apis.Details.Endpoints.'\n                                                                        + 'EndpointOverview.sandbox.endpoint'}\n                                                                    defaultMessage='Sandbox Endpoint'\n                                                                />\n                                                            )}\n                                                        />\n                                                        <Collapse in={endpointCategory.sandbox}>\n                                                            {endpointType.key === 'default'\n                                                                ? (\n                                                                    <InlineMessage>\n                                                                        <div className={classes.contentWrapper}>\n                                                                            <Typography\n                                                                                component='p'\n                                                                                className={classes.content}\n                                                                            >\n                                                                                <FormattedMessage\n                                                                                    id={'Apis.Details.Endpoints'\n                                                                                        + '.EndpointOverview.upload'\n                                                                                        + '.mediation.message'}\n                                                                                    defaultMessage={\n                                                                                        'Please upload a mediation'\n                                                                                        + ' sequence file to'\n                                                                                        + ' Message Mediation Policies,'\n                                                                                        + ' which sets the endpoints.'\n                                                                                    }\n                                                                                />\n                                                                                <IconButton\n                                                                                    onClick={saveAndRedirect}\n                                                                                >\n                                                                                    <LaunchIcon\n                                                                                        style={{ marginLeft: '2px' }}\n                                                                                        fontSize='small'\n                                                                                        color='primary'\n                                                                                    />\n                                                                                </IconButton>\n                                                                            </Typography>\n                                                                        </div>\n                                                                        <Button\n                                                                            className={classes.button}\n                                                                            aria-label='Settings'\n                                                                            onClick={() => toggleAdvanceConfig(\n                                                                                0, '', 'sandbox_endpoints',\n                                                                            )}\n                                                                            disabled={\n                                                                                (isRestricted(\n                                                                                    ['apim:api_create'], api,\n                                                                                )\n                                                                                )\n                                                                            }\n                                                                            variant='outlined'\n                                                                        >\n                                                                            <Icon\n                                                                                className={classes.buttonIcon}\n                                                                            >\n                                                                                settings\n                                                                            </Icon>\n                                                                            <Typography>\n                                                                                <FormattedMessage\n                                                                                    id={'Apis.Details.Endpoints'\n                                                                                        + '.EndpointOverview.advance'\n                                                                                        + '.endpoint.configuration'}\n                                                                                    defaultMessage={'Advanced '\n                                                                                        + 'Configurations'}\n                                                                                />\n                                                                            </Typography>\n                                                                        </Button>\n                                                                    </InlineMessage>\n                                                                )\n                                                                : (\n                                                                    <GenericEndpoint\n                                                                        autoFocus\n                                                                        name='Sandbox Endpoint'\n                                                                        id='sandboxEndpoint'\n                                                                        className={classes.defaultEndpointWrapper}\n                                                                        endpointURL={getEndpoints('sandbox_endpoints')}\n                                                                        type=''\n                                                                        index={0}\n                                                                        category='sandbox_endpoints'\n                                                                        editEndpoint={editEndpoint}\n                                                                        esCategory='sandbox'\n                                                                        setAdvancedConfigOpen={toggleAdvanceConfig}\n                                                                        setESConfigOpen={toggleEndpointSecurityConfig}\n                                                                        apiId={api.id}\n                                                                    />\n                                                                )}\n\n                                                        </Collapse>\n                                                    </div>\n                                                )}\n                                        </>\n                                    )}\n                            </Paper>\n                        )}\n                </Grid>\n                {endpointType.key === 'INLINE' || endpointType.key === 'prototyped' || endpointType.key === 'awslambda'\n                    || api.type === 'WS'\n                    ? <div />\n                    : (\n                        <Grid item xs={12}>\n                            <Typography variant='h4' component='h2' className={classes.titleWrapper} gutterBottom>\n                                <FormattedMessage\n                                    id='Apis.Details.Endpoints.EndpointOverview.general.config.header'\n                                    defaultMessage='General Endpoint Configurations'\n                                />\n                            </Typography>\n                            <GeneralConfiguration\n                                epConfig={(cloneDeep(epConfig))}\n                                endpointType={endpointType}\n                                endpointsDispatcher={endpointsDispatcher}\n                            />\n                        </Grid>\n                    )}\n                {\n                    endpointType.key === 'INLINE'\n                        || endpointType.key === 'default'\n                        || endpointType.key === 'prototyped'\n                        || api.type === 'WS'\n                        || endpointType.key === 'awslambda'\n                        ? <div />\n                        : (\n                            <Grid item xs={12}>\n                                <Typography\n                                    variant='h4'\n                                    component='h2'\n                                    align='left'\n                                    className={classes.titleWrapper}\n                                    gutterBottom\n                                >\n                                    <FormattedMessage\n                                        id={'Apis.Details.Endpoints.'\n                                            + 'EndpointOverview.lb.failover.endpoints.header'}\n                                        defaultMessage='Load balance and Failover Configurations'\n                                    />\n                                </Typography>\n                                <LoadbalanceFailoverConfig\n                                    handleEndpointCategorySelect={handleEndpointCategorySelect}\n                                    toggleAdvanceConfig={toggleAdvanceConfig}\n                                    endpointsDispatcher={endpointsDispatcher}\n                                    epConfig={(cloneDeep(epConfig))}\n                                    endpointSecurityInfo={endpointSecurityInfo}\n                                    handleEndpointTypeSelect={handleEndpointTypeSelect}\n                                    globalEpType={endpointType}\n                                    apiType={api.type}\n                                />\n                            </Grid>\n                        )\n                }\n            </Grid>\n            <Dialog open={advanceConfigOptions.open}>\n                <DialogTitle>\n                    <Typography className={classes.configDialogHeader}>\n                        <FormattedMessage\n                            id='Apis.Details.Endpoints.EndpointOverview.advance.endpoint.configuration'\n                            defaultMessage='Advanced Configurations'\n                        />\n                    </Typography>\n                </DialogTitle>\n                <DialogContent>\n                    <AdvanceEndpointConfig\n                        isSOAPEndpoint={endpointType.key === 'address'}\n                        advanceConfig={advanceConfigOptions.config}\n                        onSaveAdvanceConfig={saveAdvanceConfig}\n                        onCancel={closeAdvanceConfig}\n                    />\n                </DialogContent>\n            </Dialog>\n            <Dialog open={endpointSecurityConfig.open}>\n                <DialogTitle>\n                    <Typography className={classes.configDialogHeader}>\n                        <FormattedMessage\n                            id='Apis.Details.Endpoints.EndpointOverview.endpoint.security.configuration'\n                            defaultMessage='Endpoint Security Configurations'\n                        />\n                    </Typography>\n                </DialogTitle>\n                <DialogContent>\n                    {endpointSecurityConfig.category === 'production' ? (\n                        <EndpointSecurity\n                            securityInfo={(endpointSecurityInfo && endpointSecurityInfo.production)\n                                ? endpointSecurityInfo.production : previousEndpointSecurity}\n                            onChangeEndpointAuth={handleEndpointSecurityChange}\n                            saveEndpointSecurityConfig={saveEndpointSecurityConfig}\n                            closeEndpointSecurityConfig={closeEndpointSecurityConfig}\n                            isProduction\n                        />\n                    ) : (\n                        <EndpointSecurity\n                            securityInfo={(endpointSecurityInfo && endpointSecurityInfo.sandbox)\n                                ? endpointSecurityInfo.sandbox : previousEndpointSecurity}\n                            onChangeEndpointAuth={handleEndpointSecurityChange}\n                            saveEndpointSecurityConfig={saveEndpointSecurityConfig}\n                            closeEndpointSecurityConfig={closeEndpointSecurityConfig}\n                        />\n                    )}\n                </DialogContent>\n            </Dialog>\n            <Dialog open={typeChangeConfirmation.openDialog}>\n                <DialogTitle>\n                    <Typography className={classes.configDialogHeader}>\n                        <FormattedMessage\n                            id='Apis.Details.Endpoints.EndpointOverview.endpoint.type.change.confirmation'\n                            defaultMessage='Change Endpoint Type'\n                        />\n                    </Typography>\n                </DialogTitle>\n                <DialogContent>\n                    <Typography>\n                        <FormattedMessage\n                            id='Apis.Details.Endpoints.EndpointOverview.endpoint.type.change.confirmation.message'\n                            defaultMessage='Your current endpoint configuration will be lost.'\n                        />\n                    </Typography>\n                </DialogContent>\n                <DialogActions>\n                    <Button\n                        onClick={() => { setTypeChangeConfirmation({ openDialog: false }); }}\n                        color='primary'\n                    >\n                        <FormattedMessage\n                            id='Apis.Details.Endpoints.EndpointOverview.change.type.cancel'\n                            defaultMessage='Cancel'\n                        />\n                    </Button>\n                    <Button\n                        onClick={() => { changeEndpointType(typeChangeConfirmation.type); }}\n                        color='primary'\n                    >\n                        <FormattedMessage\n                            id='Apis.Details.Endpoints..EndpointOverview.change.type.proceed'\n                            defaultMessage='Proceed'\n                        />\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        </div>\n    );\n}\n\nEndpointOverview.propTypes = {\n    classes: PropTypes.shape({\n        overviewWrapper: PropTypes.shape({}),\n        endpointTypesWrapper: PropTypes.shape({}),\n        endpointName: PropTypes.shape({}),\n    }).isRequired,\n    api: PropTypes.shape({}).isRequired,\n    endpointsDispatcher: PropTypes.func.isRequired,\n    swaggerDef: PropTypes.shape({}).isRequired,\n    updateSwagger: PropTypes.func.isRequired,\n    saveAndRedirect: PropTypes.func.isRequired,\n};\n\nexport default injectIntl(withStyles(styles)(EndpointOverview));\n","/**\n * Copyright (c)  WSO2 Inc. (http://wso2.com) All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the 'License');\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an 'AS IS' BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React, {\n    useContext, useEffect, useState, useReducer,\n} from 'react';\nimport { Grid, CircularProgress } from '@material-ui/core';\nimport { withStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport PropTypes from 'prop-types';\nimport Button from '@material-ui/core/Button';\nimport { Link, withRouter } from 'react-router-dom';\nimport NewEndpointCreate from 'AppComponents/Apis/Details/Endpoints/NewEndpointCreate';\nimport { APIContext } from 'AppComponents/Apis/Details/components/ApiContext';\nimport cloneDeep from 'lodash.clonedeep';\nimport { isRestricted } from 'AppData/AuthManager';\nimport EndpointOverview from './EndpointOverview';\nimport { createEndpointConfig, getEndpointTemplateByType } from './endpointUtils';\n\nconst styles = (theme) => ({\n    endpointTypesWrapper: {\n        display: 'flex',\n        alignItems: 'center',\n        flexDirection: 'row',\n        margin: '2px',\n    },\n    root: {\n        flexGrow: 1,\n        paddingRight: '10px',\n    },\n    buttonSection: {\n        marginTop: theme.spacing(2),\n    },\n    radioGroup: {\n        display: 'flex',\n        flexDirection: 'row',\n        marginLeft: theme.spacing(2),\n    },\n    endpointValidityMessage: {\n        color: theme.palette.error.main,\n    },\n    errorMessageContainer: {\n        marginTop: theme.spacing(1),\n    },\n    implSelectRadio: {\n        padding: theme.spacing(1) / 2,\n    },\n});\n\nconst defaultSwagger = { paths: {} };\n\n/**\n * The base component of the endpoints view.\n * @param {any} props The props passed to the layout\n * @returns {any} HTML representation.\n */\nfunction Endpoints(props) {\n    const { classes, intl, history } = props;\n    const { api, updateAPI } = useContext(APIContext);\n    const [swagger, setSwagger] = useState(defaultSwagger);\n    const [endpointValidity, setAPIEndpointsValid] = useState({ isValid: true, message: '' });\n    const [isUpdating, setUpdating] = useState(false);\n\n    const apiReducer = (initState, configAction) => {\n        const tmpEndpointConfig = cloneDeep(initState.endpointConfig);\n        const { action, value } = configAction;\n        switch (action) {\n            case 'production_endpoints':\n            case 'sandbox_endpoints': {\n                if (value) {\n                    return { ...initState, endpointConfig: { ...tmpEndpointConfig, [action]: value } };\n                }\n                return { ...initState, endpointConfig: { ...tmpEndpointConfig } };\n            }\n            case 'select_endpoint_category': {\n                return { ...initState, endpointConfig: { ...value } };\n            }\n            case 'set_lb_config': {\n                return { ...initState, endpointConfig: { ...value } };\n            }\n            case 'add_endpoint': {\n                return { ...initState, endpointConfig: { ...value } };\n            }\n            case 'set_advance_config': {\n                return { ...initState, endpointConfig: { ...value } };\n            }\n            case 'remove_endpoint': {\n                return { ...initState, endpointConfig: { ...value } };\n            }\n            case 'endpointImplementationType': { // set implementation status\n                const { endpointType, implementationType } = value;\n                const config = createEndpointConfig(endpointType);\n                if (endpointType === 'prototyped') {\n                    if (implementationType === 'mock') {\n                        api.generateMockScripts(api.id).then((res) => { // generates mock/sample payloads\n                            setSwagger(res.obj);\n                        });\n                        return { ...initState, endpointConfig: config, endpointImplementationType: 'INLINE' };\n                    }\n                    return { ...initState, endpointConfig: config, endpointImplementationType: 'ENDPOINT' };\n                }\n                return { ...initState, endpointConfig: config };\n            }\n            case 'endpointSecurity': { // set endpoint security\n                const config = cloneDeep(initState.endpointConfig);\n                const tmpSecurityInfo = cloneDeep(value);\n                return { ...initState, endpointConfig: { ...config, endpoint_security: tmpSecurityInfo } };\n            }\n            case 'endpoint_type': { // set endpoint type\n                const config = getEndpointTemplateByType(\n                    value.category,\n                    value.endpointType === 'address',\n                    tmpEndpointConfig,\n                );\n                return { ...initState, endpointConfig: { ...config } };\n            }\n            case 'set_inline': {\n                const { endpointImplementationType, endpointConfig } = value;\n                api.generateMockScripts(api.id).then((res) => { // generates mock/sample payloads\n                    setSwagger(res.obj);\n                });\n                return { ...initState, endpointConfig, endpointImplementationType };\n            }\n            case 'set_prototyped': {\n                const { endpointImplementationType, endpointConfig } = value;\n                return {\n                    ...initState,\n                    endpointImplementationType,\n                    endpointConfig,\n                };\n            }\n            case 'set_awsCredentials': {\n                return { ...initState, endpointConfig: { ...value } };\n            }\n            case 'select_endpoint_type': {\n                const { endpointImplementationType, endpointConfig } = value;\n                let { endpointSecurity } = initState;\n                if (endpointSecurity && (endpointSecurity.username === '')) {\n                    endpointSecurity = null;\n                }\n                return {\n                    ...initState,\n                    endpointConfig,\n                    endpointImplementationType,\n                    endpointSecurity: null,\n                };\n            }\n            default: {\n                return initState;\n            }\n        }\n    };\n    const [apiObject, apiDispatcher] = useReducer(apiReducer, api.toJSON());\n\n\n    /**\n     * Method to update the api.\n     *\n     * @param {boolean} isRedirect Used for dynamic endpoints to redirect to the runtime config page.\n     */\n    const saveAPI = (isRedirect) => {\n        const { endpointConfig, endpointImplementationType, endpointSecurity } = apiObject;\n        setUpdating(true);\n\n        if (endpointConfig.endpoint_security\n            && (endpointConfig.endpoint_security.production || endpointConfig.endpoint_security.sandbox)\n            && endpointConfig.endpoint_security.username && endpointConfig.endpoint_security.type) {\n            delete endpointConfig.endpoint_security.type;\n            delete endpointConfig.endpoint_security.username;\n            delete endpointConfig.endpoint_security.password;\n            apiObject.endpointConfig = endpointConfig;\n        }\n\n        if (endpointImplementationType === 'INLINE') {\n            api.updateSwagger(swagger).then((resp) => {\n                setSwagger(resp.obj);\n            }).then(() => {\n                updateAPI({ endpointConfig, endpointImplementationType, endpointSecurity });\n            }).finally(() => {\n                setUpdating(false);\n                if (isRedirect) {\n                    history.push('/apis/' + api.id + '/runtime-configuration');\n                }\n            });\n        } else {\n            updateAPI(apiObject).finally(() => {\n                setUpdating(false);\n                if (isRedirect) {\n                    history.push('/apis/' + api.id + '/runtime-configuration');\n                }\n            });\n        }\n    };\n\n    /**\n     * Validate the provided endpoint config object.\n     *\n     * @param {any} endpointConfig The provided endpoint config for validation.\n     * @param {string} implementationType The api implementation type (INLINE/ ENDPOINT)\n     * @return {{isValid: boolean, message: string}} The endpoint validity information.\n     * */\n    const validate = (implementationType) => {\n        const { endpointConfig, endpointSecurity } = apiObject;\n        if (endpointSecurity) {\n            if (endpointSecurity.type === 'OAUTH') {\n                if (endpointSecurity.grantType === 'PASSWORD') {\n                    if (endpointSecurity.tokenUrl === null\n                        || endpointSecurity.apiKey === null\n                        || endpointSecurity.apiSecret === null\n                        || endpointSecurity.username === null\n                        || endpointSecurity.password === null) {\n                        return {\n                            isValid: false,\n                            message: intl.formatMessage({\n                                id: 'Apis.Details.Endpoints.Endpoints.missing.security.oauth.password.error',\n                                defaultMessage: 'Endpoint Security Token URL'\n                                        + '/API Key/API Secret/Username/Password should not be empty',\n                            }),\n                        };\n                    }\n                } else if (endpointSecurity.grantType === 'CLIENT_CREDENTIALS') {\n                    if (endpointSecurity.tokenUrl === null\n                        || endpointSecurity.apiKey === null\n                        || endpointSecurity.apiSecret === null) {\n                        return {\n                            isValid: false,\n                            message: intl.formatMessage({\n                                id: 'Apis.Details.Endpoints.Endpoints.missing.security.oauth.client.error',\n                                defaultMessage: 'Endpoint Security Token URL'\n                                        + '/API Key/API Secret should not be empty',\n                            }),\n                        };\n                    }\n                }\n            } else if (endpointSecurity.username === '' || endpointSecurity.password === null) {\n                return {\n                    isValid: false,\n                    message: intl.formatMessage({\n                        id: 'Apis.Details.Endpoints.Endpoints.missing.security.username.error',\n                        defaultMessage: 'Endpoint Security User Name/ Password should not be empty',\n                    }),\n                };\n            }\n        }\n        if (endpointConfig === null) {\n            return { isValid: true, message: '' };\n        }\n        const endpointType = endpointConfig.endpoint_type;\n        if (endpointType === 'awslambda') {\n            if (endpointConfig.access_method === 'stored') {\n                if (endpointConfig.amznAccessKey === '' || endpointConfig.amznSecretKey === ''\n                || endpointConfig.amznRegion === '') {\n                    return {\n                        isValid: false,\n                        message: intl.formatMessage({\n                            id: 'Apis.Details.Endpoints.Endpoints.missing.accessKey.secretKey.error',\n                            defaultMessage: 'Access Key, Secret Key and Region should not be empty',\n                        }),\n                    };\n                }\n            }\n            if (endpointConfig.amznAccessKey !== '' && endpointConfig.amznSecretKey === 'AWS_SECRET_KEY') {\n                return {\n                    isValid: false,\n                    message: '',\n                };\n            }\n        } else if (endpointType === 'load_balance') {\n            /**\n             * Checklist:\n             *  production/ sandbox endpoints should be an array.\n             *  production/ sandbox endpoint [0] must be present.\n             * */\n            if (endpointConfig.production_endpoints && endpointConfig.production_endpoints.length > 0) {\n                if (!endpointConfig.production_endpoints[0].url\n                    || (endpointConfig.production_endpoints[0].url\n                        && endpointConfig.production_endpoints[0].url === '')) {\n                    return {\n                        isValid: false,\n                        message: intl.formatMessage({\n                            id: 'Apis.Details.Endpoints.Endpoints.missing.prod.endpoint.loadbalance',\n                            defaultMessage: 'Default Production Endpoint should not be empty',\n                        }),\n                    };\n                }\n            }\n            if (endpointConfig.sandbox_endpoints && endpointConfig.sandbox_endpoints.length > 0) {\n                if (!endpointConfig.sandbox_endpoints[0].url\n                    || (endpointConfig.sandbox_endpoints[0].url && endpointConfig.sandbox_endpoints[0].url === '')) {\n                    return {\n                        isValid: false,\n                        message: intl.formatMessage({\n                            id: 'Apis.Details.Endpoints.Endpoints.missing.sandbox.endpoint.loadbalance',\n                            defaultMessage: 'Default Sandbox Endpoint should not be empty',\n                        }),\n                    };\n                }\n            }\n        } else {\n            let isValidEndpoint = false;\n            if (endpointConfig.implementation_status === 'prototyped') {\n                if (implementationType === 'ENDPOINT') {\n                    if (endpointConfig.production_endpoints && endpointConfig.production_endpoints.url === '') {\n                        return {\n                            isValid: false,\n                            message: intl.formatMessage({\n                                id: 'Apis.Details.Endpoints.Endpoints.missing.prototype.url',\n                                defaultMessage: 'Prototype Endpoint URL should not be empty',\n                            }),\n                        };\n                    }\n                }\n                isValidEndpoint = true;\n            } else if (endpointConfig.production_endpoints && !endpointConfig.sandbox_endpoints) {\n                isValidEndpoint = endpointConfig.production_endpoints.url !== '';\n            } else if (endpointConfig.sandbox_endpoints && !endpointConfig.production_endpoints) {\n                isValidEndpoint = endpointConfig.sandbox_endpoints.url !== '';\n            } else if (!endpointConfig.sandbox_endpoints && !endpointConfig.production_endpoints) {\n                isValidEndpoint = false;\n            } else {\n                isValidEndpoint = endpointConfig.sandbox_endpoints.url !== ''\n                        || endpointConfig.production_endpoints.url !== '';\n            }\n            return !isValidEndpoint ? {\n                isValid: false,\n                message: intl.formatMessage({\n                    id: 'Apis.Details.Endpoints.Endpoints.missing.endpoint.error',\n                    defaultMessage: 'Either one of Production or Sandbox Endpoints should be added.',\n                }),\n            } : { isValid: true, message: '' };\n        }\n        return {\n            isValid: true,\n            message: '',\n        };\n    };\n\n    useEffect(() => {\n        if (api.type !== 'WS') {\n            api.getSwagger(apiObject.id).then((resp) => {\n                setSwagger(resp.obj);\n            }).catch((err) => {\n                console.err(err);\n            });\n        }\n    }, []);\n\n    useEffect(() => {\n        setAPIEndpointsValid(validate(apiObject.endpointImplementationType));\n    }, [apiObject]);\n\n    const saveAndRedirect = () => {\n        saveAPI(true);\n    };\n    /**\n     * Method to update the swagger object.\n     *\n     * @param {any} swaggerObj The updated swagger object.\n     * */\n    const changeSwagger = (swaggerObj) => {\n        setSwagger(swaggerObj);\n    };\n\n    /**\n     * Generate endpoint configuration based on the selected endpoint type and set to the api object.\n     *\n     * @param {string} endpointType The endpoint type.\n     * @param {string} implementationType The endpoint implementationType. (Required only for prototype endpoints)\n     * */\n    const generateEndpointConfig = (endpointType, implementationType) => {\n        apiDispatcher({ action: 'endpointImplementationType', value: { endpointType, implementationType } });\n    };\n\n    return (\n        <>\n            {/* Since the api is set to the state in component did mount, check both the api and the apiObject. */}\n            {(api.endpointConfig === null && apiObject.endpointConfig === null)\n                ? <NewEndpointCreate generateEndpointConfig={generateEndpointConfig} apiType={apiObject.type} />\n                : (\n                    <div className={classes.root}>\n                        <Typography variant='h4' component='h2' align='left' gutterBottom>\n                            <FormattedMessage\n                                id='Apis.Details.Endpoints.Endpoints.endpoints.header'\n                                defaultMessage='Endpoints'\n                            />\n                        </Typography>\n                        <div>\n                            <Grid container>\n                                <Grid item xs={12} className={classes.endpointsContainer}>\n                                    <EndpointOverview\n                                        swaggerDef={swagger}\n                                        updateSwagger={changeSwagger}\n                                        api={apiObject}\n                                        onChangeAPI={apiDispatcher}\n                                        endpointsDispatcher={apiDispatcher}\n                                        saveAndRedirect={saveAndRedirect}\n                                    />\n                                </Grid>\n                            </Grid>\n                            {\n                                endpointValidity.isValid\n                                    ? <div />\n                                    : (\n                                        <Grid item className={classes.errorMessageContainer}>\n                                            <Typography className={classes.endpointValidityMessage}>\n                                                {endpointValidity.message}\n                                            </Typography>\n                                        </Grid>\n                                    )\n                            }\n                            <Grid\n                                container\n                                direction='row'\n                                alignItems='flex-start'\n                                spacing={1}\n                                className={classes.buttonSection}\n                            >\n                                <Grid item>\n                                    <Button\n                                        disabled={isUpdating || !endpointValidity.isValid\n                                    || isRestricted(['apim:api_create'], api)}\n                                        type='submit'\n                                        variant='contained'\n                                        color='primary'\n                                        onClick={() => saveAPI()}\n                                    >\n                                        <FormattedMessage\n                                            id='Apis.Details.Endpoints.Endpoints.save'\n                                            defaultMessage='Save'\n                                        />\n                                        {isUpdating && <CircularProgress size={24} />}\n                                    </Button>\n                                </Grid>\n                                <Grid item>\n                                    <Button\n                                        component={Link}\n                                        to={'/apis/' + api.id + '/overview'}\n                                    >\n                                        <FormattedMessage\n                                            id='Apis.Details.Endpoints.Endpoints.cancel'\n                                            defaultMessage='Cancel'\n                                        />\n                                    </Button>\n                                </Grid>\n                                {isRestricted(['apim:api_create'], api)\n                                && (\n                                    <Grid item>\n                                        <Typography variant='body2' color='primary'>\n                                            <FormattedMessage\n                                                id='Apis.Details.Endpoints.Endpoints.update.not.allowed'\n                                                defaultMessage={'*You are not authorized to update endpoints of'\n                                                + ' the API due to insufficient permissions'}\n                                            />\n                                        </Typography>\n                                    </Grid>\n                                )}\n                            </Grid>\n                        </div>\n                    </div>\n                )}\n        </>\n\n    );\n}\n\nEndpoints.propTypes = {\n    classes: PropTypes.shape({\n        root: PropTypes.shape({}),\n        buttonSection: PropTypes.shape({}),\n        endpointTypesWrapper: PropTypes.shape({}),\n        mainTitle: PropTypes.shape({}),\n    }).isRequired,\n    api: PropTypes.shape({}).isRequired,\n    intl: PropTypes.shape({}).isRequired,\n    history: PropTypes.shape({}).isRequired,\n};\n\nexport default withRouter(injectIntl(withStyles(styles)(Endpoints)));\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useState, useEffect } from 'react';\nimport API from 'AppData/api';\nimport PropTypes from 'prop-types';\nimport 'react-tagsinput/react-tagsinput.css';\nimport { FormattedMessage } from 'react-intl';\nimport Typography from '@material-ui/core/Typography';\nimport InlineMessage from 'AppComponents/Shared/InlineMessage';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Paper from '@material-ui/core/Paper';\nimport { isRestricted } from 'AppData/AuthManager';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: 'flex',\n        flexWrap: 'wrap',\n    },\n    mainTitle: {\n        paddingTop: theme.spacing(3),\n    },\n    gatewayPaper: {\n        marginTop: theme.spacing(2),\n    },\n    content: {\n        marginTop: theme.spacing(2),\n        margin: `${theme.spacing(2)}px 0 ${theme.spacing(2)}px 0`,\n    },\n    emptyBox: {\n        marginTop: theme.spacing(2),\n    },\n    contentWrapper: {\n        maxWidth: theme.custom.contentAreaWidth,\n        paddingLeft: theme.spacing(3),\n    },\n}));\n\n/**\n * Renders Microgateway labels\n * @class MicroGateway\n * @param {*} props\n * @extends {React.Component}\n */\nexport default function MicroGateway(props) {\n    const classes = useStyles();\n    const { selectedMgLabel, setSelectedMgLabel, api } = props;\n    const restApi = new API();\n    const [mgLabels, setMgLabels] = useState([]);\n    useEffect(() => {\n        restApi.microgatewayLabelsGet()\n            .then((result) => {\n                setMgLabels(result.body.list);\n            });\n    }, []);\n\n    return (\n        <>\n            <Typography variant='h4' component='h2' align='left' className={classes.mainTitle}>\n                <FormattedMessage\n                    id='Apis.Details.Environments.Environments.GatewayLabels'\n                    defaultMessage='Gateway Labels'\n                />\n            </Typography>\n            {mgLabels.length > 0 ? (\n                <Paper className={classes.gatewayPaper}>\n                    <Table>\n                        <TableHead>\n                            <TableRow>\n                                <TableCell align='left'>\n                                    <Typography variant='srOnly'>\n                                        Action\n                                    </Typography>\n                                </TableCell>\n                                <TableCell align='left'>Label</TableCell>\n                                <TableCell align='left'>Description</TableCell>\n                                <TableCell align='left'>Access URL</TableCell>\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            {mgLabels.map((row) => (\n                                <TableRow key={row.name}>\n                                    <TableCell padding='checkbox'>\n                                        <Checkbox\n                                            disabled={isRestricted(['apim:api_create', 'apim:api_publish'], api)}\n                                            checked={selectedMgLabel.includes(row.name)}\n                                            inputProps={{ 'aria-label': 'select gateway ' + row.name }}\n                                            onChange={\n                                                (event) => {\n                                                    const { checked, name } = event.target;\n                                                    if (checked) {\n                                                        setSelectedMgLabel([...selectedMgLabel, name]);\n                                                    } else {\n                                                        setSelectedMgLabel(\n                                                            selectedMgLabel.filter((env) => env !== name),\n                                                        );\n                                                    }\n                                                }\n                                            }\n                                            name={row.name}\n                                            color='primary'\n                                        />\n                                    </TableCell>\n                                    <TableCell component='th' scope='row' align='left'>\n                                        {row.name}\n                                    </TableCell>\n                                    <TableCell align='left'>{row.description}</TableCell>\n                                    <TableCell align='left'>{row.access_urls.join(', ')}</TableCell>\n                                </TableRow>\n                            ))}\n                        </TableBody>\n                    </Table>\n                </Paper>\n            )\n                : (\n                    <InlineMessage type='info' height={100} className={classes.emptyBox}>\n                        <div className={classes.contentWrapper}>\n                            <Typography component='p' className={classes.content}>\n                                <FormattedMessage\n                                    id='Apis.Details.Environments.Gateway.labels.emptym1'\n                                    defaultMessage='Gateway labels are not available.'\n                                />\n                                <FormattedMessage\n                                    id='Apis.Details.Environments.Gateway.labels.emptym2'\n                                    defaultMessage=' You can request the administrator to add labels.'\n                                />\n                            </Typography>\n                        </div>\n                    </InlineMessage>\n                )}\n        </>\n    );\n}\nMicroGateway.defaultProps = {\n    api: {},\n};\nMicroGateway.propTypes = {\n    selectedMgLabel: PropTypes.arrayOf(PropTypes.string).isRequired,\n    setSelectedMgLabel: PropTypes.func.isRequired,\n    api: PropTypes.shape({}),\n};\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport 'react-tagsinput/react-tagsinput.css';\nimport { FormattedMessage } from 'react-intl';\nimport Typography from '@material-ui/core/Typography';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport { isRestricted } from 'AppData/AuthManager';\nimport cloneDeep from 'lodash.clonedeep';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: 'flex',\n        flexWrap: 'wrap',\n    },\n    mainTitle: {\n        paddingTop: theme.spacing(3),\n    },\n    gatewayPaper: {\n        marginTop: theme.spacing(2),\n    },\n    content: {\n        marginTop: theme.spacing(2),\n        margin: `${theme.spacing(2)}px 0 ${theme.spacing(2)}px 0`,\n    },\n    emptyBox: {\n        marginTop: theme.spacing(2),\n    },\n    contentWrapper: {\n        maxWidth: theme.custom.contentAreaWidth,\n        paddingLeft: theme.spacing(3),\n    },\n}));\n\n/**\n * Renders deployments List\n * @class Kubernetes\n * @param {*} props\n * @extends {React.Component}\n */\nexport default function Kubernetes(props) {\n    const classes = useStyles();\n    const {\n        clusters, selectedDeployments, setSelectedDeployments, api,\n    } = props;\n\n    /**\n     * Handle the Deployment Environments onChange event\n     * @param {event} event onCheck event\n     * @param {clusterId} clusterId seletected clsuter Id\n     */\n    function handleEnvironmentsSelect(event, clusterId) {\n        const { checked } = event.target;\n        const selectedDeploymentCopy = cloneDeep(selectedDeployments);\n        if (selectedDeploymentCopy && selectedDeploymentCopy.length > 0) {\n            for (let dep = 0; dep < selectedDeploymentCopy.length; dep++) {\n                const deployment = selectedDeploymentCopy[dep];\n                if (deployment && deployment.type === 'Kubernetes') {\n                    if (deployment.clusterName && deployment.clusterName.length > 0) {\n                        const clusterNameFound = [];\n                        for (let cluster = 0; cluster < deployment.clusterName.length; cluster++) {\n                            const clusterName = deployment.clusterName[cluster];\n                            if (clusterName === clusterId) {\n                                clusterNameFound.push(clusterId);\n                            }\n                        }\n                        if (checked && !clusterNameFound.includes(clusterId)) {\n                            deployment.clusterName.push(clusterId);\n                        } else if (!checked && clusterNameFound.includes(clusterId)) {\n                            const index = deployment.clusterName.indexOf(clusterId);\n                            if (index > -1) {\n                                deployment.clusterName.splice(index, 1);\n                            }\n                        }\n                    } else if (deployment.clusterName && deployment.clusterName.length === 0) {\n                        deployment.clusterName.push(clusterId);\n                    }\n                }\n            }\n        } else {\n            selectedDeploymentCopy.push({\n                type: 'Kubernetes',\n                clusterName: [clusterId],\n            });\n        }\n        setSelectedDeployments(selectedDeploymentCopy);\n    }\n\n\n    /**\n     *\n     * Handle the Deployment Environments onCheck\n     * @param {*} clusterId selected cluster Id\n     * @returns {include} selected cluster alredy include in the response\n     */\n    function handleOnChecked(clusterId) {\n        let include = false;\n        if (selectedDeployments) {\n            const deploymentTypes = selectedDeployments.filter((deployment) => deployment.type === 'Kubernetes');\n            if (deploymentTypes && deploymentTypes.length > 0) {\n                const selectedClusters = deploymentTypes[0].clusterName.filter((cluster) => cluster === clusterId);\n                include = selectedClusters && selectedClusters.length > 0;\n            }\n        }\n        return include;\n    }\n\n    const generateElement = (key, value) => {\n        return (\n            <TableRow>\n                <TableCell align='left'>{key}</TableCell>\n                <TableCell align='left'>{value}</TableCell>\n            </TableRow>\n        );\n    };\n    /**\n     *\n     * Handle generating table with property data\n     * @param {*} data JSONObject with cluster propertues\n     * @returns {properties} rendered elements\n     */\n    function generatePropertyData(data) {\n        const properties = Object.keys(data).reduce((result, currentKey) => {\n            const elementToPush = generateElement(currentKey, data[currentKey]);\n            result.push(elementToPush);\n\n            return result;\n        }, []);\n        return properties;\n    }\n    return (\n        <>\n            <Typography variant='h4' component='h2' gutterBottom align='left' className={classes.mainTitle}>\n                <FormattedMessage\n                    id='Apis.Details.Environments.Environments.Kubernetes'\n                    defaultMessage='Kubernetes'\n                />\n            </Typography>\n\n            <Paper className={classes.gatewayPaper}>\n                <Table>\n                    <TableHead>\n                        <TableRow>\n                            <TableCell align='left'>\n                                <Typography variant='srOnly'>\n                                    Action\n                                </Typography>\n                            </TableCell>\n                            <TableCell align='left'>Name</TableCell>\n                            <TableCell align='left'>Properties</TableCell>\n                            <TableCell align='left'>Access URL</TableCell>\n                        </TableRow>\n                    </TableHead>\n                    <TableBody>\n                        {clusters.clusters.map((row) => (\n                            <TableRow key={row.clusterName}>\n                                <TableCell padding='checkbox'>\n                                    <Checkbox\n                                        disabled={isRestricted(['apim:api_create', 'apim:api_publish'], api)}\n                                        checked={handleOnChecked(row.clusterName)}\n                                        onChange={(e) => handleEnvironmentsSelect(e, row.clusterName)}\n                                        color='primary'\n                                        inputProps={{ 'aria-label': 'select gateway ' + row.name }}\n                                    />\n                                </TableCell>\n                                <TableCell component='th' scope='row'>\n                                    {row.displayName}\n                                </TableCell>\n                                <TableCell align='left'>\n                                    <Table>\n                                        <TableBody>\n                                            {generatePropertyData(row.properties)}\n                                        </TableBody>\n                                    </Table>\n                                </TableCell>\n                                <TableCell align='left'>{row.accessURL}</TableCell>\n                            </TableRow>\n                        ))}\n                    </TableBody>\n                </Table>\n            </Paper>\n        </>\n    );\n}\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useContext, useState, useEffect } from 'react';\nimport { APIContext } from 'AppComponents/Apis/Details/components/ApiContext';\nimport { useAppContext } from 'AppComponents/Shared/AppContext';\nimport 'react-tagsinput/react-tagsinput.css';\nimport { FormattedMessage } from 'react-intl';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { Link } from 'react-router-dom';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Alert from 'AppComponents/Shared/Alert';\nimport Paper from '@material-ui/core/Paper';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { isRestricted } from 'AppData/AuthManager';\nimport { makeStyles } from '@material-ui/core/styles';\nimport MicroGateway from 'AppComponents/Apis/Details/Environments/MicroGateway';\nimport Kubernetes from 'AppComponents/Apis/Details/Environments/Kubernetes';\nimport API from 'AppData/api';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: 'flex',\n        flexWrap: 'wrap',\n    },\n    saveButton: {\n        marginTop: theme.spacing(3),\n    },\n}));\n\n/**\n * Renders an Environments list\n * @class Environments\n * @extends {React.Component}\n */\nexport default function Environments() {\n    const classes = useStyles();\n    const { api, updateAPI, isAPIProduct } = useContext(APIContext);\n    const { settings } = useAppContext();\n    const [gatewayEnvironments, setGatewayEnvironments] = useState([...api.gatewayEnvironments]);\n    const [selectedMgLabel, setSelectedMgLabel] = isAPIProduct ? [] : useState([...api.labels]);\n    const [isUpdating, setUpdating] = useState(false);\n    const [selectedDeployments, setSelectedDeployments] = isAPIProduct ? [] : useState([...api.deploymentEnvironments]);\n    const [isPublishing, setPublishing] = useState(false);\n    const restApi = new API();\n    const [allDeployments, setAllDeployments] = useState([]);\n    useEffect(() => {\n        restApi.getDeployments()\n            .then((result) => {\n                setAllDeployments(result.body.list);\n            });\n    }, []);\n\n    /**\n     *\n     * Handle the Environments save button action\n     */\n    function addEnvironments() {\n        setUpdating(true);\n        updateAPI({\n            gatewayEnvironments,\n            labels: selectedMgLabel,\n            deploymentEnvironments: selectedDeployments,\n        })\n            .then(() => Alert.info('API Update Successfully'))\n            .catch((error) => {\n                if (error.response) {\n                    Alert.error(error.response.body.description);\n                } else {\n                    Alert.error('Something went wrong while updating the environments');\n                }\n                console.error(error);\n            })\n            .finally(() => setUpdating(false));\n    }\n\n    /**\n     *\n     * Handle the Environments publish button action\n     */\n    function addEnvironmentsAndPublish() {\n        setPublishing(true);\n        updateAPI({\n            gatewayEnvironments,\n            state: 'PUBLISHED',\n        })\n            .then(() => Alert.info('API Product Update Successfully'))\n            .catch((error) => {\n                if (error.response) {\n                    Alert.error(error.response.body.description);\n                } else {\n                    Alert.error('Something went wrong while updating the environments');\n                }\n            })\n            .finally(() => setPublishing(false));\n    }\n\n    return (\n        <>\n            <Typography variant='h4' component='h2' gutterBottom>\n                <FormattedMessage\n                    id='Apis.Details.Environments.Environments.APIGateways'\n                    defaultMessage='API Gateways'\n                />\n            </Typography>\n            <Paper className={classes.saveButton}>\n                <Table>\n                    <TableHead>\n                        <TableRow>\n                            <TableCell align='left'>\n                                <Typography variant='srOnly'>\n                                    Action\n                                </Typography>\n                            </TableCell>\n                            <TableCell align='left'>Name</TableCell>\n                            <TableCell align='left'>Type</TableCell>\n                            <TableCell align='left'>Server URL</TableCell>\n                            {api.isWebSocket() ? (\n                                <>\n                                    <TableCell align='left'>WS Endpoint</TableCell>\n                                    <TableCell align='left'>WSS Endpoint</TableCell>\n                                </>\n                            ) : (\n                                <>\n                                    <TableCell align='left'>HTTP Endpoint</TableCell>\n                                    <TableCell align='left'>HTTPS Endpoint</TableCell>\n                                </>\n                            )}\n                        </TableRow>\n                    </TableHead>\n                    <TableBody>\n                        {settings.environment.map((row) => (\n                            <TableRow key={row.name}>\n                                <TableCell padding='checkbox'>\n                                    <Checkbox\n                                        disabled={isRestricted(['apim:api_create', 'apim:api_publish'], api)}\n                                        checked={gatewayEnvironments.includes(row.name)}\n                                        inputProps={{ 'aria-label': 'select gateway ' + row.name }}\n                                        onChange={\n                                            (event) => {\n                                                const { checked, name } = event.target;\n                                                if (checked) {\n                                                    setGatewayEnvironments([...gatewayEnvironments, name]);\n                                                } else {\n                                                    setGatewayEnvironments(\n                                                        gatewayEnvironments.filter((env) => env !== name),\n                                                    );\n                                                }\n                                            }\n                                        }\n                                        name={row.name}\n                                        color='primary'\n                                    />\n                                </TableCell>\n                                <TableCell component='th' scope='row'>\n                                    {row.name}\n                                </TableCell>\n                                <TableCell align='left'>{row.type}</TableCell>\n                                <TableCell align='left'>{row.serverUrl}</TableCell>\n\n                                {api.isWebSocket() ? (\n                                    <>\n                                        <TableCell align='left'>{row.endpoints.ws}</TableCell>\n                                        <TableCell align='left'>{row.endpoints.wss}</TableCell>\n                                    </>\n                                ) : (\n                                    <>\n                                        <TableCell align='left'>{row.endpoints.http}</TableCell>\n                                        <TableCell align='left'>{row.endpoints.https}</TableCell>\n                                    </>\n                                )}\n                            </TableRow>\n                        ))}\n                    </TableBody>\n                </Table>\n            </Paper>\n\n            {(!api.isWebSocket() && !isAPIProduct)\n                && (\n                    <MicroGateway\n                        selectedMgLabel={selectedMgLabel}\n                        setSelectedMgLabel={setSelectedMgLabel}\n                        api={api}\n                    />\n                )}\n            {\n                allDeployments\n                 && (\n                     allDeployments.map((clusters) => (clusters.name.toLowerCase() === 'kubernetes' && (\n                         <Kubernetes\n                             clusters={clusters}\n                             selectedDeployments={selectedDeployments}\n                             setSelectedDeployments={setSelectedDeployments}\n                             api={api}\n                         />\n                     )))\n                 )\n            }\n\n            <Grid\n                container\n                direction='row'\n                alignItems='flex-start'\n                spacing={1}\n            >\n                <Grid item>\n                    <Button\n                        className={classes.saveButton}\n                        disabled={isRestricted(['apim:api_create', 'apim:api_publish'], api) || isUpdating}\n                        type='submit'\n                        variant='contained'\n                        color='primary'\n                        onClick={addEnvironments}\n                    >\n                        <FormattedMessage\n                            id='Apis.Details.Environments.Environments.save'\n                            defaultMessage='Save'\n                        />\n                        {isUpdating && <CircularProgress size={20} />}\n                    </Button>\n                </Grid>\n                {isAPIProduct && api.state !== 'PUBLISHED' && (\n                    <Grid item>\n                        <Tooltip\n                            title={(\n                                <FormattedMessage\n                                    id='Apis.Details.Environments.Environments.publish.tooltip'\n                                    defaultMessage='Publish to Gateways and Developer Portal'\n                                />\n                            )}\n                            placement='bottom'\n                            interactive\n                        >\n                            <Button\n                                className={classes.saveButton}\n                                disabled={isRestricted(['apim:api_publish'], api) || isPublishing}\n                                type='submit'\n                                variant='contained'\n                                color='primary'\n                                onClick={addEnvironmentsAndPublish}\n                            >\n                                <FormattedMessage\n                                    id='Apis.Details.Environments.Environments.publish'\n                                    defaultMessage='Publish'\n                                />\n                                {isPublishing && <CircularProgress size={20} />}\n                            </Button>\n                        </Tooltip>\n                    </Grid>\n                )}\n                <Grid item>\n                    <Button\n                        className={classes.saveButton}\n                        component={Link}\n                        to={'/apis/' + api.id + '/overview'}\n                    >\n                        <FormattedMessage\n                            id='Apis.Details.Environments.Environments.cancel'\n                            defaultMessage='Cancel'\n                        />\n                    </Button>\n                </Grid>\n            </Grid>\n            {isRestricted(['apim:api_create'], api) && (\n                <Grid item>\n                    <Typography variant='body2' color='primary'>\n                        <FormattedMessage\n                            id='Apis.Details.Environments.Environments.update.not.allowed'\n                            defaultMessage={\n                                '* You are not authorized to update particular fields of'\n                                + ' the API due to insufficient permissions'\n                            }\n                        />\n                    </Typography>\n                </Grid>\n            )}\n        </>\n    );\n}\n","/*\n * Copyright (c), WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport Dialog from '@material-ui/core/Dialog';\nimport Button from '@material-ui/core/Button';\nimport MUIDataTable from 'mui-datatables';\nimport API from 'AppData/api';\nimport APIProduct from 'AppData/APIProduct';\nimport { FormattedMessage } from 'react-intl';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogActions from '@material-ui/core/DialogActions';\n\nconst columns = ['Name', 'Value'];\n\nconst options = {\n    filterType: 'checkbox',\n    sort: false,\n    search: false,\n    viewColumns: false,\n    filter: false,\n    selectableRowsHeader: false,\n    selectableRows: 'none',\n    pagination: false,\n    download: false,\n};\n\n// eslint-disable-next-line require-jsdoc\nfunction Invoice(props) {\n    const {\n        subscriptionId,\n        isMonetizedUsagePolicy,\n        isNotAuthorized,\n        api,\n    } = props;\n    const [showPopup, setShowPopup] = useState(false);\n    const [showErrorPopup, setShowErrorPopup] = useState(false);\n    const [invoice, setInvoice] = useState(null);\n\n    /**\n   * Handle the popup for invoice\n   */\n    const handlePopup = () => {\n        setShowPopup(true);\n        setInvoice(null);\n        if (api.apiType === 'APIProduct') {\n            const apiProduct = new APIProduct(api.name, api.context, api.policies);\n            const promiseInvoice = apiProduct.getMonetizationInvoice(subscriptionId);\n            promiseInvoice.then((response) => {\n                const invoiceData = [];\n                Object.keys(response.properties).map((invoiceItem) => {\n                    const insideArray = [];\n                    insideArray.push(invoiceItem);\n                    insideArray.push(response.properties[invoiceItem]);\n                    invoiceData.push(insideArray);\n                    return true;\n                });\n                setInvoice(invoiceData);\n            }).catch((error) => {\n                console.error(error);\n                setShowErrorPopup(true);\n            });\n        } else {\n            const promiseInvoice = api.getMonetizationInvoice(subscriptionId);\n            promiseInvoice.then((response) => {\n                const invoiceData = [];\n                Object.keys(response.properties).map((invoiceItem) => {\n                    const insideArray = [];\n                    insideArray.push(invoiceItem);\n                    insideArray.push(response.properties[invoiceItem]);\n                    invoiceData.push(insideArray);\n                    return true;\n                });\n                setInvoice(invoiceData);\n            }).catch((error) => {\n                console.error(error);\n                setShowErrorPopup(true);\n            });\n        }\n    };\n\n    /**\n   * Handle closing the popup for invoice\n   */\n    const handleClose = () => {\n        setShowPopup(false);\n    };\n\n    const handleAlertClose = () => {\n        setShowErrorPopup(false);\n    };\n\n    return (\n        <>\n            <Button\n                variant='outlined'\n                size='small'\n                color='primary'\n                disabled={!isMonetizedUsagePolicy || isNotAuthorized}\n                onClick={handlePopup}\n            >\n                <FormattedMessage\n                    id='Applications.Details.Invoice.view.btn'\n                    defaultMessage='View Invoice'\n                />\n            </Button>\n            <Dialog open={showPopup} onClose={handleClose} fullWidth='true'>\n                {invoice && (\n                    <MUIDataTable\n                        title='Upcoming Invoice'\n                        data={invoice}\n                        columns={columns}\n                        options={options}\n                    />\n                )}\n            </Dialog>\n            <Dialog open={showErrorPopup} onClose={handleAlertClose} fullWidth='true'>\n                <DialogTitle>No Data Available</DialogTitle>\n                <DialogContent>\n                    <DialogContentText id='invoice-dialog-description'>\n                        Pending invoice data not found for this subscription.\n                    </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={handleAlertClose} color='primary'>\n                        Close\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        </>\n    );\n}\n\nInvoice.propTypes = {\n    subscriptionId: PropTypes.string.isRequired,\n    isMonetizedUsagePolicy: PropTypes.string.isRequired,\n    isNotAuthorized: PropTypes.string.isRequired,\n    api: PropTypes.instanceOf(API).isRequired,\n};\n\nexport default Invoice;\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { Component } from 'react';\nimport { FormattedMessage, injectIntl, defineMessages } from 'react-intl';\nimport IconButton from '@material-ui/core/IconButton';\nimport Button from '@material-ui/core/Button';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport Paper from '@material-ui/core/Paper';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Grid from '@material-ui/core/Grid';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableRow from '@material-ui/core/TableRow';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Typography from '@material-ui/core/Typography';\nimport PropTypes from 'prop-types';\nimport MUIDataTable from 'mui-datatables';\nimport InfoIcon from '@material-ui/icons/Info';\nimport UserIcon from '@material-ui/icons/Person';\n\nimport Alert from 'AppComponents/Shared/Alert';\nimport API from 'AppData/api';\nimport { ScopeValidation, resourceMethod, resourcePath } from 'AppData/ScopeValidation';\nimport AuthManager from 'AppData/AuthManager';\nimport Invoice from './Invoice';\n\nconst styles = (theme) => ({\n    heading: {\n        marginTop: theme.spacing(3),\n        marginBottom: theme.spacing(2),\n    },\n    button: {\n        margin: theme.spacing(1),\n        color: theme.palette.primary.dark,\n    },\n    headline: { paddingTop: theme.spacing(1.25), paddingLeft: theme.spacing(2.5) },\n    popupHeadline: {\n        alignItems: 'center',\n        borderBottom: '2px solid #40E0D0',\n        textAlign: 'center',\n    },\n    table: {\n        '& td': {\n            fontSize: theme.typography.fontSize,\n        },\n        '& th': {\n            fontSize: theme.typography.fontSize * 1.2,\n        },\n    },\n    searchDiv: {\n        float: 'right',\n        paddingTop: theme.spacing(1.25),\n        paddingRight: theme.spacing(1.25),\n    },\n    searchRoot: {\n        paddingTop: theme.spacing(0.25),\n        paddingBottom: theme.spacing(0.25),\n        paddingRight: theme.spacing(0.5),\n        paddingLeft: theme.spacing(0.5),\n        display: 'flex',\n        alignItems: 'right',\n        width: theme.spacing(50),\n        borderBottom: '1px solid #E8E8E8',\n    },\n    searchInput: {\n        marginLeft: theme.spacing(1),\n        flex: 1,\n    },\n    searchIconButton: {\n        padding: theme.spacing(1.25),\n    },\n    noDataMessage: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        color: '#888888',\n        width: '100%',\n    },\n    tableColumnSize: {\n        width: '14%',\n    },\n    tableColumnSize2: {\n        width: '30%',\n    },\n    dialogColumnSize: {\n        width: '50%',\n    },\n    dialog: {\n        float: 'center',\n        alignItems: 'center',\n    },\n    invoiceTable: {\n        '& td': {\n            fontSize: theme.typography.fontSize * 1.5,\n        },\n    },\n    uniqueCell: {\n        borderTop: '1px solid #000000',\n        fontWeight: 'bold',\n    },\n    mainTitle: {\n        paddingLeft: 0,\n        marginTop: theme.spacing(3),\n    },\n    titleWrapper: {\n        marginBottom: theme.spacing(3),\n    },\n    typography: {\n        padding: theme.spacing(2),\n    },\n    root: {\n        flexGrow: 1,\n    },\n    InfoToolTip: {\n        backgroundColor: theme.custom.disableColor,\n        color: theme.palette.getContrastText(theme.custom.disableColor),\n        fontSize: theme.typography.fontSize,\n        fontWeight: theme.typography.h6.fontWeight,\n        border: 'solid 1px ' + theme.palette.grey,\n        borderRadius: theme.shape.borderRadius,\n        padding: theme.spacing(2),\n    },\n    subscriberHeader: {\n        fontSize: theme.typography.h6.fontSize,\n        color: theme.typography.h6.color,\n        fontWeight: theme.typography.h6.fontWeight,\n    },\n});\n\nconst subscriptionStatus = {\n    BLOCKED: 'BLOCKED',\n    PROD_BLOCKED: 'PROD_ONLY_BLOCKED',\n};\n\n/**\n * Table pagination for subscriptions table\n *\n * @param props props used for SubscriptionTablePagination\n * @returns {*}\n */\nfunction SubscriptionTablePagination(props) {\n    const {\n        count, page, rowsPerPage, onChangePage,\n    } = props;\n\n    /**\n     * handleFirstPageButtonClick loads data of the first page\n     * */\n    function handleFirstPageButtonClick() {\n        if (onChangePage) {\n            onChangePage(0);\n        }\n    }\n\n    /**\n     * handleBackButtonClick load data of the prev page\n     * */\n    function handleBackButtonClick() {\n        if (onChangePage) {\n            onChangePage(page - 1);\n        }\n    }\n\n    /**\n     * handleNextButtonClick load data of the next page\n     * */\n    function handleNextButtonClick() {\n        if (onChangePage) {\n            onChangePage(page + 1);\n        }\n    }\n\n    /**\n     * handleLastPageButtonClick load data of the last page\n     * */\n    function handleLastPageButtonClick() {\n        if (onChangePage) {\n            onChangePage(Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n        }\n    }\n\n    return (\n        <div\n            style={{ display: 'flex' }}\n        >\n            <IconButton\n                onClick={handleFirstPageButtonClick}\n                disabled={page === 0}\n                aria-label='first page'\n            >\n                <FirstPageIcon />\n            </IconButton>\n            <IconButton\n                onClick={handleBackButtonClick}\n                disabled={page === 0}\n                aria-label='previous page'\n            >\n                <KeyboardArrowLeft />\n            </IconButton>\n            <IconButton\n                onClick={handleNextButtonClick}\n                disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n                aria-label='next page'\n            >\n                <KeyboardArrowRight />\n            </IconButton>\n            <IconButton\n                onClick={handleLastPageButtonClick}\n                disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n                aria-label='last page'\n            >\n                <LastPageIcon />\n            </IconButton>\n        </div>\n    );\n}\n\nSubscriptionTablePagination.propTypes = {\n    count: PropTypes.number.isRequired,\n    page: PropTypes.number.isRequired,\n    rowsPerPage: PropTypes.number.isRequired,\n    onChangePage: PropTypes.func.isRequired,\n};\n\n/**\n * Lists all subscriptions.\n *\n * @class SubscriptionsTable\n * @extends {React.Component}\n */\nclass SubscriptionsTable extends Component {\n    constructor(props) {\n        super(props);\n        this.api = props.api;\n        this.state = {\n            subscriptions: null,\n            totalSubscription: 0,\n            page: 0,\n            rowsPerPage: 5,\n            searchQuery: null,\n            rowsPerPageOptions: [5, 10, 25, 50, 100],\n            emptyColumnHeight: 60,\n            policies: [],\n            subscriberClaims: null,\n        };\n        this.formatSubscriptionStateString = this.formatSubscriptionStateString.bind(this);\n        this.blockSubscription = this.blockSubscription.bind(this);\n        this.blockProductionOnly = this.blockProductionOnly.bind(this);\n        this.unblockSubscription = this.unblockSubscription.bind(this);\n        this.handleChangePage = this.handleChangePage.bind(this);\n        this.handleChangeRowsPerPage = this.handleChangeRowsPerPage.bind(this);\n        this.filterSubscriptions = this.filterSubscriptions.bind(this);\n        this.isMonetizedPolicy = this.isMonetizedPolicy.bind(this);\n        this.renderClaims = this.renderClaims.bind(this);\n        this.isNotCreator = AuthManager.isNotCreator();\n        this.isNotPublisher = AuthManager.isNotPublisher();\n    }\n\n    componentDidMount() {\n        this.fetchSubscriptionData();\n    }\n\n    /**\n     * Returns the set of action buttons based on the current subscription state\n     *\n     * @param {*} state State of the subscription (PROD_ONLY_BLOCKED/BLOCKED/ACTIVE)\n     * @param {*} subscriptionId Subscription ID\n     * @returns {JSX} Action buttons in JSX\n     * @memberof SubscriptionsTable\n     */\n    getSubscriptionBlockingButtons(state, subscriptionId) {\n        const { classes } = this.props;\n        if (state === subscriptionStatus.PROD_BLOCKED) {\n            return (\n                <dev>\n                    <Button\n                        size='small'\n                        variant='outlined'\n                        color='primary'\n                        onClick={() => this.blockProductionOnly(subscriptionId)}\n                        className={classes.button}\n                        disabled='true'\n                    >\n                        <FormattedMessage\n                            id='block.production.only'\n                            defaultMessage='Block Production Only'\n                        />\n                    </Button>\n                    <Button\n                        size='small'\n                        variant='outlined'\n                        color='primary'\n                        onClick={() => this.blockSubscription(subscriptionId)}\n                        className={classes.button}\n                    >\n                        <FormattedMessage\n                            id='block.all'\n                            defaultMessage='Block All'\n                        />\n                    </Button>\n                    <Button\n                        size='small'\n                        variant='outlined'\n                        color='primary'\n                        onClick={() => this.unblockSubscription(subscriptionId)}\n                        className={classes.button}\n                    >\n                        <FormattedMessage\n                            id='unblock'\n                            defaultMessage='Unblock'\n                        />\n                    </Button>\n                </dev>\n            );\n        } else if (state === subscriptionStatus.BLOCKED) {\n            return (\n                <dev>\n                    <Button\n                        size='small'\n                        variant='outlined'\n                        color='primary'\n                        onClick={() => this.blockProductionOnly(subscriptionId)}\n                        className={classes.button}\n                    >\n                        <FormattedMessage\n                            id='block.production.only'\n                            defaultMessage='Block Production Only'\n                        />\n                    </Button>\n                    <Button\n                        size='small'\n                        variant='outlined'\n                        color='primary'\n                        onClick={() => this.blockSubscription(subscriptionId)}\n                        className={classes.button}\n                        disabled='true'\n                    >\n                        <FormattedMessage\n                            id='block.all'\n                            defaultMessage='Block All'\n                        />\n                    </Button>\n                    <Button\n                        size='small'\n                        variant='outlined'\n                        color='primary'\n                        onClick={() => this.unblockSubscription(subscriptionId)}\n                        className={classes.button}\n                    >\n                        <FormattedMessage\n                            id='unblock'\n                            defaultMessage='Unblock'\n                        />\n                    </Button>\n                </dev>\n            );\n        } else {\n            return (\n                <dev>\n                    <Button\n                        size='small'\n                        variant='outlined'\n                        color='primary'\n                        onClick={() => this.blockProductionOnly(subscriptionId)}\n                        className={classes.button}\n                    >\n                        <FormattedMessage\n                            id='block.production.only'\n                            defaultMessage='Block Production Only'\n                        />\n                    </Button>\n                    <Button\n                        size='small'\n                        variant='outlined'\n                        color='primary'\n                        onClick={() => this.blockSubscription(subscriptionId)}\n                        className={classes.button}\n                    >\n                        <FormattedMessage\n                            id='block.all'\n                            defaultMessage='Block All'\n                        />\n                    </Button>\n                    <Button\n                        size='small'\n                        variant='outlined'\n                        color='primary'\n                        onClick={() => this.unblockSubscription(subscriptionId)}\n                        className={classes.button}\n                        disabled='true'\n                    >\n                        <FormattedMessage\n                            id='unblock'\n                            defaultMessage='Unblock'\n                        />\n                    </Button>\n                </dev>\n            );\n        }\n    }\n\n    /**\n     * Returns subscription state string based on te current subscription state\n     *\n     * @param {*} state The current state of subscription\n     * @returns {JSX} Subscription state string\n     * @memberof SubscriptionsTable\n     */\n    formatSubscriptionStateString(state) {\n        if (state === subscriptionStatus.PROD_BLOCKED) {\n            return (\n                <FormattedMessage\n                    id='Apis.Details.Subscriptions.SubscriptionsTable.blocked.production.only.subs.state'\n                    defaultMessage='Blocked Production Only'\n                />\n            );\n        } else if (state === subscriptionStatus.BLOCKED) {\n            return (\n                <FormattedMessage\n                    id='Apis.Details.Subscriptions.SubscriptionsTable.blocked.subs.state'\n                    defaultMessage='Blocked'\n                />\n            );\n        } else {\n            return (\n                <FormattedMessage\n                    id='Apis.Details.Subscriptions.SubscriptionsTable.active.subs.state'\n                    defaultMessage='Active'\n                />\n            );\n        }\n    }\n\n    /**\n     * Blocks the given subscription\n     *\n     * @param {*} subscriptionId Subscription ID\n     * @memberof SubscriptionsTable\n     */\n    blockSubscription(subscriptionId) {\n        const { intl } = this.props;\n        const api = new API();\n        const promisedSubscriptionUpdate = api.blockSubscriptions(subscriptionId, subscriptionStatus.BLOCKED);\n        promisedSubscriptionUpdate\n            .then(() => {\n                Alert.success(intl.formatMessage({\n                    id: 'Apis.Details.Subscriptions.SubscriptionsTable.subscription.blocked',\n                    defaultMessage: 'Subscription was blocked.',\n                }));\n                this.fetchSubscriptionData();\n            })\n            .catch((errorResponse) => {\n                console.error(errorResponse);\n                const { message } = errorResponse.response.body;\n                const messages = defineMessages({\n                    errorMessage: {\n                        id: 'Apis.Details.Subscriptions.SubscriptionsTable.error.subscription.block',\n                        defaultMessage: 'Error: Unable to block subscription. (Reason: {message})',\n                    },\n                });\n                Alert.error(intl.formatMessage(messages.errorMessage, { message }));\n            });\n    }\n\n    /**\n     * Blocks production only for the given subscription\n     *\n     * @param {*} subscriptionId Subscription ID\n     * @memberof SubscriptionsTable\n     */\n    blockProductionOnly(subscriptionId) {\n        const { intl } = this.props;\n        const api = new API();\n        const promisedSubscriptionUpdate = api.blockSubscriptions(subscriptionId, subscriptionStatus.PROD_BLOCKED);\n        promisedSubscriptionUpdate\n            .then(() => {\n                Alert.success(intl.formatMessage({\n                    id: 'Apis.Details.Subscriptions.SubscriptionsTable.subscription.blocked.prod.only',\n                    defaultMessage: 'Subscription was blocked for production only.',\n                }));\n                this.fetchSubscriptionData();\n            })\n            .catch((errorResponse) => {\n                console.error(errorResponse);\n                const { message } = errorResponse.response.body;\n                const messages = defineMessages({\n                    errorMessage: {\n                        id: 'Apis.Details.Subscriptions.SubscriptionsTable.error.subscription.block.prod.only',\n                        defaultMessage: 'Error: Unable to block subscription. (Reason: {message})',\n                    },\n                });\n                Alert.error(intl.formatMessage(messages.errorMessage, { message }));\n            });\n    }\n\n    /**\n     * Unblocks the given subscription\n     *\n     * @param {*} subscriptionId Subscription ID\n     * @memberof SubscriptionsTable\n     */\n    unblockSubscription(subscriptionId) {\n        const { intl } = this.props;\n        const api = new API();\n        const promisedSubscriptionUpdate = api.unblockSubscriptions(subscriptionId);\n        promisedSubscriptionUpdate\n            .then(() => {\n                Alert.success(intl.formatMessage({\n                    id: 'Apis.Details.Subscriptions.SubscriptionsTable.subscription.unblocked',\n                    defaultMessage: 'Subscription was unblocked.',\n                }));\n                this.fetchSubscriptionData();\n            })\n            .catch((errorResponse) => {\n                console.error(errorResponse);\n                const { message } = errorResponse.response.body;\n                const messages = defineMessages({\n                    errorMessage: {\n                        id: 'Apis.Details.Subscriptions.SubscriptionsTable.error.subscription.unblock',\n                        defaultMessage: 'Error: Unable to unblock subscription. (Reason: {message})',\n                    },\n                });\n                Alert.error(intl.formatMessage(messages.errorMessage, { message }));\n            });\n    }\n\n    /**\n     * Fetches subscription data\n     *\n     * @memberof SubscriptionsTable\n     */\n    fetchSubscriptionData() {\n        const api = new API();\n        const { page, rowsPerPage, searchQuery } = this.state;\n        const { intl } = this.props;\n        const promisedSubscriptions = api.subscriptions(this.api.id, page * rowsPerPage, rowsPerPage, searchQuery);\n        promisedSubscriptions\n            .then((response) => {\n                this.setState({\n                    subscriptions: response.body.list,\n                    totalSubscription: response.body.pagination.total,\n                });\n                for (let i = 0; i < response.body.list.length; i++) {\n                    const { subscriptionId } = response.body.list[i];\n                    const promisedInfo = api.getSubscriberInfo(subscriptionId);\n                    promisedInfo\n                        .then((resp) => {\n                            this.setState((prevState) => ({\n                                subscriberClaims: {\n                                    ...prevState.subscriberClaims,\n                                    [subscriptionId]: resp.body,\n                                },\n                            }));\n                        })\n                        .catch((errorMessage) => {\n                            console.error(errorMessage);\n                            Alert.error(intl.formatMessage({\n                                id: 'Apis.Details.Subscriptions.SubscriptionsTable.subscriber.info.error',\n                                defaultMessage: 'Error while retrieving the subscriber information',\n                            }));\n                        });\n                }\n            })\n            .catch((errorMessage) => {\n                console.error(errorMessage);\n                Alert.error(intl.formatMessage({\n                    id: 'Apis.Details.Subscriptions.SubscriptionsTable.subscriptions.error',\n                    defaultMessage: 'Error while retrieving the subscriptions',\n                }));\n            });\n        api.getMonetization(this.props.api.id).then((status) => {\n            this.setState({ monetizationStatus: status.enabled });\n        });\n        api.getSubscriptionPolicies(this.api.id).then((policies) => {\n            const filteredPolicies = policies.filter((policy) => policy.tierPlan === 'COMMERCIAL');\n            this.setState({ policies: filteredPolicies });\n        });\n    }\n\n    /**\n     * handleChangePage handle change in selected page\n     *\n     * @param page selected page\n     * */\n    handleChangePage(page) {\n        this.setState({ page }, this.fetchSubscriptionData);\n    }\n\n    /**\n     * Checks whether the policy is a usage based monetization plan\n     *\n     * */\n    isMonetizedPolicy(policyName) {\n        const { policies, monetizationStatus } = this.state;\n        if (policies.length > 0) {\n            const filteredPolicies = policies.filter(\n                (policy) => policy.name === policyName && policy.monetizationAttributes.pricePerRequest != null,\n            );\n            return (filteredPolicies.length > 0 && monetizationStatus);\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * handleChangeRowsPerPage handle change in rows per page\n     *\n     * @param event rows per page change event\n     * */\n    handleChangeRowsPerPage(event) {\n        this.setState({ rowsPerPage: event.target.value, page: 0 }, this.fetchSubscriptionData);\n    }\n\n    /**\n     * Filter subscriptions based on user search value\n     *\n     * @param event onChange event of user search\n     */\n    filterSubscriptions(event) {\n        this.setState({ searchQuery: event.target.value }, this.fetchSubscriptionData);\n    }\n\n    /**\n     * Render claims based on the claim object\n     */\n    renderClaims(claimsObject) {\n        const { classes } = this.props;\n        if (claimsObject) {\n            return (\n                <div className={classes.root}>\n                    <Grid container spacing={1}>\n                        <Grid item>\n                            <UserIcon color='primary' />\n                        </Grid>\n                        <Grid item>\n                            {claimsObject.name}\n                        </Grid>\n                    </Grid>\n                    {claimsObject.claims && (\n                        <div>\n                            <Table className={classes.table}>\n                                <TableBody>\n                                    {claimsObject.claims.map((claim) => (\n                                        <TableRow hover>\n                                            <TableCell>{claim.name}</TableCell>\n                                            {claim.value ? (\n                                                <TableCell>{claim.value}</TableCell>\n                                            ) : (\n                                                <TableCell>Not Available</TableCell>\n                                            )}\n                                        </TableRow>\n                                    ))}\n                                </TableBody>\n                            </Table>\n                        </div>\n                    )}\n                </div>\n            );\n        }\n        return (\n            <div>\n                <Typography className={classes.typography}>\n                    <FormattedMessage\n                        id='Apis.Details.Subscriptions.Subscriber.no.claims'\n                        defaultMessage='No subscriber claims data available'\n                    />\n                </Typography>\n            </div>\n        );\n    }\n\n\n    /**\n     *\n     */\n    render() {\n        const {\n            subscriptions, page, rowsPerPage, totalSubscription, rowsPerPageOptions, emptyColumnHeight,\n            subscriberClaims,\n        } = this.state;\n        const { classes, api } = this.props;\n        if (!subscriptions) {\n            return (\n                <Grid container direction='row' justify='center' alignItems='center'>\n                    <Grid item>\n                        <CircularProgress />\n                    </Grid>\n                </Grid>\n            );\n        }\n        const columns = [\n            {\n                name: 'subscriptionId',\n                options: {\n                    display: 'excluded',\n                    filter: false,\n                },\n            },\n            {\n                name: 'applicationInfo.applicationId',\n                options: {\n                    display: 'excluded',\n                    filter: false,\n                },\n            },\n            {\n                name: 'applicationInfo.subscriber',\n                label: (\n                    <FormattedMessage\n                        id='Apis.Details.Subscriptions.Listing.column.header.subscriber'\n                        defaultMessage='Subscriber'\n                    />\n                ),\n                options: {\n                    sort: false,\n                    customBodyRender: (value, tableMeta) => {\n                        if (tableMeta.rowData) {\n                            return (\n                                <div>\n                                    <Tooltip\n                                        interactive\n                                        placement='top'\n                                        classes={{\n                                            tooltip: classes.InfoToolTip,\n                                        }}\n                                        title={(\n                                            <>\n                                                {subscriberClaims && (\n                                                    <div>\n                                                        {this.renderClaims(subscriberClaims[tableMeta.rowData[0]])}\n                                                    </div>\n                                                )}\n                                            </>\n                                        )}\n                                    >\n                                        <Grid container direction='row' alignItems='center' spacing={1}>\n                                            <Grid item>\n                                                <Typography>\n                                                    <InfoIcon color='action' />\n                                                </Typography>\n                                            </Grid>\n                                            <Grid item>\n                                                {value}\n                                            </Grid>\n                                        </Grid>\n                                    </Tooltip>\n                                </div>\n                            );\n                        }\n                        return null;\n                    },\n                },\n            },\n            {\n                name: 'applicationInfo.name',\n                label: (\n                    <FormattedMessage\n                        id='Apis.Details.Subscriptions.Listing.column.header.application'\n                        defaultMessage='Application'\n                    />\n                ),\n                options: {\n                    sort: false,\n                },\n            },\n            {\n                name: 'applicationInfo.description',\n                options: {\n                    display: 'excluded',\n                    filter: false,\n                },\n            },\n            {\n                name: 'applicationInfo.subscriptionCount',\n                options: {\n                    display: 'excluded',\n                    filter: false,\n                },\n            },\n            {\n                name: 'throttlingPolicy',\n                label: (\n                    <FormattedMessage\n                        id='Apis.Details.Subscriptions.Listing.column.header.throttling.tier'\n                        defaultMessage='Tier'\n                    />\n                ),\n                options: {\n                    sort: false,\n                },\n            },\n            {\n                name: 'subscriptionStatus',\n                label: (\n                    <FormattedMessage\n                        id='Apis.Details.Subscriptions.Listing.column.header.subscription.status'\n                        defaultMessage='Status'\n                    />\n                ),\n                options: {\n                    sort: false,\n                },\n            },\n            {\n                name: 'actions',\n                label: (\n                    <FormattedMessage\n                        id='Apis.Details.Subscriptions.Listing.column.header.subscription.actions'\n                        defaultMessage='Actions'\n                    />\n                ),\n                options: {\n                    sort: false,\n                    customBodyRender: (value, tableMeta) => {\n                        if (tableMeta.rowData) {\n                            const status = tableMeta.rowData[7];\n                            const subscriptionId = tableMeta.rowData[0];\n                            return (\n                                <ScopeValidation\n                                    resourceMethod={resourceMethod.POST}\n                                    resourcePath={resourcePath.BLOCK_SUBSCRIPTION}\n                                >\n                                    {\n                                        this.getSubscriptionBlockingButtons(\n                                            status,\n                                            subscriptionId,\n                                        )\n                                    }\n                                </ScopeValidation>\n                            );\n                        }\n                        return null;\n                    },\n                },\n            },\n            {\n                name: 'invoice',\n                label: (\n                    <FormattedMessage\n                        id='Apis.Details.Subscriptions.Listing.column.header.subscription.invoice'\n                        defaultMessage='Invoice'\n                    />\n                ),\n                options: {\n                    sort: false,\n                    customBodyRender: (value, tableMeta) => {\n                        if (tableMeta.rowData) {\n                            const throttlingPolicy = tableMeta.rowData[6];\n                            const subscriptionId = tableMeta.rowData[0];\n                            return (\n                                <Invoice\n                                    subscriptionId={subscriptionId}\n                                    isNotAuthorized={this.isNotCreator && this.isNotPublisher}\n                                    isMonetizedUsagePolicy={\n                                        this.isMonetizedPolicy(throttlingPolicy)\n                                    }\n                                    api={api}\n                                />\n                            );\n                        }\n                        return null;\n                    },\n                },\n            },\n        ];\n\n        const options = {\n            title: false,\n            print: false,\n            download: false,\n            viewColumns: false,\n            elevation: 1,\n            customToolbar: false,\n            search: false,\n            selectableRows: 'none',\n            rowsPerPageOptions: [5, 10, 25, 50, 100],\n            customFooter: () => {\n                return (\n                    <TablePagination\n                        rowsPerPageOptions={rowsPerPageOptions}\n                        colSpan={6}\n                        count={totalSubscription}\n                        rowsPerPage={rowsPerPage}\n                        page={page}\n                        onChangePage={this.handleChangePage}\n                        onChangeRowsPerPage={this.handleChangeRowsPerPage}\n                        ActionsComponent={SubscriptionTablePagination}\n                    />\n                );\n            },\n        };\n        const subMails = {};\n        const emails = subscriberClaims && Object.entries(subscriberClaims).map(([, v]) => {\n            let email = null;\n            if (!subMails[v.name] && v.claims.length > 0) {\n                email = v.claims.find((claim) => claim.URI === 'http://wso2.org/claims/emailaddress').value;\n                subMails[v.name] = email;\n            }\n            return email;\n        }).reduce((a, b) => {\n            return b !== null ? `${a || ''},${b}` : a;\n        });\n        let names = null;\n        if (subMails) {\n            Object.entries(subMails).map(([k, v]) => {\n                if (v) {\n                    if (names === null) {\n                        names = k;\n                    } else {\n                        names = `${names}, ${k}`;\n                    }\n                }\n                return null;\n            });\n        }\n        const Tip = names ? React.Fragment : Tooltip;\n        return (\n            <>\n                <div className={classes.heading}>\n                    <Typography variant='h4' component='h2'>\n                        <FormattedMessage\n                            id='Apis.Details.Subscriptions.SubscriptionsTable.manage.subscriptions'\n                            defaultMessage='Manage Subscriptions'\n                        />\n                        {'   '}\n                        {subscriptions.length > 0 && (\n                            <Tip title='No contact details' placement='top'>\n                                <span>\n                                    <Button\n                                        target='_blank'\n                                        rel='noopener'\n                                        href={`mailto:?subject=Message from the API Publisher&cc=${emails}`\n                                            + `&body=Hi ${names},`}\n                                        size='small'\n                                        disabled={!names}\n                                        variant='outlined'\n                                    >\n                                        Contact Subscribers\n                                    </Button>\n                                </span>\n                            </Tip>\n                        )}\n                    </Typography>\n                    <Typography variant='caption' gutterBottom>\n                        <FormattedMessage\n                            id='Apis.Details.Subscriptions.SubscriptionsTable.sub.heading'\n                            defaultMessage='Manage subscriptions of the API'\n                        />\n                    </Typography>\n                </div>\n                <Paper elevation={0}>\n                    {subscriptions.length > 0 ? (\n                        <div>\n                            <MUIDataTable title='' data={subscriptions} columns={columns} options={options} />\n                        </div>\n                    )\n                        : (\n                            <div className={classes.noDataMessage} style={{ height: rowsPerPage * emptyColumnHeight }}>\n                                <FormattedMessage\n                                    id='Apis.Details.Subscriptions.SubscriptionsTable.no.subscriptions'\n                                    defaultMessage='No subscriptions data available'\n                                />\n                            </div>\n                        )}\n                </Paper>\n            </>\n        );\n    }\n}\n\nSubscriptionsTable.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    api: PropTypes.shape({\n        id: PropTypes.string,\n    }).isRequired,\n    intl: PropTypes.shape({}).isRequired,\n};\n\nexport default injectIntl(withStyles(styles)(SubscriptionsTable));\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { Component } from 'react';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport PropTypes from 'prop-types';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Typography from '@material-ui/core/Typography';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Paper from '@material-ui/core/Paper';\nimport API from 'AppData/api';\nimport { isRestricted } from 'AppData/AuthManager';\n\nconst styles = (theme) => ({\n    subscriptionPoliciesPaper: {\n        marginTop: theme.spacing(2),\n        padding: theme.spacing(2),\n    },\n    grid: {\n        margin: theme.spacing(1.25),\n    },\n    gridLabel: {\n        marginTop: theme.spacing(1.5),\n    },\n    mainTitle: {\n        paddingLeft: 0,\n    },\n});\n\n/**\n * Manage subscription policies of the API\n * */\nclass SubscriptionPoliciesManage extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            subscriptionPolicies: {},\n        };\n        this.handleChange = this.handleChange.bind(this);\n    }\n\n    componentDidMount() {\n        API.policies('subscription')\n            .then((res) => {\n                this.setState({ subscriptionPolicies: res.body.list });\n            })\n            .catch((error) => {\n                if (process.env.NODE_ENV !== 'production') {\n                    console.error(error);\n                }\n            });\n    }\n\n    /**\n     * Handle onChange of selected subsription policies\n     *\n     * @param event onChange event\n     */\n    handleChange(event) {\n        const { name, checked } = event.target;\n        const { setPolices, policies } = this.props;\n        let newSelectedPolicies = [...policies];\n        if (checked) {\n            newSelectedPolicies.push(name);\n        } else {\n            newSelectedPolicies = policies.filter((policy) => policy !== name);\n        }\n        setPolices(newSelectedPolicies);\n    }\n\n    render() {\n        const { classes, api, policies } = this.props;\n        const { subscriptionPolicies } = this.state;\n\n        return (\n            <>\n                <Typography variant='h4' component='h2'>\n                    <FormattedMessage\n                        id='Apis.Details.Subscriptions.SubscriptionPoliciesManage.business.plans'\n                        defaultMessage='Business Plans'\n                    />\n                </Typography>\n                {api.apiType === API.CONSTS.APIProduct\n                    ? (\n                        <Typography variant='caption' gutterBottom>\n                            <FormattedMessage\n                                id='Apis.Details.Subscriptions.SubscriptionPoliciesManage.APIProduct.sub.heading'\n                                defaultMessage='Attach business plans to API'\n                            />\n                        </Typography>\n                    )\n                    : (\n                        <Typography variant='caption' gutterBottom>\n                            <FormattedMessage\n                                id='Apis.Details.Subscriptions.SubscriptionPoliciesManage.sub.heading'\n                                defaultMessage='Attach business plans to API'\n                            />\n                        </Typography>\n                    )}\n                <Paper className={classes.subscriptionPoliciesPaper}>\n                    <FormControl className={classes.formControl}>\n                        <FormGroup>\n                            { subscriptionPolicies && Object.entries(subscriptionPolicies).map((value) => (\n                                <FormControlLabel\n                                    key={value[1].name}\n                                    control={(\n                                        <Checkbox\n                                            disabled={isRestricted(['apim:api_publish', 'apim:api_create'], api)}\n                                            color='primary'\n                                            checked={policies.includes(value[1].name)}\n                                            onChange={(e) => this.handleChange(e)}\n                                            name={value[1].name}\n                                        />\n                                    )}\n                                    label={value[1].name + ' : ' + value[1].description}\n                                />\n                            ))}\n                        </FormGroup>\n                    </FormControl>\n                </Paper>\n            </>\n        );\n    }\n}\n\nSubscriptionPoliciesManage.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    intl: PropTypes.shape({ formatMessage: PropTypes.func }).isRequired,\n    api: PropTypes.shape({ policies: PropTypes.array }).isRequired,\n    setPolices: PropTypes.func.isRequired,\n    policies: PropTypes.shape({}).isRequired,\n};\n\nexport default injectIntl(withStyles(styles)(SubscriptionPoliciesManage));\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport deburr from 'lodash/deburr';\nimport Downshift from 'downshift';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Paper from '@material-ui/core/Paper';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Chip from '@material-ui/core/Chip';\nimport API from 'AppData/api';\nimport CONSTS from 'AppData/Constants';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n        height: 250,\n    },\n    container: {\n        flexGrow: 1,\n        position: 'relative',\n    },\n    paper: {\n        position: 'absolute',\n        zIndex: 1,\n        marginTop: theme.spacing(1),\n        left: 0,\n        right: 0,\n    },\n    chip: {\n        margin: theme.spacing(0.5, 0.25),\n    },\n    inputRoot: {\n        flexWrap: 'wrap',\n    },\n    inputInput: {\n        width: 'auto',\n        flexGrow: 1,\n    },\n    divider: {\n        height: theme.spacing(2),\n    },\n}));\n\n/**\n * Renders the input component\n */\nfunction renderInput(inputProps) {\n    const {\n        InputProps, classes, ref, ...other\n    } = inputProps;\n\n    return (\n        <TextField\n            InputProps={{\n                inputRef: ref,\n                classes: {\n                    root: classes.inputRoot,\n                    input: classes.inputInput,\n                },\n                ...InputProps,\n            }}\n            {...other}\n        />\n    );\n}\n\nrenderInput.propTypes = {\n    classes: PropTypes.shape({\n        type: PropTypes.string,\n        inputType: PropTypes.string,\n    }).isRequired,\n    InputProps: PropTypes.shape({\n        type: PropTypes.string,\n        inputType: PropTypes.string,\n    }).isRequired,\n};\n\n/**\n * Renders the suggestion component\n */\nfunction renderSuggestion(suggestionProps) {\n    const {\n        suggestion, index, itemProps, highlightedIndex, tenantList,\n    } = suggestionProps;\n    const isHighlighted = highlightedIndex === index;\n    const isSelected = (tenantList || '').indexOf(suggestion) > -1;\n\n    return (\n        <MenuItem\n            {...itemProps}\n            key={suggestion}\n            selected={isHighlighted}\n            component='div'\n            style={{\n                fontWeight: isSelected ? 500 : 400,\n            }}\n        >\n            {suggestion}\n        </MenuItem>\n    );\n}\n\nrenderSuggestion.propTypes = {\n    highlightedIndex: PropTypes.oneOfType([PropTypes.oneOf([null]), PropTypes.number]).isRequired,\n    index: PropTypes.number.isRequired,\n    itemProps: PropTypes.shape({\n        type: PropTypes.string,\n        inputType: PropTypes.string,\n    }).isRequired,\n    tenantList: PropTypes.shape([]).isRequired,\n    suggestion: PropTypes.string.isRequired,\n};\n\n/**\n * Gets suggestion list\n */\nfunction getSuggestions(value, suggestions, { showEmpty = false } = {}) {\n    const inputValue = deburr(value.trim()).toLowerCase();\n    const inputLength = inputValue.length;\n    let count = 0;\n\n    return inputLength === 0 && !showEmpty\n        ? []\n        : suggestions.filter((suggestion) => {\n            const keep = count < 15 && suggestion.slice(0, inputLength).toLowerCase() === inputValue;\n            if (keep) {\n                count += 1;\n            }\n            return keep;\n        });\n}\n\n/**\n * Downshift selection component\n */\nfunction DownshiftMultiple(props) {\n    const { tenantList, setTenantList } = props;\n    const { classes, suggestions } = props;\n    const [inputValue, setInputValue] = React.useState('');\n\n    function handleKeyDown(event) {\n        if (tenantList.length && !inputValue.length && event.key === 'Backspace') {\n            setTenantList(tenantList.slice(0, tenantList.length - 1));\n        }\n    }\n\n    function handleInputChange(event) {\n        setInputValue(event.target.value);\n    }\n\n    function handleChange(item) {\n        let newSelectedItem = [...tenantList];\n        if (newSelectedItem.indexOf(item) === -1) {\n            newSelectedItem = [...newSelectedItem, item];\n        }\n        setInputValue('');\n        setTenantList(newSelectedItem);\n    }\n\n    const handleDelete = (item) => () => {\n        const newSelectedItem = [...tenantList];\n        newSelectedItem.splice(newSelectedItem.indexOf(item), 1);\n        setTenantList(newSelectedItem);\n    };\n\n\n    return (\n        <Downshift\n            id='downshift-multiple'\n            inputValue={inputValue}\n            onChange={handleChange}\n            tenantList={tenantList}\n        >\n            {({\n                getInputProps,\n                getItemProps,\n                getLabelProps,\n                isOpen,\n                inputValue: inputValue2,\n                tenantList: tenantList2,\n                highlightedIndex,\n            }) => {\n                const {\n                    onBlur, onChange, onFocus, ...inputProps\n                } = getInputProps({\n                    onKeyDown: handleKeyDown,\n                    placeholder: 'Type and select tenants from the suggested list',\n                });\n\n                return (\n                    <div className={classes.container}>\n                        {renderInput({\n                            fullWidth: true,\n                            classes,\n                            label: 'Tenants',\n                            InputLabelProps: getLabelProps(),\n                            InputProps: {\n                                startAdornment: tenantList.map((item) => (\n                                    <Chip\n                                        key={item}\n                                        tabIndex={-1}\n                                        label={item}\n                                        className={classes.chip}\n                                        onDelete={handleDelete(item)}\n                                    />\n                                )),\n                                onBlur,\n                                onChange: (event) => {\n                                    handleInputChange(event);\n                                    onChange(event);\n                                },\n                                onFocus,\n                            },\n                            inputProps,\n                        })}\n\n                        {isOpen ? (\n                            <Paper className={classes.paper} square>\n                                {getSuggestions(inputValue2, suggestions).map((suggestion, index) => renderSuggestion({\n                                    suggestion,\n                                    index,\n                                    itemProps: getItemProps({ item: suggestion }),\n                                    highlightedIndex,\n                                    tenantList: tenantList2,\n                                }))}\n                            </Paper>\n                        ) : null}\n                    </div>\n                );\n            }}\n        </Downshift>\n    );\n}\n\nDownshiftMultiple.propTypes = {\n    classes: PropTypes.shape({\n        type: PropTypes.string,\n        inputType: PropTypes.string,\n    }).isRequired,\n    setTenantList: PropTypes.shape({\n        type: PropTypes.string,\n        inputType: PropTypes.string,\n    }).isRequired,\n    suggestions: PropTypes.shape({\n        type: PropTypes.string,\n        inputType: PropTypes.string,\n    }).isRequired,\n    api: PropTypes.shape({\n        policies: PropTypes.array,\n    }).isRequired,\n    tenantList: PropTypes.shape([]).isRequired,\n};\n\n/**\n * Gets tenant list in order to populate suggestions list\n */\nexport default function IntegrationDownshift(props) {\n    const classes = useStyles();\n    const [suggestions, setsuggestions] = useState({});\n    const { setTenantList, api, tenantList } = props;\n\n    const restApi = new API();\n\n    useEffect(() => {\n        restApi.getTenantsByState(CONSTS.TENANT_STATE_ACTIVE)\n            .then((result) => {\n                const tenants = result.body.list;\n                const newSuggestions = tenants.map((tenant) => { return tenant.domain; });\n                setsuggestions(newSuggestions);\n            });\n    }, []);\n\n    return (\n        <div className={classes.root}>\n            <div className={classes.divider} />\n            <DownshiftMultiple\n                classes={classes}\n                suggestions={suggestions}\n                tenantList={tenantList}\n                setTenantList={setTenantList}\n                api={api}\n            />\n            <div className={classes.divider} />\n        </div>\n    );\n}\n\nIntegrationDownshift.propTypes = {\n    setTenantList: PropTypes.shape({\n        type: PropTypes.string,\n        inputType: PropTypes.string,\n    }).isRequired,\n    api: PropTypes.shape({\n        policies: PropTypes.array,\n    }).isRequired,\n    tenantList: PropTypes.shape([]).isRequired,\n};\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { makeStyles } from '@material-ui/core/styles';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport PropTypes from 'prop-types';\nimport Select from '@material-ui/core/Select';\nimport TenantAutocomplete from 'AppComponents/Apis/Details/Subscriptions/TenantAutocomplete';\nimport { isRestricted } from 'AppData/AuthManager';\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: 'flex',\n        flexWrap: 'wrap',\n    },\n    formControl: {\n        margin: theme.spacing(1),\n        minWidth: 400,\n    },\n    textControl: {\n        margin: theme.spacing(1),\n        minWidth: 300,\n    },\n    selectEmpty: {\n        marginTop: theme.spacing(2),\n    },\n    subscriptionAvailabilityPaper: {\n        marginTop: theme.spacing(2),\n        paddingLeft: theme.spacing(2),\n        paddingBottom: theme.spacing(2),\n    },\n    grid: {\n        display: 'flex',\n        margin: theme.spacing(1.25),\n    },\n    gridLabel: {\n        marginTop: theme.spacing(3.5),\n    },\n    saveButton: {\n        marginTop: theme.spacing(2),\n    },\n    heading: {\n        marginTop: theme.spacing(3),\n    },\n    tenantsList: {\n        height: theme.spacing(12),\n    },\n}));\n\n/**\n * Allows user to select API availability for tenants\n * @export\n * @returns {React.Component} @inheritdoc\n */\nexport default function SimpleSelect(props) {\n    const classes = useStyles();\n    const {\n        api, setAvailability, tenantList, setTenantList,\n    } = props;\n    let currentAvailability;\n    if (api.subscriptionAvailability === null || api.subscriptionAvailability === 'CURRENT_TENANT') {\n        currentAvailability = 'currentTenant';\n    } else if (api.subscriptionAvailability === 'ALL_TENANTS') {\n        currentAvailability = 'allTenants';\n    } else if (api.subscriptionAvailability === 'SPECIFIC_TENANTS') {\n        currentAvailability = 'specificTenants';\n    }\n    const [values, setValues] = React.useState({\n        availability: currentAvailability,\n    });\n    const inputLabel = React.useRef(null);\n    const [labelWidth, setLabelWidth] = React.useState(0);\n    const isSpecificTenants = values.availability === 'specificTenants';\n    const isUIElementDisabled = isRestricted(['apim:api_publish', 'apim:api_create'], api);\n\n    React.useEffect(() => {\n        setLabelWidth(inputLabel.current.offsetWidth);\n    }, []);\n\n    /**\n     * Handle onchange for the subscription availability dropdown\n     * @param {string} value the new value selected for subscription availability\n     */\n    function subscriptionAvailableTenants(value) {\n        let availabilityValue;\n\n        setValues({\n            ...values,\n            availability: value,\n        });\n\n        if (value === 'currentTenant') {\n            availabilityValue = 'CURRENT_TENANT';\n            setTenantList([]);\n        } else if (value === 'allTenants') {\n            availabilityValue = 'ALL_TENANTS';\n            setTenantList([]);\n        } else if (value === 'specificTenants') {\n            availabilityValue = 'SPECIFIC_TENANTS';\n        }\n        setAvailability({\n            subscriptionAvailability: availabilityValue,\n        });\n    }\n\n    return (\n        <Grid item xs={12} md={12} lg={12}>\n            <Typography variant='h4' component='h2' className={classes.heading}>\n                <FormattedMessage\n                    id='Apis.Details.Subscriptions.SubscriptionAvailability.subscription.availability'\n                    defaultMessage='Subscription Availability'\n                />\n            </Typography>\n            <Typography variant='caption' gutterBottom>\n                <FormattedMessage\n                    id='Apis.Details.Subscriptions.SubscriptionAvailability.sub.heading'\n                    defaultMessage='Make subscriptions available to tenants'\n                />\n            </Typography>\n            <Paper className={classes.subscriptionAvailabilityPaper}>\n                <form className={classes.root} autoComplete='off' onSubmit={(e) => { e.preventDefault(); }}>\n                    <Grid container xs={12} spacing={1} className={classes.grid}>\n                        <Grid item xs={10}>\n                            <FormControl\n                                variant='outlined'\n                                className={classes.formControl}\n                                disabled={isUIElementDisabled}\n                            >\n                                <InputLabel ref={inputLabel} htmlFor='outlined-age-simple' />\n                                <Select\n                                    value={values.availability}\n                                    onChange={({ target: { value } }) => {\n                                        subscriptionAvailableTenants(value);\n                                    }}\n                                    labelWidth={labelWidth}\n                                    displayEmpty\n                                    name='availability'\n                                    inputProps={{\n                                        name: 'availability',\n                                        id: 'outlined-availabi;ity-simple',\n                                    }}\n                                >\n                                    <MenuItem value='currentTenant'>\n                                        <FormattedMessage\n                                            id='Apis.Details.Subscriptions.SubscriptionAvailability.current.tenant.only'\n                                            defaultMessage='Available to current tenant only'\n                                        />\n                                    </MenuItem>\n                                    <MenuItem value='allTenants'>\n                                        <FormattedMessage\n                                            id='Apis.Details.Subscriptions.SubscriptionAvailability.all.tenants'\n                                            defaultMessage='Available to all the tenants'\n                                        />\n                                    </MenuItem>\n                                    <MenuItem value='specificTenants'>\n                                        <FormattedMessage\n                                            id='Apis.Details.Subscriptions.SubscriptionAvailability.specific.tenants'\n                                            defaultMessage='Available to specific tenants'\n                                        />\n                                    </MenuItem>\n                                </Select>\n                            </FormControl>\n                        </Grid>\n                        {isSpecificTenants ? (\n                            <Grid item xs={8} className={classes.tenantsList}>\n                                <TenantAutocomplete setTenantList={setTenantList} tenantList={tenantList} api={api} />\n                            </Grid>\n                        ) : <Grid item xs={8} />}\n                    </Grid>\n                </form>\n            </Paper>\n        </Grid>\n    );\n}\nSimpleSelect.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    intl: PropTypes.shape({ formatMessage: PropTypes.func }).isRequired,\n    api: PropTypes.shape({ policies: PropTypes.array }).isRequired,\n    setAvailability: PropTypes.func.isRequired,\n    setTenantList: PropTypes.func.isRequired,\n    tenantList: PropTypes.shape([]).isRequired,\n};\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { CircularProgress, Grid } from '@material-ui/core';\nimport PropTypes from 'prop-types';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { Link } from 'react-router-dom';\nimport Button from '@material-ui/core/Button';\nimport Alert from 'AppComponents/Shared/Alert';\nimport { useAPI } from 'AppComponents/Apis/Details/components/ApiContext';\nimport API from 'AppData/api';\nimport CONSTS from 'AppData/Constants';\nimport Progress from 'AppComponents/Shared/Progress';\nimport { FormattedMessage } from 'react-intl';\nimport { useAppContext } from 'AppComponents/Shared/AppContext';\nimport SubscriptionsTable from './SubscriptionsTable';\nimport SubscriptionPoliciesManage from './SubscriptionPoliciesManage';\nimport SubscriptionAvailability from './SubscriptionAvailability';\n\nconst useStyles = makeStyles((theme) => ({\n    buttonSection: {\n        marginTop: theme.spacing(2),\n    },\n    emptyBox: {\n        marginTop: theme.spacing(2),\n    },\n}));\n\n/**\n * Subscriptions component\n *\n * @class Subscriptions\n * @extends {Component}\n */\nfunction Subscriptions(props) {\n    const classes = useStyles();\n    const [api] = useAPI();\n    const { updateAPI } = props;\n    const restApi = new API();\n    const [tenants, setTenants] = useState(null);\n    const [policies, setPolices] = useState({});\n    const [availability, setAvailability] = useState({ subscriptionAvailability: api.subscriptionAvailability });\n    const [tenantList, setTenantList] = useState(api.subscriptionAvailableTenants);\n    const [subscriptions, setSubscriptions] = useState(null);\n    const [updateInProgress, setUpdateInProgress] = useState(false);\n    const { settings } = useAppContext();\n\n    /**\n     * Save subscription information (policies, subscriptionAvailability, subscriptionAvailableTenants)\n     */\n    function saveAPI() {\n        setUpdateInProgress(true);\n        const { subscriptionAvailability } = availability;\n        const newApi = {\n            policies,\n            subscriptionAvailability,\n            subscriptionAvailableTenants: tenantList,\n        };\n        updateAPI(newApi)\n            .then(() => {\n                Alert.info('Subscription configurations updated successfully');\n            })\n            .catch((error) => {\n                console.error(error);\n                Alert.error('Error occurred while updating subscription configurations');\n            }).finally(() => {\n                setUpdateInProgress(false);\n            });\n    }\n\n    useEffect(() => {\n        restApi.getTenantsByState(CONSTS.TENANT_STATE_ACTIVE)\n            .then((result) => {\n                setTenants(result.body.count);\n            });\n        restApi.subscriptions(api.id)\n            .then((result) => {\n                setSubscriptions(result.body.count);\n            });\n        setPolices([...api.policies]);\n    }, []);\n\n    if (typeof tenants !== 'number' || typeof subscriptions !== 'number') {\n        return (\n            <Grid container direction='row' justify='center' alignItems='center'>\n                <Grid item>\n                    <CircularProgress />\n                </Grid>\n            </Grid>\n        );\n    }\n    return (\n        <>\n            <SubscriptionPoliciesManage api={api} policies={policies} setPolices={setPolices} />\n            {tenants !== 0 && settings.crossTenantSubscriptionEnabled && (\n                <SubscriptionAvailability\n                    api={api}\n                    availability={availability}\n                    setAvailability={setAvailability}\n                    tenantList={tenantList}\n                    setTenantList={setTenantList}\n                />\n            )}\n            { updateInProgress && <Progress /> }\n            <Grid\n                container\n                direction='row'\n                alignItems='flex-start'\n                spacing={1}\n                className={classes.buttonSection}\n            >\n                <Grid item>\n                    <Button\n                        type='submit'\n                        variant='contained'\n                        color='primary'\n                        onClick={() => saveAPI()}\n                    >\n                        <FormattedMessage\n                            id='Apis.Details.Subscriptions.Subscriptions.save'\n                            defaultMessage='Save'\n                        />\n                    </Button>\n                </Grid>\n                <Grid item>\n                    <Button\n                        component={Link}\n                        to={'/apis/' + api.id + '/overview'}\n                    >\n                        <FormattedMessage\n                            id='Apis.Details.Subscriptions.Subscriptions.cancel'\n                            defaultMessage='Cancel'\n                        />\n                    </Button>\n                </Grid>\n            </Grid>\n            <SubscriptionsTable api={api} />\n        </>\n    );\n}\n\nSubscriptions.propTypes = {\n    updateAPI: PropTypes.func.isRequired,\n};\n\nexport default withStyles(makeStyles)(Subscriptions);\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport Typography from '@material-ui/core/Typography';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport Button from '@material-ui/core/Button';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { withStyles } from '@material-ui/core/styles';\nimport FormControl from '@material-ui/core/FormControl';\nimport Grid from '@material-ui/core/Grid';\nimport ChipInput from 'material-ui-chip-input';\nimport APIValidation from 'AppData/APIValidation';\nimport base64url from 'base64url';\nimport Error from '@material-ui/icons/Error';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport Chip from '@material-ui/core/Chip';\nimport Icon from '@material-ui/core/Icon';\nimport Paper from '@material-ui/core/Paper';\nimport { red } from '@material-ui/core/colors/';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Alert from 'AppComponents/Shared/Alert';\nimport Api from 'AppData/api';\nimport { isRestricted } from 'AppData/AuthManager';\n\nconst styles = (theme) => ({\n    root: {\n        flexGrow: 1,\n        marginTop: 10,\n        display: 'flex',\n        flexDirection: 'column',\n        padding: 20,\n    },\n    titleWrapper: {\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems: 'center',\n        marginBottom: theme.spacing(3),\n    },\n    titleLink: {\n        color: theme.palette.primary.main,\n        marginRight: theme.spacing(1),\n    },\n    contentWrapper: {\n        maxWidth: theme.custom.contentAreaWidth,\n    },\n    mainTitle: {\n        paddingLeft: 0,\n    },\n    FormControl: {\n        padding: `0 0 0 ${theme.spacing(1)}px`,\n        width: '100%',\n        marginTop: 0,\n    },\n    FormControlOdd: {\n        padding: `0 0 0 ${theme.spacing(1)}px`,\n        backgroundColor: theme.palette.background.paper,\n        width: '100%',\n        marginTop: 0,\n    },\n    FormControlLabel: {\n        marginBottom: theme.spacing(1),\n        marginTop: theme.spacing(1),\n        fontSize: theme.typography.caption.fontSize,\n    },\n    buttonSection: {\n        paddingTop: theme.spacing(3),\n    },\n    saveButton: {\n        marginRight: theme.spacing(1),\n    },\n    helpText: {\n        color: theme.palette.text.hint,\n        marginTop: theme.spacing(1),\n    },\n    extraPadding: {\n        paddingLeft: theme.spacing(2),\n    },\n    addNewOther: {\n        paddingTop: 40,\n    },\n    titleGrid: {\n        ' & .MuiGrid-item': {\n            padding: 0,\n            margin: 0,\n        },\n    },\n    descriptionForm: {\n        marginTop: theme.spacing(1),\n    },\n    progress: {\n        marginLeft: theme.spacing(1),\n    },\n});\n\n/**\n * Create new scopes for an API\n * @class CreateScope\n * @extends {Component}\n */\nclass CreateScope extends React.Component {\n    constructor(props) {\n        super(props);\n        this.api = new Api();\n        this.api_uuid = props.match.params.api_uuid;\n        const valid = [];\n        valid.name = {\n            invalid: false,\n            error: '',\n        };\n        valid.description = {\n            invalid: false,\n            error: '',\n        };\n        this.state = {\n            apiScopes: null,\n            apiScope: {},\n            validRoles: [],\n            valid,\n            roleValidity: true,\n            invalidRoles: [],\n            scopeAddDisabled: false,\n        };\n        this.addScope = this.addScope.bind(this);\n        this.validateScopeName = this.validateScopeName.bind(this);\n        this.handleScopeNameInput = this.handleScopeNameInput.bind(this);\n        this.validateScopeDescription = this.validateScopeDescription.bind(this);\n        this.handleRoleAddition = this.handleRoleAddition.bind(this);\n        this.handleRoleDeletion = this.handleRoleDeletion.bind(this);\n    }\n\n\n    handleRoleDeletion = (role) => {\n        const { validRoles, invalidRoles } = this.state;\n        if (invalidRoles.includes(role)) {\n            const invalidRolesArray = invalidRoles.filter((existingRole) => existingRole !== role);\n            this.setState({ invalidRoles: invalidRolesArray });\n            if (invalidRolesArray.length === 0) {\n                this.setState({ roleValidity: true });\n            }\n        } else {\n            this.setState({ validRoles: validRoles.filter((existingRole) => existingRole !== role) });\n        }\n    };\n\n    handleRoleAddition(role) {\n        const { validRoles, invalidRoles } = this.state;\n        const promise = APIValidation.role.validate(base64url.encode(role));\n        promise\n            .then(() => {\n                this.setState({\n                    roleValidity: true,\n                    validRoles: [...validRoles, role],\n                });\n            })\n            .catch((error) => {\n                if (error.status === 404) {\n                    this.setState({\n                        roleValidity: false,\n                        invalidRoles: [...invalidRoles, role],\n                    });\n                } else {\n                    Alert.error('Error when validating role: ' + role);\n                    console.error('Error when validating role ' + error);\n                }\n            });\n    }\n\n    validateScopeDescription({ target: { id, value } }) {\n        const { valid, apiScope } = this.state;\n        const { intl } = this.props;\n        apiScope[id] = value;\n        if (value && value.length !== '' && value.length >= 512) {\n            valid[id].invalid = true;\n            valid[id].error = intl.formatMessage({\n                id: 'Scopes.Create.Scope.description.length.exceeded',\n                defaultMessage: 'Exceeds maximum length limit of 512 characters',\n            });\n        } else {\n            valid[id].invalid = false;\n            valid[id].error = '';\n        }\n        this.setState({\n            valid,\n            apiScope,\n        });\n    }\n\n    validateScopeName(id, value) {\n        const { valid, apiScope } = this.state;\n        const {\n            api: { scopes },\n        } = this.props;\n        const { intl } = this.props;\n        apiScope[id] = value;\n        valid[id].invalid = !(value && value.length > 0);\n        // length validation\n        if (valid[id].invalid) {\n            valid[id].error = 'Scope name cannot be empty';\n        }\n        valid[id].invalid = !(value && value.length <= 60);\n        if (valid[id].invalid) {\n            valid[id].error = intl.formatMessage({\n                id: 'Scopes.Create.Scope.name.length.exceeded',\n                defaultMessage: 'Exceeds maximum length limit of 60 characters',\n            });\n        }\n\n        if (/\\s/.test(value)) {\n            valid[id].invalid = true;\n            valid[id].error = 'Scope name cannot have spaces';\n        }\n\n        const exist = scopes.find((scope) => {\n            return scope.name === value;\n        });\n        if (!valid[id].invalid && exist) {\n            valid[id].invalid = true;\n            valid[id].error = 'Scope name already exist';\n        }\n        if (!valid[id].invalid && /[!@#$%^&*(),?\"{}[\\]|<>\\t\\n]|(^apim:)/i.test(value)) {\n            valid[id].invalid = true;\n            valid[id].error = 'Field contains special characters';\n        }\n        if (!valid[id].invalid) {\n            const promise = APIValidation.scope.validate(base64url.encode(value));\n            promise\n                .then(() => {\n                    valid[id].invalid = true;\n                    valid[id].error = 'Scope name is already used by another API';\n                    this.setState({\n                        valid,\n                    });\n                })\n                .catch((error) => {\n                    if (error.status === 404) {\n                        valid[id].invalid = false;\n                        valid[id].error = '';\n                        this.setState({\n                            valid,\n                        });\n                    } else {\n                        Alert.error('Error when validating scope: ' + value);\n                        console.error('Error when validating scope ' + error);\n                    }\n                });\n        }\n        if (!valid[id].invalid) {\n            valid[id].error = '';\n        }\n        this.setState({\n            valid,\n            apiScope,\n        });\n        return valid[id].invalid;\n    }\n\n    /**\n     * Add new scope\n     * @memberof Scopes\n     */\n    addScope() {\n        const {\n            intl, api, history, updateAPI,\n        } = this.props;\n        const urlPrefix = api.apiType === 'APIProduct' ? 'api-products' : 'apis';\n        if (this.validateScopeName('name', this.state.apiScope.name)) {\n            // return status of the validation\n            return;\n        }\n        const scope = this.state.apiScope;\n        scope.bindings = this.state.validRoles;\n        const scopes = api.scopes.map((aScope) => {\n            return aScope;\n        });\n        scopes.push({\n            scope,\n            shared: false,\n        });\n        const updateProperties = { scopes };\n        const promisedApiUpdate = updateAPI(updateProperties);\n        this.setState({ scopeAddDisabled: true });\n        promisedApiUpdate\n            .then(() => {\n                Alert.info(intl.formatMessage({\n                    id: 'Apis.Details.Scopes.CreateScope.scope.added.successfully',\n                    defaultMessage: 'Scope added successfully',\n                }));\n                const { apiScopes } = this.state;\n                const redirectURL = '/' + urlPrefix + '/' + api.id + '/scopes/';\n                history.push(redirectURL);\n                this.setState({\n                    apiScopes,\n                    apiScope: {},\n                    validRoles: [],\n                });\n            })\n            .catch((error) => {\n                const { response } = error;\n                if (response.body) {\n                    const { description } = response.body;\n                    Alert.error(description);\n                }\n            })\n            .finally(() => {\n                this.setState({ scopeAddDisabled: false });\n            });\n    }\n\n    handleScopeNameInput({ target: { id, value } }) {\n        this.validateScopeName(id, value);\n    }\n\n    /**\n     *\n     *\n     * @returns\n     * @memberof CreateScope\n     */\n    render() {\n        const { classes, api } = this.props;\n        const urlPrefix = api.apiType === 'APIProduct' ? 'api-products' : 'apis';\n        const url = `/${urlPrefix}/${api.id}/scopes`;\n        const {\n            roleValidity, validRoles, invalidRoles, scopeAddDisabled,\n        } = this.state;\n\n        return (\n            <Grid container spacing={3}>\n                <Grid item sm={12} md={12} />\n                {/*\n            Following two grids control the placement of whole create page\n            For centering the content better use `container` props, but instead used an empty grid item for flexibility\n             */}\n                <Grid item sm={0} md={0} lg={2} />\n                <Grid item sm={12} md={12} lg={8}>\n                    <Grid container spacing={5} className={classes.titleGrid}>\n                        <Grid item md={12}>\n                            <div className={classes.titleWrapper}>\n                                <Link to={url} className={classes.titleLink}>\n                                    <Typography variant='h4' component='h2'>\n                                        <FormattedMessage\n                                            id='Apis.Details.Scopes.Scopes.heading.scope.heading'\n                                            defaultMessage='Scopes'\n                                        />\n                                    </Typography>\n                                </Link>\n                                <Icon>keyboard_arrow_right</Icon>\n                                <Typography variant='h4' component='h3'>\n                                    <FormattedMessage\n                                        id='Apis.Details.Scopes.CreateScope.create.new.scope'\n                                        defaultMessage='Create New Scope'\n                                    />\n                                </Typography>\n                            </div>\n                        </Grid>\n                        <Grid item md={12}>\n                            <Paper elevation={0} className={classes.root}>\n                                <FormControl margin='normal'>\n                                    <TextField\n                                        id='name'\n                                        label='Name'\n                                        placeholder='Scope Name'\n                                        error={this.state.valid.name.invalid}\n                                        helperText={\n                                            this.state.valid.name.invalid ? (\n                                                this.state.valid.name.error\n                                            ) : (\n                                                <FormattedMessage\n                                                    id='Apis.Details.Scopes.CreateScope.short.description.name'\n                                                    defaultMessage='Enter Scope Name ( E.g.,: creator )'\n                                                />\n                                            )\n                                        }\n                                        fullWidth\n                                        margin='normal'\n                                        variant='outlined'\n                                        InputLabelProps={{\n                                            shrink: true,\n                                        }}\n                                        value={this.state.apiScope.name || ''}\n                                        onChange={this.handleScopeNameInput}\n                                    />\n                                </FormControl>\n                                <FormControl margin='normal' classes={{ root: classes.descriptionForm }}>\n                                    <TextField\n                                        id='description'\n                                        label='Description'\n                                        variant='outlined'\n                                        placeholder='Short description about the scope'\n                                        error={this.state.valid.description.invalid}\n                                        helperText={\n                                            this.state.valid.description.invalid ? (\n                                                this.state.valid.description.error\n                                            ) : (\n                                                <FormattedMessage\n                                                    id='Apis.Details.Scopes.CreateScope.description.about.the.scope'\n                                                    defaultMessage='Short description about the scope'\n                                                />\n                                            )\n                                        }\n                                        margin='normal'\n                                        InputLabelProps={{\n                                            shrink: true,\n                                        }}\n                                        onChange={this.validateScopeDescription}\n                                        value={this.state.apiScope.description || ''}\n                                        multiline\n                                    />\n                                </FormControl>\n                                <FormControl margin='normal'>\n                                    <ChipInput\n                                        label='Roles'\n                                        InputLabelProps={{\n                                            shrink: true,\n                                        }}\n                                        variant='outlined'\n                                        value={validRoles.concat(invalidRoles)}\n                                        alwaysShowPlaceholder={false}\n                                        placeholder='Enter roles and press Enter'\n                                        blurBehavior='clear'\n                                        InputProps={{\n                                            endAdornment: !roleValidity && (\n                                                <InputAdornment position='end'>\n                                                    <Error color='error' />\n                                                </InputAdornment>\n                                            ),\n                                        }}\n                                        onAdd={this.handleRoleAddition}\n                                        error={!roleValidity}\n                                        helperText={\n                                            !roleValidity ? (\n                                                <FormattedMessage\n                                                    id='Apis.Details.Scopes.Roles.Invalid'\n                                                    defaultMessage='Role is invalid'\n                                                />\n                                            ) : (\n                                                <FormattedMessage\n                                                    id='Apis.Details.Scopes.CreateScope.roles.help'\n                                                    defaultMessage='Enter a valid role and press `Enter`.'\n                                                />\n                                            )\n                                        }\n                                        chipRenderer={({ value }, key) => (\n                                            <Chip\n                                                key={key}\n                                                label={value}\n                                                onDelete={() => {\n                                                    this.handleRoleDeletion(value);\n                                                }}\n                                                style={{\n                                                    backgroundColor: invalidRoles.includes(value) ? red[300] : null,\n                                                    margin: '8px 8px 8px 0',\n                                                    float: 'left',\n                                                }}\n                                            />\n                                        )}\n                                    />\n                                </FormControl>\n                                <div className={classes.addNewOther}>\n                                    <Button\n                                        variant='contained'\n                                        color='primary'\n                                        onClick={this.addScope}\n                                        disabled={\n                                            isRestricted(['apim:api_create'], api)\n                                            || this.state.valid.name.invalid\n                                            || invalidRoles.length !== 0\n                                            || scopeAddDisabled\n                                            || this.state.valid.description.invalid\n                                        }\n                                        className={classes.saveButton}\n                                    >\n                                        {scopeAddDisabled ? (\n                                            <>\n                                                <FormattedMessage\n                                                    id='Apis.Details.Scopes.CreateScope.saving'\n                                                    defaultMessage='Saving'\n                                                />\n                                                <CircularProgress size={16} classes={{ root: classes.progress }} />\n                                            </>\n                                        ) : (\n                                            <FormattedMessage\n                                                id='Apis.Details.Scopes.CreateScope.save'\n                                                defaultMessage='Save'\n                                            />\n                                        )}\n                                    </Button>\n                                    <Button\n                                        component={Link}\n                                        to={url}\n                                    >\n                                        <FormattedMessage\n                                            id='Apis.Details.Scopes.CreateScope.cancel'\n                                            defaultMessage='Cancel'\n                                        />\n                                    </Button>\n                                </div>\n                            </Paper>\n                        </Grid>\n                    </Grid>\n                </Grid>\n            </Grid>\n        );\n    }\n}\n\nCreateScope.propTypes = {\n    match: PropTypes.shape({\n        params: PropTypes.object,\n    }),\n    api: PropTypes.shape({\n        id: PropTypes.string,\n    }).isRequired,\n    history: PropTypes.shape({ push: PropTypes.func }).isRequired,\n    classes: PropTypes.shape({}).isRequired,\n    intl: PropTypes.shape({ formatMessage: PropTypes.func }).isRequired,\n    updateAPI: PropTypes.func.isRequired,\n};\n\nCreateScope.defaultProps = {\n    match: { params: {} },\n};\n\nexport default injectIntl(withStyles(styles)(CreateScope));\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport Button from '@material-ui/core/Button';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router';\nimport { Link } from 'react-router-dom';\nimport { withStyles } from '@material-ui/core/styles';\nimport Alert from 'AppComponents/Shared/Alert';\nimport Paper from '@material-ui/core/Paper';\nimport FormControl from '@material-ui/core/FormControl';\nimport ChipInput from 'material-ui-chip-input';\nimport APIValidation from 'AppData/APIValidation';\nimport Chip from '@material-ui/core/Chip';\nimport { red } from '@material-ui/core/colors/';\nimport Icon from '@material-ui/core/Icon';\nimport base64url from 'base64url';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport Error from '@material-ui/core/SvgIcon/SvgIcon';\n\nconst styles = (theme) => ({\n    root: {\n        flexGrow: 1,\n        marginTop: 10,\n        display: 'flex',\n        flexDirection: 'column',\n        padding: 20,\n    },\n    titleWrapper: {\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems: 'center',\n        marginBottom: theme.spacing(3),\n    },\n    titleLink: {\n        color: theme.palette.primary.main,\n        marginRight: theme.spacing(1),\n    },\n    contentWrapper: {\n        maxWidth: theme.custom.contentAreaWidth,\n    },\n    mainTitle: {\n        paddingLeft: 0,\n    },\n    FormControl: {\n        padding: `0 0 0 ${theme.spacing(1)}px`,\n        width: '100%',\n        marginTop: 0,\n    },\n    FormControlOdd: {\n        padding: `0 0 0 ${theme.spacing(1)}px`,\n        backgroundColor: theme.palette.background.paper,\n        width: '100%',\n        marginTop: 0,\n    },\n    FormControlLabel: {\n        marginBottom: theme.spacing(1),\n        marginTop: theme.spacing(1),\n        fontSize: theme.typography.caption.fontSize,\n    },\n    buttonSection: {\n        paddingTop: theme.spacing(3),\n    },\n    saveButton: {\n        marginRight: theme.spacing(2),\n    },\n    helpText: {\n        color: theme.palette.text.hint,\n        marginTop: theme.spacing(1),\n    },\n    extraPadding: {\n        paddingLeft: theme.spacing(2),\n    },\n    addNewOther: {\n        paddingTop: 40,\n    },\n    titleGrid: {\n        ' & .MuiGrid-item': {\n            padding: 0,\n            margin: 0,\n        },\n    },\n});\n\n/**\n * Create new scopes for an API\n * @class CreateScope\n * @extends {Component}\n */\nclass EditScope extends React.Component {\n    constructor(props) {\n        super(props);\n        // this.api = new Api();\n        this.api_uuid = props.match.params.api_uuid;\n        const { api, location } = this.props;\n        const thisScope = api.scopes.find((apiScope) => {\n            return apiScope.scope.name === location.state.scopeName;\n        });\n        this.state = {\n            apiScope: { ...thisScope },\n            validRoles: thisScope.scope.bindings,\n            invalidRoles: [],\n            roleValidity: true,\n        };\n        this.updateScope = this.updateScope.bind(this);\n        this.handleInputs = this.handleInputs.bind(this);\n        this.handleRoleDeletion = this.handleRoleDeletion.bind(this);\n        this.handleRoleAddition = this.handleRoleAddition.bind(this);\n        this.validateScopeDescription = this.validateScopeDescription.bind(this);\n    }\n\n\n    handleRoleDeletion = (role) => {\n        const { validRoles, invalidRoles } = this.state;\n        if (invalidRoles.includes(role)) {\n            const invalidRolesArray = invalidRoles.filter((existingRole) => existingRole !== role);\n            this.setState({ invalidRoles: invalidRolesArray });\n            if (invalidRolesArray.length === 0) {\n                this.setState({ roleValidity: true });\n            }\n        } else {\n            this.setState({ validRoles: validRoles.filter((existingRole) => existingRole !== role) });\n        }\n    };\n\n    /**\n     * Handle api scope addition event\n     * @param {any} event Button Click event\n     * @memberof Scopes\n     */\n    handleInputs(event) {\n        if (Array.isArray(event)) {\n            const { apiScope } = this.state;\n            apiScope.scope.bindings = event;\n            this.setState({\n                apiScope,\n            });\n        } else {\n            const input = event.target;\n            const { apiScope } = this.state;\n            apiScope[input.id] = input.value;\n            this.setState({\n                apiScope,\n            });\n        }\n    }\n\n    /**\n     * Add new scope\n     * @memberof Scopes\n     */\n    updateScope() {\n        const { apiScope, validRoles } = this.state;\n        const {\n            intl, api, history, updateAPI,\n        } = this.props;\n        const originalScope = apiScope.scope;\n        apiScope.scope = {\n            id: originalScope.id,\n            name: originalScope.name,\n            description: originalScope.description,\n            bindings: validRoles,\n        };\n        const urlPrefix = api.apiType === 'APIProduct' ? 'api-products' : 'apis';\n        const scopes = api.scopes.map((scopeObj) => {\n            if (scopeObj.scope.name === apiScope.scope.name) {\n                return apiScope;\n            } else {\n                return scopeObj;\n            }\n        });\n        const updateProperties = { scopes };\n        const promisedApiUpdate = updateAPI(updateProperties);\n        promisedApiUpdate.then(() => {\n            Alert.info(intl.formatMessage({\n                id: 'Apis.Details.Scopes.CreateScope.scope.updated.successfully',\n                defaultMessage: 'Scope updated successfully',\n            }));\n            const redirectURL = '/' + urlPrefix + '/' + api.id + '/scopes/';\n            history.push(redirectURL);\n        });\n        promisedApiUpdate.catch((error) => {\n            const { response } = error;\n            if (response.body) {\n                const { description } = response.body;\n                Alert.error(description);\n            }\n        });\n    }\n\n    handleRoleAddition(role) {\n        const { validRoles, invalidRoles } = this.state;\n        const promise = APIValidation.role.validate(base64url.encode(role));\n        promise\n            .then(() => {\n                this.setState({\n                    roleValidity: true,\n                    validRoles: [...validRoles, role],\n                });\n            })\n            .catch((error) => {\n                if (error.status === 404) {\n                    this.setState({\n                        roleValidity: false,\n                        invalidRoles: [...invalidRoles, role],\n                    });\n                } else {\n                    Alert.error('Error when validating role: ' + role);\n                    console.error('Error when validating role ' + error);\n                }\n            });\n    }\n\n    validateScopeDescription({ target: { value } }) {\n        const { apiScope } = this.state;\n        const originalScope = apiScope.scope;\n        apiScope.scope = {\n            id: originalScope.id,\n            name: originalScope.name,\n            description: value,\n            bindings: originalScope.bindings,\n        };\n        this.setState({\n            apiScope,\n        });\n    }\n\n    render() {\n        const { classes, api, isAPIProduct } = this.props;\n        const {\n            apiScope, roleValidity, validRoles, invalidRoles,\n        } = this.state;\n        const urlPrefix = isAPIProduct ? 'api-products' : 'apis';\n        const url = `/${urlPrefix}/${api.id}/scopes`;\n        return (\n            <Grid container spacing={3}>\n                <Grid item sm={12} md={12} />\n                {/*\n            Following two grids control the placement of whole create page\n            For centering the content better use `container` props, but instead used an empty grid item for flexibility\n             */}\n                <Grid item sm={0} md={0} lg={2} />\n                <Grid item sm={12} md={12} lg={8}>\n                    <Grid container spacing={5} className={classes.titleGrid}>\n                        <Grid item md={12}>\n                            <div className={classes.titleWrapper}>\n                                <Link to={url} className={classes.titleLink}>\n                                    <Typography variant='h4'>\n                                        <FormattedMessage\n                                            id='Apis.Details.Scopes.Scopes.heading.scope.heading'\n                                            defaultMessage='Scopes'\n                                        />\n                                    </Typography>\n                                </Link>\n                                <Icon>keyboard_arrow_right</Icon>\n                                <Typography variant='h4'>\n                                    <FormattedMessage\n                                        id='Apis.Details.Scopes.EditScope.update.scope'\n                                        defaultMessage='Update Scope'\n                                    />\n                                </Typography>\n                            </div>\n                        </Grid>\n                        <Grid item md={12}>\n                            <Paper elevation={0} className={classes.root}>\n                                <FormControl margin='normal'>\n                                    <TextField\n                                        id='name'\n                                        label='Name'\n                                        fullWidth\n                                        margin='normal'\n                                        variant='outlined'\n                                        InputLabelProps={{\n                                            shrink: true,\n                                        }}\n                                        value={apiScope.scope.name}\n                                        onChange={this.handleScopeNameInput}\n                                        disabled\n                                    />\n                                </FormControl>\n                                <FormControl margin='normal'>\n                                    <TextField\n                                        id='description'\n                                        label='Description'\n                                        variant='outlined'\n                                        placeholder='Short description about the scope'\n                                        helperText={(\n                                            <FormattedMessage\n                                                id='Apis.Details.Scopes.EditScope.short.description.about.the.scope'\n                                                defaultMessage='Short description about the scope'\n                                            />\n                                        )}\n                                        margin='normal'\n                                        InputLabelProps={{\n                                            shrink: true,\n                                        }}\n                                        onChange={this.validateScopeDescription}\n                                        value={apiScope.scope.description || ''}\n                                        multiline\n                                    />\n                                </FormControl>\n                                <FormControl margin='normal'>\n                                    <ChipInput\n                                        label='Roles'\n                                        InputLabelProps={{\n                                            shrink: true,\n                                        }}\n                                        variant='outlined'\n                                        value={validRoles.concat(invalidRoles)}\n                                        alwaysShowPlaceholder={false}\n                                        placeholder='Enter roles and press Enter'\n                                        blurBehavior='clear'\n                                        InputProps={{\n                                            endAdornment: !roleValidity && (\n                                                <InputAdornment position='end'>\n                                                    <Error color='error' />\n                                                </InputAdornment>\n                                            ),\n                                        }}\n                                        onAdd={this.handleRoleAddition}\n                                        error={!roleValidity}\n                                        helperText={\n                                            !roleValidity ? (\n                                                <FormattedMessage\n                                                    id='Apis.Details.EditScopes.Roles.Invalid'\n                                                    defaultMessage='Role is invalid'\n                                                />\n                                            ) : (\n                                                <FormattedMessage\n                                                    id='Apis.Details.Scopes.EditScopes.roles.help'\n                                                    defaultMessage='Enter a valid role and press `Enter`.'\n                                                />\n                                            )\n                                        }\n                                        chipRenderer={({ value }, key) => (\n                                            <Chip\n                                                key={key}\n                                                label={value}\n                                                onDelete={() => {\n                                                    this.handleRoleDeletion(value);\n                                                }}\n                                                style={{\n                                                    backgroundColor: invalidRoles.includes(value) ? red[300] : null,\n                                                    margin: '8px 8px 8px 0',\n                                                    float: 'left',\n                                                }}\n                                            />\n                                        )}\n                                    />\n                                </FormControl>\n                                <div className={classes.addNewOther}>\n                                    <Button\n                                        variant='contained'\n                                        color='primary'\n                                        onClick={this.updateScope}\n                                        disabled={invalidRoles.length !== 0}\n                                        className={classes.saveButton}\n                                    >\n                                        <FormattedMessage\n                                            id='Apis.Details.Scopes.EditScope.update'\n                                            defaultMessage='Update'\n                                        />\n                                    </Button>\n                                    <Link to={url}>\n                                        <Button variant='contained'>\n                                            <FormattedMessage\n                                                id='Apis.Details.Scopes.EditScope.cancel'\n                                                defaultMessage='Cancel'\n                                            />\n                                        </Button>\n                                    </Link>\n                                </div>\n                            </Paper>\n                        </Grid>\n                    </Grid>\n                </Grid>\n            </Grid>\n        );\n    }\n}\n\nEditScope.propTypes = {\n    match: PropTypes.shape({\n        params: PropTypes.object,\n    }),\n    api: PropTypes.shape({\n        id: PropTypes.string,\n    }).isRequired,\n    classes: PropTypes.shape({}).isRequired,\n    intl: PropTypes.shape({ formatMessage: PropTypes.func }).isRequired,\n    location: PropTypes.shape({\n        state: PropTypes.shape({\n            scopeName: PropTypes.string,\n        }),\n    }).isRequired,\n    history: PropTypes.shape({ push: PropTypes.func }).isRequired,\n    isAPIProduct: PropTypes.bool.isRequired,\n    updateAPI: PropTypes.func.isRequired,\n};\n\nEditScope.defaultProps = {\n    match: { params: {} },\n};\n\nexport default injectIntl(withRouter(withStyles(styles)(EditScope)));\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useState } from 'react';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Icon from '@material-ui/core/Icon';\nimport Alert from 'AppComponents/Shared/Alert';\nimport ConfirmDialog from 'AppComponents/Shared/ConfirmDialog';\nimport { isRestricted } from 'AppData/AuthManager';\nimport { useAPI } from 'AppComponents/Apis/Details/components/ApiContext';\n\nconst styles = {\n    appBar: {\n        position: 'relative',\n    },\n    flex: {\n        flex: 1,\n    },\n    popupHeader: {\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems: 'center',\n    },\n    splitWrapper: {\n        padding: 0,\n    },\n    docName: {\n        alignItems: 'center',\n        display: 'flex',\n    },\n    button: {\n        height: 30,\n        marginLeft: 30,\n    },\n};\n\nfunction Delete(props) {\n    const [api, updateAPI] = useAPI();\n    const { intl } = props;\n    const [open, setOpen] = useState(false);\n    const toggleOpen = () => {\n        setOpen(!open);\n    };\n    const deleteScope = () => {\n        const { scopeName } = props;\n        const ops = api.operations && JSON.parse(JSON.stringify(api.operations));\n        const operations = ops && ops.map((op) => {\n            // eslint-disable-next-line no-param-reassign\n            op.scopes = op.scopes.filter((scope) => {\n                return scope !== scopeName;\n            });\n            return op;\n        });\n        const scopes = api.scopes.filter((apiScope) => {\n            return apiScope.scope.name !== scopeName;\n        });\n        const updateProperties = { scopes, operations };\n        const setOpenLocal = setOpen; // Need to copy this to access inside the promise.then\n        const promisedUpdate = updateAPI(updateProperties);\n        promisedUpdate\n            .then(() => {\n                Alert.info(intl.formatMessage({\n                    id: 'Apis.Details.Resources.Resources.api.scope.deleted.successfully',\n                    defaultMessage: 'API Scope deleted successfully!',\n                }));\n                setOpenLocal(!open);\n            })\n            .catch((errorResponse) => {\n                console.error(errorResponse);\n                Alert.error(intl.formatMessage({\n                    id: 'Apis.Details.Resources.Resources.something.went.wrong.while.updating.the.api',\n                    defaultMessage: 'Error occurred while updating API',\n                }));\n            });\n    };\n\n    const runAction = (confirm) => {\n        if (confirm) {\n            deleteScope();\n        } else {\n            setOpen(!open);\n        }\n    };\n    const { scopeName } = props;\n\n    return (\n        <div>\n            <Button\n                onClick={toggleOpen}\n                disabled={isRestricted(['apim:api_create'], api)}\n                aria-label={'Delete ' + scopeName}\n            >\n                <Icon>delete_forever</Icon>\n                <FormattedMessage\n                    id='Apis.Details.Documents.Delete.document.delete'\n                    defaultMessage='Delete'\n                />\n            </Button>\n            <ConfirmDialog\n                key='key-dialog'\n                labelCancel={(\n                    <FormattedMessage\n                        id='Apis.Details.Documents.Delete.document.listing.label.cancel'\n                        defaultMessage='Cancel'\n                    />\n                )}\n                title={(\n                    <FormattedMessage\n                        id='Apis.Details.Documents.Delete.document.listing.delete.confirm'\n                        defaultMessage='Confirm Delete'\n                    />\n                )}\n                message={(\n                    <FormattedMessage\n                        id='Apis.Details.Documents.Delete.document.listing.label.ok.confirm'\n                        defaultMessage='Are you sure you want to delete scope {scope} ?'\n                        values={{ scope: scopeName }}\n                    />\n                )}\n                labelOk={(\n                    <FormattedMessage\n                        id='Apis.Details.Documents.Delete.document.listing.label.ok.yes'\n                        defaultMessage='Yes'\n                    />\n                )}\n                callback={runAction}\n                open={open}\n            />\n        </div>\n    );\n}\nDelete.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    scopeName: PropTypes.string.isRequired,\n    intl: PropTypes.shape({}).isRequired,\n};\n\nexport default injectIntl(withStyles(styles)(Delete));\n","/*\n * Copyright (c) 2017, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport 'react-tagsinput/react-tagsinput.css';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport Api from 'AppData/api';\nimport { Progress } from 'AppComponents/Shared';\nimport Typography from '@material-ui/core/Typography';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport Button from '@material-ui/core/Button';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { Link } from 'react-router-dom';\nimport { List, ListItem, ListItemText } from '@material-ui/core';\nimport AddCircle from '@material-ui/icons/AddCircle';\nimport MUIDataTable from 'mui-datatables';\nimport Icon from '@material-ui/core/Icon';\nimport InlineMessage from 'AppComponents/Shared/InlineMessage';\nimport Grid from '@material-ui/core/Grid';\nimport { isRestricted } from 'AppData/AuthManager';\nimport { withAPI } from 'AppComponents/Apis/Details/components/ApiContext';\nimport HelpOutlineIcon from '@material-ui/icons/HelpOutline';\nimport IconButton from '@material-ui/core/IconButton';\nimport Tooltip from '@material-ui/core/Tooltip';\n\nimport Delete from './Delete';\n\nconst styles = (theme) => ({\n    root: {\n        paddingTop: 0,\n        paddingLeft: 0,\n    },\n    buttonProgress: {\n        position: 'relative',\n        margin: theme.spacing(1),\n    },\n    headline: { paddingTop: theme.spacing(1.25), paddingLeft: theme.spacing(2.5) },\n    heading: {\n        flexGrow: 1,\n        marginTop: 10,\n    },\n    titleWrapper: {\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems: 'center',\n        marginBottom: theme.spacing(2),\n    },\n    mainTitle: {\n        paddingLeft: 0,\n    },\n    button: {\n        textDecoration: 'none',\n        color: theme.palette.getContrastText(theme.palette.primary.main),\n        marginLeft: theme.spacing(1),\n    },\n    buttonIcon: {\n        marginRight: theme.spacing(1),\n    },\n    content: {\n        margin: `${theme.spacing(2)}px 0 ${theme.spacing(2)}px 0`,\n    },\n    head: {\n        fontWeight: 200,\n    },\n});\n/**\n * Generate the scopes UI in API details page.\n * @class Scopes\n * @extends {React.Component}\n */\nclass Scopes extends React.Component {\n    /**\n     * Creates an instance of Scopes.\n     * @param {any} props Generic props\n     * @memberof Scopes\n     */\n    constructor(props) {\n        super(props);\n        this.api = new Api();\n        this.api_uuid = props.match.params.api_uuid;\n        this.api_data = props.api;\n    }\n\n    /**\n     * Render Scopes section\n     * @returns {React.Component} React Component\n     * @memberof Scopes\n     */\n    render() {\n        const {\n            intl, classes, api,\n        } = this.props;\n        const urlPrefix = (api.apiType === 'APIProduct') ? 'api-products' : 'apis';\n        const { scopes } = api;\n        const url = `/${urlPrefix}/${api.id}/scopes/create`;\n        const editUrl = `/${urlPrefix}/${api.id}/scopes/edit`;\n        const columns = [\n            intl.formatMessage({\n                id: 'Apis.Details.Scopes.Scopes.table.header.name',\n                defaultMessage: 'Name',\n            }),\n            intl.formatMessage({\n                id: 'Apis.Details.Scopes.Scopes.table.header.description',\n                defaultMessage: 'Description',\n            }),\n            {\n                options: {\n                    customBodyRender: (value, tableMeta) => {\n                        if (tableMeta.rowData) {\n                            const roles = value || [];\n                            return roles.join(',');\n                        }\n                        return false;\n                    },\n                    filter: false,\n                    sort: false,\n                    label: (\n                        <FormattedMessage\n                            id='Apis.Details.Scopes.Scopes.table.header.roles'\n                            defaultMessage='Roles'\n                        />\n                    ),\n                },\n            },\n            {\n                options: {\n                    customBodyRender: (value, tableMeta) => {\n                        if (value && tableMeta.rowData) {\n                            const scopeName = tableMeta.rowData[0];\n                            return (\n                                <List component='nav' aria-label={scopeName + ' Used in'} className={classes.root}>\n                                    {value.map((resource) => (\n                                        <ListItem button>\n                                            <ListItemText primary={resource} />\n                                        </ListItem>\n                                    ))}\n                                </List>\n                            );\n                        }\n                        return false;\n                    },\n                    filter: false,\n                    sort: false,\n                    label: (\n                        <FormattedMessage\n                            id='Apis.Details.Scopes.Scopes.table.header.usages'\n                            defaultMessage='Used In'\n                        />\n                    ),\n                },\n            },\n            {\n                options: {\n                    customBodyRender: (value, tableMeta) => {\n                        if (tableMeta.rowData) {\n                            const scopeName = tableMeta.rowData[0];\n                            return (\n                                <table className={classes.actionTable}>\n                                    <tr>\n                                        <td>\n                                            <Button\n                                                disabled={isRestricted(\n                                                    ['apim:api_create'],\n                                                    api,\n                                                )}\n                                                component={Link}\n                                                to={\n                                                    !isRestricted(['apim:api_create'], api) && {\n                                                        pathname: editUrl,\n                                                        state: {\n                                                            scopeName,\n                                                        },\n                                                    }\n                                                }\n                                                aria-label={'Edit ' + scopeName}\n                                            >\n                                                <Icon>edit</Icon>\n                                                <FormattedMessage\n                                                    id='Apis.Details.Documents.Edit.documents.text.editor.edit'\n                                                    defaultMessage='Edit'\n                                                />\n                                            </Button>\n                                        </td>\n                                        <td>\n                                            <Delete scopeName={scopeName} api={api} isAPIProduct />\n                                        </td>\n                                    </tr>\n                                </table>\n                            );\n                        }\n                        return false;\n                    },\n                    filter: false,\n                    sort: false,\n                    label: (\n                        <FormattedMessage\n                            id='Apis.Details.Scopes.Scopes.table.header.actions'\n                            defaultMessage='Actions'\n                        />\n                    ),\n                },\n            },\n        ];\n        const options = {\n            filterType: 'multiselect',\n            selectableRows: false,\n            title: false,\n            filter: false,\n            sort: false,\n            print: false,\n            download: false,\n            viewColumns: false,\n            customToolbar: false,\n        };\n        const scopesList = api.scopes.filter((apiScope) => {\n            return !apiScope.shared;\n        }).map((apiScope) => {\n            const aScope = [];\n            aScope.push(apiScope.scope.name);\n            aScope.push(apiScope.scope.description);\n            aScope.push(apiScope.scope.bindings);\n            const resources = api.operations && api.operations\n                .filter((op) => {\n                    return op.scopes.includes(apiScope.scope.name);\n                })\n                .map((op) => {\n                    return op.target + ' ' + op.verb;\n                });\n            aScope.push(resources);\n            return aScope;\n        });\n\n        if (!scopes) {\n            return <Progress />;\n        }\n\n        if (scopes.length === 0) {\n            return (\n                <div className={classes.root}>\n                    <div className={classes.titleWrapper}>\n                        <Typography variant='h4' component='h2' align='left' className={classes.mainTitle}>\n                            <FormattedMessage\n                                id='Apis.Details.Scopes.Scopes.heading.scope.heading'\n                                defaultMessage='Local Scopes'\n                            />\n                        </Typography>\n                        <Tooltip\n                            title={(\n                                <FormattedMessage\n                                    id='Apis.Details.Scopes.Scopes.heading.scope.title.tooltip'\n                                    defaultMessage='Manage scopes that are local to this API'\n                                />\n                            )}\n                            placement='top-end'\n                        >\n                            <IconButton size='small' aria-label='Local Scopes help text'>\n                                <HelpOutlineIcon fontSize='small' />\n                            </IconButton>\n                        </Tooltip>\n                    </div>\n                    <InlineMessage type='info' height={140}>\n                        <div className={classes.contentWrapper}>\n                            <Typography variant='h5' component='h3' className={classes.head}>\n                                <FormattedMessage\n                                    id='Apis.Details.Scopes.Scopes.create.scopes.title'\n                                    defaultMessage='Create API Local Scopes'\n                                />\n                            </Typography>\n                            <Typography component='p' className={classes.content}>\n                                <FormattedMessage\n                                    id='Apis.Details.Scopes.Scopes.scopes.enable.fine.gained.access.control'\n                                    defaultMessage={\n                                        'Scopes enable fine-grained access control to API resources'\n                                        + ' based on user roles.'\n                                    }\n                                />\n                            </Typography>\n                            <div className={classes.actions}>\n                                <Button\n                                    variant='contained'\n                                    color='primary'\n                                    className={classes.button}\n                                    disabled={isRestricted(['apim:api_create'], api)}\n                                    to={!isRestricted(['apim:api_create'], api) && url}\n                                    component={Link}\n                                >\n                                    <FormattedMessage\n                                        id='Apis.Details.Scopes.Scopes.create.scopes.button'\n                                        defaultMessage='Create Scopes'\n                                    />\n                                </Button>\n                            </div>\n                        </div>\n                    </InlineMessage>\n                </div>\n            );\n        }\n\n        return (\n            <div className={classes.heading}>\n                <div className={classes.titleWrapper}>\n                    <Typography variant='h4' component='h2' align='left' className={classes.mainTitle}>\n                        <FormattedMessage\n                            id='Apis.Details.Scopes.Scopes.heading.scope.heading'\n                            defaultMessage='Local Scopes'\n                        />\n                    </Typography>\n                    <Tooltip\n                        title={(\n                            <FormattedMessage\n                                id='Apis.Details.Scopes.Scopes.heading.scope.title.tooltip2'\n                                defaultMessage='Manage scopes that are local to this API'\n                            />\n                        )}\n                        placement='top-end'\n                    >\n                        <IconButton size='small' aria-label='Local Scopes help text'>\n                            <HelpOutlineIcon fontSize='small' />\n                        </IconButton>\n                    </Tooltip>\n                    <Button\n                        size='small'\n                        className={classes.button}\n                        disabled={isRestricted(['apim:api_create'], api)}\n                        to={!isRestricted(['apim:api_create'], api) && url}\n                        component={Link}\n                    >\n                        <AddCircle className={classes.buttonIcon} />\n                        <FormattedMessage\n                            id='Apis.Details.Scopes.Scopes.heading.scope.add_new'\n                            defaultMessage='Add New Local Scope'\n                        />\n                    </Button>\n                    {isRestricted(['apim:api_create'], api) && (\n                        <Grid item>\n                            <Typography variant='body2' color='primary'>\n                                <FormattedMessage\n                                    id='Apis.Details.Scopes.Scopes.update.not.allowed'\n                                    defaultMessage={\n                                        '*You are not authorized to update scopes of'\n                                        + ' the API due to insufficient permissions'\n                                    }\n                                />\n                            </Typography>\n                        </Grid>\n                    )}\n                </div>\n\n                <MUIDataTable title={false} data={scopesList} columns={columns} options={options} />\n            </div>\n        );\n    }\n}\n\nScopes.propTypes = {\n    match: PropTypes.shape({\n        params: PropTypes.object,\n    }),\n    api: PropTypes.instanceOf(Object).isRequired,\n    classes: PropTypes.shape({}).isRequired,\n    intl: PropTypes.shape({ formatMessage: PropTypes.func }).isRequired,\n};\n\nScopes.defaultProps = {\n    match: { params: {} },\n};\n\nexport default injectIntl(withAPI(withStyles(styles)(Scopes)));\n","/*\n * Copyright (c) 2018, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { useAPI } from 'AppComponents/Apis/Details/components/ApiContext';\nimport ResourceNotFound from 'AppComponents/Base/Errors/ResourceNotFound';\nimport CreateScope from './CreateScope';\nimport EditScope from './EditScope';\nimport Scopes from './Scopes';\n\nconst Scope = () => {\n    const [api, updateAPI] = useAPI();\n    const urlPrefix = api.isAPIProduct() ? 'api-products' : 'apis';\n    return (\n        <Switch>\n            <Route exact path={'/' + urlPrefix + '/:api_uuid/scopes/'} component={Scopes} />\n            <Route\n                exact\n                path={'/' + urlPrefix + '/:api_uuid/scopes/create'}\n                component={(props) => <CreateScope api={api} {...props} updateAPI={updateAPI} />}\n            />\n            <Route\n                exact\n                path={'/' + urlPrefix + '/:api_uuid/scopes/edit'}\n                component={(props) => <EditScope api={api} {...props} updateAPI={updateAPI} />}\n            />\n            <Route component={ResourceNotFound} />\n        </Switch>\n    );\n};\n\nScope.propTypes = {\n    api: PropTypes.shape({\n        id: PropTypes.string,\n        additionalProperties: PropTypes.shape({\n            key: PropTypes.string,\n            value: PropTypes.string,\n        }).isRequired,\n    }).isRequired,\n};\n\nexport default Scope;\n","/*\n * Copyright (c) 2018, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { withStyles } from '@material-ui/core/styles';\nimport { FormattedMessage, injectIntl } from 'react-intl';\n\nimport API from 'AppData/api';\nimport Alert from 'AppComponents/Shared/Alert';\n\nconst styles = theme => ({\n    addNewWrapper: {\n        backgroundColor: theme.palette.background.paper,\n        color: theme.palette.getContrastText(theme.palette.background.paper),\n        border: 'solid 1px ' + theme.palette.grey['300'],\n        borderRadius: theme.shape.borderRadius,\n        marginTop: theme.spacing(2),\n    },\n    addNewHeader: {\n        padding: theme.spacing(2),\n        backgroundColor: theme.palette.grey['300'],\n        fontSize: theme.typography.h6.fontSize,\n        color: theme.typography.h6.color,\n        fontWeight: theme.typography.h6.fontWeight,\n    },\n    addNewOther: {\n        padding: theme.spacing(2),\n    },\n    button: {\n        marginLeft: theme.spacing(2),\n        color: theme.palette.getContrastText(theme.palette.primary.main),\n    },\n    contentWrapper: {\n        maxWidth: theme.custom.contentAreaWidth,\n    },\n    addJsonContent: {\n        whiteSpace: 'pre',\n    },\n});\n\nclass AddPolicy extends Component {\n    state = {\n        selectedPolicy: {\n            uuid: '',\n            name: 'Select',\n            policy: '',\n            type: '',\n        },\n        policies: [],\n    };\n\n    componentDidMount() {\n        const api = new API();\n        const promisedPolicies = api.getThreatProtectionPolicies();\n        promisedPolicies.then((response) => {\n            this.setState({ policies: response.obj.list });\n        });\n        const promisedApi = api.get(this.props.id);\n        promisedApi.then((response) => {\n            this.setState({ currentApi: response.obj });\n        });\n    }\n\n    handlePolicyAdd() {\n        const { intl } = this.props;\n        const policy = this.state.selectedPolicy;\n        if (policy.uuid === '' || policy.name === '') {\n            Alert.error(intl.formatMessage({\n                id: 'Apis.Details.Security.AddPolicy.select.policy',\n                defaultMessage: 'Please select a policy',\n            }));\n            return;\n        }\n\n        if (this.state.currentApi) {\n            const { currentApi } = this.state;\n            const api = new API();\n            const promisedPolicyAdd = api.addThreatProtectionPolicyToApi(currentApi.id, this.state.selectedPolicy.uuid);\n            promisedPolicyAdd.then((response) => {\n                if (response.status === 200) {\n                    Alert.info(intl.formatMessage({\n                        id: 'Apis.Details.Security.AddPolicy.threat.protection.policy.add.success',\n                        defaultMessage: 'Threat protection policy added successfully.',\n                    }));\n                    this.props.updateData();\n                } else {\n                    Alert.error(intl.formatMessage({\n                        id: 'Apis.Details.Security.AddPolicy.threat.protection.policy.add.failure',\n                        defaultMessage: 'Failed to add threat protection policy.',\n                    }));\n                }\n            });\n        }\n    }\n\n    handleChange = () => (event) => {\n        const policyId = event.target.value;\n        const api = new API();\n        const promisedPolicy = api.getThreatProtectionPolicy(policyId);\n        promisedPolicy.then((response) => {\n            this.setState({ selectedPolicy: response.obj });\n        });\n    }\n\n    formatPolicy = (policy) => {\n        let formattedPolicy = policy;\n        formattedPolicy = formattedPolicy.replace(':', ' : ');\n        formattedPolicy = formattedPolicy.split(',').join(',\\n');\n        return formattedPolicy;\n    }\n\n    render() {\n        const { classes } = this.props;\n        return (\n            <div className={classes.contentWrapper}>\n                <div className={classes.addNewWrapper}>\n                    <Typography className={classes.addNewHeader}>\n                        <FormattedMessage\n                            id='Apis.Details.Security.AddPolicy.add.threat.protection.policy'\n                            defaultMessage='Add New Threat Protection Policy'\n                        />\n                    </Typography>\n                    <Divider className={classes.divider} />\n                    <div className={classes.addNewOther}>\n                        <InputLabel htmlFor='selectedPolicy'>\n                            <FormattedMessage\n                                id='Apis.Details.Security.AddPolicy.policy'\n                                defaultMessage='Policy'\n                            />\n                        </InputLabel>\n                        &nbsp;&nbsp;\n                        <Select\n                            value={this.state.selectedPolicy.uuid}\n                            onChange={this.handleChange('selectedPolicy')}\n                            input={<Input name='selectedPolicy' id='selectedPolicy' />}\n                        >\n                            {this.state.policies.map((n) => {\n                                return (\n                                    <MenuItem key={n.uuid} value={n.uuid}>{n.name}</MenuItem>\n                                );\n                            })};\n                        </Select>\n                        <br />\n                        <br />\n                        <p>\n                            <FormattedMessage\n                                id='Apis.Details.Security.AddPolicy.policy.type.label'\n                                defaultMessage='Policy Type: '\n                            />\n                            {this.state.selectedPolicy.type}\n                        </p>\n                        <div>\n                            <p>\n                                <FormattedMessage\n                                    id='Apis.Details.Security.AddPolicy.policy.label'\n                                    defaultMessage='Policy: '\n                                />\n                            </p>\n                            <div className={classes.addJsonContent}>\n                                {this.formatPolicy(this.state.selectedPolicy.policy)}\n                            </div>\n                        </div>\n                    </div>\n                    <Divider className={classes.divider} />\n                    <div className={classes.addNewOther}>\n                        <Button variant='contained' color='primary' onClick={() => this.handlePolicyAdd()}>\n                            <FormattedMessage\n                                id='Apis.Details.Security.AddPolicy.add.policy.to.api'\n                                defaultMessage='Add Policy to API'\n                            />\n                        </Button>\n                        <Button className={classes.button} onClick={this.props.toggleShowAddPolicy}>\n                            <FormattedMessage\n                                id='Apis.Details.Security.AddPolicy.cancel'\n                                defaultMessage='Cancel'\n                            />\n                        </Button>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nAddPolicy.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    toggleShowAddPolicy: PropTypes.func.isRequired,\n    id: PropTypes.string.isRequired,\n    updateData: PropTypes.func.isRequired,\n    intl: PropTypes.shape({}).isRequired,\n};\n\n\nexport default injectIntl(withStyles(styles)(AddPolicy));\n\n","/*\n * Copyright (c) 2017, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { Component } from 'react';\n\nimport Api from 'AppData/api';\nimport Alert from 'AppComponents/Shared/Alert';\nimport PropTypes from 'prop-types';\n\nimport Typography from '@material-ui/core/Typography';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableRow from '@material-ui/core/TableRow';\nimport Button from '@material-ui/core/Button';\nimport { withStyles } from '@material-ui/core/styles';\nimport AddCircle from '@material-ui/icons/AddCircle';\nimport Divider from '@material-ui/core/Divider';\nimport { FormattedMessage, injectIntl } from 'react-intl';\n\nimport AddPolicy from './AddPolicy';\n\nconst styles = theme => ({\n    root: {\n        flexGrow: 1,\n        marginTop: 10,\n    },\n    titleWrapper: {\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems: 'center',\n    },\n    mainTitle: {\n        paddingLeft: 0,\n    },\n    button: {\n        marginLeft: theme.spacing(2),\n        color: theme.palette.getContrastText(theme.palette.primary.main),\n    },\n    buttonIcon: {\n        marginRight: 10,\n    },\n    table: {\n        '& td': {\n            fontSize: theme.typography.fontSize,\n        },\n        '& th': {\n            fontSize: theme.typography.fontSize * 1.2,\n        },\n        tableLayout: 'fixed',\n    },\n    addNewHeader: {\n        padding: theme.spacing(2),\n        backgroundColor: theme.palette.grey['300'],\n        fontSize: theme.typography.h6.fontSize,\n        color: theme.typography.h6.color,\n        fontWeight: theme.typography.h6.fontWeight,\n    },\n    addNewWrapper: {\n        backgroundColor: theme.palette.background.paper,\n        color: theme.palette.getContrastText(theme.palette.background.paper),\n        border: 'solid 1px ' + theme.palette.grey['300'],\n        borderRadius: theme.shape.borderRadius,\n        marginTop: theme.spacing(2),\n    },\n    contentWrapper: {\n        maxWidth: theme.custom.contentAreaWidth,\n    },\n    addJsonContent: {\n        whiteSpace: 'pre',\n    },\n});\n\nclass SecurityOverview extends Component {\n    constructor(props) {\n        super(props);\n        this.api = new Api();\n        this.state = {\n            api: {\n                name: '',\n            },\n            policies: [],\n            showAddPolicy: false,\n        };\n        this.updateData = this.updateData.bind(this);\n        this.toggleShowAddPolicy = this.toggleShowAddPolicy.bind(this);\n        this.updateData = this.updateData.bind(this);\n    }\n\n    componentDidMount() {\n        this.updateData();\n    }\n\n    updateData() {\n        const promisedApi = this.api.get(this.props.match.params.api_uuid);\n        promisedApi.then((response) => {\n            this.setState({ api: response.obj });\n            this.updatePolicyData();\n        });\n    }\n\n    updatePolicyData() {\n        this.setState({ policies: [] });\n        const policyIds = this.state.api.threatProtectionPolicies.list;\n        for (let i = 0; i < policyIds.length; i++) {\n            const id = policyIds[i].policyId;\n            const promisedPolicies = this.api.getThreatProtectionPolicy(id);\n            promisedPolicies.then((response) => {\n                const updatedPolicies = this.state.policies;\n                updatedPolicies.push(response.obj);\n                this.setState({ policies: updatedPolicies });\n            });\n        }\n    }\n\n    deletePolicy(id) {\n        const { intl } = this.props;\n        const associatedApi = this.state.api;\n        const promisedPolicyDelete = this.api.deleteThreatProtectionPolicyFromApi(associatedApi.id, id);\n        promisedPolicyDelete.then((response) => {\n            if (response.status === 200) {\n                Alert.info(intl.formatMessage({\n                    id: 'Apis.Details.Security.SecurityOverview.policy.remove.success',\n                    defaultMessage: 'Policy removed successfully.',\n                }));\n\n                //   remove policy from local api\n                const index = associatedApi.threatProtectionPolicies.list.indexOf({ policyId: id });\n                associatedApi.threatProtectionPolicies.list.splice(index, 1);\n                this.setState({ api: associatedApi });\n                this.updatePolicyData();\n            } else {\n                Alert.error(intl.formatMessage({\n                    id: 'Apis.Details.Security.SecurityOverview.policy.remove.failure',\n                    defaultMessage: 'Failed to remove policy.',\n                }));\n            }\n        });\n    }\n\n    toggleShowAddPolicy = () => {\n        this.setState({ showAddPolicy: !this.state.showAddPolicy });\n    }\n\n    formatPolicy = (policy) => {\n        let formattedPolicy = policy;\n        formattedPolicy = formattedPolicy.replace(':', ' : ');\n        formattedPolicy = formattedPolicy.split(',').join(',\\n');\n        return formattedPolicy;\n    }\n\n    render() {\n        let data = [];\n        if (this.state.policies) {\n            data = this.state.policies;\n        }\n        const { classes } = this.props;\n        const { showAddPolicy } = this.state;\n\n        return (\n            <div className={classes.root}>\n                <div className={classes.contentWrapper}>\n                    <div className={classes.titleWrapper}>\n                        <Typography variant='h4' align='left' className={classes.mainTitle}>\n                            <FormattedMessage\n                                id='Apis.Details.Security.SecurityOverview.threat.protection.policies'\n                                defaultMessage='Threat Protection Policies'\n                            />\n                        </Typography>\n                        <Button size='small' className={classes.button} onClick={this.toggleShowAddPolicy}>\n                            <AddCircle className={classes.buttonIcon} />\n                            <FormattedMessage\n                                id='Apis.Details.Security.SecurityOverview.add.threat.protection.policy'\n                                defaultMessage='Add New Threat Protection Policy'\n                            />\n                        </Button>\n                    </div>\n                </div>\n                <div className={classes.contentWrapper}>\n                    {showAddPolicy &&\n                    <AddPolicy\n                        id={this.state.api.id}\n                        toggleShowAddPolicy={this.toggleShowAddPolicy}\n                        updateData={this.updateData}\n                    />\n                    }\n                </div>\n                <br />\n                <div className={classes.contentWrapper}>\n                    <div className={classes.addNewWrapper}>\n                        <Typography className={classes.addNewHeader}>\n                            <FormattedMessage\n                                id='Apis.Details.Security.SecurityOverview.manage.threat.protection.policies'\n                                defaultMessage='Manage Threat Protection Policies'\n                            />\n                        </Typography>\n                        <Divider className={classes.divider} />\n                        <Table className={classes.table}>\n                            <TableHead>\n                                <TableRow>\n                                    <TableCell>\n                                        <FormattedMessage\n                                            id='Apis.Details.Security.SecurityOverview.policy.name'\n                                            defaultMessage='Policy Name'\n                                        />\n                                    </TableCell>\n                                    <TableCell>\n                                        <FormattedMessage\n                                            id='Apis.Details.Security.SecurityOverview.policy.type'\n                                            defaultMessage='Policy Type'\n                                        />\n                                    </TableCell>\n                                    <TableCell>\n                                        <FormattedMessage\n                                            id='Apis.Details.Security.SecurityOverview.policy'\n                                            defaultMessage='Policy'\n                                        />\n                                    </TableCell>\n                                    <TableCell />\n                                </TableRow>\n                            </TableHead>\n                            <TableBody>\n                                {data.map((n) => {\n                                    return (\n                                        <TableRow key={n.uuid}>\n                                            <TableCell>{n.name + (n.uuid === 'GLOBAL-JSON' ? ' (GLOBAL)' : '')}</TableCell>\n                                            <TableCell>{n.type}</TableCell>\n                                            <TableCell>\n                                                <div className={classes.addJsonContent}>\n                                                    {this.formatPolicy(n.policy)}\n                                                </div>\n                                            </TableCell>\n                                            <TableCell>\n                                                <span>\n                                                    <Button color='accent' onClick={() => this.deletePolicy(n.uuid)} >\n                                                        <FormattedMessage\n                                                            id='Apis.Details.Security.SecurityOverview.delete'\n                                                            defaultMessage='Delete'\n                                                        />\n                                                    </Button>\n                                                </span>\n                                            </TableCell>\n                                        </TableRow>\n                                    );\n                                })}\n                            </TableBody>\n                        </Table>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nSecurityOverview.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    match: PropTypes.shape({\n        params: PropTypes.shape({\n            api_uuid: PropTypes.string,\n        }),\n    }).isRequired,\n    intl: PropTypes.shape({}).isRequired,\n};\n\n\nexport default injectIntl(withStyles(styles)(SecurityOverview));\n","/*\n * Copyright (c) 2017, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport { Switch, Route } from 'react-router-dom';\n\nimport SecurityOverview from './SecurityOverview';\n\nconst Security = () => {\n    return (\n        <Switch>\n            <Route path='/apis/:api_uuid/security' component={SecurityOverview} />\n        </Switch>\n    );\n};\n\nexport default Security;\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://wso2.com) All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React, { Component } from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport API from 'AppData/api';\nimport PropTypes from 'prop-types';\nimport Alert from 'AppComponents/Shared/Alert';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Button from '@material-ui/core/Button';\nimport HelpOutline from '@material-ui/icons/HelpOutline';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport { CircularProgressbarWithChildren } from 'react-circular-progressbar';\nimport 'react-circular-progressbar/dist/styles.css';\nimport Paper from '@material-ui/core/Paper';\nimport { withStyles, createMuiTheme, MuiThemeProvider } from '@material-ui/core/styles';\nimport { Line } from 'rc-progress';\nimport Progress from 'AppComponents/Shared/Progress';\nimport { withRouter } from 'react-router';\nimport InlineMessage from 'AppComponents/Shared/InlineMessage';\n\nimport MUIDataTable from 'mui-datatables';\n\nimport TableRow from '@material-ui/core/TableRow';\nimport TableCell from '@material-ui/core/TableCell';\nimport MonacoEditor from 'react-monaco-editor';\n\nconst styles = (theme) => ({\n    rootPaper: {\n        padding: theme.spacing(3),\n        margin: theme.spacing(2),\n    },\n    inlineDecoration: {\n        background: '#FF0000',\n    },\n    contentLine: {\n        background: '#add8e6',\n    },\n    htmlToolTip: {\n        backgroundColor: '#f5f5f9',\n        color: 'rgba(0, 0, 0, 0.87)',\n        maxWidth: 220,\n        fontSize: theme.typography.pxToRem(14),\n        border: '1px solid #dadde9',\n        '& b': {\n            fontWeight: theme.typography.fontWeightMedium,\n        },\n    },\n    helpButton: {\n        padding: 0,\n        minWidth: 20,\n        'margin-left': 10,\n    },\n    helpIcon: {\n        fontSize: 16,\n    },\n    tableRow: {\n        'background-color': '#d3d3d3',\n    },\n    referenceErrorTypography: {\n        width: '70%',\n        marginTop: '15%',\n    },\n    referenceTypography: {\n        width: '70%',\n    },\n    subheadingTypography: {\n        paddingTop: 30,\n        paddingLeft: 20,\n    },\n    paperDiv: {\n        marginTop: 30,\n    },\n    sectionHeadingTypography: {\n        marginBottom: 18,\n    },\n    auditSummaryDiv: {\n        display: 'flex',\n        marginTop: 25,\n    },\n    auditSummarySubDiv: {\n        width: 250,\n        marginLeft: 40,\n        marginRight: 40,\n        display: 'table',\n    },\n    circularProgressBarScore: {\n        fontSize: 70,\n        color: '#3d98c7',\n        marginTop: 18,\n    },\n    circularProgressBarScoreFooter: {\n        fontSize: 18,\n        marginTop: 10,\n    },\n    auditSummaryDivRight: {\n        flexGrow: 1,\n        marginLeft: 200,\n        marginTop: 10,\n    },\n    columnOne: {\n        display: 'block',\n        width: '50%',\n        float: 'left',\n    },\n    columnTwo: {\n        width: '40%',\n        float: 'right',\n    },\n    head: {\n        fontWeight: 200,\n        marginBottom: 20,\n    },\n    linkText: {\n        float: 'right',\n    },\n});\n\n\n/**\n * This Component hosts the API Security Audit Component\n * More specifically, rendering of the Security Audit\n * Report.\n */\nclass APISecurityAudit extends Component {\n    /**\n     * @inheritdoc\n     */\n    constructor(props) {\n        super(props);\n        this.state = {\n            report: null,\n            overallScore: 0,\n            numErrors: 0,\n            externalApiId: null,\n            loading: false,\n            apiDefinition: null,\n        };\n        this.criticalityObject = {\n            1: 'INFO',\n            2: 'LOW',\n            3: 'MEDIUM',\n            4: 'HIGH',\n            5: 'CRITICAL',\n        };\n        this.searchTerm = null;\n    }\n\n    /**\n     * @inheritdoc\n     */\n    componentDidMount() {\n        this.setState({ loading: true });\n        const { apiId, history, intl } = this.props;\n        const currentApi = new API();\n        const promisedDefinition = currentApi.getSwagger(apiId);\n        promisedDefinition.then((response) => {\n            this.setState({\n                apiDefinition: JSON.stringify(response.obj, null, 1),\n            });\n        })\n            .catch((error) => {\n                console.log(error);\n            });\n\n        currentApi.getSecurityAuditReport(apiId)\n            .then((response) => {\n                this.setState({\n                    report: response.body.report,\n                    overallScore: response.body.grade,\n                    numErrors: response.body.numErrors,\n                    externalApiId: response.body.externalApiId,\n                    loading: false,\n                });\n            })\n            .catch((error) => {\n                console.log(error);\n                this.setState({ loading: false });\n                Alert.error(intl.formatMessage({\n                    id: 'Apis.Details.APIDefinition.AuditApi.GetReportError',\n                    defaultMessage: 'Something went wrong while retrieving the API Security Report',\n                }));\n                const redirectUrl = '/apis/' + apiId + '/api definition';\n                history.push(redirectUrl);\n            });\n    }\n\n    getMuiTheme = () => createMuiTheme({\n        typography: {\n            useNextVariants: true,\n        },\n        overrides: {\n            MUIDataTableBodyCell: {\n                root: {\n                    width: '30%',\n                },\n            },\n            MUIDataTableSelectCell: {\n                root: {\n                    display: 'none',\n                },\n            },\n            MUIDataTableToolbarSelect: {\n                title: {\n                    display: 'none',\n                },\n            },\n        },\n    });\n\n    getErrorMuiTheme = () => createMuiTheme({\n        typography: {\n            useNextVariants: true,\n        },\n        overrides: {\n            MUIDataTableBodyCell: {\n                root: {\n                    width: '100%',\n                },\n            },\n            MUIDataTableSelectCell: {\n                root: {\n                    display: 'none',\n                },\n            },\n            MUIDataTableToolbarSelect: {\n                title: {\n                    display: 'none',\n                },\n            },\n        },\n    });\n\n    /**\n     * Get Row data for MUI Table\n     * @param {*} issues Issues array\n     * @param {String} category The category of the issue\n     * @param {*} rowType The type of row - normal or error\n     * @return {*} dataObject The dataObject array\n     */\n    getRowData(issues, category, rowType) {\n        const dataObject = [];\n        for (const item in issues) {\n            if ({}.hasOwnProperty.call(issues, item)) {\n                for (let i = 0; i < issues[item].issues.length; i++) {\n                    const rowObject = [];\n                    if (rowType === 'error') {\n                        if (issues[item].issues[i].specificDescription) {\n                            rowObject.push(\n                                issues[item].issues[i].specificDescription, issues[item].issues[i].pointer,\n                                category, rowType, item,\n                            );\n                        } else {\n                            rowObject.push(\n                                issues[item].description, issues[item].issues[i].pointer,\n                                category, rowType, item,\n                            );\n                        }\n                    } else if (rowType === 'normal') {\n                        if (issues[item].issues[i].specificDescription) {\n                            rowObject.push(\n                                this.criticalityObject[issues[item].criticality],\n                                issues[item].issues[i].specificDescription,\n                                this.roundScore(issues[item].issues[i].score), issues[item].issues[i].pointer,\n                                issues[item].issues[i].tooManyImpacted,\n                                issues[item].issues[i].pointersAffected, category, issues[item].tooManyError,\n                                rowType, item,\n                            );\n                        } else {\n                            rowObject.push(\n                                this.criticalityObject[issues[item].criticality],\n                                issues[item].description, this.roundScore(issues[item].issues[i].score),\n                                issues[item].issues[i].pointer, issues[item].issues[i].tooManyImpacted,\n                                issues[item].issues[i].pointersAffected, category, issues[item].tooManyError,\n                                rowType, item,\n                            );\n                        }\n                    }\n                    dataObject.push(rowObject);\n                }\n            }\n        }\n        return dataObject;\n    }\n\n    /**\n     * Method to get the URL to display for each issue\n     * @param {*} category Category of the issue\n     * @returns {*} String URL\n     */\n    getMoreDetailUrl(category) {\n        const baseUrl = 'https://apisecurity.io/ref/';\n        let url = '';\n\n        switch (category) {\n            case 'OpenAPI Format Requirements':\n                url = baseUrl + 'oasconformance/';\n                break;\n            case 'Security':\n                url = baseUrl + 'security/';\n                break;\n            case 'Data Validation':\n                url = baseUrl + 'datavalidation/datavalidation/';\n                break;\n            default:\n                url = baseUrl;\n        }\n        return url;\n    }\n\n    /**\n     * editorDidMount method for Monaco Editor\n     * @param {*} editor Monaco Editor editor\n     * @param {*} monaco Monaco Editor monaco\n     * @param {String} searchTerm SearchTerm for pointer\n     */\n    editorDidMount = (editor, monaco, searchTerm) => {\n        const { classes } = this.props;\n        if (searchTerm !== '') {\n            const lastTerms = [];\n            const termObject = searchTerm.split('/');\n            const regexPatterns = [];\n            for (let i = 0; i < termObject.length; i++) {\n                if (termObject[i] !== '' && termObject[i] !== '0') {\n                    let appendedString = '\"' + termObject[i] + '\":';\n                    if (appendedString.includes('~1')) {\n                        appendedString = appendedString.replace(/~1/i, '/');\n                    }\n                    regexPatterns.push(appendedString);\n                }\n            }\n\n            for (let j = 0; j < regexPatterns.length; j++) {\n                if (regexPatterns[j] !== '') {\n                    if (j !== 0 && lastTerms.length !== 0 && lastTerms[lastTerms.length - 1] !== null) {\n                        lastTerms.push(editor.getModel().findNextMatch(\n                            regexPatterns[j],\n                            { lineNumber: lastTerms[lastTerms.length - 1].range.endLineNumber, column: 1 },\n                            true, true, null, false,\n                        ));\n                    } else {\n                        lastTerms.push(editor.getModel().findNextMatch(regexPatterns[j], 1, true, true, null, true));\n                    }\n                }\n            }\n            const finalMatchIndex = lastTerms.length - 1;\n            if (lastTerms[finalMatchIndex] != null) {\n                editor.revealLineInCenter(lastTerms[finalMatchIndex].range.startLineNumber);\n                editor.deltaDecorations([], [\n                    {\n                        range: new monaco.Range(\n                            lastTerms[finalMatchIndex].range.startLineNumber,\n                            lastTerms[finalMatchIndex].range.startColumn,\n                            lastTerms[finalMatchIndex].range.endLineNumber,\n                            lastTerms[finalMatchIndex].range.endColumn,\n                        ),\n                        options: {\n                            isWholeLine: true,\n                            className: classes.inlineDecoration,\n                            glyphMarginClassName: classes.contentLine,\n                        },\n                    },\n                ]);\n            }\n        }\n    }\n\n    /**\n     * Method to round off the score of a section of the report\n     * @param {*} score Score of section\n     * @returns {*} roundScore Rounded off score\n     */\n    roundScore(score) {\n        if (score !== 0) {\n            return Math.round(score * 100) / 100;\n        } else {\n            return 0;\n        }\n    }\n\n    /**\n     * @inheritdoc\n     */\n    render() {\n        const { classes } = this.props;\n        const {\n            report, overallScore, numErrors, externalApiId, loading, apiDefinition,\n        } = this.state;\n\n        const reportObject = JSON.parse(report);\n        const linkToDetailedReport = 'https://platform.42crunch.com/apis/' + externalApiId + '/security-audit-report';\n        if (loading) {\n            return (\n                <div>\n                    <InlineMessage type='info' height={140}>\n                        <div className={classes.contentWrapper}>\n                            <Typography\n                                variant='h5'\n                                component='h3'\n                                className={classes.head}\n                            >\n                                <FormattedMessage\n                                    id='Apis.Details.APIDefinition.AuditApi.WaitForReport'\n                                    defaultMessage='Please wait...'\n                                />\n                            </Typography>\n                            <Typography component='p' className={classes.content}>\n                                <FormattedMessage\n                                    id='Apis.Details.APIDefinition.AuditApi.WaitForReport.Content'\n                                    defaultMessage='Auditing an API for the first time will take some time'\n                                />\n                            </Typography>\n                        </div>\n                    </InlineMessage>\n                    <Progress />\n                </div>\n            );\n        }\n        const columns = [\n            {\n                name: 'Severity',\n                options: {\n                    filter: true,\n                    sort: true,\n                },\n            },\n            {\n                name: 'Description',\n                options: {\n                    filter: true,\n                    sort: true,\n                },\n            },\n            {\n                name: 'Score Impact',\n                options: {\n                    filter: true,\n                    sort: true,\n                },\n            },\n            {\n                name: 'Pointer',\n                options: {\n                    display: 'excluded',\n                    filter: false,\n                    sort: false,\n                },\n            },\n            {\n                name: 'Too Many Impacted',\n                options: {\n                    display: 'excluded',\n                    filter: false,\n                    sort: false,\n                },\n            },\n            {\n                name: 'Pointers Affected',\n                options: {\n                    display: 'excluded',\n                    filter: false,\n                    sort: false,\n                },\n            },\n            {\n                name: 'Issue Category',\n                options: {\n                    display: 'excluded',\n                    filter: false,\n                    sort: false,\n                },\n            },\n            {\n                name: 'Too Many Errors',\n                options: {\n                    display: 'excluded',\n                    filter: false,\n                    sort: false,\n                },\n            },\n            {\n                name: 'isError',\n                options: {\n                    display: 'excluded',\n                    filter: false,\n                    sort: false,\n                },\n            },\n            {\n                name: 'ReferenceUrl',\n                options: {\n                    display: 'excluded',\n                    filter: false,\n                    sort: false,\n                },\n            },\n        ];\n\n        const errorColumns = [\n            {\n                name: 'Description',\n                options: {\n                    filter: true,\n                    sort: true,\n                },\n            },\n            {\n                name: 'Pointer',\n                options: {\n                    display: 'excluded',\n                    filter: false,\n                    sort: false,\n                },\n            },\n            {\n                name: 'Issue Category',\n                options: {\n                    display: 'excluded',\n                    filter: false,\n                    sort: false,\n                },\n            },\n            {\n                name: 'isError',\n                options: {\n                    display: 'excluded',\n                    filter: false,\n                    sort: false,\n                },\n            },\n            {\n                name: 'ReferenceUrl',\n                options: {\n                    display: 'excluded',\n                    filter: false,\n                    sort: false,\n                },\n            },\n        ];\n\n        const editorOptions = {\n            selectOnLineNumbers: true,\n            readOnly: true,\n            smoothScrolling: true,\n            wordWrap: 'on',\n            glyphMargin: true,\n        };\n\n        const options = {\n            filterType: 'dropdown',\n            responsive: 'stacked',\n            print: false,\n            download: false,\n            selectableRows: false,\n            expandableRows: true,\n            expandableRowsOnClick: true,\n            renderExpandableRow: (rowData) => {\n                let searchTerm = null;\n                if (rowData[3] === 'error') {\n                    searchTerm = reportObject.index[rowData[1]];\n\n                    return (\n                        <TableRow className={classes.tableRow}>\n                            <TableCell className={classes.columnOne}>\n                                <MonacoEditor\n                                    height='250px'\n                                    theme='vs-dark'\n                                    value={apiDefinition}\n                                    options={editorOptions}\n                                    editorDidMount={(editor, monaco) => this.editorDidMount(editor, monaco, searchTerm)}\n                                />\n                            </TableCell>\n                            <TableCell className={classes.columnTwo}>\n                                <Typography variant='body1' className={classes.referenceErrorTypography}>\n                                    <FormattedMessage\n                                        id='Apis.Details.APIDefinition.AuditApi.ReferenceSection'\n                                        description='Link to visit for detail on how to remedy issue'\n                                        defaultMessage='Visit this {link} to view a detailed description, possible\n                                        exploits and remediation for this issue.'\n                                        values={{\n                                            link: (\n                                                <strong>\n                                                    <a\n                                                        href={this.getMoreDetailUrl(rowData[2])}\n                                                        target='_blank'\n                                                        rel='noopener noreferrer'\n                                                    >\n                                                        link\n                                                    </a>\n                                                </strong>),\n                                        }}\n                                    />\n                                </Typography>\n                            </TableCell>\n                        </TableRow>\n                    );\n                } else {\n                    searchTerm = reportObject.index[rowData[3]];\n                    return (\n                        <TableRow className={classes.tableRow}>\n                            <TableCell colSpan='2'>\n                                <MonacoEditor\n                                    width='85%'\n                                    height='250px'\n                                    theme='vs-dark'\n                                    value={apiDefinition}\n                                    options={editorOptions}\n                                    editorDidMount={(editor, monaco) => this.editorDidMount(editor, monaco, searchTerm)}\n                                />\n                            </TableCell>\n                            <TableCell>\n                                <Typography variant='body1' className={classes.referenceTypography}>\n                                    <FormattedMessage\n                                        id='Apis.Details.APIDefinition.AuditApi.ReferenceSection'\n                                        description='Link to visit for detail on how to remedy issue'\n                                        defaultMessage='Visit this {link} to view a detailed description, possible\n                                        exploits and remediation for this issue.'\n                                        values={{\n                                            link: (\n                                                <strong>\n                                                    <a\n                                                        href={this.getMoreDetailUrl(rowData[6])}\n                                                        target='_blank'\n                                                        rel='noopener noreferrer'\n                                                    >\n                                                        link\n                                                    </a>\n                                                </strong>),\n                                        }}\n                                    />\n                                </Typography>\n                            </TableCell>\n                        </TableRow>\n                    );\n                }\n            },\n        };\n        return (\n            <div>\n                {report && (\n                    <div\n                        width='100%'\n                        height='calc(100vh - 51px)'\n                    >\n                        <Typography variant='h4' className={classes.subheadingTypography}>\n                            <FormattedMessage\n                                id='Apis.Details.APIDefinition.AuditApi.ApiSecurityAuditReport'\n                                defaultMessage='API Security Audit Report'\n                            />\n                        </Typography>\n                        <div className={classes.paperDiv}>\n                            <Paper elevation={1} className={classes.rootPaper}>\n                                <div>\n                                    <Typography variant='h5' className={classes.sectionHeadingTypography}>\n                                        <FormattedMessage\n                                            id='Apis.Details.APIDefinition.AuditApi.AuditScoreSummary'\n                                            defaultMessage='Audit Score and Summary'\n                                        />\n                                    </Typography>\n                                    <Typography variant='body1' className={classes.linkText}>\n                                        <FormattedMessage\n                                            id='Apis.Details.APIDefinition.AuditApi.LinkToDetailedReport'\n                                            defaultMessage='{linkToDetailedReportText} {link} {afterLinkText}'\n                                            values={{\n                                                linkToDetailedReportText: 'Check out the ',\n                                                link: (\n                                                    <b>\n                                                        <a\n                                                            href={linkToDetailedReport}\n                                                            target='_blank'\n                                                            rel='noopener noreferrer'\n                                                        >\n                                                        detailed Report\n                                                        </a>\n                                                    </b>),\n                                                afterLinkText: ' from 42Crunch',\n                                            }}\n                                        />\n                                    </Typography>\n                                    <div className={classes.auditSummaryDiv}>\n                                        <div className={classes.auditSummarySubDiv}>\n                                            <CircularProgressbarWithChildren\n                                                value={overallScore}\n                                            >\n                                                <Typography\n                                                    variant='body1'\n                                                    className={classes.circularProgressBarScore}\n                                                >\n                                                    <FormattedMessage\n                                                        id='Apis.Details.APIDefinition.AuditApi\n                                                                    .OverallScoreProgress'\n                                                        defaultMessage='{overallScore}'\n                                                        values={{\n                                                            overallScore: (\n                                                                <strong>{Math.round(overallScore)}</strong>\n                                                            ),\n                                                        }}\n                                                    />\n                                                </Typography>\n                                                <Typography\n                                                    variant='body1'\n                                                    className={classes.circularProgressBarScoreFooter}\n                                                >\n                                                    <FormattedMessage\n                                                        id='Apis.Details.APIDefinition.AuditApi.ScoreFooter'\n                                                        defaultMessage='out of 100'\n                                                    />\n                                                </Typography>\n                                            </CircularProgressbarWithChildren>\n                                        </div>\n                                        <div className={classes.auditSummaryDivRight}>\n                                            {{}.hasOwnProperty.call(reportObject, 'score')\n                                                && (\n                                                    <Typography variant='body1'>\n                                                        <FormattedMessage\n                                                            id='Apis.Details.APIDefinition.AuditApi.overallScore'\n                                                            defaultMessage='{overallScoreText} {overallScore} / 100'\n                                                            values={{\n                                                                overallScoreText: <strong>Overall Score:</strong>,\n                                                                overallScore: this.roundScore(overallScore),\n                                                            }}\n                                                        />\n                                                    </Typography>\n                                                )}\n                                            {numErrors !== null\n                                                && (\n                                                    <Typography variant='body1'>\n                                                        <FormattedMessage\n                                                            id='Apis.Details.APIDefinition.AuditApi.TotalNumOfErrors'\n                                                            defaultMessage='{totalNumOfErrorsText} {totalNumOfErrors}'\n                                                            values={{\n                                                                totalNumOfErrorsText: (\n                                                                    <strong>Total Number of Errors: </strong>\n                                                                ),\n                                                                totalNumOfErrors: numErrors,\n                                                            }}\n                                                        />\n                                                    </Typography>\n                                                )}\n                                            {{}.hasOwnProperty.call(reportObject, 'criticality')\n                                                && (\n                                                    <>\n                                                        <Typography variant='body1'>\n                                                            <FormattedMessage\n                                                                id={'Apis.Details.APIDefinition'\n                                                                + '.AuditApi.OverallCriticality'}\n                                                                defaultMessage={\n                                                                    '{overallCriticalityText} {overallCriticality}'\n                                                                }\n                                                                values={{\n                                                                    overallCriticalityText: (\n                                                                        <strong>Overall Severity:</strong>\n                                                                    ),\n                                                                    overallCriticality: (\n                                                                        this.criticalityObject[reportObject.criticality]\n                                                                    ),\n                                                                }}\n                                                            />\n                                                            <Tooltip\n                                                                placement='right'\n                                                                classes={{\n                                                                    tooltip: classes.htmlTooltip,\n                                                                }}\n                                                                title={(\n                                                                    <>\n                                                                        <FormattedMessage\n                                                                            id={'Apis.Details.APIDefinition'\n                                                                            + '.AuditApi.tooltip.severity'}\n                                                                            defaultMessage='Severity ranges from: '\n                                                                        />\n                                                                        <br />\n                                                                        <FormattedMessage\n                                                                            id={'Apis.Details.APIDefinition'\n                                                                            + '.AuditApi.tooltip.info'}\n                                                                            defaultMessage='1. INFO'\n                                                                        />\n                                                                        <br />\n                                                                        <FormattedMessage\n                                                                            id={'Apis.Details.APIDefinition'\n                                                                            + '.AuditApi.tooltip.low'}\n                                                                            defaultMessage='2. LOW'\n                                                                        />\n                                                                        <br />\n                                                                        <FormattedMessage\n                                                                            id={'Apis.Details.APIDefinition'\n                                                                            + '.AuditApi.tooltip.medium'}\n                                                                            defaultMessage='3. MEDIUM'\n                                                                        />\n                                                                        <br />\n                                                                        <FormattedMessage\n                                                                            id={'Apis.Details.APIDefinition'\n                                                                            + '.AuditApi.tooltip.high'}\n                                                                            defaultMessage='4. HIGH'\n                                                                        />\n                                                                        <br />\n                                                                        <FormattedMessage\n                                                                            id={'Apis.Details.APIDefinition'\n                                                                            + '.AuditApi.tooltip.critical'}\n                                                                            defaultMessage='5. CRITICAL'\n                                                                        />\n                                                                        <br />\n                                                                    </>\n                                                                )}\n                                                            >\n                                                                <Button className={classes.helpButton}>\n                                                                    <HelpOutline className={classes.helpIcon} />\n                                                                </Button>\n                                                            </Tooltip>\n                                                        </Typography>\n                                                    </>\n                                                )}\n                                            <hr />\n                                            {{}.hasOwnProperty.call(reportObject, 'security')\n                                                && (\n                                                    <Typography variant='body1'>\n                                                        <FormattedMessage\n                                                            id='Apis.Details.APIDefinition.AuditApi.SecuritySummary'\n                                                            defaultMessage='{securitySummary}'\n                                                            values={{\n                                                                securitySummary: (\n                                                                    <strong>\n                                                                    Security -\n                                                                    (\n                                                                        {\n                                                                            this.roundScore(reportObject.security.score)\n                                                                        }\n                                                                        {' '}\n                                                                        / 30)\n                                                                    </strong>\n                                                                ),\n                                                            }}\n                                                        />\n                                                        <Line\n                                                            percent={((this.roundScore(reportObject.security.score)\n                                                                / 30\n                                                            ) * 100)}\n                                                            strokeColor='#3d98c7'\n                                                        />\n                                                    </Typography>\n                                                )}\n                                            {{}.hasOwnProperty.call(reportObject, 'data')\n                                                && (\n                                                    <Typography variant='body1'>\n                                                        <FormattedMessage\n                                                            id={'Apis.Details.APIDefinition'\n                                                            + '.AuditApi.DataValidationSummary'}\n                                                            defaultMessage='{dataValidationSummary}'\n                                                            values={{\n                                                                dataValidationSummary: (\n                                                                    <strong>\n                                                                    Data Validation -\n                                                                    (\n                                                                        {this.roundScore(reportObject.data.score)}\n                                                                        {' '}\n                                                                        / 70)\n                                                                    </strong>\n                                                                ),\n                                                            }}\n                                                        />\n                                                        <Line\n                                                            percent={((this.roundScore(reportObject.data.score) / 70\n                                                            ) * 100)}\n                                                            strokeColor='#3d98c7'\n                                                        />\n                                                    </Typography>\n                                                )}\n                                            {{}.hasOwnProperty.call(reportObject, 'validationErrors')\n                                                && (\n                                                    <InlineMessage type='warning' height={140}>\n                                                        <div className={classes.contentWrapper}>\n                                                            <Typography\n                                                                variant='h5'\n                                                                component='h3'\n                                                                className={classes.head}\n                                                            >\n                                                                <FormattedMessage\n                                                                    id={'Apis.Details.APIDefinition'\n                                                                    + '.AuditApi.FailedToValidate.Heading'}\n                                                                    defaultMessage='Failed to Validate OpenAPI File'\n                                                                />\n                                                            </Typography>\n                                                            <Typography component='p' className={classes.content}>\n                                                                <FormattedMessage\n                                                                    id={'Apis.Details.APIDefinition'\n                                                                    + '.AuditApi.FailedToValidate.Content'}\n                                                                    defaultMessage={'Fix the critical errors '\n                                                                    + 'shown below and run the audit again.'}\n                                                                />\n                                                            </Typography>\n                                                        </div>\n                                                    </InlineMessage>\n                                                )}\n                                        </div>\n                                    </div>\n                                </div>\n                            </Paper>\n                        </div>\n                        {\n                            <div className={classes.paperDiv}>\n                                <Paper elevation={1} className={classes.rootPaper}>\n                                    <div>\n                                        <Typography variant='h5' className={classes.sectionHeadingTypography}>\n                                            <FormattedMessage\n                                                id='Apis.Details.APIDefinition.AuditApi.OpenApiFormatRequirements'\n                                                defaultMessage='OpenAPI Format Requirements'\n                                            />\n                                        </Typography>\n                                        {{}.hasOwnProperty.call(reportObject, 'semanticErrors')\n                                            && (\n                                                <>\n                                                    <div>\n                                                        <Typography variant='body1'>\n                                                            <MuiThemeProvider theme={this.getMuiTheme()}>\n                                                                <MUIDataTable\n                                                                    title='Semantic Errors'\n                                                                    data={this.getRowData(\n                                                                        reportObject.semanticErrors.issues,\n                                                                        'OpenAPI Format Requirements',\n                                                                        'error',\n                                                                    )}\n                                                                    columns={errorColumns}\n                                                                    options={options}\n                                                                />\n                                                            </MuiThemeProvider>\n                                                        </Typography>\n                                                    </div>\n                                                </>\n                                            )}\n                                        {{}.hasOwnProperty.call(reportObject, 'validationErrors')\n                                            && (\n                                                <>\n                                                    <div>\n                                                        <Typography variant='body1'>\n                                                            <MuiThemeProvider theme={this.getErrorMuiTheme()}>\n                                                                <MUIDataTable\n                                                                    title='Structural Errors'\n                                                                    data={this.getRowData(\n                                                                        reportObject.validationErrors.issues,\n                                                                        'OpenAPI Format Requirements',\n                                                                        'error',\n                                                                    )}\n                                                                    columns={errorColumns}\n                                                                    options={options}\n                                                                />\n                                                            </MuiThemeProvider>\n                                                        </Typography>\n                                                    </div>\n                                                </>\n                                            )}\n                                        {{}.hasOwnProperty.call(reportObject, 'warnings')\n                                            && (\n                                                <>\n                                                    <div>\n                                                        <Typography variant='body1'>\n                                                            <MuiThemeProvider theme={this.getErrorMuiTheme()}>\n                                                                <MUIDataTable\n                                                                    title='Best Practices Issues'\n                                                                    data={this.getRowData(\n                                                                        reportObject.warnings.issues,\n                                                                        'OpenAPI Format Requirements',\n                                                                        'error',\n                                                                    )}\n                                                                    columns={errorColumns}\n                                                                    options={options}\n                                                                />\n                                                            </MuiThemeProvider>\n                                                        </Typography>\n                                                    </div>\n                                                </>\n                                            )}\n                                        {!{}.hasOwnProperty.call(reportObject, 'validationErrors')\n                                        && !{}.hasOwnProperty.call(reportObject, 'semanticErrors')\n                                        && !{}.hasOwnProperty.call(reportObject, 'warnings')\n                                        && (\n                                            <Typography variant='body1'>\n                                                <FormattedMessage\n                                                    id='Apis.Details.APIDefinition.AuditApi.OASNoIssuesFound'\n                                                    defaultMessage='No Issues Found'\n                                                />\n                                            </Typography>\n                                        )}\n                                    </div>\n                                </Paper>\n                            </div>\n                        }\n                        {{}.hasOwnProperty.call(reportObject, 'security')\n                            && (\n                                <div className={classes.paperDiv}>\n                                    <Paper elevation={1} className={classes.rootPaper}>\n                                        <div>\n                                            <Typography variant='h5' className={classes.sectionHeadingTypography}>\n                                                <FormattedMessage\n                                                    id='Apis.Details.APIDefinition.AuditApi.Security'\n                                                    defaultMessage='Security'\n                                                />\n                                            </Typography>\n                                            <Typography variant='body1'>\n                                                <FormattedMessage\n                                                    id='Apis.Details.APIDefinition.AuditApi.SecurityNumOfIssues'\n                                                    defaultMessage='{securityNumOfIssuesText} {securityNumOfIssues}'\n                                                    values={{\n                                                        securityNumOfIssuesText: (\n                                                            <strong>Number of Issues:</strong>\n                                                        ),\n                                                        securityNumOfIssues: reportObject.security.issueCounter,\n                                                    }}\n                                                />\n                                            </Typography>\n                                            <Typography variant='body1'>\n                                                <FormattedMessage\n                                                    id='Apis.Details.APIDefinition.AuditApi.SecurityScore'\n                                                    defaultMessage='{securityScoreText} {securityScore}  / 30'\n                                                    values={{\n                                                        securityScoreText: (\n                                                            <strong>Score:</strong>\n                                                        ),\n                                                        securityScore: (\n                                                            (Math.round(reportObject.security.score * 100) / 100)\n                                                        ),\n                                                    }}\n                                                />\n                                            </Typography>\n                                            <>\n                                                <Typography variant='body1'>\n                                                    <FormattedMessage\n                                                        id='Apis.Details.APIDefinition.AuditApi.securityCriticality'\n                                                        defaultMessage='{securityCriticalityText} {securityCriticality}'\n                                                        values={{\n                                                            securityCriticalityText: (\n                                                                <strong>Severity:</strong>\n                                                            ),\n                                                            securityCriticality: (\n                                                                // eslint-disable-next-line max-len\n                                                                this.criticalityObject[reportObject.security.criticality]\n                                                            ),\n                                                        }}\n                                                    />\n                                                    <Tooltip\n                                                        placement='right'\n                                                        classes={{\n                                                            tooltip: classes.htmlTooltip,\n                                                        }}\n                                                        title={(\n                                                            <>\n                                                                <FormattedMessage\n                                                                    id={'Apis.Details.APIDefinition'\n                                                                            + '.AuditApi.tooltip.severity'}\n                                                                    defaultMessage='Severity ranges from: '\n                                                                />\n                                                                <br />\n                                                                <FormattedMessage\n                                                                    id={'Apis.Details.APIDefinition'\n                                                                            + '.AuditApi.tooltip.info'}\n                                                                    defaultMessage='1. INFO'\n                                                                />\n                                                                <br />\n                                                                <FormattedMessage\n                                                                    id={'Apis.Details.APIDefinition'\n                                                                            + '.AuditApi.tooltip.low'}\n                                                                    defaultMessage='2. LOW'\n                                                                />\n                                                                <br />\n                                                                <FormattedMessage\n                                                                    id={'Apis.Details.APIDefinition'\n                                                                            + '.AuditApi.tooltip.medium'}\n                                                                    defaultMessage='3. MEDIUM'\n                                                                />\n                                                                <br />\n                                                                <FormattedMessage\n                                                                    id={'Apis.Details.APIDefinition'\n                                                                            + '.AuditApi.tooltip.high'}\n                                                                    defaultMessage='4. HIGH'\n                                                                />\n                                                                <br />\n                                                                <FormattedMessage\n                                                                    id={'Apis.Details.APIDefinition'\n                                                                            + '.AuditApi.tooltip.critical'}\n                                                                    defaultMessage='5. CRITICAL'\n                                                                />\n                                                                <br />\n                                                            </>\n                                                        )}\n                                                    >\n                                                        <Button className={classes.helpButton}>\n                                                            <HelpOutline className={classes.helpIcon} />\n                                                        </Button>\n                                                    </Tooltip>\n                                                </Typography>\n                                            </>\n                                            {(reportObject.security.issueCounter !== 0)\n                                            && (\n                                                <div>\n                                                    <hr />\n                                                    <Typography variant='body1'>\n                                                        <MuiThemeProvider theme={this.getMuiTheme()}>\n                                                            <MUIDataTable\n                                                                title='Issues'\n                                                                data={this.getRowData(\n                                                                    reportObject.security.issues,\n                                                                    'Security',\n                                                                    'normal',\n                                                                )}\n                                                                columns={columns}\n                                                                options={options}\n                                                            />\n                                                        </MuiThemeProvider>\n                                                    </Typography>\n                                                </div>\n                                            )}\n                                        </div>\n                                    </Paper>\n                                </div>\n                            )}\n                        {{}.hasOwnProperty.call(reportObject, 'data')\n                            && (\n                                <div className={classes.paperDiv}>\n                                    <Paper elevation={1} className={classes.rootPaper}>\n                                        <div>\n                                            <Typography variant='h5' className={classes.sectionHeadingTypography}>\n                                                <FormattedMessage\n                                                    id='Apis.Details.APIDefinition.AuditApi.DataValidation'\n                                                    defaultMessage='Data Validation'\n                                                />\n                                            </Typography>\n                                            <Typography variant='body1'>\n                                                <FormattedMessage\n                                                    id='Apis.Details.APIDefinition.AuditApi.DataValidationNumOfIssues'\n                                                    defaultMessage='{dataNumOfIssuesText} {dataNumOfIssues}'\n                                                    values={{\n                                                        dataNumOfIssuesText: (\n                                                            <strong>Number of Issues:</strong>\n                                                        ),\n                                                        dataNumOfIssues: reportObject.data.issueCounter,\n                                                    }}\n                                                />\n                                            </Typography>\n                                            <Typography variant='body1'>\n                                                <FormattedMessage\n                                                    id='Apis.Details.APIDefinition.AuditApi.DataValidationScore'\n                                                    defaultMessage='{dataScoreText} {dataScore}  / 70'\n                                                    values={{\n                                                        dataScoreText: (\n                                                            <strong>Score:</strong>\n                                                        ),\n                                                        dataScore: (\n                                                            (Math.round(reportObject.data.score * 100) / 100)\n                                                        ),\n                                                    }}\n                                                />\n                                            </Typography>\n                                            <>\n                                                <Typography variant='body1'>\n                                                    <FormattedMessage\n                                                        id='Apis.Details.APIDefinition.AuditApi.dataCriticality'\n                                                        defaultMessage='{dataCriticalityText} {dataCriticality}'\n                                                        values={{\n                                                            dataCriticalityText: (\n                                                                <strong>Severity:</strong>\n                                                            ),\n                                                            dataCriticality: (\n                                                                this.criticalityObject[reportObject.data.criticality]\n                                                            ),\n                                                        }}\n                                                    />\n                                                    <Tooltip\n                                                        placement='right'\n                                                        classes={{\n                                                            tooltip: classes.htmlTooltip,\n                                                        }}\n                                                        title={(\n                                                            <>\n                                                                <FormattedMessage\n                                                                    id={'Apis.Details.APIDefinition'\n                                                                            + '.AuditApi.tooltip.severity'}\n                                                                    defaultMessage='Severity ranges from: '\n                                                                />\n                                                                <br />\n                                                                <FormattedMessage\n                                                                    id={'Apis.Details.APIDefinition'\n                                                                            + '.AuditApi.tooltip.info'}\n                                                                    defaultMessage='1. INFO'\n                                                                />\n                                                                <br />\n                                                                <FormattedMessage\n                                                                    id={'Apis.Details.APIDefinition'\n                                                                            + '.AuditApi.tooltip.low'}\n                                                                    defaultMessage='2. LOW'\n                                                                />\n                                                                <br />\n                                                                <FormattedMessage\n                                                                    id={'Apis.Details.APIDefinition'\n                                                                            + '.AuditApi.tooltip.medium'}\n                                                                    defaultMessage='3. MEDIUM'\n                                                                />\n                                                                <br />\n                                                                <FormattedMessage\n                                                                    id={'Apis.Details.APIDefinition'\n                                                                            + '.AuditApi.tooltip.high'}\n                                                                    defaultMessage='4. HIGH'\n                                                                />\n                                                                <br />\n                                                                <FormattedMessage\n                                                                    id={'Apis.Details.APIDefinition'\n                                                                            + '.AuditApi.tooltip.critical'}\n                                                                    defaultMessage='5. CRITICAL'\n                                                                />\n                                                                <br />\n                                                            </>\n                                                        )}\n                                                    >\n                                                        <Button className={classes.helpButton}>\n                                                            <HelpOutline className={classes.helpIcon} />\n                                                        </Button>\n                                                    </Tooltip>\n                                                </Typography>\n                                            </>\n                                            {(reportObject.data.issueCounter !== 0)\n                                            && (\n                                                <div>\n                                                    <hr />\n                                                    <Typography variant='body1'>\n                                                        <MuiThemeProvider theme={this.getMuiTheme()}>\n                                                            <MUIDataTable\n                                                                title='Issues'\n                                                                data={this.getRowData(\n                                                                    reportObject.data.issues,\n                                                                    'Data Validation',\n                                                                    'normal',\n                                                                )}\n                                                                columns={columns}\n                                                                options={options}\n                                                            />\n                                                        </MuiThemeProvider>\n                                                    </Typography>\n                                                </div>\n                                            )}\n                                        </div>\n                                    </Paper>\n                                </div>\n                            )}\n                    </div>\n                )}\n            </div>\n        );\n    }\n}\n\nAPISecurityAudit.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    apiId: PropTypes.string.isRequired,\n    theme: PropTypes.shape({}).isRequired,\n    history: PropTypes.shape({\n        push: PropTypes.func.isRequired,\n    }).isRequired,\n    intl: PropTypes.shape({\n        formatMessage: PropTypes.func,\n    }).isRequired,\n};\n\nexport default withRouter(injectIntl(withStyles(styles)(APISecurityAudit)));\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useReducer, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport { Typography } from '@material-ui/core';\nimport CloudUploadRounded from '@material-ui/icons/CloudUploadRounded';\nimport Alert from 'AppComponents/Shared/Alert';\nimport API from 'AppData/api.js';\nimport { isRestricted } from 'AppData/AuthManager';\nimport { useAPI } from 'AppComponents/Apis/Details/components/ApiContext';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport ProvideWSDL from 'AppComponents/Apis/Create/WSDL/Steps/ProvideWSDL';\nimport ProvideOpenAPI from '../../Create/OpenAPI/Steps/ProvideOpenAPI';\nimport ProvideGraphQL from '../../Create/GraphQL/Steps/ProvideGraphQL';\n\n\nconst useStyles = makeStyles(() => ({\n    importDefinitionDialogHeader: {\n        fontWeight: '600',\n    },\n    buttonIcon: {\n        marginRight: 10,\n    },\n}));\n\n/**\n *\n *\n * @export\n * @param {*} props\n * @returns\n */\nexport default function ImportDefinition(props) {\n    const { setSchemaDefinition } = props;\n    const classes = useStyles();\n    const [openAPIDefinitionImport, setOpenAPIDefinitionImport] = useState(false);\n    const [isImporting, setIsImporting] = useState(false);\n    const [api] = useAPI();\n    const intl = useIntl();\n    const isGraphQL = api.isGraphql();\n    const isSOAP = api.isSOAP();\n\n    const handleAPIDefinitionImportOpen = () => {\n        setOpenAPIDefinitionImport(true);\n    };\n\n    const handleAPIDefinitionImportCancel = () => {\n        setOpenAPIDefinitionImport(false);\n    };\n\n    function apiInputsReducer(currentState, inputAction) {\n        const { action, value } = inputAction;\n        switch (action) {\n            case 'inputValue':\n            case 'isFormValid':\n                return { ...currentState, [action]: value };\n            case 'inputType':\n                return { ...currentState, [action]: value, inputValue: value === 'url' ? '' : null };\n            case 'preSetAPI':\n                return {\n                    ...currentState,\n                    content: value.content,\n                };\n            default:\n                return currentState;\n        }\n    }\n\n    const [apiInputs, inputsDispatcher] = useReducer(apiInputsReducer, {\n        type: '',\n        inputType: 'url',\n        inputValue: '',\n        formValidity: false,\n        mode: 'update',\n    });\n\n    /**\n     * Updates OpenAPI definition\n     */\n    function updateOASDefinition() {\n        setIsImporting(true);\n        const {\n            inputValue, inputType, content,\n        } = apiInputs;\n        const isFileInput = inputType === 'file';\n        if (isFileInput) {\n            const reader = new FileReader();\n            const contentType = inputValue.type.includes('yaml') ? 'yaml ' : 'json';\n            reader.onloadend = (event) => {\n                setSchemaDefinition(event.currentTarget.result, contentType);\n            };\n            reader.readAsText(inputValue);\n        }\n        const newAPI = new API();\n        const promisedResponse = isFileInput ? newAPI.updateAPIDefinitionByFile(api.id, inputValue)\n            : newAPI.updateAPIDefinitionByUrl(api.id, inputValue);\n        promisedResponse\n            .then(() => {\n                Alert.success(intl.formatMessage({\n                    id: 'Apis.Details.APIDefinition.APIDefinition.api.definition.updated.successfully',\n                    defaultMessage: 'API Definition Updated Successfully',\n                }));\n                setOpenAPIDefinitionImport(false);\n                if (!isFileInput) {\n                    // Test to starting the content with'{' character ignoring white spaces\n                    const isJSONRegex = RegExp(/^\\s*{/); // TODO: not a solid test need to support from REST API ~tmkb\n                    const contentType = isJSONRegex.test(content) ? 'json' : 'yaml';\n                    setSchemaDefinition(content, contentType);\n                }\n            })\n            .catch((error) => {\n                console.error(error);\n                Alert.error(intl.formatMessage({\n                    id: 'Apis.Details.APIDefinition.APIDefinition.error.while.updating.api.definition',\n                    defaultMessage: 'Error while updating the API Definition',\n                }));\n            }).finally(() => setIsImporting(false));\n    }\n\n    /**\n     * Update the graphQL api with its operation\n     * @param {*}  api\n     * @param {*}  graphQLInfo\n     */\n    function updateGraphQLAPIDefinition(graphQLSchema) {\n        const promisedAPI = api.updateGraphQLAPIDefinition(api.id, graphQLSchema);\n        promisedAPI\n            .then((response) => {\n                api.operations = response.obj;\n                Alert.success(intl.formatMessage({\n                    id: 'Apis.Details.APIDefinition.APIDefinition.graphQLDefinition.updated.successfully',\n                    defaultMessage: 'Schema Definition Updated Successfully',\n                }));\n                setOpenAPIDefinitionImport(false);\n                setSchemaDefinition(graphQLSchema);\n            })\n            .catch((err) => {\n                console.log(err);\n                Alert.error(intl.formatMessage({\n                    id: 'Apis.Details.APIDefinition.APIDefinition.error.updating.graphQL.schema',\n                    defaultMessage: 'Error while updating GraphQL schema',\n                }));\n            });\n    }\n\n\n    /**\n     * Updates GraphQL schema definition\n     */\n    function updateGraphQLSchema() {\n        const {\n            inputValue,\n        } = apiInputs;\n\n        const promisedValidation = API.validateGraphQLFile(inputValue);\n        promisedValidation\n            .then((response) => {\n                const { isValid, graphQLInfo } = response.obj;\n                if (isValid === true) {\n                    updateGraphQLAPIDefinition(graphQLInfo.graphQLSchema.schemaDefinition);\n                }\n            })\n            .catch((err) => {\n                console.log(err);\n                Alert.error(intl.formatMessage({\n                    id: 'Error.while.validating.the.imported.graphQLSchema',\n                    defaultMessage: 'Error while validating the imported schema',\n                }));\n            });\n    }\n\n    /**\n     * Updates WSDL definition\n     */\n    function updateWSDL() {\n        const {\n            inputType, inputValue,\n        } = apiInputs;\n        const isFileInput = inputType === 'file';\n        let promisedAPI;\n        if (isFileInput) {\n            promisedAPI = api.updateWSDLByFileOrArchive(api.id, inputValue);\n        } else {\n            promisedAPI = api.updateWSDLByUrl(api.id, inputValue);\n        }\n        promisedAPI\n            .then(() => {\n                Alert.success(intl.formatMessage({\n                    id: 'Apis.Details.APIDefinition.ImportDefinition.WSDL.updated.successfully',\n                    defaultMessage: 'WSDL Updated Successfully',\n                }));\n                setOpenAPIDefinitionImport(false);\n                setSchemaDefinition(isFileInput && inputValue.type === 'application/zip');\n            })\n            .catch((err) => {\n                console.log(err);\n                Alert.error(intl.formatMessage({\n                    id: 'Apis.Details.APIDefinition.ImportDefinition.error.updating.WSDL',\n                    defaultMessage: 'Error while updating WSDL',\n                }));\n            });\n    }\n\n    /**\n     * Handles API definition import\n     */\n    function importDefinition() {\n        if (isGraphQL) {\n            updateGraphQLSchema();\n        } else if (isSOAP) {\n            updateWSDL();\n        } else {\n            updateOASDefinition();\n        }\n    }\n    /**\n     *\n     * Set the validity of the API definition imports\n     * @param {*} isValidForm\n     * @param {*} validationState\n     */\n    function handleOnValidate(isFormValid) {\n        inputsDispatcher({\n            action: 'isFormValid',\n            value: isFormValid,\n        });\n    }\n\n    let dialogTitle = (\n        <FormattedMessage\n            id='Apis.Details.APIDefinition.APIDefinition.import.definition.oas'\n            defaultMessage='Import OpenAPI Definition'\n        />\n    );\n    let dialogContent = (\n        <ProvideOpenAPI\n            onValidate={handleOnValidate}\n            apiInputs={apiInputs}\n            inputsDispatcher={inputsDispatcher}\n        />\n    );\n    let btnText = (\n        <FormattedMessage\n            id='Apis.Details.APIDefinition.APIDefinition.import.definition'\n            defaultMessage='Import Definition'\n        />\n    );\n    if (isGraphQL) {\n        dialogTitle = (\n            <FormattedMessage\n                id='Apis.Details.APIDefinition.APIDefinition.import.definition.graphql'\n                defaultMessage='Import GraphQL Schema Definition'\n            />\n        );\n        dialogContent = (\n            <ProvideGraphQL\n                onValidate={handleOnValidate}\n                apiInputs={apiInputs}\n                inputsDispatcher={inputsDispatcher}\n            />\n        );\n    }\n    if (isSOAP) {\n        dialogTitle = (\n            <FormattedMessage\n                id='Apis.Details.APIDefinition.APIDefinition.import.definition.wsdl'\n                defaultMessage='Import WSDL'\n            />\n        );\n        dialogContent = (\n            <ProvideWSDL\n                onValidate={handleOnValidate}\n                apiInputs={apiInputs}\n                inputsDispatcher={inputsDispatcher}\n            />\n        );\n        btnText = (\n            <FormattedMessage\n                id='Apis.Details.APIDefinition.APIDefinition.import.wsdl'\n                defaultMessage='Import WSDL'\n            />\n        );\n    }\n\n    return (\n        <>\n            <Button\n                size='small'\n                className={classes.button}\n                onClick={handleAPIDefinitionImportOpen}\n                disabled={isRestricted(['apim:api_create'], api)}\n            >\n                <CloudUploadRounded className={classes.buttonIcon} />\n                {btnText}\n            </Button>\n            <Dialog onBackdropClick={setOpenAPIDefinitionImport} open={openAPIDefinitionImport}>\n                <DialogTitle>\n                    <Typography className={classes.importDefinitionDialogHeader}>\n                        {dialogTitle}\n                    </Typography>\n                </DialogTitle>\n                <DialogContent>\n                    {dialogContent}\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={handleAPIDefinitionImportCancel}>\n                        <FormattedMessage\n                            id='Apis.Details.APIDefinition.APIDefinition.import.definition.cancel'\n                            defaultMessage='Cancel'\n                        />\n                    </Button>\n                    <Button\n                        onClick={importDefinition}\n                        variant='contained'\n                        color='primary'\n                        disabled={!apiInputs.isFormValid || isImporting}\n                    >\n                        <FormattedMessage\n                            id='Apis.Details.APIDefinition.APIDefinition.import.definition.import'\n                            defaultMessage='Import'\n                        />\n                        {isImporting && <CircularProgress size={20} />}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        </>\n    );\n}\n\nImportDefinition.propTypes = {\n    setSchemaDefinition: PropTypes.func.isRequired,\n};\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { Suspense, lazy } from 'react';\nimport AppContext from 'AppComponents/Shared/AppContext';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport EditRounded from '@material-ui/icons/EditRounded';\nimport CloudDownloadRounded from '@material-ui/icons/CloudDownloadRounded';\nimport LockRounded from '@material-ui/icons/LockRounded';\nimport SwapHorizontalCircle from '@material-ui/icons/SwapHorizontalCircle';\nimport Dialog from '@material-ui/core/Dialog';\nimport IconButton from '@material-ui/core/IconButton';\nimport Link from '@material-ui/core/Link';\nimport Icon from '@material-ui/core/Icon';\nimport Paper from '@material-ui/core/Paper';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport { Progress } from 'AppComponents/Shared';\nimport Typography from '@material-ui/core/Typography';\nimport Slide from '@material-ui/core/Slide';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport YAML from 'js-yaml';\nimport Alert from 'AppComponents/Shared/Alert';\nimport API from 'AppData/api.js';\nimport { doRedirectToLogin } from 'AppComponents/Shared/RedirectToLogin';\nimport { withRouter } from 'react-router';\nimport { isRestricted } from 'AppData/AuthManager';\nimport ResourceNotFound from '../../../Base/Errors/ResourceNotFound';\nimport APISecurityAudit from './APISecurityAudit';\nimport ImportDefinition from './ImportDefinition';\n\nconst EditorDialog = lazy(() => import('./SwaggerEditorDrawer' /* webpackChunkName: \"EditorDialog\" */));\nconst MonacoEditor = lazy(() => import('react-monaco-editor' /* webpackChunkName: \"APIDefMonacoEditor\" */));\n\nconst styles = (theme) => ({\n    titleWrapper: {\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems: 'center',\n    },\n    swaggerEditorWrapper: {\n        height: '100vh',\n        overflowY: 'auto',\n    },\n    buttonIcon: {\n        marginRight: 10,\n    },\n    topBar: {\n        display: 'flex',\n        flexDirection: 'row',\n        marginBottom: theme.spacing(2),\n    },\n    converterWrapper: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'flex-end',\n        flex: '1',\n        fontSize: '0.6964285714285714rem',\n    },\n    downloadLink: {\n        color: 'black',\n    },\n    button: {\n        marginLeft: theme.spacing(1),\n        '&:hover': {\n            'text-decoration': 'none',\n        },\n    },\n    progressLoader: {\n        marginLeft: theme.spacing(1),\n    },\n});\n/**\n * This component holds the functionality of viewing the api definition content of an api. The initial view is a\n * read-only representation of the api definition file.\n * Users can either edit the content by clicking the 'Edit' button or upload a new api definition file by clicking\n * 'Import API Definition'.\n * */\nclass APIDefinition extends React.Component {\n    /**\n     * @inheritDoc\n     */\n    constructor(props) {\n        super(props);\n        this.state = {\n            openEditor: false,\n            swagger: null,\n            swaggerModified: null,\n            graphQL: null,\n            format: null,\n            convertTo: null,\n            isAuditApiClicked: false,\n            securityAuditProperties: [],\n            isSwaggerValid: true,\n            isUpdating: false,\n        };\n        this.handleNo = this.handleNo.bind(this);\n        this.handleOk = this.handleOk.bind(this);\n        this.openEditor = this.openEditor.bind(this);\n        this.transition = this.transition.bind(this);\n        this.closeEditor = this.closeEditor.bind(this);\n        this.hasJsonStructure = this.hasJsonStructure.bind(this);\n        this.getConvertToFormat = this.getConvertToFormat.bind(this);\n        this.onAuditApiClick = this.onAuditApiClick.bind(this);\n        this.onChangeFormatClick = this.onChangeFormatClick.bind(this);\n        this.openUpdateConfirmation = this.openUpdateConfirmation.bind(this);\n        this.updateSwaggerDefinition = this.updateSwaggerDefinition.bind(this);\n        this.onChangeSwaggerContent = this.onChangeSwaggerContent.bind(this);\n    }\n\n    /**\n     * @inheritdoc\n     */\n    componentDidMount() {\n        const { api } = this.props;\n        const { settings } = this.context;\n        let promisedApi;\n        if (api.type === 'GRAPHQL') {\n            promisedApi = api.getSchema(api.id);\n        } else {\n            promisedApi = api.getSwagger(api.id);\n        }\n\n        this.setState({ securityAuditProperties: settings.securityAuditProperties });\n\n        promisedApi\n            .then((response) => {\n                if (api.type === 'GRAPHQL') {\n                    this.setState({\n                        graphQL: response.obj.schemaDefinition,\n                        format: 'txt',\n                    });\n                } else {\n                    this.setState({\n                        swagger: YAML.safeDump(YAML.safeLoad(response.data)),\n                        swaggerModified: YAML.safeDump(YAML.safeLoad(response.data)),\n                        format: 'yaml',\n                        convertTo: this.getConvertToFormat('yaml'),\n                    });\n                }\n            })\n            .catch((error) => {\n                if (process.env.NODE_ENV !== 'production') {\n                    console.log(error);\n                }\n                const { status } = error;\n                if (status === 404) {\n                    this.setState({ notFound: true });\n                } else if (status === 401) {\n                    doRedirectToLogin();\n                }\n            });\n    }\n\n\n    /**\n      * Set isAuditApiClicked to true when Audit API is clicked\n      */\n    onAuditApiClick() {\n        this.setState({ isAuditApiClicked: true });\n    }\n\n    /**\n     * Toggle the format of the api definition.\n     * JSON -> YAML, YAML -> JSON\n     */\n    onChangeFormatClick() {\n        const { format, swagger, convertTo } = this.state;\n        let formattedString = '';\n        if (convertTo === 'json') {\n            formattedString = JSON.stringify(YAML.load(swagger), null, 1);\n        } else {\n            formattedString = YAML.safeDump(YAML.safeLoad(swagger));\n        }\n        this.setState({\n            swagger: formattedString,\n            swaggerModified: formattedString,\n            format: convertTo,\n            convertTo: format,\n        });\n    }\n\n    /**\n     * Method to handle swagger content change\n     *\n     * @param {string} modifiedContent : The modified swagger content.\n     * */\n    onChangeSwaggerContent(modifiedContent) {\n        const { format } = this.state;\n        /**\n         * Validate for the basic json/ yaml format.\n         * */\n        try {\n            if (format === 'json') {\n                JSON.parse(modifiedContent, null);\n            } else {\n                YAML.load(modifiedContent);\n            }\n            this.setState({ isSwaggerValid: true, swaggerModified: modifiedContent });\n        } catch (e) {\n            this.setState({ isSwaggerValid: false, swaggerModified: modifiedContent });\n        }\n    }\n\n    setSchemaDefinition = (schemaContent, contentType) => {\n        const { api } = this.props;\n        const isGraphql = api.isGraphql();\n        if (isGraphql) {\n            this.setState({ graphQL: schemaContent });\n        } else {\n            this.setState({\n                swagger: schemaContent,\n                swaggerModified: schemaContent,\n                convertTo: this.getConvertToFormat(contentType),\n                format: contentType,\n            });\n        }\n    };\n\n    /**\n     * Util function to get the format which the definition can be converted to.\n     * @param {*} format : The current format of definition.\n     * @returns {string} The possible conversion format.\n     */\n    getConvertToFormat(format) {\n        return format === 'json' ? 'yaml' : 'json';\n    }\n\n    /**\n     * Checks whether the swagger content is json type.\n     * @param {string} definition The swagger string.\n     * @return {boolean} Whether the content is a json or not.\n     * */\n    hasJsonStructure(definition) {\n        if (typeof definition !== 'string') return false;\n        try {\n            const result = JSON.parse(definition);\n            return result && typeof result === 'object';\n        } catch (err) {\n            return false;\n        }\n    }\n\n    /**\n     * Handles the yes button action of the save api definition confirmation dialog box.\n     */\n    handleOk() {\n        const { swaggerModified } = this.state;\n        this.setState({ openDialog: false }, () => this.updateSwaggerDefinition(swaggerModified, '', ''));\n    }\n\n    /**\n     * Handles the No button action of the save api definition confirmation dialog box.\n     */\n    handleNo() {\n        this.setState({ openDialog: false });\n    }\n\n    /**\n     * Method to set the state for opening the swagger editor drawer.\n     * Swagger editor loads the definition content from the local storage. Hence we set the swagger content to the\n     * local storage.\n     * */\n    openEditor() {\n        this.setState({ openEditor: true });\n    }\n\n    /**\n     * Sets the state to close the swagger-editor drawer.\n     * */\n    closeEditor() {\n        this.setState({ openEditor: false });\n        const { intl, api, history } = this.props;\n        const { isAuditApiClicked } = this.state;\n        if (isAuditApiClicked === true) {\n            Alert.info(intl.formatMessage({\n                id: 'Apis.Details.APIDefinition.info.updating.auditapi',\n                defaultMessage: 'To reflect the changes made, you need to click Audit API',\n            }));\n            const redirectUrl = '/apis/' + api.id + '/api definition';\n            history.push(redirectUrl);\n        }\n    }\n\n    /**\n     * Handles the transition of the drawer.\n     * @param {object} props list of props\n     * @return {object} The Slide transition component\n     * */\n    transition(props) {\n        return <Slide direction='up' {...props} />;\n    }\n\n    /**\n     * Updates swagger content in the local storage.\n     * */\n    openUpdateConfirmation() {\n        this.setState({ openDialog: true });\n    }\n\n    /**\n     * Updates swagger definition of the api.\n     * @param {string} swaggerContent The swagger file that needs to be updated.\n     * @param {string} specFormat The current format of the definition\n     * @param {string} toFormat The format it can be converted to.\n     * */\n    updateSwaggerDefinition(swaggerContent, specFormat, toFormat) {\n        const { api, intl, updateAPI } = this.props;\n        this.setState({ isUpdating: true });\n        let parsedContent = {};\n        if (this.hasJsonStructure(swaggerContent)) {\n            parsedContent = JSON.parse(swaggerContent);\n        } else {\n            try {\n                parsedContent = YAML.load(swaggerContent);\n            } catch (err) {\n                console.log(err);\n                Alert.error(intl.formatMessage({\n                    id: 'Apis.Details.APIDefinition.APIDefinition.error.while.updating.api.definition',\n                    defaultMessage: 'Error occurred while updating the API Definition',\n                }));\n                return;\n            }\n        }\n        const promise = api.updateSwagger(parsedContent);\n        promise\n            .then((response) => {\n                const { endpointImplementationType } = api;\n                if (endpointImplementationType === 'INLINE') {\n                    api.generateMockScripts(api.id);\n                }\n                if (response) {\n                    Alert.success(intl.formatMessage({\n                        id: 'Apis.Details.APIDefinition.APIDefinition.api.definition.updated.successfully',\n                        defaultMessage: 'API Definition updated successfully',\n                    }));\n                    if (specFormat && toFormat) {\n                        this.setState({ swagger: swaggerContent, format: specFormat, convertTo: toFormat });\n                    } else {\n                        this.setState({ swagger: swaggerContent });\n                    }\n                }\n                /*\n                 *updateAPI() will make a /GET call to get the latest api once the swagger definition is updated.\n                 *Otherwise, we need to refresh the page to get changes.\n                 */\n                updateAPI();\n                this.setState({ isUpdating: false });\n            })\n            .catch((err) => {\n                console.log(err);\n                Alert.error(intl.formatMessage({\n                    id: 'Apis.Details.APIDefinition.APIDefinition.error.while.updating.api.definition',\n                    defaultMessage: 'Error occurred while updating the API Definition',\n                }));\n                this.setState({ isUpdating: false });\n            });\n    }\n\n    /**\n     * @inheritdoc\n     */\n    render() {\n        const {\n            swagger, graphQL, openEditor, openDialog, format, convertTo, notFound, isAuditApiClicked,\n            securityAuditProperties, isSwaggerValid, swaggerModified, isUpdating,\n        } = this.state;\n        const { classes, resourceNotFountMessage, api } = this.props;\n        let downloadLink;\n        let fileName;\n        let isGraphQL = 0;\n\n        if (graphQL !== null) {\n            downloadLink = 'data:text/' + format + ';charset=utf-8,' + encodeURIComponent(graphQL);\n            fileName = api.provider + '-' + api.name + '-' + api.version + '.graphql';\n            isGraphQL = 1;\n        } else {\n            downloadLink = 'data:text/' + format + ';charset=utf-8,' + encodeURIComponent(swagger);\n            fileName = 'swagger.' + format;\n        }\n        const editorOptions = {\n            selectOnLineNumbers: true,\n            readOnly: true,\n            smoothScrolling: true,\n            wordWrap: 'on',\n        };\n\n        if (notFound) {\n            return <ResourceNotFound message={resourceNotFountMessage} />;\n        }\n        if (!swagger && !graphQL && api === 'undefined') {\n            return <Progress />;\n        }\n\n        return (\n            <>\n                <div className={classes.topBar}>\n                    <div className={classes.titleWrapper}>\n                        <Typography variant='h4' component='h2'>\n                            {graphQL ? (\n                                <FormattedMessage\n                                    id='Apis.Details.APIDefinition.APIDefinition.schema.definition'\n                                    defaultMessage='Schema Definition'\n                                />\n                            ) : (\n                                <FormattedMessage\n                                    id='Apis.Details.APIDefinition.APIDefinition.api.definition'\n                                    defaultMessage='API Definition'\n                                />\n                            )}\n                        </Typography>\n                        {!(graphQL || api.type === 'APIProduct') && (\n                            <Button\n                                size='small'\n                                className={classes.button}\n                                onClick={this.openEditor}\n                                disabled={isRestricted(['apim:api_create'], api)}\n                            >\n                                <EditRounded className={classes.buttonIcon} />\n                                <FormattedMessage\n                                    id='Apis.Details.APIDefinition.APIDefinition.edit'\n                                    defaultMessage='Edit'\n                                />\n                            </Button>\n                        )}\n                        {api.type !== 'APIProduct' && (\n                            <ImportDefinition setSchemaDefinition={this.setSchemaDefinition} />\n                        )}\n                        <Button\n                            size='small'\n                            className={classes.button}\n                            component={Link}\n                            download={fileName}\n                            href={downloadLink}\n                        >\n                            <CloudDownloadRounded className={classes.buttonIcon} />\n                            <FormattedMessage\n                                id='Apis.Details.APIDefinition.APIDefinition.download.definition'\n                                defaultMessage='Download Definition'\n                            />\n                        </Button>\n\n                        {(securityAuditProperties.apiToken && securityAuditProperties.collectionId\n                        && api.type !== 'GRAPHQL')\n                            && (\n                                <Button size='small' className={classes.button} onClick={this.onAuditApiClick}>\n                                    <LockRounded className={classes.buttonIcon} />\n                                    <FormattedMessage\n                                        id='Apis.Details.APIDefinition.APIDefinition.audit.api'\n                                        defaultMessage='Audit API'\n                                    />\n                                </Button>\n                            )}\n\n                        {isRestricted(['apim:api_create'], api) && (\n                            <Typography variant='body2' color='primary'>\n                                <FormattedMessage\n                                    id='Apis.Details.APIDefinition.APIDefinition.update.not.allowed'\n                                    defaultMessage='Unauthorized: Insufficient permissions to update API Definition'\n                                />\n                            </Typography>\n                        )}\n                    </div>\n                    {isGraphQL === 0 && (\n                        <div className={classes.titleWrapper}>\n                            <Button size='small' className={classes.button} onClick={this.onChangeFormatClick}>\n                                <SwapHorizontalCircle className={classes.buttonIcon} />\n                                <FormattedMessage\n                                    id='Apis.Details.APIDefinition.APIDefinition.convert.to'\n                                    defaultMessage='Convert to'\n                                />\n                                {' '}\n                                {convertTo}\n                            </Button>\n                        </div>\n                    )}\n                </div>\n                <div>\n                    <Suspense fallback={<Progress />}>\n                        {isAuditApiClicked ? (\n                            <APISecurityAudit apiId={api.id} />\n                        ) : (\n                            <MonacoEditor\n                                language={format}\n                                width='100%'\n                                height='calc(100vh - 51px)'\n                                theme='vs-dark'\n                                value={swagger !== null ? swagger : graphQL}\n                                options={editorOptions}\n                            />\n                        )}\n                    </Suspense>\n                </div>\n                <Dialog fullScreen open={openEditor} onClose={this.closeEditor} TransitionComponent={this.transition}>\n                    <Paper square className={classes.popupHeader}>\n                        <IconButton\n                            className={classes.button}\n                            color='inherit'\n                            onClick={this.closeEditor}\n                            aria-label={(\n                                <FormattedMessage\n                                    id='Apis.Details.APIDefinition.APIDefinition.btn.close'\n                                    defaultMessage='Close'\n                                />\n                            )}\n                        >\n                            <Icon>close</Icon>\n                        </IconButton>\n\n                        <Button\n                            className={classes.button}\n                            variant='contained'\n                            color='primary'\n                            onClick={this.openUpdateConfirmation}\n                            disabled={!isSwaggerValid || isUpdating}\n                        >\n                            <FormattedMessage\n                                id='Apis.Details.APIDefinition.APIDefinition.documents.swagger.editor.update.content'\n                                defaultMessage='Update Content'\n                            />\n                            {isUpdating && <CircularProgress className={classes.progressLoader} size={24} />}\n                        </Button>\n                    </Paper>\n                    <Suspense\n                        fallback={(\n                            <Progress />\n                        )}\n                    >\n                        <EditorDialog\n                            swagger={swaggerModified}\n                            language={format}\n                            onEditContent={this.onChangeSwaggerContent}\n                        />\n                    </Suspense>\n                </Dialog>\n                <Dialog\n                    open={openDialog}\n                    onClose={this.handleNo}\n                    aria-labelledby='alert-dialog-title'\n                    aria-describedby='alert-dialog-description'\n                >\n                    <DialogTitle id='alert-dialog-title'>\n                        <Typography align='left'>\n                            <FormattedMessage\n                                id='Apis.Details.APIDefinition.APIDefinition.save.api.definition'\n                                defaultMessage='Save API Definition'\n                            />\n                        </Typography>\n                    </DialogTitle>\n                    <DialogContent>\n                        <DialogContentText id='alert-dialog-description'>\n                            <FormattedMessage\n                                id='Apis.Details.APIDefinition.APIDefinition.api.definition.save.confirmation'\n                                defaultMessage={\n                                    'Are you sure you want to save the API Definition? This might affect the'\n                                    + ' existing resources.'\n                                }\n                            />\n                        </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleNo} color='primary'>\n                            <FormattedMessage\n                                id='Apis.Details.APIDefinition.APIDefinition.btn.no'\n                                defaultMessage='CANCEL'\n                            />\n                        </Button>\n                        <Button onClick={this.handleOk} color='primary' autoFocus variant='contained'>\n                            <FormattedMessage\n                                id='Apis.Details.APIDefinition.APIDefinition.btn.yes'\n                                defaultMessage='SAVE'\n                            />\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n}\n\nAPIDefinition.contextType = AppContext;\nAPIDefinition.propTypes = {\n    classes: PropTypes.shape({\n        button: PropTypes.shape({}),\n        popupHeader: PropTypes.shape({}),\n        buttonIcon: PropTypes.shape({}),\n        root: PropTypes.shape({}),\n        topBar: PropTypes.shape({}),\n        titleWrapper: PropTypes.shape({}),\n        mainTitle: PropTypes.shape({}),\n        converterWrapper: PropTypes.shape({}),\n        dropzone: PropTypes.shape({}),\n        downloadLink: PropTypes.shape({}),\n    }).isRequired,\n    api: PropTypes.shape({\n        updateSwagger: PropTypes.func,\n        getSwagger: PropTypes.func,\n        id: PropTypes.string,\n        apiType: PropTypes.oneOf([API.CONSTS.API, API.CONSTS.APIProduct]),\n    }).isRequired,\n    history: PropTypes.shape({\n        push: PropTypes.object,\n    }).isRequired,\n    location: PropTypes.shape({\n        pathname: PropTypes.object,\n    }).isRequired,\n    resourceNotFountMessage: PropTypes.shape({}).isRequired,\n    theme: PropTypes.shape({}).isRequired,\n    intl: PropTypes.shape({\n        formatMessage: PropTypes.func,\n    }).isRequired,\n    updateAPI: PropTypes.func.isRequired,\n};\nexport default withRouter(injectIntl(withStyles(styles, { withTheme: true })(APIDefinition)));\n","/*\n * Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { Suspense, lazy } from 'react';\nimport AppContext from 'AppComponents/Shared/AppContext';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport CloudDownloadRounded from '@material-ui/icons/CloudDownloadRounded';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport { Progress } from 'AppComponents/Shared';\nimport Typography from '@material-ui/core/Typography';\nimport InlineMessage from 'AppComponents/Shared/InlineMessage';\nimport API from 'AppData/api.js';\nimport { withRouter } from 'react-router';\nimport { isRestricted } from 'AppData/AuthManager';\nimport Utils from 'AppData/Utils';\nimport Alert from 'AppComponents/Shared/Alert';\nimport ResourceNotFound from '../../../Base/Errors/ResourceNotFound';\nimport ImportDefinition from './ImportDefinition';\n\nconst MonacoEditor = lazy(() => import('react-monaco-editor' /* webpackChunkName: \"APIDefMonacoEditor\" */));\n\nconst styles = (theme) => ({\n    titleWrapper: {\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems: 'center',\n    },\n    swaggerEditorWrapper: {\n        height: '100vh',\n        overflowY: 'auto',\n    },\n    buttonIcon: {\n        marginRight: 10,\n    },\n    topBar: {\n        display: 'flex',\n        flexDirection: 'row',\n        marginBottom: theme.spacing(2),\n    },\n    converterWrapper: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'flex-end',\n        flex: '1',\n        fontSize: '0.6964285714285714rem',\n    },\n    downloadLink: {\n        color: 'black',\n    },\n    button: {\n        marginLeft: theme.spacing(1),\n    },\n});\n\n/**\n * This component holds the functionality of viewing the WSDL content of an api. The view is a\n * read-only representation of the WSDL file. If the API has a WSDL ZIP archive, the preview will not be\n * available and it will be indicated in the UI.\n * Users can upload a new api definition file by clicking 'Import WSDL'.\n *\n * @class WSDL\n * @extends {Component}\n * */\nclass WSDL extends React.Component {\n    /**\n     * @inheritDoc\n     */\n    constructor(props) {\n        super(props);\n        this.state = {\n            isArchive: false,\n            wsdl: null,\n        };\n        this.loadWSDLInEditor = this.loadWSDLInEditor.bind(this);\n        this.handleDownloadWSDLZip = this.handleDownloadWSDLZip.bind(this);\n    }\n\n    /**\n     * @inheritdoc\n     */\n    componentDidMount() {\n        const { api, intl } = this.props;\n        const promisedWSDLInfo = api.getWSDLInfo(api.id);\n        promisedWSDLInfo\n            .then((response) => {\n                const wsdlType = response.obj.type;\n                if (wsdlType === 'WSDL') {\n                    this.loadWSDLInEditor(api);\n                } else {\n                    this.setState({ isArchive: true, wsdl: null });\n                }\n            })\n            .catch((error) => {\n                if (process.env.NODE_ENV !== 'production') {\n                    console.log(error);\n                }\n                const { status } = error;\n                if (status === 404) {\n                    this.setState({ notFound: true });\n                } else {\n                    Alert.error(intl.formatMessage({\n                        id: 'Apis.Details.APIDefinition.WSDL.error.loading.wsdl.info',\n                        defaultMessage: 'Error loading WSDL',\n                    }));\n                }\n            });\n    }\n\n    /**\n     * Downloads and loads the API's WSDL in the editor. If the WSDL is ZIP, the operation is skipped\n     * and it is indicated in the UI.\n     *\n     *  @param {boolean} isArchive states whether the WSDL is a ZIP\n     */\n    setSchemaDefinition = (isArchive) => {\n        this.setState({ isArchive, wsdl: null });\n        if (!isArchive) {\n            const { api } = this.props;\n            this.loadWSDLInEditor(api);\n        }\n    }\n\n    /**\n     * Downloads and loads the API's WSDL in the editor.\n     *\n     * @param {*} api API\n     */\n    loadWSDLInEditor(api) {\n        const { intl } = this.props;\n        const promisedApi = api.getWSDL(api.id);\n\n        promisedApi\n            .then((response) => {\n                response.data.text().then((text) => {\n                    this.setState({\n                        isArchive: false,\n                        wsdl: text,\n                    });\n                });\n            })\n            .catch((error) => {\n                if (process.env.NODE_ENV !== 'production') {\n                    console.log(error);\n                }\n                const { status } = error;\n                if (status === 404) {\n                    this.setState({ notFound: true });\n                } else {\n                    Alert.error(intl.formatMessage({\n                        id: 'Apis.Details.APIDefinition.WSDL.error.loading.wsdl',\n                        defaultMessage: 'Error loading WSDL',\n                    }));\n                }\n            });\n    }\n\n    /**\n     * Downloads WSDL ZIP file.\n     *\n     */\n    handleDownloadWSDLZip() {\n        const { api, intl } = this.props;\n        const wsdlZipContent = api.getWSDL(api.id);\n        wsdlZipContent.then((response) => {\n            Utils.forceDownload(response);\n        })\n            .catch((error) => {\n                if (process.env.NODE_ENV !== 'production') {\n                    console.log(error);\n                }\n                Alert.error(intl.formatMessage({\n                    id: 'Apis.Details.APIDefinition.WSDL.download.error',\n                    defaultMessage: 'Error downloading WSDL ZIP file',\n                }));\n            });\n    }\n\n    /**\n     * @inheritdoc\n     */\n    render() {\n        const {\n            wsdl, notFound, isArchive,\n        } = this.state;\n        const { classes, resourceNotFountMessage, api } = this.props;\n\n        const editorOptions = {\n            selectOnLineNumbers: true,\n            readOnly: true,\n            smoothScrolling: true,\n            wordWrap: 'on',\n            cursorStyle: 'line-thin',\n        };\n\n        if (notFound) {\n            return <ResourceNotFound message={resourceNotFountMessage} />;\n        }\n\n        if (!isArchive && !wsdl) {\n            return <Progress />;\n        }\n\n        let downloadWidget;\n        const downloadButtonContent = (\n            <>\n                <CloudDownloadRounded className={classes.buttonIcon} />\n                <FormattedMessage\n                    id='Apis.Details.APIDefinition.WSDL.download.definition'\n                    defaultMessage='Download WSDL'\n                />\n            </>\n        );\n        if (!isArchive) {\n            const downloadLink = 'data:text/xml;charset=utf-8,' + encodeURIComponent(wsdl);\n            const fileName = api.name + '-' + api.version + '.wsdl';\n            downloadWidget = (\n                <a className={classes.downloadLink} href={downloadLink} download={fileName}>\n                    <Button size='small' className={classes.button}>\n                        {downloadButtonContent}\n                    </Button>\n                </a>\n            );\n        } else {\n            downloadWidget = (\n                <Button size='small' className={classes.button} onClick={this.handleDownloadWSDLZip}>\n                    {downloadButtonContent}\n                </Button>\n            );\n        }\n\n        return (\n            <>\n                <div className={classes.topBar}>\n                    <div className={classes.titleWrapper}>\n                        <Typography variant='h4'>\n                            <FormattedMessage\n                                id='Apis.Details.APIDefinition.WSDL.wsdl.definition'\n                                defaultMessage='WSDL Definition'\n                            />\n                        </Typography>\n                        <ImportDefinition setSchemaDefinition={this.setSchemaDefinition} />\n                        {downloadWidget}\n                        {isRestricted(['apim:api_create'], api) && (\n                            <Typography variant='body2' color='primary'>\n                                <FormattedMessage\n                                    id='Apis.Details.APIDefinition.WSDL.update.not.allowed'\n                                    defaultMessage='Unauthorized: Insufficient permissions to update WSDL Definition'\n                                />\n                            </Typography>\n                        )}\n                    </div>\n                </div>\n                <div>\n                    <Suspense fallback={<Progress />}>\n                        {isArchive ? (\n                            <InlineMessage type='info' height={80} className={classes.emptyBox}>\n                                <div className={classes.contentWrapper}>\n                                    <Typography component='p' className={classes.content}>\n                                        <FormattedMessage\n                                            id='Apis.Details.APIDefinition.WSDL.preview.not.available'\n                                            defaultMessage='The API has a WSDL ZIP hence the preview is not available.'\n                                        />\n                                    </Typography>\n                                </div>\n                            </InlineMessage>\n                        ) : (\n                            <MonacoEditor\n                                language='xml'\n                                width='100%'\n                                height='calc(100vh - 51px)'\n                                theme='vs-dark'\n                                value={wsdl}\n                                options={editorOptions}\n                            />\n                        )}\n\n                    </Suspense>\n                </div>\n            </>\n        );\n    }\n}\n\nWSDL.contextType = AppContext;\nWSDL.propTypes = {\n    classes: PropTypes.shape({\n        button: PropTypes.shape({}),\n        popupHeader: PropTypes.shape({}),\n        buttonIcon: PropTypes.shape({}),\n        root: PropTypes.shape({}),\n        topBar: PropTypes.shape({}),\n        titleWrapper: PropTypes.shape({}),\n        mainTitle: PropTypes.shape({}),\n        converterWrapper: PropTypes.shape({}),\n        dropzone: PropTypes.shape({}),\n        downloadLink: PropTypes.shape({}),\n    }).isRequired,\n    api: PropTypes.shape({\n        updateSwagger: PropTypes.func,\n        getSwagger: PropTypes.func,\n        id: PropTypes.string,\n        apiType: PropTypes.oneOf([API.CONSTS.API, API.CONSTS.APIProduct]),\n    }).isRequired,\n    history: PropTypes.shape({\n        push: PropTypes.object,\n    }).isRequired,\n    location: PropTypes.shape({\n        pathname: PropTypes.object,\n    }).isRequired,\n    resourceNotFountMessage: PropTypes.shape({}).isRequired,\n    theme: PropTypes.shape({}).isRequired,\n    intl: PropTypes.shape({\n        formatMessage: PropTypes.func,\n    }).isRequired,\n};\nexport default withRouter(injectIntl(withStyles(styles, { withTheme: true })(WSDL)));\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nconst suggestions = {\n    common: [\n        {\n            label: 'Overview',\n            route: 'overview',\n        },\n        {\n            label: 'MetaData',\n            route: 'overview',\n        },\n        {\n            label: 'Runtime Configurations',\n            route: 'runtime-configuration',\n        },\n        {\n            label: 'API Gateways',\n            route: 'environments',\n        },\n        {\n            label: 'Microgateway Labels',\n            route: 'environments',\n        },\n        {\n            label: 'Environments',\n            route: 'environments',\n        },\n        {\n            label: 'Transport Level Security',\n            route: 'runtime-configuration',\n        },\n        {\n            label: 'Mutual SSL',\n            route: 'runtime-configuration',\n        },\n        {\n            label: 'Design Configurations',\n            route: 'configuration',\n        },\n        {\n            label: 'Manage SSL Certificates',\n            route: 'configuration',\n        },\n        {\n            label: 'HTTP HTTPS enable disable',\n            route: 'runtime-configuration',\n        },\n        {\n            label: 'Application Level Security',\n            route: 'runtime-configuration',\n        },\n        {\n            label: 'Enable/Disable OAuth2',\n            route: 'runtime-configuration',\n        },\n        {\n            label: 'Enable/Disable Basic Auth',\n            route: 'runtime-configuration',\n        },\n        {\n            label: 'Enable/Disable Api Key',\n            route: 'runtime-configuration',\n        },\n        {\n            label: 'Authorization Headers',\n            route: 'runtime-configuration',\n        },\n        {\n            label: 'CORS Configuration',\n            route: 'runtime-configuration',\n        },\n        {\n            label: 'Backend Throughput',\n            route: 'runtime-configuration',\n        },\n        {\n            label: 'Message Mediation',\n            route: 'runtime-configuration',\n        },\n        {\n            label: 'Response',\n            route: 'runtime-configuration',\n        },\n        {\n            label: 'Request',\n            route: 'runtime-configuration',\n        },\n        {\n            label: 'Backend',\n            route: 'runtime-configuration',\n        },\n        {\n            label: 'Access Control Allow Origins',\n            route: 'configuration',\n        },\n        {\n            label: 'Access Control Allow Headers',\n            route: 'configuration',\n        },\n        {\n            label: 'Access Control Allow Credentials',\n            route: 'configuration',\n        },\n        {\n            label: 'Response caching',\n            route: 'runtime-configuration',\n        },\n        {\n            label: 'Publisher Access Control',\n            route: 'configuration',\n        },\n        {\n            label: 'Developer Portal Visibility',\n            route: 'configuration',\n        },\n        {\n            label: 'Tags',\n            route: 'configuration',\n        },\n        {\n            label: 'Default Version',\n            route: 'configuration',\n        },\n        {\n            label: 'Image',\n            route: 'configuration',\n        },\n        {\n            label: 'Description',\n            route: 'configuration',\n        },\n        {\n            label: 'Documents',\n            route: 'documents',\n        },\n        {\n            label: 'Add New Documents',\n            route: 'documents',\n        },\n        {\n            label: 'API Help',\n            route: 'documents',\n        },\n        {\n            label: 'Markdown Documents',\n            route: 'documents',\n        },\n        {\n            label: 'Business Information',\n            route: 'business info',\n        },\n        {\n            label: 'Business Owner',\n            route: 'business info',\n        },\n        {\n            label: 'Technical Owner',\n            route: 'business info',\n        },\n        {\n            label: 'Properties',\n            route: 'business info',\n        },\n        {\n            label: 'Subscriptions',\n            route: 'subscriptions',\n        },\n        {\n            label: 'Subscription Policies',\n            route: 'subscriptions',\n        },\n        {\n            label: 'Subscription Availability',\n            route: 'subscriptions',\n        },\n    ],\n    apiOnly: [\n        {\n            label: 'Lifecycle',\n            route: 'lifecycle',\n        },\n        {\n            label: 'Publish API',\n            route: 'lifecycle',\n        },\n        {\n            label: 'Block API',\n            route: 'lifecycle',\n        },\n        {\n            label: 'Depricate API',\n            route: 'lifecycle',\n        },\n        {\n            label: 'Change Lifecycle',\n            route: 'lifecycle',\n        },\n        {\n            label: 'Deploy as a Prototype API',\n            route: 'lifecycle',\n        },\n        {\n            label: 'Requirements',\n            route: 'lifecycle',\n        },\n        {\n            label: 'Mediation Policies',\n            route: 'runtime-configuration',\n        },\n        {\n            label: 'Monetization',\n            route: 'monetization',\n        },\n        {\n            label: 'Monetization Properties',\n            route: 'monetization',\n        },\n        {\n            label: 'Commercial Policies',\n            route: 'monetization',\n        },\n        {\n            label: 'Create New Version',\n            route: 'new_version',\n        },\n        {\n            label: 'Prototyped API',\n            route: 'endpoints',\n        },\n        {\n            label: 'AWS Lambda Endpoints',\n            route: 'endpoints',\n        },\n        {\n            label: 'HTTP/HTTPS Endpoints',\n            route: 'endpoints',\n        },\n        {\n            label: 'HTTP/SOAP Endpoints',\n            route: 'endpoints',\n        },\n        {\n            label: 'Dynamic Endpoints',\n            route: 'endpoints',\n        },\n        {\n            label: 'Endpoint Security',\n            route: 'endpoints',\n        },\n        {\n            label: 'Certificates',\n            route: 'endpoints',\n        },\n        {\n            label: 'Production Endpoint',\n            route: 'endpoints',\n        },\n        {\n            label: 'Sandbox Endpoint',\n            route: 'endpoints',\n        },\n        {\n            label: 'Failover Endpoint',\n            route: 'endpoints',\n        },\n        {\n            label: 'Load Balance Endpoint',\n            route: 'endpoints',\n        },\n        {\n            label: 'Endpoints',\n            route: 'endpoints',\n        },\n        {\n            label: 'API Definition',\n            route: 'api definition',\n        },\n        {\n            label: 'Import API Definition',\n            route: 'api definition',\n        },\n        {\n            label: 'Download API Definition',\n            route: 'api definition',\n        },\n        {\n            label: 'Swagger',\n            route: 'api definition',\n        },\n        {\n            label: 'Import Swagger',\n            route: 'api definition',\n        },\n        {\n            label: 'Download Swagger',\n            route: 'api definition',\n        },\n        {\n            label: 'OAS',\n            route: 'api definition',\n        },\n        {\n            label: 'Import OAS',\n            route: 'api definition',\n        },\n        {\n            label: 'Download OAS',\n            route: 'api definition',\n        },\n        {\n            label: 'OpenAPI',\n            route: 'api definition',\n        },\n        {\n            label: 'Import OpenAPI',\n            route: 'api definition',\n        },\n        {\n            label: 'Download OpenAPI',\n            route: 'api definition',\n        },\n        {\n            label: 'Resources',\n            route: 'resources',\n        },\n        {\n            label: 'Resources Configuration',\n            route: 'resources',\n        },\n        {\n            label: 'Rate Limiting',\n            route: 'resources',\n        },\n        {\n            label: 'Operation Governance',\n            route: 'resources',\n        },\n        {\n            label: 'Scopes',\n            route: 'scopes',\n        },\n        {\n            label: 'Add New Scope',\n            route: 'scopes',\n        },\n        {\n            label: 'Schema validation',\n            route: 'runtime-configuration',\n        },\n        {\n            label: 'Fault',\n            route: 'runtime-configuration',\n        },\n        {\n            label: 'Endpoints',\n            route: 'runtime-configuration',\n        },\n        {\n            label: 'Properties',\n            route: 'properties',\n        },\n    ],\n    productOnly: [\n        {\n            label: 'Product only feature',\n            route: 'configuration',\n        },\n        {\n            label: 'API Definition',\n            route: 'api definition',\n        },\n        {\n            label: 'Import API Definition',\n            route: 'api definition',\n        },\n        {\n            label: 'Download API Definition',\n            route: 'api definition',\n        },\n        {\n            label: 'Swagger',\n            route: 'api definition',\n        },\n        {\n            label: 'Import Swagger',\n            route: 'api definition',\n        },\n        {\n            label: 'Download Swagger',\n            route: 'api definition',\n        },\n        {\n            label: 'OAS',\n            route: 'api definition',\n        },\n        {\n            label: 'Import OAS',\n            route: 'api definition',\n        },\n        {\n            label: 'Download OAS',\n            route: 'api definition',\n        },\n        {\n            label: 'OpenAPI',\n            route: 'api definition',\n        },\n        {\n            label: 'Import OpenAPI',\n            route: 'api definition',\n        },\n        {\n            label: 'Download OpenAPI',\n            route: 'api definition',\n        },\n        {\n            label: 'Resources',\n            route: 'resources',\n        },\n        {\n            label: 'Resources Configuration',\n            route: 'resources',\n        },\n        {\n            label: 'Rate Limiting',\n            route: 'resources',\n        },\n        {\n            label: 'Operation Governance',\n            route: 'resources',\n        },\n        {\n            label: 'Schema validation',\n            route: 'runtime-configuration',\n        },\n    ],\n    graphqlOnly: [\n        {\n            label: 'Operations',\n            route: 'operations',\n        },\n        {\n            label: 'Operation Type',\n            route: 'operations',\n        },\n        {\n            label: 'Operations Configuration',\n            route: 'operations',\n        },\n        {\n            label: 'Rate Limiting',\n            route: 'operations',\n        },\n        {\n            label: 'Schema Definition',\n            route: 'schema definition',\n        },\n        {\n            label: 'Scopes',\n            route: 'scopes',\n        },\n        {\n            label: 'Add New Scope',\n            route: 'scopes',\n        },\n        {\n            label: 'Fault',\n            route: 'runtime-configuration',\n        },\n        {\n            label: 'Endpoints',\n            route: 'runtime-configuration',\n        },\n        {\n            label: 'Lifecycle',\n            route: 'lifecycle',\n        },\n        {\n            label: 'Publish API',\n            route: 'lifecycle',\n        },\n        {\n            label: 'Block API',\n            route: 'lifecycle',\n        },\n        {\n            label: 'Depricate API',\n            route: 'lifecycle',\n        },\n        {\n            label: 'Change Lifecycle',\n            route: 'lifecycle',\n        },\n        {\n            label: 'Deploy as a Prototype API',\n            route: 'lifecycle',\n        },\n        {\n            label: 'Requirements',\n            route: 'lifecycle',\n        },\n        {\n            label: 'Monetization',\n            route: 'monetization',\n        },\n        {\n            label: 'Monetization Properties',\n            route: 'monetization',\n        },\n        {\n            label: 'Commercial Policies',\n            route: 'monetization',\n        },\n        {\n            label: 'Create New Version',\n            route: 'new_version',\n        },\n        {\n            label: 'Prototyped API',\n            route: 'endpoints',\n        },\n        {\n            label: 'AWS Lambda Endpoints',\n            route: 'endpoints',\n        },\n        {\n            label: 'HTTP/HTTPS Endpoints',\n            route: 'endpoints',\n        },\n        {\n            label: 'HTTP/SOAP Endpoints',\n            route: 'endpoints',\n        },\n        {\n            label: 'Dynamic Endpoints',\n            route: 'endpoints',\n        },\n        {\n            label: 'Endpoint Security',\n            route: 'endpoints',\n        },\n        {\n            label: 'Certificates',\n            route: 'endpoints',\n        },\n        {\n            label: 'Production Endpoint',\n            route: 'endpoints',\n        },\n        {\n            label: 'Sandbox Endpoint',\n            route: 'endpoints',\n        },\n        {\n            label: 'Failover Endpoint',\n            route: 'endpoints',\n        },\n        {\n            label: 'Load Balance Endpoint',\n            route: 'endpoints',\n        },\n        {\n            label: 'Endpoints',\n            route: 'endpoints',\n        },\n        {\n            label: 'Fault',\n            route: 'runtime-configuration',\n        },\n        {\n            label: 'Endpoints',\n            route: 'runtime-configuration',\n        },\n        {\n            label: 'Properties',\n            route: 'properties',\n        },\n    ],\n};\nexport default suggestions;\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n/* eslint object-shorthand: 0 */\n/* eslint jsx-a11y/click-events-have-key-events: 0 */\n\n/* eslint no-unused-expressions: 0 */\n\nimport React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport deburr from 'lodash/deburr';\nimport Downshift from 'downshift';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport Icon from '@material-ui/core/Icon';\nimport { FormattedMessage } from 'react-intl';\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\nimport ListItem from '@material-ui/core/ListItem';\nimport Button from '@material-ui/core/Button';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport suggestions from './RouteMappings';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n        height: 250,\n    },\n    container: {\n        flexGrow: 1,\n        position: 'relative',\n    },\n    paper: {\n        position: 'absolute',\n        zIndex: theme.zIndex.goToSearch,\n        marginTop: theme.spacing(1),\n        left: 0,\n        right: 0,\n    },\n    chip: {\n        margin: theme.spacing(0.5, 0.25),\n    },\n    inputRoot: {\n        flexWrap: 'wrap',\n    },\n    inputInput: {\n        width: 'auto',\n        flexGrow: 1,\n    },\n    divider: {\n        height: theme.spacing(2),\n    },\n    linkButton: {\n        display: 'grid',\n        alignItems: 'center',\n        flexDirection: 'column',\n        padding: 10,\n        cursor: 'pointer',\n        minWidth: 30,\n    },\n    goToWrapper: {\n        position: 'relative',\n    },\n    downshiftWrapper: {\n        position: 'absolute',\n        padding: theme.spacing(1),\n        right: 60,\n        top: 0,\n        width: 300,\n        background: 'white',\n        border: 'solid 1px #ccc',\n        borderRadius: 5,\n    },\n}));\n\n/**\n * Method to render the input of the user\n * @param {*} inputProps inputProps\n * @returns {*} TextField\n */\nfunction renderInput(inputProps) {\n    const {\n        InputProps, classes, ref, ...other\n    } = inputProps;\n\n    return (\n        <TextField\n            autoFocus\n            InputProps={{\n                inputRef: ref,\n                classes: {\n                    root: classes.inputRoot,\n                    input: classes.inputInput,\n                },\n                ...InputProps,\n            }}\n            {...other}\n        />\n    );\n}\n\nrenderInput.propTypes = {\n    /**\n     * Override or extend the styles applied to the component.\n     */\n    classes: PropTypes.shape({}).isRequired,\n    InputProps: PropTypes.shape({}).isRequired,\n};\n\n/**\n * Method to render the suggestions\n * @param {*} suggestionProps suggestionProps\n * @returns {*} ListItem list of suggestions\n */\nfunction renderSuggestion(suggestionProps) {\n    const {\n        suggestion, index, itemProps, highlightedIndex, api, isAPIProduct, handleClickAway,\n    } = suggestionProps;\n    const isHighlighted = highlightedIndex === index;\n\n    const route = (isAPIProduct\n        ? (`/api-products/${api.id}/${suggestion.route}`)\n        : (`/apis/${api.id}/${suggestion.route}`));\n    return (\n        <Link\n            to={route}\n            onClick={handleClickAway}\n        >\n            <ListItem\n                key={suggestion.label}\n                {...itemProps}\n                selected={isHighlighted}\n                button\n                aria-haspopup='true'\n                aria-controls='lock-menu'\n                aria-label='when device is locked'\n            >\n                <ListItemText primary={suggestion.label} secondary={suggestion.route} />\n            </ListItem>\n        </Link>\n    );\n}\n\nrenderSuggestion.propTypes = {\n    highlightedIndex: PropTypes.oneOfType([PropTypes.oneOf([null]), PropTypes.number]).isRequired,\n    index: PropTypes.number.isRequired,\n    itemProps: PropTypes.shape({}).isRequired,\n    selectedItem: PropTypes.string.isRequired,\n    suggestion: PropTypes.shape({\n        label: PropTypes.string.isRequired,\n    }).isRequired,\n};\n\n/**\n * Method to retrieve suggestions\n * @param {*} value Value of suggestion\n * @param {*} isAPIProduct Boolean to check if it is an APIProduct\n * @param {*} param2 showEmpty\n * @returns {*} filter\n */\nfunction getSuggestions(value, isAPIProduct, isGraphQL, { showEmpty = false } = {}) {\n    const inputValue = deburr(value.trim()).toLowerCase();\n    const inputLength = inputValue.length;\n    let count = 0;\n    const newSuggestions = [...suggestions.common];\n\n    if (isAPIProduct) {\n        newSuggestions.push(...suggestions.productOnly);\n    } else if (isGraphQL) {\n        newSuggestions.push(...suggestions.graphqlOnly);\n    } else {\n        newSuggestions.push(...suggestions.apiOnly);\n    }\n\n    return inputLength === 0 && !showEmpty\n        ? []\n        : newSuggestions.filter((suggestion) => {\n            const keep = count < 5 && suggestion.label.slice(0, inputLength).toLowerCase() === inputValue;\n\n            if (keep) {\n                count += 1;\n            }\n\n            return keep;\n        });\n}\n\n\n/**\n * Method to render the GoTo search feature\n * @param {*} props props param\n * @returns {*} Downshift element\n */\nfunction GoTo(props) {\n    const { isAPIProduct, api } = props;\n    const classes = useStyles();\n    const [showSearch, setShowSearch] = useState(false);\n    let isGraphQL = false;\n\n    if (api.type === 'GRAPHQL') {\n        isGraphQL = true;\n    }\n    const toggleSearch = () => {\n        setShowSearch(!showSearch);\n    };\n    const handleClickAway = () => {\n        setShowSearch(false);\n    };\n\n    return (\n        <ClickAwayListener onClickAway={handleClickAway}>\n            <div className={classes.goToWrapper}>\n                <Button className={classes.linkButton} onClick={toggleSearch}>\n                    <Icon>find_in_page</Icon>\n                    <Typography variant='caption'>\n                        <FormattedMessage id='Apis.Details.GoTo.GoTo.btn' defaultMessage='Go To' />\n                    </Typography>\n                </Button>\n                {showSearch && (\n                    <div className={classes.downshiftWrapper}>\n                        <Downshift id='downshift-simple'>\n                            {({\n                                getInputProps,\n                                getItemProps,\n                                getLabelProps,\n                                getMenuProps,\n                                highlightedIndex,\n                                inputValue,\n                                isOpen,\n                                selectedItem,\n                            }) => {\n                                const { onBlur, onFocus, ...inputProps } = getInputProps({\n                                    placeholder: 'Type what you want to do..',\n                                });\n\n                                return (\n                                    <div className={classes.container}>\n                                        {renderInput({\n                                            fullWidth: true,\n                                            classes,\n                                            label: 'Go to menu item',\n                                            InputLabelProps: getLabelProps({ shrink: true }),\n                                            InputProps: { onBlur, onFocus },\n                                            inputProps,\n                                        })}\n\n                                        <div {...getMenuProps()}>\n                                            {isOpen ? (\n                                                <Paper className={classes.paper} square>\n                                                    {getSuggestions(inputValue, isAPIProduct, isGraphQL)\n                                                        .map((suggestion, index) => renderSuggestion({\n                                                            suggestion,\n                                                            index,\n                                                            itemProps: getItemProps({ item: suggestion.label }),\n                                                            highlightedIndex,\n                                                            selectedItem,\n                                                            handleClickAway: handleClickAway,\n                                                            ...props,\n                                                        }))}\n                                                </Paper>\n                                            ) : null}\n                                        </div>\n                                    </div>\n                                );\n                            }}\n                        </Downshift>\n                    </div>\n                )}\n            </div>\n        </ClickAwayListener>\n    );\n}\n\nGoTo.propTypes = {\n    api: PropTypes.shape({}).isRequired,\n    isAPIProduct: PropTypes.bool.isRequired,\n};\n\nexport default GoTo;\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\n\nimport LibraryAdd from '@material-ui/icons/LibraryAdd';\nimport PropTypes from 'prop-types';\nimport { Link, withRouter } from 'react-router-dom';\nimport { withStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport { FormattedMessage } from 'react-intl';\n\nimport { resourceMethod, resourcePath, ScopeValidation } from 'AppData/ScopeValidation';\nimport VerticalDivider from 'AppComponents/Shared/VerticalDivider';\n\nconst styles = (theme) => ({\n    root: {\n        height: 70,\n        background: theme.palette.background.paper,\n        borderBottom: 'solid 1px ' + theme.palette.grey.A200,\n        display: 'flex',\n        alignItems: 'center',\n    },\n    backLink: {\n        alignItems: 'center',\n        textDecoration: 'none',\n        display: 'flex',\n    },\n    backIcon: {\n        color: theme.palette.primary.main,\n        fontSize: 56,\n        cursor: 'pointer',\n    },\n    backText: {\n        color: theme.palette.primary.main,\n        cursor: 'pointer',\n        fontFamily: theme.typography.fontFamily,\n    },\n    createNewVersionWrapper: {\n        display: 'flex',\n        justifyContent: 'flex-end',\n    },\n    createNewVersion: {\n        display: 'flex',\n        flexDirection: 'column',\n        textAlign: 'center',\n        justifyContent: 'center',\n        cursor: 'pointer',\n        color: theme.custom.createNewVersionButtonColor || 'inherit',\n    },\n    linkText: {\n        fontSize: theme.typography.fontSize,\n    },\n});\n\n/**\n *\n * Function to create a 'CreateNewVersion' button\n *\n * @param {any} props props\n * @returns {*} React CreateNewVersion function component\n * @constructor\n */\nfunction CreateNewVersionButton(props) {\n    const { api, classes } = props;\n    return (\n        <>\n            {/* allowing create new version based on scopes */}\n            <ScopeValidation resourceMethod={resourceMethod.POST} resourcePath={resourcePath.API_COPY}>\n                <div className={classes.createNewVersionWrapper}>\n                    <VerticalDivider height={70} />\n                    <Link\n                        className={classes.createNewVersion}\n                        to={'/apis/' + api.id + '/new_version'}\n                        style={{ minWidth: 95 }}\n                    >\n\n                        <div>\n                            <LibraryAdd />\n                        </div>\n                        <Typography variant='caption'>\n                            <FormattedMessage\n                                id='Apis.Details.components.CreateNewVersionButton.create.new.version'\n                                defaultMessage='Create New Version'\n                            />\n                        </Typography>\n                    </Link>\n                </div>\n            </ScopeValidation>\n        </>\n    );\n}\n\nCreateNewVersionButton.propTypes = {\n    api: PropTypes.shape({\n        id: PropTypes.string,\n    }).isRequired,\n    history: PropTypes.shape({ push: PropTypes.func }).isRequired,\n    classes: PropTypes.shape({}).isRequired,\n};\n\nexport default withRouter(withStyles(styles, { withTheme: true })(CreateNewVersionButton));\n","import React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport Utils from 'AppData/Utils';\nimport Alert from 'AppComponents/Shared/Alert';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport LaunchIcon from '@material-ui/icons/Launch';\nimport CloudDownloadRounded from '@material-ui/icons/CloudDownloadRounded';\nimport { withStyles } from '@material-ui/core/styles';\nimport { Link } from 'react-router-dom';\nimport ApiContext from 'AppComponents/Apis/Details/components/ApiContext';\nimport { useAppContext } from 'AppComponents/Shared/AppContext';\nimport ThumbnailView from 'AppComponents/Apis/Listing/components/ImageGenerator/ThumbnailView';\nimport VerticalDivider from 'AppComponents/Shared/VerticalDivider';\nimport GoTo from 'AppComponents/Apis/Details/GoTo/GoTo';\nimport API from 'AppData/api';\nimport DeleteApiButton from './DeleteApiButton';\nimport CreateNewVersionButton from './CreateNewVersionButton';\n\n\nconst styles = (theme) => ({\n    root: {\n        height: 70,\n        background: theme.palette.background.paper,\n        borderBottom: 'solid 1px ' + theme.palette.grey.A200,\n        display: 'flex',\n        alignItems: 'center',\n    },\n    backLink: {\n        alignItems: 'center',\n        textDecoration: 'none',\n        display: 'block',\n        color: theme.palette.getContrastText(theme.palette.background.paper),\n    },\n    backIcon: {\n        color: theme.palette.primary.main,\n        fontSize: 56,\n        cursor: 'pointer',\n    },\n    backText: {\n        color: theme.palette.primary.main,\n        cursor: 'pointer',\n        fontFamily: theme.typography.fontFamily,\n    },\n    viewInStoreLauncher: {\n        display: 'flex',\n        flexDirection: 'column',\n        color: theme.palette.getContrastText(theme.palette.background.paper),\n        textAlign: 'center',\n        justifyContent: 'center',\n        height: 70,\n    },\n    linkText: {\n        fontSize: theme.typography.fontSize,\n    },\n    dateWrapper: {\n        flex: 1,\n        alignSelf: 'center',\n    },\n    lastUpdatedTypography: {\n        display: 'inline-block',\n        minWidth: 30,\n    },\n    apiName: {\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n        whiteSpace: 'nowrap',\n    },\n    downloadApi: {\n        display: 'flex',\n        flexDirection: 'column',\n        textAlign: 'center',\n        justifyContent: 'center',\n        cursor: 'pointer',\n        height: 70,\n        color: theme.palette.getContrastText(theme.palette.background.paper),\n    },\n    downloadApiFlex: {\n        display: 'flex',\n        flexDirection: 'column',\n    },\n});\n\n\nconst APIDetailsTopMenu = (props) => {\n    const {\n        classes, theme, api, isAPIProduct, imageUpdate, intl,\n    } = props;\n    const isVisibleInStore = ['PROTOTYPED', 'PUBLISHED'].includes(api.lifeCycleStatus);\n    /**\n * The component for advanced endpoint configurations.\n * @param {string} name The name of the\n * @param {string} version Version of the API\n * @param {string} provider Provider of the API\n * @param {string} format Weather to recive files in YALM of JSON format\n * @returns {zip} Zpi file containing the API directory.\n */\n    function exportAPI() {\n        const restApi = new API();\n        return restApi.exportApi(api.id).then((zipFile) => {\n            return Utils.forceDownload(zipFile);\n        }).catch((error) => {\n            if (error.response) {\n                Alert.error(error.response.body.description);\n            } else {\n                Alert.error(intl.formatMessage({\n                    id: 'Apis.Details.components.APIDetailsTopMenu.error',\n                    defaultMessage: 'Something went wrong while downloading the API.',\n                }));\n            }\n            console.error(error);\n        });\n    }\n\n    const isDownlodable = ['API'].includes(api.apiType);\n    const { settings, user } = useAppContext();\n    const { tenantList } = useContext(ApiContext);\n    const userNameSplit = user.name.split('@');\n    const tenantDomain = userNameSplit[userNameSplit.length - 1];\n    let devportalUrl = `${settings.storeUrl}/apis/${api.id}/overview`;\n    if (tenantList && tenantList.length > 0) {\n        devportalUrl = `${settings.storeUrl}/apis/${api.id}/overview?tenant=${tenantDomain}`;\n    }\n    // todo: need to support rev proxy ~tmkb\n    return (\n        <div className={classes.root}>\n            <Box width={70} height={50} marginLeft={1}>\n                <ThumbnailView api={api} width={70} height={50} imageUpdate={imageUpdate} />\n            </Box>\n            <div style={{ marginLeft: theme.spacing(1), maxWidth: 500 }}>\n                <Link\n                    to={isAPIProduct\n                        ? `/api-products/${api.id}/overview`\n                        : `/apis/${api.id}/overview`}\n                    className={classes.backLink}\n                >\n                    <Typography variant='h4' component='h1' className={classes.apiName} id={api.name}>\n                        {api.name}\n                        {' '}\n                        {isAPIProduct ? '' : ':' + api.version}\n                    </Typography>\n                    <Typography variant='caption' gutterBottom align='left'>\n                        <FormattedMessage\n                            id='Apis.Details.components.APIDetailsTopMenu.created.by'\n                            defaultMessage='Created by:'\n                        />\n                        {' '}\n                        {api.provider}\n                    </Typography>\n                </Link>\n            </div>\n            <VerticalDivider height={70} />\n            <div className={classes.infoItem}>\n                <Typography variant='subtitle1' component='div'>\n                    {isAPIProduct ? api.state : api.lifeCycleStatus}\n                </Typography>\n                <Typography variant='caption' align='left'>\n                    <FormattedMessage\n                        id='Apis.Details.components.APIDetailsTopMenu.state'\n                        defaultMessage='State'\n                    />\n                </Typography>\n            </div>\n            <div className={classes.dateWrapper} />\n            <VerticalDivider height={70} />\n            <GoTo api={api} isAPIProduct={isAPIProduct} />\n            {(isVisibleInStore || isAPIProduct) && api.enableStore && (\n                <>\n                    <VerticalDivider height={70} />\n                    <a\n                        target='_blank'\n                        rel='noopener noreferrer'\n                        href={devportalUrl}\n                        className={classes.viewInStoreLauncher}\n                        style={{ minWidth: 90 }}\n                    >\n                        <div>\n                            <LaunchIcon />\n                        </div>\n                        <Typography variant='caption'>\n                            <FormattedMessage\n                                id='Apis.Details.components.APIDetailsTopMenu.view.in.portal'\n                                defaultMessage='View in Dev Portal'\n                            />\n                        </Typography>\n                    </a>\n                </>\n            )}\n            {/* Page error banner */}\n            {/* end of Page error banner */}\n            {isAPIProduct ? null : <CreateNewVersionButton buttonClass={classes.viewInStoreLauncher} api={api} />}\n            {(isDownlodable) && <VerticalDivider height={70} />}\n            <div className={classes.downloadApi}>\n                {(isDownlodable) && (\n                    <a\n                        onClick={exportAPI}\n                        onKeyDown='null'\n                        className={classes.downloadApiFlex}\n                    >\n                        <div>\n                            <CloudDownloadRounded />\n                        </div>\n                        <Typography variant='caption' align='left'>\n                            <FormattedMessage\n                                id='Apis.Details.APIDetailsTopMenu.download.api'\n                                defaultMessage='Download API'\n                            />\n                        </Typography>\n                    </a>\n                )}\n            </div>\n            <DeleteApiButton buttonClass={classes.viewInStoreLauncher} api={api} isAPIProduct={isAPIProduct} />\n        </div>\n    );\n};\n\nAPIDetailsTopMenu.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    theme: PropTypes.shape({}).isRequired,\n    api: PropTypes.shape({}).isRequired,\n    isAPIProduct: PropTypes.bool.isRequired,\n    imageUpdate: PropTypes.number.isRequired,\n};\n\n\n// export default withStyles(styles, { withTheme: true })(APIDetailsTopMenu);\n\nexport default injectIntl(withStyles(styles, { withTheme: true })(APIDetailsTopMenu));\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n/* eslint no-param-reassign: [\"error\", { \"props\": false }] */\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Container from '@material-ui/core/Container';\nimport Box from '@material-ui/core/Box';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport { FormattedMessage } from 'react-intl';\nimport API from 'AppData/api.js';\nimport { withAPI } from 'AppComponents/Apis/Details/components/ApiContext';\nimport { isRestricted } from 'AppData/AuthManager';\nimport APIValidation from 'AppData/APIValidation';\n\nconst styles = (theme) => ({\n    FormControl: {\n        padding: 0,\n        width: '100%',\n        marginTop: 0,\n    },\n    FormControlOdd: {\n        padding: 0,\n        backgroundColor: theme.palette.background.paper,\n        width: '100%',\n        marginTop: 0,\n    },\n    buttonWrapper: {\n        paddingTop: 20,\n    },\n    paperRoot: {\n        padding: 20,\n        marginTop: 20,\n    },\n});\n\n/**\n *\n *\n * @class BusinessInformation\n * @extends {React.Component}\n */\nclass BusinessInformation extends React.Component {\n    /**\n     *Creates an instance of BusinessInformation.\n     * @param {*} props\n     * @memberof BusinessInformation\n     */\n    constructor(props) {\n        super(props);\n        const {\n            businessOwner,\n            businessOwnerEmail,\n            technicalOwner,\n            technicalOwnerEmail,\n        } = this.props.api.businessInformation;\n        this.state = {\n            businessOwner,\n            businessOwnerEmail,\n            technicalOwner,\n            technicalOwnerEmail,\n        };\n        this.isFormUpdated = false;\n        this.isValidBusinessOwnerEmail = true;\n        this.isValidTechnicalOwnerEmail = true;\n    }\n\n    isValid = () => {\n        return (this.isValidBusinessOwnerEmail && this.isValidTechnicalOwnerEmail && this.isFormUpdated);\n    }\n\n    handleChange = (name) => (event) => {\n        let { value } = event.target;\n        const { checked } = event.target;\n        if (name === 'accessControlRoles' || name === 'visibleRoles') {\n            value = value.split(',');\n        } else if (name === 'isDefaultVersion') {\n            value = value === 'yes';\n        } else if (name === 'responseCaching') {\n            value = checked ? 'Enabled' : 'Disabled';\n        }\n        // Validate whether given email addresses are valid.\n        if (name === 'businessOwnerEmail') {\n            const emailStatus = APIValidation.email.validate(value).error;\n            this.isValidBusinessOwnerEmail = (emailStatus === null || value === '');\n        }\n        if (name === 'technicalOwnerEmail') {\n            const emailStatus = APIValidation.email.validate(value).error;\n            this.isValidTechnicalOwnerEmail = (emailStatus === null || value === '');\n        }\n        this.isFormUpdated = true;\n        this.setState({ [name]: value });\n    };\n\n    /**\n     *\n     *\n     * @param {*} oldAPI\n     * @param {*} updateAPI\n     * @memberof BusinessInformation\n     */\n    handleSubmit(updateAPI) {\n        const {\n            businessOwner, businessOwnerEmail, technicalOwner, technicalOwnerEmail,\n        } = this.state;\n        const businessInformation = {\n            businessOwner, businessOwnerEmail, technicalOwner, technicalOwnerEmail,\n        };\n        updateAPI({ businessInformation });\n    }\n\n    /**\n     *\n     * @inheritdoc\n     * @returns\n     * @memberof BusinessInformation\n     */\n    render() {\n        const { classes, api, updateAPI } = this.props;\n        const {\n            businessOwner, businessOwnerEmail, technicalOwner, technicalOwnerEmail,\n        } = this.state;\n\n        return (\n            <>\n                <Container maxWidth='md'>\n                    <Box mb={3}>\n                        <Typography variant='h4' component='h2'>\n                            <FormattedMessage\n                                id='Apis.Details.BusinessInformation.BusinessInformation.business.info'\n                                defaultMessage='Business Information'\n                            />\n                        </Typography>\n                        {api.apiType === API.CONSTS.APIProduct\n                            ? (\n                                <Typography variant='caption'>\n                                    <FormattedMessage\n                                        id='Apis.Details.BusinessInformation.BusinessInformation.APIProduct.sub.heading'\n                                        defaultMessage='Business Information of the API'\n                                    />\n                                </Typography>\n                            )\n                            : (\n                                <Typography variant='caption'>\n                                    <FormattedMessage\n                                        id='Apis.Details.BusinessInformation.BusinessInformation.sub.heading'\n                                        defaultMessage='Business Information of the API'\n                                    />\n                                </Typography>\n                            )}\n                    </Box>\n                    <Paper elevation={0}>\n                        <Box px={8} py={5}>\n                            <form noValidate autoComplete='off'>\n                                <TextField\n                                    disabled={isRestricted(['apim:api_create', 'apim:api_publish'], api)}\n                                    fullWidth\n                                    id='name'\n                                    label={(\n                                        <>\n                                            <FormattedMessage\n                                                id={\n                                                    'Apis.Details.BusinessInformation.BusinessInformation'\n                                                    + '.business.owner.name'\n                                                }\n                                                defaultMessage='Business Owner'\n                                            />\n                                        </>\n                                    )}\n                                    helperText={(\n                                        <FormattedMessage\n                                            id={\n                                                'Apis.Details.BusinessInformation.BusinessInformation'\n                                                + '.business.owner.name.helper.text'\n                                            }\n                                            defaultMessage='Provide the name of the business owner'\n                                        />\n                                    )}\n                                    type='text'\n                                    name='name'\n                                    margin='normal'\n                                    variant='outlined'\n                                    value={businessOwner}\n                                    onChange={this.handleChange('businessOwner')}\n                                    autoFocus\n                                />\n                                <TextField\n                                    error={!this.isValidBusinessOwnerEmail}\n                                    disabled={isRestricted(['apim:api_create', 'apim:api_publish'], api)}\n                                    fullWidth\n                                    id='Email'\n                                    label={(\n                                        <>\n                                            <FormattedMessage\n                                                id={\n                                                    'Apis.Details.BusinessInformation.BusinessInformation.'\n                                                    + 'business.owner.email'\n                                                }\n                                                defaultMessage='Business Owner Email'\n                                            />\n                                        </>\n                                    )}\n                                    helperText={this.isValidBusinessOwnerEmail\n                                        ? (\n                                            <FormattedMessage\n                                                id={\n                                                    'Apis.Details.BusinessInformation.BusinessInformation'\n                                                + '.business.owner.email.helper.text'\n                                                }\n                                                defaultMessage='Provide the email of the business owner'\n                                            />\n                                        )\n                                        : (\n                                            <FormattedMessage\n                                                id={\n                                                    'Apis.Details.BusinessInformation.BusinessInformation'\n                                                + '.business.owner.email.helper.text'\n                                                + '.error'\n                                                }\n                                                defaultMessage='Please enter a valid email address'\n                                            />\n                                        )}\n                                    type='email'\n                                    name='name'\n                                    margin='normal'\n                                    value={businessOwnerEmail}\n                                    onChange={this.handleChange('businessOwnerEmail')}\n                                    variant='outlined'\n                                />\n                                <TextField\n                                    disabled={isRestricted(['apim:api_create', 'apim:api_publish'], api)}\n                                    fullWidth\n                                    id='TOname'\n                                    label={(\n                                        <>\n                                            <FormattedMessage\n                                                id={\n                                                    'Apis.Details.BusinessInformation.BusinessInformation'\n                                                    + '.technical.owner.name'\n                                                }\n                                                defaultMessage='Technical Owner'\n                                            />\n                                        </>\n                                    )}\n                                    helperText={(\n                                        <FormattedMessage\n                                            id={\n                                                'Apis.Details.BusinessInformation.BusinessInformation'\n                                                + '.technical.owner.name.helper.text'\n                                            }\n                                            defaultMessage='Provide the name of the technical owner'\n                                        />\n                                    )}\n                                    type='text'\n                                    name='name'\n                                    margin='normal'\n                                    value={technicalOwner}\n                                    onChange={this.handleChange('technicalOwner')}\n                                    variant='outlined'\n                                />\n                                <TextField\n                                    error={!this.isValidTechnicalOwnerEmail}\n                                    disabled={isRestricted(['apim:api_create', 'apim:api_publish'], api)}\n                                    fullWidth\n                                    id='TOemail'\n                                    label={(\n                                        <FormattedMessage\n                                            id={\n                                                'Apis.Details.BusinessInformation.BusinessInformation'\n                                                + '.technical.owner.email'\n                                            }\n                                            defaultMessage='Technical Owner Email'\n                                        />\n                                    )}\n                                    helperText={this.isValidTechnicalOwnerEmail\n                                        ? (\n                                            <FormattedMessage\n                                                id={\n                                                    'Apis.Details.BusinessInformation.BusinessInformation'\n                                                + '.technical.owner.email.helper.text'\n                                                }\n                                                defaultMessage='Provide the email of the technical owner'\n                                            />\n                                        )\n                                        : (\n                                            <FormattedMessage\n                                                id={\n                                                    'Apis.Details.BusinessInformation.BusinessInformation'\n                                                + '.technical.owner.email.helper.text'\n                                                + '.error'\n                                                }\n                                                defaultMessage='Please enter a valid email address'\n                                            />\n                                        )}\n                                    type='email'\n                                    name='name'\n                                    margin='normal'\n                                    value={technicalOwnerEmail}\n                                    onChange={this.handleChange('technicalOwnerEmail')}\n                                    variant='outlined'\n                                />\n                            </form>\n                            <div className={classes.buttonWrapper}>\n                                <Grid\n                                    container\n                                    direction='row'\n                                    alignItems='flex-start'\n                                    spacing={1}\n                                    className={classes.buttonSection}\n                                >\n                                    <Grid item>\n                                        <div>\n                                            <Button\n                                                variant='contained'\n                                                color='primary'\n                                                onClick={() => this.handleSubmit(updateAPI)}\n                                                disabled={\n                                                    isRestricted(['apim:api_create', 'apim:api_publish'], api)\n                                                    || !this.isValid()\n                                                }\n                                            >\n                                                <FormattedMessage id='save' defaultMessage='Save' />\n                                            </Button>\n                                        </div>\n                                    </Grid>\n                                    <Grid item>\n                                        <Button\n                                            component={Link}\n                                            to={\n                                                (api.apiType === API.CONSTS.APIProduct ? '/api-products/' : '/apis/')\n                                                + api.id\n                                                + '/overview'\n                                            }\n                                        >\n                                            <FormattedMessage id='cancel' defaultMessage='Cancel' />\n                                        </Button>\n                                    </Grid>\n                                </Grid>\n                            </div>\n                        </Box>\n                    </Paper>\n                </Container>\n            </>\n        );\n    }\n}\n\nBusinessInformation.propTypes = {\n    state: PropTypes.shape({}).isRequired,\n    classes: PropTypes.shape({}).isRequired,\n    api: PropTypes.shape({\n        id: PropTypes.string,\n        businessInformation: PropTypes.shape({\n            businessOwner: PropTypes.string,\n            businessOwnerEmail: PropTypes.string,\n            technicalOwner: PropTypes.string,\n            technicalOwnerEmail: PropTypes.string,\n            apiType: PropTypes.oneOf([API.CONSTS.API, API.CONSTS.APIProduct]),\n        }).isRequired,\n    }).isRequired,\n    updateAPI: PropTypes.func.isRequired,\n};\n\nexport default withAPI(withStyles(styles)(BusinessInformation));\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n/* eslint no-param-reassign: [\"error\", { \"props\": false }] */\n/* eslint-disable react/jsx-no-bind */\n\nimport React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\nimport EditIcon from '@material-ui/icons/Edit';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableRow from '@material-ui/core/TableRow';\nimport { injectIntl, FormattedMessage } from 'react-intl';\nimport IconButton from '@material-ui/core/IconButton';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Box from '@material-ui/core/Box';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport VisibilityIcon from '@material-ui/icons/Visibility';\nimport Configurations from 'Config';\n\nconst propertyDisplaySuffix = Configurations.app.propertyDisplaySuffix || '__display';\nconst useStyles = makeStyles(() => ({\n    link: {\n        cursor: 'pointer',\n    },\n    checkBoxStyles: {\n        whiteSpace: 'nowrap',\n        marginLeft: 0,\n        paddingLeft: 0,\n    },\n    colorPrimary: {\n        marginLeft: 0,\n        paddingLeft: 0,\n    },\n    cancelButton: {\n        marginLeft: 4,\n    },\n}));\n\n/**\n *\n * @param {*} props properties\n */\nfunction EditableRow(props) {\n    const {\n        oldKey, oldValue, handleUpdateList, handleDelete, apiAdditionalProperties, intl, setEditing, isRestricted, api,\n        isKeyword, validateEmpty,\n    } = props;\n    const [newKey, setKey] = useState(oldKey.indexOf(propertyDisplaySuffix) !== -1\n        ? oldKey.replace(propertyDisplaySuffix, '')\n        : oldKey);\n    const [newValue, setValue] = useState(oldValue);\n    const [editMode, setEditMode] = useState(false);\n    const [isVisibleInStore, setIsVisibleInStore] = useState(oldKey.indexOf(propertyDisplaySuffix) !== -1);\n    const iff = (condition, then, otherwise) => (condition ? then : otherwise);\n\n    const resetText = () => {\n        setIsVisibleInStore(oldKey.indexOf(propertyDisplaySuffix) !== -1);\n        setKey(oldKey);\n        setValue(oldValue);\n    };\n    useEffect(() => {\n        resetText();\n    }, [oldKey, oldValue]);\n\n    const updateEditMode = () => {\n        setEditMode(!editMode);\n        setEditing(true);\n        resetText();\n    };\n    const handleKeyChange = (event) => {\n        const { value } = event.target;\n        setKey(isVisibleInStore ? value + propertyDisplaySuffix : value);\n    };\n    const handleValueChange = (event) => {\n        const { value } = event.target;\n        setValue(value);\n    };\n    const saveRow = () => {\n        const oldRow = { oldKey, oldValue };\n        const newRow = { newKey: newKey || oldKey, newValue: newValue || oldValue };\n        if (handleUpdateList(oldRow, newRow)) {\n            setEditMode(false);\n            setEditing(false);\n        }\n    };\n    const deleteRow = () => {\n        handleDelete(apiAdditionalProperties, oldKey);\n    };\n    const handleKeyDown = (e) => {\n        if (e.key === 'Enter') {\n            saveRow();\n        }\n    };\n    const handleChangeVisibleInStore = (event) => {\n        if (event.target.checked) {\n            setKey(newKey + propertyDisplaySuffix);\n        } else {\n            setKey(newKey.indexOf(propertyDisplaySuffix) !== -1 ? newKey.replace(propertyDisplaySuffix, '') : newKey);\n        }\n        setIsVisibleInStore(event.target.checked);\n    };\n    const classes = useStyles();\n\n    return (\n        <TableRow>\n            {editMode ? (\n                <TableCell>\n                    <TextField\n                        fullWidth\n                        required\n                        id='property-name-edit'\n                        label={intl.formatMessage({\n                            id: 'Apis.Details.Properties.Properties.editable.row.property.name',\n                            defaultMessage: 'Property Name',\n                        })}\n                        margin='dense'\n                        variant='outlined'\n                        className={classes.addProperty}\n                        value={newKey.indexOf(propertyDisplaySuffix) !== -1\n                            ? newKey.replace(propertyDisplaySuffix, '')\n                            : newKey}\n                        onChange={handleKeyChange}\n                        onKeyDown={handleKeyDown}\n                        helperText={validateEmpty(newKey) ? ''\n                            : iff(isKeyword(newKey), intl.formatMessage({\n                                id: `Apis.Details.Properties.Properties.\n                                show.add.property.invalid.error`,\n                                defaultMessage: 'Invalid property name',\n                            }), '')}\n                        error={validateEmpty(newKey) || isKeyword(newKey)}\n                    />\n                </TableCell>\n            ) : (\n                <TableCell>\n                    {oldKey.indexOf(propertyDisplaySuffix) !== -1\n                        ? oldKey.replace(propertyDisplaySuffix, '') : oldKey}\n                </TableCell>\n            )}\n            {editMode ? (\n                <>\n                    <TableCell>\n                        <TextField\n                            fullWidth\n                            required\n                            id='property-value-edit'\n                            label={intl.formatMessage({\n                                id: 'Apis.Details.Properties.Properties.editable.row.edit.mode.property.value',\n                                defaultMessage: 'Property Value',\n                            })}\n                            margin='dense'\n                            variant='outlined'\n                            className={classes.addProperty}\n                            value={newValue}\n                            onChange={handleValueChange}\n                            onKeyDown={handleKeyDown}\n                            error={validateEmpty(newValue)}\n                        />\n                    </TableCell>\n                    <TableCell>\n                        <FormControlLabel\n                            control={(\n                                <Checkbox\n                                    checked={isVisibleInStore}\n                                    onChange={handleChangeVisibleInStore}\n                                    name='checkedB'\n                                    color='primary'\n                                />\n                            )}\n                            label={intl.formatMessage({\n                                id: 'Apis.Details.Properties.Properties.editable.show.in.devporal',\n                                defaultMessage: 'Show in devportal',\n                            })}\n                            classes={{ root: classes.checkBoxStyles, colorPrimary: classes.colorPrimary }}\n                        />\n                    </TableCell>\n                </>\n            ) : (\n                <>\n                    <TableCell>\n                        <Box display='inline-block' minWidth={150}>\n                            {oldValue}\n                        </Box>\n                    </TableCell>\n                    <TableCell>\n                        {isVisibleInStore && (\n                            <Box display='flex' alignItems='center'>\n                                <VisibilityIcon />\n                                <Box ml={1} display='inline-block'>\n                                    <FormattedMessage\n                                        id='Apis.Details.Properties.Properties.editable.visible.in.store'\n                                        defaultMessage='Visible in devportal'\n                                    />\n                                </Box>\n                            </Box>\n                        )}\n                    </TableCell>\n                </>\n            )}\n            <TableCell align='right'>\n                {editMode ? (\n                    <>\n                        <Button\n                            color='primary'\n                            onClick={saveRow}\n                            onKeyDown={() => { }}\n                            variant='contained'\n                            aria-label={'Update ' + oldKey}\n                        >\n                            <Typography variant='caption' component='div'>\n                                <FormattedMessage\n                                    id='Apis.Details.Properties.Properties.editable.update'\n                                    defaultMessage='Update'\n                                />\n                            </Typography>\n                        </Button>\n                        <Button onClick={updateEditMode} className={classes.cancelButton}>\n                            <Typography variant='caption' component='div'>\n                                <FormattedMessage\n                                    id='Apis.Details.Properties.Properties.editable.cancel'\n                                    defaultMessage='Cancel'\n                                />\n                            </Typography>\n                        </Button>\n\n                    </>\n                ) : (\n                    <IconButton\n                        className={classes.link}\n                        aria-label={'Edit ' + oldKey}\n                        onClick={updateEditMode}\n                        onKeyDown={() => { }}\n                        color='inherit'\n                        disabled={isRestricted(['apim:api_create', 'apim:api_publish'], api)}\n                    >\n                        <EditIcon className={classes.buttonIcon} />\n                    </IconButton>\n                )}\n                <IconButton\n                    className={classes.link}\n                    aria-label={'Remove ' + oldKey}\n                    onClick={deleteRow}\n                    onKeyDown={() => { }}\n                    color='inherit'\n                    disabled={isRestricted(['apim:api_create', 'apim:api_publish'], api)}\n                >\n                    <DeleteForeverIcon className={classes.buttonIcon} />\n                </IconButton>\n            </TableCell>\n        </TableRow>\n    );\n}\nEditableRow.propTypes = {\n    oldKey: PropTypes.shape({}).isRequired,\n    oldValue: PropTypes.shape({}).isRequired,\n    classes: PropTypes.shape({}).isRequired,\n    handleUpdateList: PropTypes.shape({}).isRequired,\n    handleDelete: PropTypes.shape({}).isRequired,\n    apiAdditionalProperties: PropTypes.shape({}).isRequired,\n    intl: PropTypes.shape({ formatMessage: PropTypes.func }).isRequired,\n    setEditing: PropTypes.func.isRequired,\n};\n\nexport default injectIntl(EditableRow);\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n/* eslint no-param-reassign: [\"error\", { \"props\": false }] */\n/* eslint-disable react/jsx-no-bind */\n\nimport React, { useState, useContext } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport cloneDeep from 'lodash.clonedeep';\nimport isEmpty from 'lodash.isempty';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport AddCircle from '@material-ui/icons/AddCircle';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Box from '@material-ui/core/Box';\nimport APIContext, { withAPI } from 'AppComponents/Apis/Details/components/ApiContext';\nimport API from 'AppData/api.js';\nimport { doRedirectToLogin } from 'AppComponents/Shared/RedirectToLogin';\nimport { isRestricted } from 'AppData/AuthManager';\nimport Alert from 'AppComponents/Shared/Alert';\nimport InlineMessage from 'AppComponents/Shared/InlineMessage';\nimport Configurations from 'Config';\nimport EditableRow from './EditableRow';\n\nconst propertyDisplaySuffix = Configurations.app.propertyDisplaySuffix || '__display';\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        paddingTop: 0,\n        paddingLeft: 0,\n        maxWidth: theme.custom.contentAreaWidth,\n    },\n    titleWrapper: {\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems: 'center',\n    },\n    button: {\n        marginLeft: theme.spacing(2),\n        color: theme.palette.getContrastText(theme.palette.primary.main),\n    },\n    FormControl: {\n        padding: 0,\n        width: '100%',\n        marginTop: 0,\n        display: 'flex',\n        flexDirection: 'row',\n    },\n    FormControlOdd: {\n        padding: 0,\n        backgroundColor: theme.palette.background.paper,\n        width: '100%',\n        marginTop: 0,\n    },\n    buttonWrapper: {\n        paddingTop: theme.spacing(3),\n    },\n    paperRoot: {\n        padding: theme.spacing(3),\n        marginTop: theme.spacing(3),\n    },\n    addNewHeader: {\n        padding: theme.spacing(2),\n        backgroundColor: theme.palette.grey['300'],\n        fontSize: theme.typography.h6.fontSize,\n        color: theme.typography.h6.color,\n        fontWeight: theme.typography.h6.fontWeight,\n    },\n    addNewOther: {\n        padding: theme.spacing(2),\n    },\n    addNewWrapper: {\n        backgroundColor: theme.palette.background.paper,\n        color: theme.palette.getContrastText(theme.palette.background.paper),\n        border: 'solid 1px ' + theme.palette.grey['300'],\n        borderRadius: theme.shape.borderRadius,\n        marginTop: theme.spacing(2),\n    },\n    addProperty: {\n        marginRight: theme.spacing(2),\n    },\n    buttonIcon: {\n        marginRight: theme.spacing(1),\n    },\n    link: {\n        cursor: 'pointer',\n    },\n    messageBox: {\n        marginTop: 20,\n    },\n    actions: {\n        padding: '20px 0',\n        '& button': {\n            marginLeft: 0,\n        },\n    },\n    head: {\n        fontWeight: 200,\n        marginBottom: 20,\n    },\n    marginRight: {\n        marginRight: theme.spacing(1),\n    },\n    helpText: {\n        paddingTop: theme.spacing(1),\n    },\n    checkBoxStyles: {\n        whiteSpace: 'nowrap',\n        marginLeft: 10,\n    },\n    tableHead: {\n        fontWeight: 600,\n    },\n    table: {\n        '& th': {\n            fontWeight: 600,\n        },\n    },\n}));\n\n/**\n *\n *\n * @class Properties\n * @extends {React.Component}\n */\nfunction Properties(props) {\n    /**\n     * @inheritdoc\n     * @param {*} props properties\n     */\n    const { intl } = props;\n    const classes = useStyles();\n    const { api, updateAPI } = useContext(APIContext);\n    const additionalPropertiesTemp = cloneDeep(api.additionalProperties);\n\n    if (Object.prototype.hasOwnProperty.call(additionalPropertiesTemp, 'github_repo')) {\n        delete additionalPropertiesTemp.github_repo;\n    }\n    if (Object.prototype.hasOwnProperty.call(additionalPropertiesTemp, 'slack_url')) {\n        delete additionalPropertiesTemp.slack_url;\n    }\n\n    const [additionalProperties, setAdditionalProperties] = useState(additionalPropertiesTemp);\n    const [showAddProperty, setShowAddProperty] = useState(false);\n    const [propertyKey, setPropertyKey] = useState(null);\n    const [propertyValue, setPropertyValue] = useState(null);\n    const [updating, setUpdating] = useState(false);\n    const [editing, setEditing] = useState(false);\n    const [isAdditionalPropertiesStale, setIsAdditionalPropertiesStale] = useState(false);\n    const [isVisibleInStore, setIsVisibleInStore] = useState(false);\n    const iff = (condition, then, otherwise) => (condition ? then : otherwise);\n\n    const keywords = ['provider', 'version', 'context', 'status', 'description',\n        'subcontext', 'doc', 'lcstate', 'name', 'tags'];\n\n    const toggleAddProperty = () => {\n        setShowAddProperty(!showAddProperty);\n    };\n    const handleChange = (name) => (event) => {\n        const { value } = event.target;\n        if (name === 'propertyKey') {\n            setPropertyKey(isVisibleInStore ? value + propertyDisplaySuffix : value);\n        } else if (name === 'propertyValue') {\n            setPropertyValue(value);\n        }\n    };\n\n    /**\n     *\n     *\n     * @param {*} itemValue\n     * @returns\n     * @memberof Properties\n     */\n    const validateEmpty = function (itemValue) {\n        if (itemValue === null) {\n            return false;\n        } else if (!isVisibleInStore && itemValue === '') {\n            return true;\n        } else if (isVisibleInStore && itemValue.replace(propertyDisplaySuffix, '') === '') {\n            return true;\n        } else {\n            return false;\n        }\n    };\n\n    const isKeyword = (itemValue) => {\n        if (itemValue === null) {\n            return false;\n        }\n        return keywords.includes(itemValue.toLowerCase());\n    };\n    const hasWhiteSpace = (itemValue) => {\n        if (itemValue === null) {\n            return false;\n        }\n        const whitespaceChars = [' ', '\\t', '\\n'];\n        return Array.from(itemValue).some((char) => whitespaceChars.includes(char));\n    };\n    /**\n     *\n     *\n     * @param {*} oldAPI\n     * @param {*} updateAPI\n     * @memberof Properties\n     */\n    const handleSubmit = () => {\n        setUpdating(true);\n        if (Object.prototype.hasOwnProperty.call(additionalPropertiesTemp, 'github_repo')) {\n            additionalProperties.github_repo = api.additionalProperties.github_repo;\n        }\n        if (Object.prototype.hasOwnProperty.call(additionalPropertiesTemp, 'slack_url')) {\n            additionalProperties.slack_url = api.additionalProperties.slack_url;\n        }\n        const updatePromise = updateAPI({ additionalProperties });\n        updatePromise\n            .then(() => {\n                setUpdating(false);\n            })\n            .catch((error) => {\n                setUpdating(false);\n                if (process.env.NODE_ENV !== 'production') console.log(error);\n                const { status } = error;\n                if (status === 401) {\n                    doRedirectToLogin();\n                }\n            });\n    };\n\n    /**\n     *\n     *\n     * @param {*} apiAdditionalProperties\n     * @param {*} oldKey\n     * @memberof Properties\n     */\n    const handleDelete = (apiAdditionalProperties, oldKey) => {\n        const additionalPropertiesCopy = JSON.parse(JSON.stringify(additionalProperties));\n\n        if (Object.prototype.hasOwnProperty.call(additionalPropertiesCopy, oldKey)) {\n            delete additionalPropertiesCopy[oldKey];\n        }\n        setAdditionalProperties(additionalPropertiesCopy);\n\n        if (additionalPropertiesCopy !== additionalProperties) {\n            setIsAdditionalPropertiesStale(true);\n        }\n    };\n    const validateBeforeAdd = (fieldKey, fieldValue, additionalPropertiesCopy, action = 'add') => {\n        if ((additionalPropertiesCopy[fieldKey] != null || additionalPropertiesCopy[fieldKey + propertyDisplaySuffix]\n            != null || additionalPropertiesCopy[fieldKey.replace(propertyDisplaySuffix, '')] != null)\n            && action === 'add') {\n            Alert.warning(intl.formatMessage({\n                id: `Apis.Details.Properties.Properties.\n                    property.name.exists`,\n                defaultMessage: 'Property name already exists',\n            }));\n            return false;\n        } else if (validateEmpty(fieldKey) || validateEmpty(fieldValue)) {\n            Alert.warning(intl.formatMessage({\n                id: `Apis.Details.Properties.Properties.\n                    property.name.empty.error`,\n                defaultMessage: 'Property name/value can not be empty',\n            }));\n            return false;\n        } else if (isKeyword(fieldKey)) {\n            Alert.warning(intl.formatMessage({\n                id:\n                `Apis.Details.Properties.Properties.\n                    property.name.keyword.error`,\n                defaultMessage:\n                'Property name can not be a system reserved keyword',\n            }));\n            return false;\n        } else if (hasWhiteSpace(fieldKey)) {\n            Alert.warning(intl.formatMessage({\n                id:\n                    `Apis.Details.Properties.Properties.\n                    property.name.has.whitespaces`,\n                defaultMessage:\n                    'Property name can not have any whitespaces in it',\n            }));\n            return false;\n        } else {\n            return true;\n        }\n    };\n    /**\n     *\n     *\n     * @param {*} apiAdditionalProperties\n     * @param {*} oldRow\n     * @param {*} newRow\n     * @memberof Properties\n     */\n    const handleUpdateList = (oldRow, newRow) => {\n        // const additionalPropertiesCopy = JSON.parse(JSON.stringify(additionalProperties));\n\n        const { oldKey, oldValue } = oldRow;\n        const { newKey, newValue } = newRow;\n        if (oldKey === newKey && oldValue === newValue) {\n            Alert.warning(intl.formatMessage({\n                id: `Apis.Details.Properties.Properties.\n                    no.changes.to.save`,\n                defaultMessage: 'No changes to save',\n            }));\n            return false;\n        }\n        if (!validateBeforeAdd(newKey, newValue, additionalProperties, 'update')) {\n            return false;\n        }\n\n        if (Object.prototype.hasOwnProperty.call(additionalProperties, newKey) && oldKey === newKey) {\n            // Only the value is updated\n            if (newValue && oldValue !== newValue) {\n                additionalProperties[oldKey] = newValue;\n            }\n        } else {\n            delete additionalProperties[oldKey];\n            additionalProperties[newKey] = newValue;\n        }\n        setAdditionalProperties(additionalProperties);\n        return true;\n    };\n    /**\n     *\n     *\n     * @param {*} apiAdditionalProperties\n     * @memberof Properties\n     */\n    const handleAddToList = () => {\n        const additionalPropertiesCopy = JSON.parse(JSON.stringify(additionalProperties));\n        if (validateBeforeAdd(propertyKey, propertyValue, additionalPropertiesCopy, 'add')) {\n            additionalPropertiesCopy[propertyKey] = propertyValue;\n            setAdditionalProperties(additionalPropertiesCopy);\n            setPropertyKey(null);\n            setPropertyValue(null);\n        }\n    };\n\n    /**\n     *\n     *\n     * @memberof Properties\n     */\n    const handleKeyDown = (event) => {\n        if (event.key === 'Enter') {\n            handleAddToList();\n        }\n    };\n\n    const handleChangeVisibleInStore = (event) => {\n        if (event.target.checked) {\n            setPropertyKey(propertyKey + propertyDisplaySuffix);\n        } else {\n            setPropertyKey(propertyKey.indexOf(propertyDisplaySuffix) !== -1\n                ? propertyKey.replace(propertyDisplaySuffix, '')\n                : propertyKey);\n        }\n        setIsVisibleInStore(event.target.checked);\n    };\n    /**\n     *\n     *\n     * @param {*} additionalProperties\n     * @param {*} apiAdditionalProperties\n     * @returns\n     * @memberof Properties\n     */\n    const renderAdditionalProperties = () => {\n        const items = [];\n        for (const key in additionalProperties) {\n            if (Object.prototype.hasOwnProperty.call(additionalProperties, key)) {\n                items.push(<EditableRow\n                    oldKey={key}\n                    oldValue={additionalProperties[key]}\n                    handleUpdateList={handleUpdateList}\n                    handleDelete={handleDelete}\n                    apiAdditionalProperties={additionalProperties}\n                    {...props}\n                    setEditing={setEditing}\n                    isRestricted={isRestricted}\n                    api={api}\n                    validateEmpty={validateEmpty}\n                    isKeyword={isKeyword}\n                />);\n            }\n        }\n        return items;\n    };\n    const getKeyValue = () => {\n        if (propertyKey === null) {\n            return '';\n        } else if (propertyKey.indexOf(propertyDisplaySuffix) !== -1) {\n            return propertyKey.replace(propertyDisplaySuffix, '');\n        } else {\n            return propertyKey;\n        }\n    };\n    /**\n     *\n     *\n     * @returns\n     * @memberof Properties\n     */\n    return (\n        <>\n            <div className={classes.titleWrapper}>\n                {api.apiType === API.CONSTS.APIProduct\n                    ? (\n                        <Typography variant='h4' component='h2' align='left' className={classes.mainTitle}>\n                            <FormattedMessage\n                                id='Apis.Details.Properties.Properties.api.product.properties'\n                                defaultMessage='API Properties'\n                            />\n                        </Typography>\n                    )\n                    : (\n                        <Typography variant='h4' component='h2' align='left' className={classes.mainTitle}>\n                            <FormattedMessage\n                                id='Apis.Details.Properties.Properties.api.properties'\n                                defaultMessage='API Properties'\n                            />\n                        </Typography>\n                    )}\n\n                {(!isEmpty(additionalProperties) || showAddProperty) && (\n                    <Button\n                        size='small'\n                        className={classes.button}\n                        onClick={toggleAddProperty}\n                        disabled={showAddProperty || isRestricted(['apim:api_create', 'apim:api_publish'], api)}\n                    >\n                        <AddCircle className={classes.buttonIcon} />\n                        <FormattedMessage\n                            id='Apis.Details.Properties.Properties.add.new.property'\n                            defaultMessage='Add New Property'\n                        />\n                    </Button>\n                )}\n            </div>\n            <Typography variant='caption' component='div' className={classes.helpText}>\n                <FormattedMessage\n                    id='Apis.Details.Properties.Properties.help.main'\n                    defaultMessage={`Usually, APIs have a pre-defined set of properties such as \n                        the name, version, context, etc. API Properties allows you to \n                         add specific custom properties to the API.`}\n                />\n            </Typography>\n            {isEmpty(additionalProperties) && !isAdditionalPropertiesStale && !showAddProperty && (\n                <div className={classes.messageBox}>\n                    <InlineMessage type='info' height={140}>\n                        <div className={classes.contentWrapper}>\n                            <Typography variant='h5' component='h3' className={classes.head}>\n                                <FormattedMessage\n                                    id='Apis.Details.Properties.Properties.add.new.property.message.title'\n                                    defaultMessage='Create Additional Properties'\n                                />\n                            </Typography>\n                            {api.apiType === API.CONSTS.APIProduct\n                                ? (\n                                    <Typography component='p' className={classes.content}>\n                                        <FormattedMessage\n                                            id='Apis.Details.Properties.Properties.APIProduct.\n                                            add.new.property.message.content'\n                                            defaultMessage={\n                                                'Add specific custom properties to your '\n                                        + 'API here.'\n                                            }\n                                        />\n                                    </Typography>\n                                )\n                                : (\n                                    <Typography component='p' className={classes.content}>\n                                        <FormattedMessage\n                                            id='Apis.Details.Properties.Properties.add.new.property.message.content'\n                                            defaultMessage={\n                                                'Add specific custom properties to your '\n                                        + 'API here.'\n                                            }\n                                        />\n                                    </Typography>\n                                )}\n                            <div className={classes.actions}>\n                                <Button\n                                    variant='contained'\n                                    color='primary'\n                                    className={classes.button}\n                                    onClick={toggleAddProperty}\n                                    disabled={isRestricted(['apim:api_create', 'apim:api_publish'], api)}\n                                >\n                                    <FormattedMessage\n                                        id='Apis.Details.Properties.Properties.add.new.property'\n                                        defaultMessage='Add New Property'\n                                    />\n                                </Button>\n                            </div>\n                        </div>\n                    </InlineMessage>\n                </div>\n            )}\n            {(!isEmpty(additionalProperties) || showAddProperty || isAdditionalPropertiesStale) && (\n                <Grid container spacing={7}>\n                    <Grid item xs={12}>\n                        <Paper className={classes.paperRoot}>\n                            <Table className={classes.table}>\n                                <TableHead>\n                                    <TableRow>\n                                        <TableCell>\n                                            <FormattedMessage\n                                                id='Apis.Details.Properties.Properties.add.new.property.table'\n                                                defaultMessage='Property Name'\n                                            />\n                                        </TableCell>\n                                        <TableCell>\n                                            <FormattedMessage\n                                                id='Apis.Details.Properties.Properties.add.new.property.value'\n                                                defaultMessage='Property Value'\n                                            />\n                                        </TableCell>\n                                        <TableCell>\n                                            <FormattedMessage\n                                                id='Apis.Details.Properties.Properties.add.new.property.visibility'\n                                                defaultMessage='Visibility'\n                                            />\n                                        </TableCell>\n                                        <TableCell>\n                                            <Typography variant='srOnly'>\n                                                Action\n                                            </Typography>\n                                        </TableCell>\n                                    </TableRow>\n                                </TableHead>\n                                <TableBody>\n                                    {showAddProperty && (\n                                        <>\n                                            <TableRow>\n                                                <TableCell>\n                                                    <TextField\n                                                        fullWidth\n                                                        required\n                                                        id='property-name'\n                                                        label={intl.formatMessage({\n                                                            id: `Apis.Details.Properties.Properties.\n                                                                show.add.property.property.name`,\n                                                            defaultMessage: 'Name',\n                                                        })}\n                                                        margin='dense'\n                                                        variant='outlined'\n                                                        className={classes.addProperty}\n                                                        value={getKeyValue()}\n                                                        onChange={handleChange('propertyKey')}\n                                                        onKeyDown={handleKeyDown('propertyKey')}\n                                                        helperText={validateEmpty(propertyKey) ? ''\n                                                            : iff((isKeyword(propertyKey)\n                                                                || hasWhiteSpace(propertyKey)), intl.formatMessage({\n                                                                id: `Apis.Details.Properties.Properties.\n                                                                    show.add.property.invalid.error`,\n                                                                defaultMessage: 'Invalid property name',\n                                                            }), '')}\n                                                        error={validateEmpty(propertyKey) || isKeyword(propertyKey)\n                                                        || hasWhiteSpace(propertyKey)}\n                                                        disabled={isRestricted(\n                                                            ['apim:api_create', 'apim:api_publish'],\n                                                            api,\n                                                        )}\n                                                    />\n                                                </TableCell>\n                                                <TableCell>\n                                                    <TextField\n                                                        fullWidth\n                                                        required\n                                                        id='property-value'\n                                                        label={intl.formatMessage({\n                                                            id: 'Apis.Details.Properties.Properties.property.value',\n                                                            defaultMessage: 'Value',\n                                                        })}\n                                                        margin='dense'\n                                                        variant='outlined'\n                                                        className={classes.addProperty}\n                                                        value={propertyValue === null ? '' : propertyValue}\n                                                        onChange={handleChange('propertyValue')}\n                                                        onKeyDown={handleKeyDown('propertyValue')}\n                                                        error={validateEmpty(propertyValue)}\n                                                        disabled={isRestricted(\n                                                            ['apim:api_create', 'apim:api_publish'],\n                                                            api,\n                                                        )}\n                                                    />\n                                                </TableCell>\n                                                <TableCell>\n                                                    <FormControlLabel\n                                                        control={(\n                                                            <Checkbox\n                                                                checked={isVisibleInStore}\n                                                                onChange={handleChangeVisibleInStore}\n                                                                name='checkedB'\n                                                                color='primary'\n                                                            />\n                                                        )}\n                                                        label={intl.formatMessage({\n                                                            id: `Apis.Details.Properties.\n                                                            Properties.editable.show.in.devporal`,\n                                                            defaultMessage: 'Show in devportal',\n                                                        })}\n                                                        className={classes.checkBoxStyles}\n                                                    />\n                                                </TableCell>\n                                                <TableCell align='right'>\n                                                    <Box display='flex'>\n                                                        <Button\n                                                            variant='contained'\n                                                            color='primary'\n                                                            disabled={\n                                                                !propertyValue\n                                                            || !propertyKey\n                                                            || isRestricted(\n                                                                ['apim:api_create', 'apim:api_publish'], api,\n                                                            )\n                                                            }\n                                                            onClick={handleAddToList}\n                                                            className={classes.marginRight}\n                                                        >\n                                                            <Typography variant='caption' component='div'>\n                                                                <FormattedMessage\n                                                                    id='Apis.Details.Properties.Properties.add'\n                                                                    defaultMessage='Add'\n                                                                />\n                                                            </Typography>\n                                                        </Button>\n\n                                                        <Button onClick={toggleAddProperty}>\n                                                            <Typography variant='caption' component='div'>\n                                                                <FormattedMessage\n                                                                    id='Apis.Details.Properties.Properties.cancel'\n                                                                    defaultMessage='Cancel'\n                                                                />\n                                                            </Typography>\n                                                        </Button>\n                                                    </Box>\n                                                </TableCell>\n                                            </TableRow>\n                                            <TableRow>\n                                                <TableCell colSpan={4}>\n                                                    <Typography variant='caption'>\n                                                        <FormattedMessage\n                                                            id='Apis.Details.Properties.Properties.help'\n                                                            defaultMessage={\n                                                                'Property name should be unique, should not contain '\n                                                                + 'spaces and cannot be any '\n                                                                + 'of the following reserved keywords : '\n                                                                + 'provider, version, context, status, description, '\n                                                                + 'subcontext, doc, lcState, name, tags.'\n                                                            }\n                                                        />\n                                                    </Typography>\n                                                </TableCell>\n                                            </TableRow>\n                                        </>\n                                    )}\n                                    {renderAdditionalProperties()}\n                                </TableBody>\n                            </Table>\n                        </Paper>\n                        <div className={classes.buttonWrapper}>\n                            <Grid\n                                container\n                                direction='row'\n                                alignItems='flex-start'\n                                spacing={1}\n                                className={classes.buttonSection}\n                            >\n                                <Grid item>\n                                    <div>\n                                        <Button\n                                            variant='contained'\n                                            color='primary'\n                                            onClick={handleSubmit}\n                                            disabled={\n                                                editing || updating || (isEmpty(additionalProperties)\n                                                && !isAdditionalPropertiesStale)\n                                                || isRestricted(['apim:api_create', 'apim:api_publish'], api)\n                                            }\n                                        >\n                                            {updating && (\n                                                <>\n                                                    <CircularProgress size={20} />\n                                                    <FormattedMessage\n                                                        id='Apis.Details.Properties.Properties.updating'\n                                                        defaultMessage='Updating ...'\n                                                    />\n                                                </>\n                                            )}\n                                            {!updating && (\n                                                <FormattedMessage\n                                                    id='Apis.Details.Properties.Properties.save'\n                                                    defaultMessage='Save'\n                                                />\n                                            )}\n                                        </Button>\n                                    </div>\n                                </Grid>\n                                <Grid item>\n                                    <Button\n                                        component={Link}\n                                        to={'/apis/' + api.id + '/overview'}\n                                    >\n                                        <FormattedMessage\n                                            id='Apis.Details.Properties.Properties.cancel'\n                                            defaultMessage='Cancel'\n                                        />\n                                    </Button>\n                                </Grid>\n                                {isRestricted(['apim:api_create', 'apim:api_publish'], api) && (\n                                    <Grid item xs={12}>\n                                        <Typography variant='body2' color='primary'>\n                                            <FormattedMessage\n                                                id='Apis.Details.Properties.Properties.update.not.allowed'\n                                                defaultMessage='*You are not authorized to update properties of\n                                                    the API due to insufficient permissions'\n                                            />\n                                        </Typography>\n                                    </Grid>\n                                )}\n                            </Grid>\n                        </div>\n                    </Grid>\n                </Grid>\n            )}\n        </>\n    );\n}\n\nProperties.propTypes = {\n    state: PropTypes.shape({}).isRequired,\n    intl: PropTypes.shape({ formatMessage: PropTypes.func }).isRequired,\n};\nexport default withAPI(injectIntl(Properties));\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { FormattedMessage } from 'react-intl';\nimport { Grid, Typography } from '@material-ui/core';\nimport Box from '@material-ui/core/Box';\nimport CheckIcon from '@material-ui/icons/Check';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Table from '@material-ui/core/Table';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableRow from '@material-ui/core/TableRow';\nimport { withStyles } from '@material-ui/core/styles';\n\nimport API from 'AppData/api';\nimport Banner from 'AppComponents/Shared/Banner';\nimport { Progress } from 'AppComponents/Shared';\n\nconst styles = (theme) => ({\n    root: {\n        flexGrow: 1,\n        paddingBottom: '10px',\n    },\n    margin: {\n        margin: theme.spacing(),\n    },\n    rightDataColumn: {\n        display: 'flex',\n        flex: 1,\n    },\n    grid: {\n        marginTop: '10px',\n        paddingRight: '10px',\n        paddingBottom: '10px',\n    },\n    box: {\n        display: 'block',\n    },\n    tableCel: {\n        width: 50,\n    },\n    table: {\n        width: '100%',\n        border: 'solid 1px #ccc',\n    },\n    tableHeadCell: {\n        color: 'black',\n        background: theme.palette.grey[200],\n    },\n    stateWrapper: {\n        display: 'flex',\n        flexDirection: 'row',\n    },\n    tableHeadTitle: {\n        flex: 1,\n        fontWeight: 'bold',\n    },\n});\n\n/**\n *\n *\n * @class BusinessPlans\n * @extends {Component}\n */\nclass BusinessPlans extends Component {\n    /**\n     *Creates an instance of BusinessPlans.\n     * @param {Object} props\n     * @memberof BusinessPlans\n     */\n    constructor(props) {\n        super(props);\n        this.state = {\n            policies: [],\n            monetizedPolices: null,\n        };\n        this.monetizationQuery = this.monetizationQuery.bind(this);\n    }\n\n    /**\n     *\n     * @inheritdoc\n     * @memberof BusinessPlans\n     */\n    componentDidMount() {\n        const { api } = this.props;\n        api.getSubscriptionPolicies(api.id).then((policies) => {\n            const filteredPolicies = policies.filter((policy) => policy.tierPlan === 'COMMERCIAL');\n            this.setState({ policies: filteredPolicies });\n        });\n        api.getMonetization(api.id).then((status) => {\n            this.setState({ monetizedPolices: status.properties });\n        });\n    }\n\n    monetizationQuery(policyName) {\n        const { monetizedPolices } = this.state;\n        return policyName in monetizedPolices;\n    }\n\n    /**\n     *\n     * @inheritdoc\n     * @returns {React.Component} Policies / Business plans list\n     * @memberof BusinessPlans\n     */\n    render() {\n        const { policies, monetizedPolices } = this.state;\n        const { classes } = this.props;\n        if (monetizedPolices === null) {\n            return <Progress />;\n        }\n        const policiesList = policies.map((policy) => (\n            <Grid item xs={12}>\n                <Table className={classes.table}>\n                    <TableRow>\n                        <TableCell variant='head' colSpan={2} className={classes.tableHeadCell}>\n                            <Box display='flex'>\n                                <Typography component='div' className={classes.tableHeadTitle} variant='subtitle1'>\n                                    {policy.name}\n                                </Typography>\n                                {\n                                    this.monetizationQuery(policy.name) ? (\n                                        <div className={classes.stateWrapper}>\n                                            <div><CheckIcon color='primary' /></div>\n                                            <Typography component='div'>\n                                                <FormattedMessage\n                                                    id='Apis.Details.Monetization.BusinessPlans.monetized'\n                                                    defaultMessage='Monetized'\n                                                />\n                                            </Typography>\n                                        </div>\n                                    ) : (\n                                        <div className={classes.stateWrapper}>\n                                            <div><CloseIcon color='error' /></div>\n                                            <Typography component='div'>\n                                                <FormattedMessage\n                                                    id='Apis.Details.Monetization.BusinessPlans.not.monetized'\n                                                    defaultMessage='Not Monetized'\n                                                />\n                                            </Typography>\n                                        </div>\n                                    )\n                                }\n                            </Box>\n                        </TableCell>\n                    </TableRow>\n                    {Object.keys(policy.monetizationAttributes).map((key) => {\n                        if (policy.monetizationAttributes[key] !== null) {\n                            return (\n                                <TableRow>\n                                    <TableCell className={classes.tableCel} align='left'>\n                                        <Typography component='p' variant='subtitle2'>\n                                            {key}\n                                        </Typography>\n                                    </TableCell>\n                                    <TableCell align='left'>\n                                        {policy.monetizationAttributes[key]}\n                                    </TableCell>\n                                </TableRow>\n                            );\n                        } else {\n                            return false;\n                        }\n                    })}\n\n                </Table>\n            </Grid>\n        ));\n        return (\n            <Grid container spacing={1}>\n                <Grid item xs={12}>\n                    <Typography variant='h6' component='h3'>\n                        <FormattedMessage\n                            id='Apis.Details.Monetization.BusinessPlans.commercial.policies'\n                            defaultMessage='Commercial Policies'\n                        />\n                    </Typography>\n                </Grid>\n                <Grid item xs={12}>\n                    <Grid container direction='row' spacing={3}>\n                        {policiesList}\n                    </Grid>\n                </Grid>\n                <Grid item xs={12}>\n                    {\n                        (policies.length > 0) ? (\n                            <Banner\n                                disableActions\n                                dense\n                                paperProps={{ elevation: 1 }}\n                                type='info'\n                                message='Click Save to monetize all unmonetized policies'\n                            />\n                        ) : (\n                            <Banner\n                                disableActions\n                                dense\n                                paperProps={{ elevation: 1 }}\n                                type='info'\n                                message='No commercial policies to monetize'\n                            />\n                        )\n                    }\n                </Grid>\n            </Grid>\n        );\n    }\n}\n\nBusinessPlans.propTypes = {\n    api: PropTypes.instanceOf(API).isRequired,\n    classes: PropTypes.shape({}).isRequired,\n};\n\nexport default withStyles(styles)(BusinessPlans);\n","import React, { Component } from 'react';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport PropTypes from 'prop-types';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport { Link } from 'react-router-dom';\nimport { withStyles } from '@material-ui/core/styles';\nimport { Grid, Paper, Typography } from '@material-ui/core';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport { withRouter } from 'react-router';\nimport { Progress } from 'AppComponents/Shared';\nimport Alert from 'AppComponents/Shared/Alert';\nimport API from 'AppData/api';\nimport APIProduct from 'AppData/APIProduct';\nimport { isRestricted } from 'AppData/AuthManager';\n\nimport BusinessPlans from './BusinessPlans';\n\nconst styles = (theme) => ({\n    root: {\n        flexGrow: 1,\n    },\n    container: {\n        display: 'flex',\n        flexWrap: 'wrap',\n    },\n    margin: {\n        margin: theme.spacing(),\n    },\n    paper: {\n        padding: theme.spacing(2),\n        textAlign: 'left',\n        color: theme.palette.text.secondary,\n        paddingBottom: '10px',\n    },\n    grid: {\n        paddingLeft: '10px',\n        paddingRight: '10px',\n        paddingBottom: '10px',\n        minWidth: '50%',\n    },\n    button: {\n        margin: theme.spacing(),\n    },\n});\n\n/**\n *\n *\n * @class Monetization\n * @extends {Component}\n */\nclass Monetization extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            monetizationAttributes: [],\n            monStatus: null,\n            property: {},\n        };\n        this.handleChange = this.handleChange.bind(this);\n        this.handleInputChange = this.handleInputChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    componentDidMount() {\n        this.getMonetizationData();\n    }\n\n    getMonetizationData() {\n        const { api } = this.props;\n        if (api.apiType === 'APIProduct') {\n            const apiProduct = new APIProduct(api.name, api.context, api.policies);\n            apiProduct.getSettings().then((settings) => {\n                if (settings.monetizationAttributes != null) {\n                    this.setState({ monetizationAttributes: settings.monetizationAttributes });\n                }\n            });\n            apiProduct.getMonetization(this.props.api.id).then((status) => {\n                this.setState({ monStatus: status.enabled });\n            });\n        } else {\n            api.getSettings().then((settings) => {\n                if (settings.monetizationAttributes != null) {\n                    this.setState({ monetizationAttributes: settings.monetizationAttributes });\n                }\n            });\n            api.getMonetization(this.props.api.id).then((status) => {\n                this.setState({ monStatus: status.enabled });\n            });\n        }\n    }\n\n    handleChange = (event) => {\n        this.setState({ monStatus: event.target.checked });\n    };\n\n    handleInputChange = (event) => {\n        const { name, value } = event.target;\n        this.setState((oldState) => {\n            const { property } = oldState;\n            property[name] = value;\n            return { property };\n        });\n    };\n\n    /**\n     * Handles the submit action for configuring monetization\n     */\n    handleSubmit() {\n        const { api, intl } = this.props;\n        if (api.apiType === 'APIProduct') {\n            const properties = this.state.property;\n            const enabled = this.state.monStatus;\n            const body = {\n                enabled,\n                properties,\n            };\n            const apiProduct = new APIProduct(api.name, api.context, api.policies);\n            const promisedMonetization = apiProduct.configureMonetizationToApiProduct(api.id, body);\n            promisedMonetization.then((response) => {\n                const status = JSON.parse(response.data);\n                if (status.enabled) {\n                    Alert.info(intl.formatMessage({\n                        id: 'Apis.Details.Monetization.Index.monetization.configured.successfully',\n                        defaultMessage: 'Monetization Enabled Successfully',\n                    }));\n                } else {\n                    Alert.info(intl.formatMessage({\n                        id: 'Apis.Details.Monetization.Index.monetization.disabled.successfully',\n                        defaultMessage: 'Monetization Disabled Successfully',\n                    }));\n                }\n                this.setState((cState) => ({ monStatus: !cState.monStatus }));\n            }).catch((error) => {\n                console.error(error);\n                if (error.response) {\n                    Alert.error(error.response.body.description);\n                } else {\n                    Alert.error(intl.formatMessage({\n                        id: 'Apis.Details.Monetization.Index.something.went.wrong.while.configuring.monetization',\n                        defaultMessage: 'Something went wrong while configuring monetization',\n                    }));\n                }\n            });\n        } else {\n            const properties = this.state.property;\n            const enabled = this.state.monStatus;\n            const body = {\n                enabled,\n                properties,\n            };\n            const promisedMonetizationConf = api.configureMonetizationToApi(this.props.api.id, body);\n            promisedMonetizationConf.then((response) => {\n                const status = JSON.parse(response.data);\n                if (status.enabled) {\n                    Alert.info(intl.formatMessage({\n                        id: 'Apis.Details.Monetization.Index.monetization.configured.successfully',\n                        defaultMessage: 'Monetization Enabled Successfully',\n                    }));\n                } else {\n                    Alert.info(intl.formatMessage({\n                        id: 'Apis.Details.Monetization.Index.monetization.disabled.successfully',\n                        defaultMessage: 'Monetization Disabled Successfully',\n                    }));\n                }\n                this.setState((cState) => ({ monStatus: !cState.monStatus }));\n            }).catch((error) => {\n                console.error(error);\n                if (error.response) {\n                    Alert.error(error.response.body.description);\n                } else {\n                    Alert.error(intl.formatMessage({\n                        id: 'Apis.Details.Monetization.Index.something.went.wrong.while.configuring.monetization',\n                        defaultMessage: 'Something went wrong while configuring monetization',\n                    }));\n                }\n            });\n        }\n    }\n\n    render() {\n        const { api, classes } = this.props;\n        const { monetizationAttributes, monStatus } = this.state;\n        if (api && isRestricted(['apim:api_publish'], api)) {\n            return (\n                <Grid\n                    container\n                    direction='row'\n                    alignItems='center'\n                    spacing={4}\n                    style={{ marginTop: 20 }}\n                >\n                    <Grid item>\n                        <Typography variant='body2' color='primary'>\n                            <FormattedMessage\n                                id='Apis.Details.Monetization.Index.update.not.allowed'\n                                defaultMessage={'* You are not authorized to update API monetization'\n                                    + ' due to insufficient permissions'}\n                            />\n                        </Typography>\n                    </Grid>\n                </Grid>\n            );\n        }\n        if (!monetizationAttributes || monStatus === null) {\n            return <Progress />;\n        }\n        return (\n            <form method='post' onSubmit={this.handleSubmit}>\n                <Grid container xs={6} spacing={2}>\n                    <Grid item xs={12}>\n                        <Typography variant='h4' component='h2'>\n                            <FormattedMessage\n                                id='Apis.Details.Monetization.Index.monetization'\n                                defaultMessage='Monetization'\n                            />\n                        </Typography>\n                    </Grid>\n                    <Grid item xs={12}>\n                        <FormControlLabel\n                            control={(\n                                <Checkbox\n                                    disabled={isRestricted(['apim:api_publish'], api)}\n                                    id='monStatus'\n                                    name='monStatus'\n                                    checked={monStatus}\n                                    onChange={this.handleChange}\n                                    value={monStatus}\n                                    color='primary'\n                                />\n                            )}\n                            label='Enable Monetization'\n                        />\n                    </Grid>\n                    <Grid item xs={12}>\n                        <Paper className={classes.root}>\n                            <Grid item xs={12} className={classes.grid}>\n                                <Typography className={classes.heading} variant='h6' component='h3'>\n                                    <FormattedMessage\n                                        id='Apis.Details.Monetization.Index.monetization.properties'\n                                        defaultMessage='Monetization Properties'\n                                    />\n                                </Typography>\n                                {\n                                    (monetizationAttributes.length > 0) ? (\n                                        (monetizationAttributes.map((monetizationAttribute, i) => (\n                                            <TextField\n                                                disabled={isRestricted(['apim:api_publish'], api)}\n                                                fullWidth\n                                                id={'attribute' + i}\n                                                label={monetizationAttribute.displayName}\n                                                placeholder={monetizationAttribute.displayName}\n                                                name={monetizationAttribute.name}\n                                                type='text'\n                                                margin='normal'\n                                                variant='outlined'\n                                                required={monetizationAttribute.required}\n                                                onChange={this.handleInputChange}\n                                                autoFocus\n                                            />\n                                        )))\n                                    ) : (\n                                        <Typography>\n                                            <FormattedMessage\n                                                id={'Apis.Details.Monetization.Index.there.are.no'\n                                                   + ' .monetization.properties.configured'}\n                                                defaultMessage='There are no monetization properties configured'\n                                            />\n                                        </Typography>\n                                    )\n                                }\n                            </Grid>\n                        </Paper>\n                    </Grid>\n                    <Grid item xs={12}>\n                        <Paper className={classes.root}>\n                            <Grid item xs={12} className={classes.grid}>\n                                <BusinessPlans api={api} monStatus={monStatus} />\n                            </Grid>\n                        </Paper>\n                    </Grid>\n                    <Grid item xs={12}>\n                        <Button\n                            onClick={this.handleSubmit}\n                            color='primary'\n                            variant='contained'\n                            className={classes.button}\n                        >\n                            <FormattedMessage\n                                id='Apis.Details.Monetization.Index.save'\n                                defaultMessage='Save'\n                            />\n                        </Button>\n                        <Button\n                            component={Link}\n                            to={'/apis/' + api.id + '/overview'}\n                        >\n                            <FormattedMessage\n                                id='Apis.Details.Monetization.Index.cancel'\n                                defaultMessage='Cancel'\n                            />\n                        </Button>\n                    </Grid>\n                </Grid>\n            </form>\n        );\n    }\n}\n\nMonetization.propTypes = {\n    api: PropTypes.instanceOf(API).isRequired,\n    classes: PropTypes.shape({}).isRequired,\n    intl: PropTypes.shape({\n        formatMessage: PropTypes.func,\n    }).isRequired,\n};\n\nexport default injectIntl(withRouter(withStyles(styles)(Monetization)));\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useContext, useState, useEffect } from 'react';\nimport { APIContext } from 'AppComponents/Apis/Details/components/ApiContext';\nimport { useAppContext } from 'AppComponents/Shared/AppContext';\nimport { isRestricted } from 'AppData/AuthManager';\nimport ResourceNotFound from 'AppComponents/Base/Errors/ResourceNotFound';\n\nimport 'react-tagsinput/react-tagsinput.css';\nimport { FormattedMessage, useIntl, defineMessages } from 'react-intl';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { Link } from 'react-router-dom';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Alert from 'AppComponents/Shared/Alert';\nimport Paper from '@material-ui/core/Paper';\nimport API from '../../../../data/api';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: theme.custom.contentAreaWidth,\n        marginTop: theme.spacing(3),\n        overflowX: 'auto',\n    },\n    table: {\n        minWidth: 650,\n    },\n    viewInExStoreLink: {\n        color: theme.palette.common.black,\n        textDecoration: 'underline',\n    },\n}));\n\n/**\n * Renders an External Store list\n * @class ExternalStores\n * @extends {React.Component}\n */\nexport default function ExternalStores() {\n    const { api } = useContext(APIContext);\n    const { settings } = useAppContext();\n    const [allExternalStores, setAllExternalStores] = useState([]);\n    const [publishedExternalStores, setPublishedExternalStores] = useState([]);\n    const [isUpdating, setUpdating] = useState(false);\n    const classes = useStyles();\n    const intl = useIntl();\n    if (!settings.externalStoresEnabled) {\n        const resourceNotFoundMessageText = defineMessages({\n            titleMessage: {\n                id: 'Apis.Details.ExternalStores.ExternalStores.external.stores.not.found.title',\n                defaultMessage: 'External Developert Portals not found for the API : {apiUUID}',\n            },\n            bodyMessage: {\n                id: 'Apis.Details.ExternalStores.ExternalStores.external.stores.not.found.body',\n                defaultMessage: 'No External Developer Portals configured for the current tenant',\n            },\n        });\n        const resourceNotFountMessage = {\n            title: intl.formatMessage(resourceNotFoundMessageText.titleMessage, {\n                apiUUID: `${api.id}`,\n            }),\n            body: intl.formatMessage(resourceNotFoundMessageText.bodyMessage),\n        };\n        return <ResourceNotFound message={resourceNotFountMessage} />;\n    }\n\n    /**\n     * Gets published external stores\n     */\n    function getPublishedExternalStores() {\n        API.getPublishedExternalStores(api.id)\n            .then((response) => {\n                const publishedStoreIds = response.body.list.map((store) => store.id);\n                setPublishedExternalStores(publishedStoreIds);\n            })\n            .catch((error) => {\n                const response = error.response && error.response.obj;\n                const reason = response && ('[' + response.message + '] ' + response.description);\n                Alert.error(intl.formatMessage({\n                    id: 'Apis.Details.ExternalStores.ExternalStores.error.getting.published.external.stores',\n                    defaultMessage: 'Error while getting published external developer portals!! {reason}',\n                }, { reason }));\n            });\n    }\n\n    useEffect(() => {\n        API.getAllExternalStores().then((response) => {\n            setAllExternalStores([...response.body.list]);\n        });\n        getPublishedExternalStores();\n    }, []);\n\n    /**\n     * Handle publish to external store button action\n     */\n    function updateStores() {\n        setUpdating(true);\n        API.publishAPIToExternalStores(api.id, publishedExternalStores)\n            .then((response) => {\n                const successfulStores = response.body.list.map((store) => store.id);\n                Alert.success(intl.formatMessage({\n                    id: 'Apis.Details.ExternalStores.ExternalStores.successfully.published.to.external.stores',\n                    defaultMessage: 'Successfully Published to external developer portals: {successfulStores}',\n                }, { successfulStores }));\n            })\n            .catch((error) => {\n                const response = error.response && error.response.obj;\n                const reason = response && ('[' + response.message + '] ' + response.description);\n                Alert.error(intl.formatMessage({\n                    id: 'Apis.Details.ExternalStores.ExternalStores.error.while.updating.external.stores',\n                    defaultMessage: 'Error while updating external developer portals!! {reason}',\n                }, { reason }));\n            })\n            .finally(() => {\n                setUpdating(false);\n                getPublishedExternalStores();\n            });\n    }\n\n    return (\n        <div>\n            <div>\n                <Typography variant='h4' align='left'>\n                    <FormattedMessage\n                        id='Apis.Details.ExternalStores.ExternalStores.external-stores'\n                        defaultMessage='External Developer Portals'\n                    />\n                </Typography>\n                <Paper className={classes.root}>\n                    <Table className={classes.table}>\n                        <TableHead>\n                            <TableRow>\n                                <TableCell />\n                                <TableCell>\n                                    <Typography>\n                                        <FormattedMessage\n                                            id='Apis.Details.ExternalStores.ExternalStores.name'\n                                            defaultMessage='Name'\n                                        />\n                                    </Typography>\n                                </TableCell>\n                                <TableCell>\n                                    <Typography>\n                                        <FormattedMessage\n                                            id='Apis.Details.ExternalStores.ExternalStores.type'\n                                            defaultMessage='Type'\n                                        />\n                                    </Typography>\n                                </TableCell>\n                                <TableCell>\n                                    <Typography>\n                                        <FormattedMessage\n                                            id='Apis.Details.ExternalStores.ExternalStores.endpoint'\n                                            defaultMessage='Endpoint'\n                                        />\n                                    </Typography>\n                                </TableCell>\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            {allExternalStores.map((row) => (\n                                <TableRow key={row.id}>\n                                    <TableCell padding='checkbox'>\n                                        <Checkbox\n                                            checked={publishedExternalStores.includes(row.id)}\n                                            disabled={api.lifeCycleStatus !== 'PUBLISHED'\n                                                || isRestricted(['apim:api_publish'], api)}\n                                            onChange={\n                                                (event) => {\n                                                    const { checked, name } = event.target;\n                                                    if (checked) {\n                                                        if (!publishedExternalStores.includes(name)) {\n                                                            setPublishedExternalStores([\n                                                                ...publishedExternalStores, name]);\n                                                        }\n                                                    } else {\n                                                        setPublishedExternalStores(publishedExternalStores\n                                                            .filter((store) => store !== name));\n                                                    }\n                                                }\n                                            }\n                                            name={row.id}\n                                            color='primary'\n                                        />\n                                    </TableCell>\n                                    <TableCell component='th' scope='row'>\n                                        <Typography>\n                                            {' '}\n                                            {row.displayName}\n                                            {' '}\n                                        </Typography>\n                                    </TableCell>\n                                    <TableCell>\n                                        {' '}\n                                        <Typography>{row.type}</Typography>\n                                    </TableCell>\n                                    <TableCell>\n                                        <a\n                                            target='_blank'\n                                            rel='noopener noreferrer'\n                                            href={row.endpoint}\n                                            className={classes.viewInExStoreLink}\n                                        >\n                                            <Typography>\n                                                {row.endpoint}\n                                            </Typography>\n                                        </a>\n                                    </TableCell>\n                                </TableRow>\n                            ))}\n                        </TableBody>\n                    </Table>\n                </Paper>\n                <Grid container>\n                    <Grid\n                        container\n                        direction='row'\n                        alignItems='center'\n                        spacing={4}\n                        style={{ marginTop: 20 }}\n                    >\n                        <Grid item>\n                            <Button\n                                type='submit'\n                                variant='contained'\n                                color='primary'\n                                disabled={isUpdating || api.lifeCycleStatus !== 'PUBLISHED'\n                                    || isRestricted(['apim:api_publish'], api)}\n                                onClick={updateStores}\n                            >\n                                <FormattedMessage\n                                    id='Apis.Details.ExternalStores.ExternalStores.save'\n                                    defaultMessage='Save'\n                                />\n                                {isUpdating && <CircularProgress size={20} />}\n                            </Button>\n                        </Grid>\n                        <Grid item>\n                            <Link to={'/apis/' + api.id + '/overview'}>\n                                <Button>\n                                    <FormattedMessage\n                                        id='Apis.Details.ExternalStores.ExternalStores.cancel'\n                                        defaultMessage='Cancel'\n                                    />\n                                </Button>\n                            </Link>\n                        </Grid>\n                        {(isRestricted(['apim:api_publish'], api))\n                            && (\n                                <Grid item>\n                                    <Typography variant='body2' color='primary'>\n                                        <FormattedMessage\n                                            id='Apis.Details.ExternalStores.ExternalStores.update.not.allowed'\n                                            defaultMessage={'* You are not authorized to publish the API'\n                                                + ' to external developer portals due to insufficient permissions'}\n                                        />\n                                    </Typography>\n                                </Grid>\n                            )}\n                    </Grid>\n                </Grid>\n            </div>\n        </div>\n    );\n}\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport { Link, Redirect } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Container from '@material-ui/core/Container';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport { FormattedMessage } from 'react-intl';\nimport FormControl from '@material-ui/core/FormControl';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport HelpOutline from '@material-ui/icons/HelpOutline';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Radio from '@material-ui/core/Radio';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport Alert from 'AppComponents/Shared/Alert';\nimport { withAPI } from 'AppComponents/Apis/Details/components/ApiContext';\n\nconst styles = (theme) => ({\n    FormControl: {\n        padding: 0,\n        width: '100%',\n        marginTop: 20,\n    },\n    FormControlOdd: {\n        padding: 0,\n        backgroundColor: theme.palette.background.paper,\n        width: '100%',\n        marginTop: 0,\n    },\n    FormLabel: {\n        transform: 'translate(0, 1.5px) scale(0.75)',\n        transformOrigin: 'top left',\n    },\n    buttonWrapper: {\n        paddingTop: 20,\n    },\n    root: {\n        padding: 20,\n        marginTop: 20,\n    },\n    group: {\n        flexDirection: 'row',\n    },\n    helpButton: {\n        padding: 0,\n        minWidth: 20,\n    },\n    helpIcon: {\n        fontSize: 16,\n    },\n    htmlTooltip: {\n        backgroundColor: '#f5f5f9',\n        color: 'rgba(0, 0, 0, 0.87)',\n        maxWidth: 220,\n        fontSize: theme.typography.pxToRem(14),\n        border: '1px solid #dadde9',\n        '& b': {\n            fontWeight: theme.typography.fontWeightMedium,\n        },\n    },\n});\n\n/**\n * React component to create a new version of an API\n * @class CreateNewVersion\n * @extends {Component}\n */\nclass CreateNewVersion extends React.Component {\n    /**\n     * Creates an instance of CreateNewVersion.\n     * @param {any} props @inheritDoc\n     * @memberof CreateNewVersion\n     */\n    constructor(props) {\n        super(props);\n        this.state = {\n            isDefaultVersion: 'no',\n            valid: { version: { empty: false, alreadyExists: false, hasSpecialChars: false } },\n        };\n    }\n\n    handleDefaultVersionChange = () => (event) => {\n        const { value } = event.target;\n        this.setState({\n            isDefaultVersion: value,\n        });\n    };\n\n    handleVersionChange = () => (event) => {\n        const { value } = event.target;\n        this.setState({\n            newVersion: value,\n            valid: { version: { empty: !value, alreadyExists: false, hasSpecialChars: this.hasSpecialChars(value) } },\n        });\n    };\n\n    hasSpecialChars(value) {\n        if (/^[^~!@#;:%^*()+={}|\\\\<>\"',&/$]+$/.test(value)) {\n            return false;\n        } else {\n            return true;\n        }\n    }\n\n    /**\n     * Handles the submit action for new version creation\n     *\n     * @param {API} api current API\n     * @param {string} newVersion new version to create\n     * @param {string} isDefaultVersion specifies whether the new API should be marked as default version ('yes' | 'no')\n     */\n    handleSubmit(api, newVersion, isDefaultVersion) {\n        if (!newVersion) {\n            this.setState({ valid: { version: { empty: true } } });\n            return;\n        }\n        const isDefaultVersionBool = isDefaultVersion === 'yes';\n        const { intl } = this.props;\n        api.createNewAPIVersion(newVersion, isDefaultVersionBool)\n            .then((response) => {\n                this.setState({\n                    redirectToReferrer: true,\n                    apiId: response.obj.id,\n                });\n                Alert.error(intl.formatMessage({\n                    id: 'Apis.Details.NewVersion.NewVersion.success',\n                    defaultMessage: 'Successfully created new version',\n                }) + newVersion);\n            })\n            .catch((error) => {\n                if (error.status === 409) {\n                    this.setState({ valid: { version: { alreadyExists: true } } });\n                } else {\n                    Alert.error(intl.formatMessage({\n                        id: 'Apis.Details.NewVersion.NewVersion.error',\n                        defaultMessage: 'Something went wrong while creating a new version!. Error: ',\n                    }) + error.status);\n                }\n            });\n    }\n\n    /**\n     * Renders the CreateNewVersion component.\n     * Once new version is created, redirects to the overview page of the new API.\n     * @returns {*} CreateNewVersion component\n     */\n    render() {\n        const { classes, api } = this.props;\n        const {\n            isDefaultVersion, newVersion, redirectToReferrer, apiId, valid,\n        } = this.state;\n        if (redirectToReferrer) {\n            return <Redirect to={'/apis/' + apiId + '/overview'} />;\n        }\n\n        let helperText = '';\n        if (valid.version.empty) {\n            helperText = 'This field cannot be empty';\n        } else if (valid.version.alreadyExists) {\n            helperText = 'An API with version \"' + newVersion + '\" already exists.';\n        } else if (valid.version.hasSpecialChars) {\n            helperText = 'API Version should not contain special characters';\n        }\n\n        return (\n            <>\n                <Container maxWidth='md'>\n                    <div className={classes.titleWrapper}>\n                        <Typography variant='h4' component='h2' align='left' className={classes.mainTitle}>\n                            <FormattedMessage\n                                id='Apis.Details.NewVersion.NewVersion.create.new.version'\n                                defaultMessage='Create New Version'\n                            />\n                        </Typography>\n                    </div>\n                    <Grid container spacing={7}>\n                        <Grid item xs={12}>\n                            <Paper className={classes.root} elevation={0}>\n                                <FormControl margin='normal' className={classes.FormControlOdd}>\n                                    <TextField\n                                        fullWidth\n                                        id='newVersion'\n                                        error={\n                                            valid.version.empty\n                                            || valid.version.alreadyExists\n                                            || valid.version.hasSpecialChars\n                                        }\n                                        label={(\n                                            <FormattedMessage\n                                                id='Apis.Details.NewVersion.NewVersion.new.version'\n                                                defaultMessage='New Version'\n                                            />\n                                        )}\n                                        helperText={\n                                            helperText\n                                        }\n                                        type='text'\n                                        name='newVersion'\n                                        placeholder='Eg: 2.0.0'\n                                        value={newVersion}\n                                        variant='outlined'\n                                        onChange={this.handleVersionChange()}\n                                        margin='normal'\n                                        InputLabelProps={{\n                                            shrink: true,\n                                        }}\n                                        autoFocus\n                                    />\n                                </FormControl>\n                                <FormControl margin='normal' className={classes.FormControl}>\n                                    <FormLabel className={classes.FormLabel} component='legend'>\n                                        <FormattedMessage\n                                            id='Apis.Details.NewVersion.NewVersion.default'\n                                            defaultMessage='Make this the default version'\n                                        />\n                                        <Tooltip\n                                            placement='top'\n                                            classes={{\n                                                tooltip: classes.htmlTooltip,\n                                            }}\n                                            title={(\n                                                <>\n                                                    <FormattedMessage\n                                                        id='Apis.Details.NewVersion.NewVersion.tooltip'\n                                                        defaultMessage={\n                                                            'Indicates if this is the default version of the API. '\n                                                            + 'If an API is invoked without specifying a version, '\n                                                            + 'the API Gateway will route the request to the default '\n                                                            + 'version of the API.'\n                                                        }\n                                                    />\n                                                </>\n                                            )}\n                                            interactive\n                                            aria-label='Default Version Selector'\n                                            tabIndex='-1'\n                                        >\n                                            <Button className={classes.helpButton}>\n                                                <HelpOutline className={classes.helpIcon} />\n                                            </Button>\n                                        </Tooltip>\n                                    </FormLabel>\n                                    <RadioGroup\n                                        name='isDefaultVersion'\n                                        id='isDefaultVersion'\n                                        className={classes.group}\n                                        value={isDefaultVersion}\n                                        onChange={this.handleDefaultVersionChange()}\n                                    >\n                                        <FormControlLabel value='yes' control={<Radio color='primary' />} label='Yes' />\n                                        <FormControlLabel value='no' control={<Radio color='primary' />} label='No' />\n                                    </RadioGroup>\n                                </FormControl>\n                                <div className={classes.buttonWrapper}>\n                                    <Grid\n                                        container\n                                        direction='row'\n                                        alignItems='flex-start'\n                                        spacing={1}\n                                        className={classes.buttonSection}\n                                    >\n                                        <Grid item>\n                                            <div>\n                                                <Button\n                                                    variant='contained'\n                                                    color='primary'\n                                                    id='createBtn'\n                                                    onClick={() => this.handleSubmit(api, newVersion, isDefaultVersion)}\n                                                    disabled={\n                                                        valid.version.empty\n                                                        || valid.version.alreadyExists\n                                                        || valid.version.hasSpecialChars\n                                                    }\n                                                >\n                                                    <FormattedMessage\n                                                        id='Apis.Details.NewVersion.NewVersion.create'\n                                                        defaultMessage='Create'\n                                                    />\n                                                </Button>\n                                            </div>\n                                        </Grid>\n                                        <Grid item>\n                                            <Link to={'/apis/' + api.id + '/overview'}>\n                                                <Button id='cancelBtn'>\n                                                    <FormattedMessage\n                                                        id='Apis.Details.NewVersion.NewVersion.cancel'\n                                                        defaultMessage='Cancel'\n                                                    />\n                                                </Button>\n                                            </Link>\n                                        </Grid>\n                                    </Grid>\n                                </div>\n                            </Paper>\n                        </Grid>\n                    </Grid>\n                </Container>\n            </>\n        );\n    }\n}\n\nCreateNewVersion.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    api: PropTypes.shape({\n        id: PropTypes.string,\n    }).isRequired,\n    intl: PropTypes.shape({\n        formatMessage: PropTypes.func,\n    }).isRequired,\n};\n\nexport default withAPI(withStyles(styles)(CreateNewVersion));\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\n/**\n * Progress animation\n *\n * @returns { JSX }\n */\nconst Progress = () => {\n    return (\n        <div className='apim-dual-ring' />\n    );\n};\n\nexport default Progress;\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport Axios from \"axios\";\nimport Settings from 'Settings';\nimport AuthManager from \"./AuthManager\";\n\n/**\n * Utility class for Store application\n */\nclass Utils {\n\n    /**\n     * Get JavaScript accessible cookies saved in browser, by giving the cooke name.\n     * @param {String} cookieName : Name of the cookie which need to be retrived\n     * @param {String} environmentName : label of the environment of the cookie\n     * @returns {String|null} : If found a cookie with given name , return its value,Else null value is returned\n     */\n    static getCookie(cookieName, environmentName) {\n        environmentName = environmentName || Utils.getEnvironment().label;\n\n        let pairs = document.cookie.split(\";\");\n        let cookie = null;\n        for (let pair of pairs) {\n            pair = pair.split(\"=\");\n            let cookie_name = pair[0].trim();\n            let value = encodeURIComponent(pair[1]);\n            if (cookie_name === `${cookieName}_${environmentName}`) {\n                cookie = value;\n                break;\n            }\n        }\n        return cookie;\n    }\n\n     /**\n     * Get JavaScript accessible cookies saved in browser, by giving the cooke name.\n     * @param {String} name - Name of the cookie which need to be retrieved\n     * @returns {String|null} - If found a cookie with given name , return its value,Else null value is returned\n     */\n    static getCookieWithoutEnvironment(name) {\n        const pairs = document.cookie.split(';');\n        let cookie = null;\n        for (let pair of pairs) {\n            pair = pair.split('=');\n            const cookieName = pair[0].trim();\n            if (pair[1] !== 'undefined') {\n                const value = encodeURIComponent(pair[1]);\n                if (cookieName === name) {\n                    cookie = value;\n                    break;\n                }\n            }\n        }\n        return cookie;\n    }\n\n\n    /**\n     * Delete a browser cookie given its name\n     * @param {String} name : Name of the cookie which need to be deleted\n     * @param {String} path : Path of the cookie which need to be deleted\n     * @param {String} environmentName: label of the environment of the cookie\n     */\n    static deleteCookie(name, path, environmentName) {\n        environmentName = environmentName || Utils.getEnvironment().label;\n        document.cookie = `${name}_${environmentName}=; path=${path}; expires=Thu, 01 Jan 1970 00:00:01 GMT`;\n    }\n\n    /**\n     * Set a cookie with given name and value assigned to it. Cookies can be only set to the same origin,\n     * which the script is running\n     * @param {String} name : Name of the cookie which need to be set\n     * @param {String} value : Value of the cookie, expect it to be URLEncoded\n     * @param {number} validityPeriod :  (Optional) Validity period of the cookie in seconds\n     * @param {String} path : Path which needs to set the given cookie\n     * @param {boolean} secured : secured parameter is set\n     */\n    static setCookie(name, value, validityPeriod, path = \"/\", environmentName, secured = true) {\n        environmentName = environmentName || Utils.getEnvironment().label;\n        let expiresDirective = \"\";\n        const securedDirective = secured ? \"; Secure\" : \"\";\n        if (validityPeriod) {\n            const date = new Date();\n            date.setTime(date.getTime() + validityPeriod * 1000);\n            expiresDirective = \"; expires=\" + date.toUTCString();\n        }\n\n        document.cookie = `${name}_${environmentName}=${value}; path=${path}${expiresDirective}${securedDirective}`;\n    }\n\n    /**\n     * Given an object returns whether the object is empty or not\n     * @param {Object} object : Any JSON object\n     * @returns {boolean}\n     */\n    static isEmptyObject(object) {\n        return Object.keys(object).length === 0 && object.constructor === Object\n    }\n\n    /**\n     * Get the current environment from local-storage\n     * @returns {Object} environment: {label, host, loginTokenPath}\n     */\n    static getEnvironment() {\n        if (Utils._environment) {\n            return Utils._environment;\n        }\n\n        let environmentData = localStorage.getItem(Utils.CONST.LOCALSTORAGE_ENVIRONMENT);\n        if (!environmentData) {\n            return Utils.getDefaultEnvironment();\n        }\n\n        return JSON.parse(environmentData);\n    }\n\n    /**\n     * Get the current environment from local-storage\n     * @returns {Object} environment: {label, host, loginTokenPath}\n     */\n    static getCurrentEnvironment() {\n        if (Utils.environment) {\n            return Utils.environment;\n        }\n\n        const environmentData = localStorage.getItem(Utils.CONST.LOCAL_STORAGE_ENVIRONMENT);\n        if (!environmentData) {\n            return Utils.getDefaultEnvironment();\n        }\n\n        return JSON.parse(environmentData);\n    }\n\n    /**\n     * Get an environment object with default values.\n     * @returns {Object} environment: {label: string, host: string, loginTokenPath: string}\n     * @private\n     */\n    static getDefaultEnvironment() {\n        return {\n            label: 'Default',\n            host: window.location.host,\n            loginTokenPath: '/login/token',\n            refreshTokenPath: '/services/refresh/refresh.jag',\n        };\n    }\n\n    /**\n     * Get current environment's index from the given environment array\n     * @param {Array} environments\n     * @param {string} name: name of the environment [default]: current environment name\n     * @returns {number}\n     */\n    static getEnvironmentID(environments, name = Utils.getEnvironment().label) {\n        if (!name) {\n            return 0;\n        }\n\n        for (let i = 0; i < environments.length; i++) {\n            if (name === environments[i].label) {\n                return i;\n            }\n        }\n        return -1;\n    }\n\n    /**\n     * Store the given environment in local-storage\n     * @param {object} environment\n     */\n    static setEnvironment(environment) {\n        if (!environment) {\n            environment = Utils.getDefaultEnvironment();\n        }\n\n        if (!environment.host) {\n            environment.host = window.location.host;\n        }\n        //Store environment.\n        Utils._environment = environment;\n        localStorage.setItem(Utils.CONST.LOCALSTORAGE_ENVIRONMENT, JSON.stringify(environment));\n    }\n\n    static getPromised_DCRappInfo(environment) {\n        return Axios.get(Utils.getDCRappInfoRequestURL(environment));\n    }\n\n    static getDCRappInfoRequestURL(environment = Utils.getEnvironment()) {\n        return `${Utils.CONST.PROTOCOL}${environment.host}${Utils.CONST.DCR_APP_INFO}${Settings.app.context}`;\n    }\n\n    static getAppLogoutURL() {\n        return Utils.CONST.PROTOCOL + Utils.getEnvironment().host + Utils.CONST.LOGOUT + Settings.app.context;\n    }\n\n    static getLoginTokenPath(environment = Utils.getEnvironment()) {\n        return `${Utils.CONST.PROTOCOL}${environment.host}${Utils.CONST.LOGIN_TOKEN_PATH}${Settings.app.context}`;\n    }\n\n    static getSignUpTokenPath(environment) {\n        return `${Utils.CONST.PROTOCOL}${environment.host}${Utils.CONST.LOGIN_SIGN_UP_PATH}${Settings.app.context}`;\n    }\n\n    static getSwaggerURL() {\n        if (Settings.app.proxy_context_path) {\n            return 'https://'\n            + Utils.getCurrentEnvironment().host\n            + Settings.app.proxy_context_path\n            + Utils.CONST.SWAGGER_YAML;\n        } else {\n            return 'https://'\n            + Utils.getCurrentEnvironment().host\n            + Utils.CONST.SWAGGER_YAML;\n        }\n    }\n\n    static downloadFile = (response) => {\n        let fileName = '';\n        const contentDisposition = response.headers['content-disposition'];\n\n        if (contentDisposition && contentDisposition.indexOf('attachment') !== -1) {\n            const fileNameReg = /filename[^;=\\n]*=((['\"]).*?\\2|[^;\\n]*)/;\n            const matches = fileNameReg.exec(contentDisposition);\n            if (matches != null && matches[1]) fileName = matches[1].replace(/['\"]/g, '');\n        }\n        const contentType = response.headers['content-type'];\n        const blob = new Blob([response.data], {\n            type: contentType,\n        });\n        if (typeof window.navigator.msSaveBlob !== 'undefined') {\n            window.navigator.msSaveBlob(blob, fileName);\n        } else {\n            const URL = window.URL || window.webkitURL;\n            const downloadUrl = URL.createObjectURL(blob);\n\n            if (fileName) {\n                const aTag = document.createElement('a');\n                if (typeof aTag.download === 'undefined') {\n                    window.location = downloadUrl;\n                } else {\n                    aTag.href = downloadUrl;\n                    aTag.download = fileName;\n                    document.body.appendChild(aTag);\n                    aTag.click();\n                }\n            } else {\n                window.location = downloadUrl;\n            }\n\n            setTimeout(() => {\n                URL.revokeObjectURL(downloadUrl);\n            }, 100);\n        }\n    };\n    static getBrowserLocal() {\n        const language = (navigator.languages && navigator.languages[0]) || navigator.language || navigator.userLanguage;\n        const languageWithoutRegionCode = language.toLowerCase().split(/[_-]+/)[0];\n        return(languageWithoutRegionCode || language);\n    }\n}\n\nUtils.CONST = {\n    LOCALSTORAGE_ENVIRONMENT: 'environment_store',\n    //TODO: fix/remove below wrong paths\n    DCR_APP_INFO: '/login/login',\n    LOGOUT: '/login/logout',\n    LOGIN_TOKEN_PATH: '/login/token',\n    LOGIN_SIGN_UP_PATH: '/login/signup',\n\n    LOGOUT_CALLBACK: '/services/auth/callback/logout',\n    SWAGGER_YAML: '/api/am/store/v1/swagger.yaml',\n    PROTOCOL: 'https://',\n};\n\n/**\n * Current environment\n * @type {object} environment object\n * @private\n */\nUtils._environment = undefined;\nexport default Utils;","/*\n * Copyright (c) 2017, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport Utils from './Utils'\n\n/**\n * Represent an user logged in to the application, There will be allays one user per session and\n * this user details will be persist in browser localstorage.\n */\nexport default class User {\n    /**\n     * Create a user for the given environment\n     * @param {string} environment\n     * @param {string} name\n     * @param {string} id_token\n     * @param {boolean} remember\n     * @returns {User|null} user object\n     */\n    constructor(environment, name, id_token, remember = false) {\n        const user = User._userMap.get(environment);\n        if (user) {\n            return user;\n        }\n        this.name = name;\n        this._scopes = [];\n        this._idToken = id_token;\n        this._remember = remember;\n        this._isSideBarOpen = true;\n        User._userMap.set(environment, this);\n    }\n\n    /**\n     * OAuth scopes which are available for use by this user\n     * @returns {Array} : An array of scopes\n     */\n    get scopes() {\n        return this._scopes;\n    }\n\n    /**\n     * Set OAuth scopes available to be used by this user\n     * @param {Array} newScopes :  An array of scopes\n     */\n    set scopes(newScopes) {\n        Object.assign(this.scopes, newScopes);\n    }\n\n    /**\n     * Get the JS accessible access token fragment from cookie storage.\n     * @returns {String|null}\n     */\n    getPartialToken() {\n        return Utils.getCookie(User.CONST.WSO2_AM_TOKEN_1);\n    }\n\n    /**\n     * Get the JS accessible refresh token fragment from cookie storage.\n     * @returns {String|null}\n     */\n    getRefreshPartialToken() {\n        return Utils.getCookie(User.CONST.WSO2_AM_REFRESH_TOKEN_1);\n    }\n\n    /**\n     * Store the JavaScript accessible access token segment in cookie storage\n     * @param {String} newToken : Part of the access token which needs when accessing REST API\n     * @param {Number} validityPeriod : Validity period of the cookie in seconds\n     * @param path Path which need to be set to cookie\n     */\n    setPartialToken(newToken, validityPeriod, path) {\n        Utils.delete_cookie(User.CONST.WSO2_AM_TOKEN_1, path);\n        Utils.setCookie(User.CONST.WSO2_AM_TOKEN_1, newToken, validityPeriod, path);\n    }\n\n\n    get isSideBarOpen(){\n        return this._isSideBarOpen;\n    }\n\n    set isSideBarOpen(isSideBarOpen) {\n        this._isSideBarOpen = isSideBarOpen;\n    }\n\n    /**\n     *\n     * @param type\n     */\n    checkPermission(type) {\n        throw (\"Not implemented!\");\n    }\n\n    /**\n     * Provide user data in JSON structure.\n     * @returns {JSON} : JSON representation of the user object\n     */\n    toJson() {\n        return {\n            name: this.name,\n            scopes: this._scopes,\n            idToken: this._idToken,\n            remember: this._remember,\n            isSideBarOpen: this._isSideBarOpen,\n        };\n    }\n\n    /**\n     * User utility method to create an user from JSON object.\n     * @param {JSON} userJson : Need to provide user information in JSON structure to create an user object\n     * @returns {User} : An instance of User(this) class.\n     */\n    static fromJson(userJson) {\n        if (!userJson.name) {\n            throw \"Need to provide user `name` key in the JSON object, to create an user\";\n        }\n        const _user = new User(Utils.getEnvironment().label, userJson.name);\n        _user.scopes = userJson.scopes;\n        _user.idToken = userJson.idToken;\n        _user.rememberMe = userJson.remember;\n        _user.isSideBarOpen = userJson.isSideBarOpen;\n        return _user;\n    }\n}\n\nUser.CONST = {\n    WSO2_AM_TOKEN_MSF4J: \"WSO2_AM_TOKEN_MSF4J\",\n    WSO2_AM_TOKEN_1: \"WSO2_AM_TOKEN_1\",\n    WSO2_AM_REFRESH_TOKEN_1: 'WSO2_AM_REFRESH_TOKEN_1',\n    LOCALSTORAGE_USER: \"wso2_user_store\",\n    DEVPORTAL_CLIENT_ID: \"CLIENT_ID\",\n    DEVPORTAL_SESSION_STATE: \"devportal_session_state\"\n};\n/**\n * Map of users (key = environmentLabel, value = User instance)\n * @type {Map}\n * @private\n */\nUser._userMap = new Map();\n","/**\n * Copyright (c) 2019, WSO2 Inc. (http://wso2.com) All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst CONSTS = {\n    HTTP_METHODS: ['get', 'put', 'post', 'delete', 'patch', 'head', 'options'],\n    errorCodes: {\n        INSUFFICIENT_PREVILEGES: '900403: Insufficient privileges to login',\n        INVALID_TOKEN: '900401: Invalid token',\n    },\n    ISLOGINPERMITTED: 'isLoginPermitted',\n    LOGINSTATUS: 'loginStatus',\n};\n\nexport default CONSTS;\n","/*\n * Copyright (c) 2017, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\n\nimport axios from 'axios';\nimport qs from 'qs';\nimport Settings from 'Settings';\nimport Utils from './Utils';\nimport User from './User';\nimport APIClient from './APIClient';\nimport APIClientFactory from './APIClientFactory';\nimport CONSTS from './Constants';\n\n\n/**\n * Manage the application authentication and authorization requirements.\n *\n * @class AuthManager\n */\nclass AuthManager {\n    constructor() {\n        this.isLogged = false;\n        this.username = null;\n    }\n\n    /**\n     * Static method to handle unauthorized user action error catch, It will look for response status code and skip !401 errors\n     * @param {object} error_response\n     */\n    static unauthorizedErrorHandler(error_response) {\n        if (error_response.status !== 401) {\n            /* Skip unrelated response code to handle in unauthorizedErrorHandler */\n            throw error_response;\n            /* re throwing the error since we don't handle it here and propagate to downstream error handlers in catch chain */\n        }\n        const message = 'The session has expired' + '.<br/> You will be redirect to the login page ...';\n        if (typeof noty !== 'undefined') {\n            noty({\n                text: message,\n                type: 'error',\n                dismissQueue: true,\n                modal: true,\n                progressBar: true,\n                timeout: 5000,\n                layout: 'top',\n                theme: 'relax',\n                maxVisible: 10,\n                callback: {\n                    afterClose() {\n                        window.location = loginPageUri;\n                    },\n                },\n            });\n        } else {\n            throw error_response;\n        }\n    }\n\n    /**\n     * An user object is return in present of user logged in user info in browser local storage, at the same time checks for partialToken in the cookie as well.\n     * This may give a partial indication(passive check not actually check the token validity via an API) of whether the user has logged in or not, The actual API call may get denied\n     * if the cookie stored access token is invalid/expired\n     * @param {string} environmentName: label of the environment, the user to be retrieved from\n     * @returns {User | null} Is any user has logged in or not\n     */\n    static getUser(environmentName = Utils.getCurrentEnvironment().label) {\n        const userData = localStorage.getItem(`${User.CONST.LOCALSTORAGE_USER}_${environmentName}`);\n        const partialToken = Utils.getCookie(User.CONST.WSO2_AM_TOKEN_1, environmentName);\n        const refreshToken = Utils.getCookie(User.CONST.WSO2_AM_REFRESH_TOKEN_1, environmentName);\n\n        const isLoginCookie = Utils.getCookie('IS_LOGIN', 'DEFAULT');\n        if (isLoginCookie) {\n            Utils.deleteCookie('IS_LOGIN', Settings.app.context, 'DEFAULT');\n            localStorage.removeItem(`${User.CONST.LOCALSTORAGE_USER}_${environmentName}`);\n            return null;\n        }\n        if (!(userData && (partialToken || refreshToken))) {\n            return null;\n        }\n\n        return User.fromJson(JSON.parse(userData), environmentName);\n    }\n\n    static hasBasicLoginPermission(scopes) {\n        return scopes.includes('apim:subscribe');\n    }\n\n    /**\n     * Do token introspection and Get the currently logged in user's details\n     * When user authentication happens via redirection flow, This method might get used to\n     * retrieve the user information\n     * after setting the access token parts in cookies, Because access token parts are stored in /publisher path ,\n     * just making an external request in same path will submit both cookies, allowing the service to build the\n     * complete access token and do the introspection.\n     * Return a promise resolving to user object iff introspect calls return active user else null\n     * @static\n     * @returns {Promise} fetch response promise resolving to introspect response JSON or null otherwise\n     * @memberof AuthManager\n     */\n    static getUserFromToken() {\n        const partialToken = Utils.getCookie(User.CONST.WSO2_AM_TOKEN_1);\n        if (!partialToken) {\n            return new Promise((resolve, reject) => reject(new Error('No partial token found')));\n        }\n        const promisedResponse = fetch(\n            Settings.app.context + '/services/auth/introspect',\n            { credentials: 'same-origin' },\n        );\n        return promisedResponse\n            .then((response) => response.json())\n            .then((data) => {\n                let user = null;\n                let username;\n                if (data.active) {\n                    const currentEnv = Utils.getCurrentEnvironment();\n                    username = data.username;\n                    user = new User(currentEnv.label, username);\n                    const scopes = data.scope.split(' ');\n                    if (this.hasBasicLoginPermission(scopes)) {\n                        user.scopes = scopes;\n                        AuthManager.setUser(user, currentEnv.label);\n                    } else {\n                        console.warn('The user with ' + partialToken + ' doesn\\'t have enough permission!');\n                        throw new Error(CONSTS.errorCodes.INSUFFICIENT_PREVILEGES);\n                    }\n                } else {\n                    console.warn('User with ' + partialToken + ' is not active!');\n                    throw new Error(CONSTS.errorCodes.INVALID_TOKEN);\n                }\n                return user;\n            });\n    }\n\n    /**\n     * Persist an user in browser local storage and in-memory, Since only one use can be logged\n     * into the application at a time,This method will override any previously persist user data.\n     * @param {User} user : An instance of the {User} class\n     * @param {string} environmentName: label of the environment to be set the user\n     */\n    static setUser(user, environmentName) {\n        environmentName = environmentName || Utils.getEnvironment().label;\n        if (!(user instanceof User)) {\n            throw new Error('Invalid user object');\n        }\n\n        if (user) {\n            localStorage.setItem(`${User.CONST.LOCALSTORAGE_USER}_${environmentName}`, JSON.stringify(user.toJson()));\n        }\n    }\n\n    /**\n     *\n     * Get scope for resources\n     * @static\n     * @param {String} resourcePath\n     * @param {String} resourceMethod\n     * @returns Boolean\n     * @memberof AuthManager\n     */\n    static hasScopes(resourcePath, resourceMethod) {\n        const user = AuthManager.getUser();\n        if (user) {\n            const userScopes = user.scopes;\n            const validScope = APIClient.getScopeForResource(resourcePath, resourceMethod);\n            return validScope.then((scopes) => {\n                for (const scope of scopes) {\n                    if (userScopes.includes(scope)) {\n                        return true;\n                    }\n                }\n                return false;\n            });\n        }\n    }\n\n\n    /**\n     * By given username and password Authenticate the user, Since this REST API has no swagger definition,\n     * Can't use swaggerjs to generate client.Hence using Axios to make AJAX calls\n     * @param {String} username : Username of the user\n     * @param {String} password : Plain text password\n     * @param {Object} environment : environment object\n     * @returns {AxiosPromise} : Promise object with the login request made\n     */\n    authenticateUser(username, password, environment) {\n        const headers = {\n            Authorization: 'Basic deidwe',\n            Accept: 'application/json',\n            'Content-Type': 'application/x-www-form-urlencoded',\n        };\n        const data = {\n            username,\n            password,\n            grant_type: 'password',\n            validity_period: 3600,\n            scopes: 'apim:subscribe apim:signup apim:workflow_approve apim:sub_alert_manage',\n        };\n        const promised_response = axios(Utils.getLoginTokenPath(environment), {\n            method: 'POST',\n            data: qs.stringify(data),\n            headers,\n            withCredentials: true,\n        });\n        // Set the environment that user tried to authenticate\n        const previous_environment = Utils.getEnvironment();\n        Utils.setEnvironment(environment);\n\n        promised_response\n            .then((response) => {\n                const { validityPeriod } = response.data; // In seconds\n                const WSO2_AM_TOKEN_1 = response.data.partialToken;\n                const user = new User(Utils.getEnvironment().label, response.data.authUser, response.data.idToken);\n                user.setPartialToken(WSO2_AM_TOKEN_1, validityPeriod, Settings.app.context);\n                user.scopes = response.data.scopes.split(' ');\n                AuthManager.setUser(user);\n            })\n            .catch((error) => {\n                console.error('Authentication Error:\\n', error);\n                Utils.setEnvironment(previous_environment);\n            });\n        return promised_response;\n    }\n\n    /**\n     * Revoke the issued OAuth access token for currently logged in user and clear both cookie and localstorage data.\n     */\n    logout() {\n        const authHeader = 'Bearer ' + AuthManager.getUser().getPartialToken();\n        // TODO Will have to change the logout end point url to contain the app context(i.e. publisher/store, etc.)\n        const url = Utils.getAppLogoutURL();\n        const headers = {\n            Accept: 'application/json',\n            'Content-Type': 'application/json',\n            Authorization: authHeader,\n        };\n        const promisedLogout = axios.post(url, null, { headers });\n        return promisedLogout.then((response) => {\n            Utils.delete_cookie(User.CONST.WSO2_AM_TOKEN_1, Settings.app.context);\n            localStorage.removeItem(User.CONST.LOCALSTORAGE_USER);\n            new APIClientFactory().destroyAPIClient(Utils.getEnvironment().label); // Single client should be re initialize after log out\n        });\n    }\n\n    /**\n     * Call Token API with refresh token grant type\n     * @param {Object} environment - Name of the environment\n     * @return {AxiosPromise}\n     */\n    static refresh(environment) {\n        const params = {\n            refresh_token: AuthManager.getUser(environment.label).getRefreshPartialToken(),\n            validity_period: -1,\n            scopes: AuthManager.CONST.USER_SCOPES,\n        };\n        const referrer = document.referrer.indexOf('https') !== -1 ? document.referrer : null;\n        const url = Settings.app.context + environment.refreshTokenPath;\n        const headers = {\n            Accept: 'application/json',\n            'Content-Type': 'application/x-www-form-urlencoded',\n            'X-Alt-Referer': referrer,\n        };\n        return fetch(url, {\n            method: 'POST',\n            body: qs.stringify(params),\n            headers,\n        });\n    }\n\n    /**\n     * Register anonymous user by generating token using client_credentials grant type\n     * @param {Object} environment : environment object\n     * @returns {AxiosPromise} : Promise object with the request made\n     */\n    registerUser(environment) {\n        const headers = {\n            Accept: 'application/json',\n            'Content-Type': 'application/x-www-form-urlencoded',\n        };\n        const data = {\n            grant_type: 'client_credentials',\n            validity_period: 3600,\n            scopes: 'apim:self-signup',\n        };\n        const promised_response = axios(Utils.getSignUpTokenPath(environment), {\n            method: 'POST',\n            data: qs.stringify(data),\n            headers,\n            withCredentials: false,\n        });\n\n        promised_response\n            .then((response) => {\n                const { validityPeriod } = response.data;\n                const WSO2_AM_TOKEN_1 = response.data.partialToken;\n                const user = new User(Utils.getEnvironment().label, response.data.authUser, response.data.idToken);\n                user.setPartialToken(WSO2_AM_TOKEN_1, validityPeriod, Settings.app.context);\n                user.scopes = response.data.scopes;\n                AuthManager.setUser(user);\n            })\n            .catch((error) => {\n                console.error('Authentication Error: ', error);\n            });\n        return promised_response;\n    }\n}\n\n// TODO: derive this from swagger definitions ~tmkb\nAuthManager.CONST = {\n    USER_SCOPES:\n        'apim:api_key apim:app_manage apim:app_update apim:dedicated_gateway apim:self-signup '\n        + 'apim:store_settings apim:sub_alert_manage apim:sub_manage apim:subscribe openid',\n};\n\nexport default AuthManager;\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\n\nimport SwaggerClient from 'swagger-client';\nimport { Mutex } from 'async-mutex';\nimport Settings from 'Settings';\nimport queryString from 'query-string';\nimport AuthManager from './AuthManager';\nimport Utils from './Utils';\n\n/**\n * This class expose single swaggerClient instance created using the given swagger URL (Publisher, Store, ect ..)\n * it's highly unlikely to change the REST API Swagger definition (swagger.json) file on the fly,\n * Hence this singleton class help to preserve consecutive swagger client object creations saving redundant IO operations.\n */\nclass APIClient {\n    /**\n     * @param {String} host : Host of apis. Host for the swagger-client's spec property.\n     * @param {{}} args : Accept as an optional argument for APIClient constructor.Merge the given args with default args.\n     * @returns {APIClient|*|null}\n     */\n    constructor(host, args = {}) {\n        this.host = host || location.host;\n        this.environment = Utils.getCurrentEnvironment();\n        const authorizations = {\n            OAuth2Security: {\n                token: { access_token: AuthManager.getUser() ? AuthManager.getUser().getPartialToken() : '' },\n            },\n        };\n\n        SwaggerClient.http.withCredentials = true;\n        const promisedResolve = SwaggerClient.resolve({ url: Utils.getSwaggerURL(), requestInterceptor: (request) => { request.headers.Accept = 'text/yaml'; } });\n        APIClient.spec = promisedResolve;\n        this._client = promisedResolve.then((resolved) => {\n            const argsv = Object.assign(\n                args,\n                {\n                    spec: this._fixSpec(resolved.spec),\n                    authorizations,\n                    requestInterceptor: this._getRequestInterceptor(),\n                    responseInterceptor: this._getResponseInterceptor(),\n                },\n            );\n            SwaggerClient.http.withCredentials = true;\n            return new SwaggerClient(argsv);\n        });\n        this._client.catch(AuthManager.unauthorizedErrorHandler);\n        this.mutex = new Mutex();\n    }\n\n    /**\n     * Expose the private _client property to public\n     * @returns {APIClient} an instance of APIClient class\n     */\n    get client() {\n        return this._client;\n    }\n\n    /**\n     * Get the ETag of a given resource key from the session storage\n     * @param key {string} key of resource.\n     * @returns {string} ETag value for the given key\n     */\n    static getETag(key) {\n        return sessionStorage.getItem('etag_' + key);\n    }\n\n    /**\n     * Add an ETag to a given resource key into the session storage\n     * @param key {string} key of resource.\n     * @param etag {string} etag value to be stored against the key\n     */\n    static addETag(key, etag) {\n        sessionStorage.setItem('etag_' + key, etag);\n    }\n\n    /**\n     * Get Scope for a particular resource path\n     *\n     * @param resourcePath resource path of the action\n     * @param resourceMethod resource method of the action\n     */\n    static getScopeForResource(resourcePath, resourceMethod) {\n        if (!APIClient.spec) {\n            SwaggerClient.http.withCredentials = true;\n            APIClient.spec = SwaggerClient.resolve({ url: Utils.getSwaggerURL() });\n        }\n        return APIClient.spec.then((resolved) => {\n            return resolved.spec.paths[resourcePath] && resolved.spec.paths[resourcePath][resourceMethod] && resolved.spec.paths[resourcePath][resourceMethod].security[0].OAuth2Security;\n        });\n    }\n\n    /**\n     * Temporary method to fix the hostname attribute Till following issues get fixed ~tmkb\n     * https://github.com/swagger-api/swagger-js/issues/1081\n     * https://github.com/swagger-api/swagger-js/issues/1045\n     * @param spec {JSON} : Json object of the specification\n     * @returns {JSON} : Fixed specification\n     * @private\n     */\n    _fixSpec(spec) {\n        spec.host = this.host;\n        spec.basePath = Settings.app.proxy_context_path\n            ? Settings.app.proxy_context_path + spec.basePath\n            : spec.basePath;\n        spec.security = [{ OAuth2Security: ['apim:api_subscribe'] }];\n        return spec;\n    }\n\n    _getResponseInterceptor() {\n        return (data) => {\n            if (data.headers.etag) {\n                APIClient.addETag(data.url, data.headers.etag);\n            }\n\n            // If an unauthenticated response is received, we check whether the token is valid by introspecting it.\n            // If it is not valid, we need to clear the stored tokens (in cookies etc) in the browser by redirecting the\n            //   user to logout.\n            if (data.status === 401 && data.obj != null && data.obj.description === 'Unauthenticated request') {\n                const userData = AuthManager.getUserFromToken();\n                const existingUser = AuthManager.getUser(this.environment.label);\n                if (existingUser) {\n                    userData.then((user) => {\n                        if (user) {\n                            window.location = Settings.app.context + Utils.CONST.LOGOUT_CALLBACK;\n                        }\n                    }).catch((error) => {\n                        console.error('Error occurred while checking token status. Hence redirecting to login', error);\n                        window.location = Settings.app.context + Utils.CONST.LOGOUT_CALLBACK;\n                    });\n                } else {\n                    console.error('Attempted a call to a protected API without a proper access token');\n                }\n            }\n            return data;\n        };\n    }\n\n    /**\n     * Interceptor for each request\n     * @returns {Object}\n     * @memberof APIClient\n     */\n    _getRequestInterceptor() {\n        return (request) => {\n            const { location } = window;\n            if (location) {\n                const { tenant } = queryString.parse(location.search);\n                if (tenant) {\n                    request.headers['X-WSO2-Tenant'] = tenant;\n                }\n            }\n\n            const existingUser = AuthManager.getUser(this.environment.label);\n            if (!existingUser) {\n                console.log('User not found. Token refreshing failed.');\n                return request;\n            }\n            let existingToken = AuthManager.getUser(this.environment.label).getPartialToken();\n            const refToken = AuthManager.getUser(this.environment.label).getRefreshPartialToken();\n            if (existingToken) {\n                request.headers.authorization = 'Bearer ' + existingToken;\n                return request;\n            } else {\n                console.log('Access token is expired. Trying to refresh.');\n                if (!refToken) {\n                    console.log('Refresh token not found. Token refreshing failed.');\n                    return request;\n                }\n            }\n\n            const env = this.environment;\n            const promise = this.mutex.acquire().then((release) => {\n                existingToken = AuthManager.getUser(env.label).getPartialToken();\n                if (existingToken) {\n                    request.headers.authorization = 'Bearer ' + existingToken;\n                    release();\n                    return request;\n                } else {\n                    return AuthManager.refresh(env).then((res) => res.json())\n                        .then(() => {\n                            request.headers.authorization = 'Bearer '\n                                + AuthManager.getUser(env.label).getPartialToken();\n                            return request;\n                        }).catch((error) => {\n                            console.error('Error:', error);\n                        })\n                        .finally(() => {\n                            release();\n                        });\n                }\n            });\n\n            if (APIClient.getETag(request.url)\n                && (request.method === 'PUT' || request.method === 'DELETE' || request.method === 'POST')) {\n                request.headers['If-Match'] = APIClient.getETag(request.url);\n            }\n            return promise;\n        };\n    }\n}\n\nAPIClient.spec = null;\n\nexport default APIClient;\n","/*\n * Copyright (c) 2017, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\"use strict\";\nimport APIClient from \"./APIClient\";\nimport Utils from \"./Utils\";\n\nclass APIClientFactory {\n    constructor() {\n        if (APIClientFactory._instance) {\n            return APIClientFactory._instance;\n        }\n\n        this._APIClientMap = new Map();\n        APIClientFactory._instance = this;\n    }\n\n    getAPIClient(environmentLabel) {\n        let api_Client = this._APIClientMap.get(environmentLabel);\n\n        if (api_Client) {\n            return api_Client;\n        }\n\n        api_Client = new APIClient(Utils.getEnvironment().host);\n        this._APIClientMap.set(environmentLabel, api_Client);\n        return api_Client;\n    }\n\n    destroyAPIClient(environmentLabel) {\n        this._APIClientMap.delete(environmentLabel);\n    }\n}\n\nAPIClientFactory._instance = null;\n\nexport default APIClientFactory;","/**\n * Copyright (c) 2017, WSO2 Inc. (http://wso2.com) All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\"use strict\";\n\nimport AuthManager from './AuthManager'\n\n/***\n * Abstract resource representation, Host for generic resource related methods\n */\nexport default class Resource {\n\n    /**\n     * @param data\n     * @returns {object} Metadata for API request\n     */\n    static _requestMetaData(data = {}) {\n        /* TODO: This should be moved to an interceptor ~tmkb*/\n        return {\n            requestContentType: data['Content-Type'] || \"application/json\"\n        };\n    }\n}","/**\n * Copyright (c) 2019, WSO2 Inc. (http://wso2.com) All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport APIClientFactory from './APIClientFactory';\nimport Utils from './Utils';\nimport Resource from './Resource';\n\n/**\n * API client for WSDL related operations\n */\nclass Wsdl extends Resource {\n    /**\n     * Constructor of the WSDL API client\n     * @param {*} client SwaggerClient object\n     */\n    constructor(client = null) {\n        super();\n        if (client == null) {\n            this.apiClient = new APIClientFactory().getAPIClient(Utils.getCurrentEnvironment()).client;\n        } else {\n            this.apiClient = client;\n        }\n    }\n\n    /**\n     * Download the WSDL of an API for the given gateway environment\n     *\n     * @static\n     * @param {string} apiId API UUID\n     * @param {string} environmentName name of the gateway environment\n     * @returns {*} WSDL validation response\n     * @memberof Wsdl\n     */\n    downloadWSDLForEnvironment(apiId, environmentName = null) {\n        return this.apiClient.then((client) => {\n            return client.apis.APIs.getWSDLOfAPI({ apiId, environmentName });\n        });\n    }\n}\n\nexport default Wsdl;\n","/**\n * Copyright (c) 2016, WSO2 Inc. (http://wso2.com) All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nimport CONSTS from 'AppData/Constants';\nimport APIClientFactory from './APIClientFactory';\nimport Resource from './Resource';\nimport Wsdl from './Wsdl';\nimport Utils from './Utils';\n\n/**\n * An abstract representation of an API\n */\nexport default class API extends Resource {\n    /**\n     * @constructor\n     * @param {string} access_key - Access key for invoking the backend REST API call.\n     */\n    constructor() {\n        super();\n        this.client = new APIClientFactory().getAPIClient(Utils.getEnvironment().label).client;\n        this.wsdlClient = new Wsdl(this.client);\n        this._requestMetaData = Resource._requestMetaData;\n    }\n\n    /**\n     * (TODO: need to ask for fallback sequence as well tmkb)\n     * Get list of all the available APIs, If the call back is given\n     * It will be invoked upon receiving the response from REST service.Else will return a promise.\n     * @param callback {function} A callback function to invoke after receiving successful response.\n     * @returns {promise} With given callback attached to the success chain else API invoke promise.\n     */\n    getAllAPIs(params = {}, callback = null) {\n        const promiseGetAll = this.client.then((client) => {\n            return client.apis.APIs.get_apis(params, this._requestMetaData());\n        });\n        if (callback) {\n            return promiseGetAll.then(callback);\n        } else {\n            return promiseGetAll;\n        }\n    }\n\n    /**\n     * Get details of a given API\n     * @param id {string} UUID of the api.\n     * @param callback {function} A callback function to invoke after receiving successful response.\n     * @returns {promise} With given callback attached to the success chain else API invoke promise.\n     */\n    getAPIById(id, callback = null) {\n        const promiseGet = this.client.then((client) => {\n            return client.apis.APIs.get_apis__apiId_({ apiId: id }, this._requestMetaData());\n        });\n        if (callback) {\n            return promiseGet.then(callback);\n        } else {\n            return promiseGet;\n        }\n    }\n\n    /*\n     Get the inline content of a given document\n     */\n    getInlineContentOfDocument(api_id, docId) {\n        const promised_getDocContent = this.client.then((client) => {\n            const payload = {\n                apiId: api_id,\n                documentId: docId,\n            };\n            return client.apis['API Documents'].get_apis__apiId__documents__documentId__content(payload);\n        });\n        return promised_getDocContent;\n    }\n\n    /**\n     * Get the Documents of an API\n     * @param id {String} UUID of the API in which the documents needed\n     * @param callback {function} Function which needs to be called upon success of getting documents\n     * @returns {promise} With given callback attached to the success chain else API invoke promise.\n     */\n    getDocumentsByAPIId(id, callback = null) {\n        const promiseGet = this.client.then((client) => {\n            return client.apis['API Documents'].get_apis__apiId__documents({ apiId: id }, this._requestMetaData());\n        });\n        if (callback) {\n            return promiseGet.then(callback);\n        } else {\n            return promiseGet;\n        }\n    }\n\n    /**\n     * Get the Documents of an API\n     * @param {string} apiId api id.\n     * @param {string} documentId document id.\n     * @returns {promise} promise to get the document.\n     */\n    getDocumentByDocId(apiId, documentId) {\n        const promiseGet = this.client.then((client) => {\n            const payload = {\n                apiId,\n                documentId,\n            };\n            return client.apis['Documents'].get_apis__apiId__documents__documentId_(payload, this._requestMetaData());\n        });\n        return promiseGet;\n    }\n\n    /**\n     * Get the Document content of an API by document Id\n     * @param api_id {String} UUID of the API in which the document needed\n     * @param docId {String} UUID of the Document need to view\n     * @param callback {function} Function which needs to be called upon success of of getting document.\n     * @returns {promise} With given callback attached to the success chain else API invoke promise.\n     */\n    getFileForDocument(api_id, docId) {\n        const promised_getDocContent = this.client.then((client) => {\n            const payload = {\n                apiId: api_id,\n                documentId: docId,\n                Accept: 'application/octet-stream',\n            };\n            return client.apis['API Documents'].get_apis__apiId__documents__documentId__content(\n                payload,\n                this._requestMetaData({\n                    'Content-Type': 'multipart/form-data',\n                }),\n            );\n        });\n        return promised_getDocContent;\n    }\n\n    /**\n     * Get the swagger of an API\n     * @param apiId {String} UUID of the API in which the swagger is needed\n     * @param callback {function} Function which needs to be called upon success of the API deletion\n     * @returns {promise} With given callback attached to the success chain else API invoke promise.\n     */\n    getSwaggerByAPIId(apiId, callback = null) {\n        const promiseGet = this.client.then((client) => {\n            return client.apis.APIs.get_apis__apiId__swagger({ apiId }, this._requestMetaData());\n        });\n        if (callback) {\n            return promiseGet.then(callback);\n        } else {\n            return promiseGet;\n        }\n    }\n\n    /**\n     * Get the schema of an GraphQL API\n     * @param apiId {String} UUID of the API in which the schema is needed\n     * @param callback {function} Function which needs to be called upon success of the retrieving schema\n     * @returns {promise} With given callback attached to the success chain else API invoke promise.\n     */\n    getGraphQLSchemaByAPIId(apiId, callback = null) {\n        const promiseGet = this.client.then((client) => {\n            return client.apis.APIs.get_apis__apiId__graphql_schema({ apiId }, this._requestMetaData());\n        });\n        if (callback) {\n            return promiseGet.then(callback);\n        } else {\n            return promiseGet;\n        }\n    }\n\n    /**\n     * Get the swagger of an API\n     * @param apiId {String} UUID of the API in which the swagger is needed\n     * @param environmentName {String} API environment name\n     * @param callback {function} Function which needs to be called upon success of the API deletion\n     * @returns {promise} With given callback attached to the success chain else API invoke promise.\n     */\n    getSwaggerByAPIIdAndEnvironment(apiId, environmentName, callback = null) {\n        const promiseGet = this.client.then((client) => {\n            return client.apis.APIs.get_apis__apiId__swagger({ apiId, environmentName }, this._requestMetaData());\n        });\n        if (callback) {\n            return promiseGet.then(callback);\n        } else {\n            return promiseGet;\n        }\n    }\n\n    /**\n     * Get the swagger of an API\n     * @param apiId {String} UUID of the API in which the swagger is needed\n     * @param labelName {String} Micro gateway label\n     * @param callback {function} Function which needs to be called upon success of the API deletion\n     * @returns {promise} With given callback attached to the success chain else API invoke promise.\n     */\n    getSwaggerByAPIIdAndLabel(apiId, labelName, callback = null) {\n        const promiseGet = this.client.then((client) => {\n            return client.apis.APIs.get_apis__apiId__swagger({ apiId, labelName }, this._requestMetaData());\n        });\n        if (callback) {\n            return promiseGet.then(callback);\n        } else {\n            return promiseGet;\n        }\n    }\n\n    /**\n     * Get the swagger of an API\n     * @param apiId {String} UUID of the API in which the swagger is needed\n     * @param clusterName {String} Container managed cluster name\n     * @param callback {function} Function which needs to be called upon success of the API deletion\n     * @returns {promise} With given callback attached to the success chain else API invoke promise.\n     */\n    getSwaggerByAPIIdAndClusterName(apiId, clusterName, callback = null) {\n        const promiseGet = this.client.then((client) => {\n            return client.apis.APIs.get_apis__apiId__swagger({ apiId, clusterName }, this._requestMetaData());\n        });\n        if (callback) {\n            return promiseGet.then(callback);\n        } else {\n            return promiseGet;\n        }\n    }\n\n    /**\n     * Get application by id\n     * @param id {String} UUID of the application\n     * @param callback {function} Function which needs to be called upon success\n     * @returns {promise} With given callback attached to the success chain else API invoke promise.\n     */\n    getApplication(id, callback = null) {\n        const promiseGet = this.client.then((client) => {\n            return client.apis.Applications.get_applications__applicationId_(\n                { applicationId: id },\n                this._requestMetaData(),\n            );\n        });\n        if (callback) {\n            return promiseGet.then(callback);\n        } else {\n            return promiseGet;\n        }\n    }\n\n    /**\n     * Get application by id\n     * @param callback {function} Function which needs to be called upon success\n     * @returns {promise} With given callback attached to the success chain else API invoke promise.\n     * @deprecated Use Application.all method instead\n     */\n    getAllApplications(callback = null, limit = 25) {\n        const promiseGet = this.client.then((client) => {\n            return client.apis.Applications.get_applications({limit}, this._requestMetaData());\n        });\n        if (callback) {\n            return promiseGet.then(callback);\n        } else {\n            return promiseGet;\n        }\n    }\n\n    /**\n     * Get application by id\n     * @param policyLevel\n     * @param callback {function} Function which needs to be called upon success\n     * @returns {promise} With given callback attached to the success chain else API invoke promise.\n     */\n    getAllTiers(policyLevel, callback = null) {\n        const promiseGetAll = this.client.then((client) => {\n            return client.apis['Throttling Policies'].get_throttling_policies__policyLevel_(\n                { policyLevel },\n                this._requestMetaData(),\n            );\n        });\n        if (callback) {\n            return promiseGetAll.then(callback);\n        } else {\n            return promiseGetAll;\n        }\n    }\n\n    /**\n     * Get all application attributes\n     * @param {function} callback which needs to be called upon success\n     * @returns {promise} With given callback attached to the success chain else API invoke promise.\n     */\n    getAllApplicationAttributes() {\n        return this.client.then((client) => {\n            return client.apis.Settings.get_settings_application_attributes(this._requestMetaData());\n        });\n    }\n\n    /**\n     * Create application\n     * @param {object} application content of the application\n     * @returns {promise} With given callback attached to the success chain else API invoke promise.\n     */\n    createApplication(application) {\n        return this.client.then((client) => {\n            const payload = { body: application };\n            const args = { 'Content-Type': 'application/json' };\n            return client.apis.Applications.post_applications(payload, args);\n        });\n    }\n\n    /**\n     * Update an application\n     * @param application content that need to updated with the application id\n     * @param callback {function} Function which needs to be called upon success\n     * @returns {promise} With given callback attached to the success chain else API invoke promise.\n     */\n    updateApplication(application, callback = null) {\n        const promiseGet = this.client.then((client) => {\n            const payload = { applicationId: application.applicationId, body: application };\n            return client.apis.Applications.put_applications__applicationId_(payload, this._requestMetaData());\n        });\n        if (callback) {\n            return promiseGet.then(callback);\n        } else {\n            return promiseGet;\n        }\n    }\n\n    /**\n     * Add new comment to an existing API\n     * @param apiId apiId of the api to which the comment is added\n     * @param comment comment text\n     */\n    addComment(apiId, comment) {\n        return this.client.then((client) => {\n            const payload = { apiId, body: comment };\n            return client.apis.Comments.addCommentToAPI(payload, this._requestMetaData());\n        });\n    }\n\n    /**\n     * Get all comments for a particular API\n     * @param apiId api id of the api to which the comment is added\n     */\n    getAllComments(apiId) {\n        return this.client.then((client) => {\n            return client.apis.Comments.getAllCommentsOfAPI({ apiId }, this._requestMetaData());\n        });\n    }\n\n    /**\n     * Delete a comment belongs to a particular API\n     * @param apiId api id of the api to which the comment belongs to\n     * @param commentId comment id of the comment which has to be deleted\n     */\n    deleteComment(apiId, commentId) {\n        return this.client.then((client) => {\n            return client.apis.Comments.deleteComment({ apiId, commentId }, this._requestMetaData());\n        });\n    }\n\n    /**\n     * Update a comment belongs to a particular API\n     * @param apiId apiId of the api to which the comment is added\n     * @param commentId comment id of the comment which has to be updated\n     * @param commentInfo comment text\n     */\n    updateComment(apiId, commentId, commentInfo, callback = null) {\n        const promise = this.client.then((client) => {\n            return client.apis['Comment (Individual)'].put_apis__apiId__comments__commentId_(\n                { apiId, commentId, body: commentInfo },\n                this._requestMetaData(),\n            );\n        }).catch((error) => {\n            console.error(error);\n        });\n        if (callback) {\n            return promise.then(callback);\n        } else {\n            return promise;\n        }\n    }\n\n    /**\n     * Get Rating details for a partiuclar API\n     * @param {apiId} apiId of the api\n     * @returns {promise} promise\n     */\n    getRatingFromUser(apiId) {\n        const promiseGet = this.client.then((client) => {\n            return client.apis.Ratings.get_apis__apiId__ratings({ apiId }, this._requestMetaData());\n        }).catch((error) => {\n            console.error(error);\n        });\n        return promiseGet;\n    }\n\n    /**\n     * Remove Rating details for a partiuclar API for the logged in user\n     * @param {apiId} apiId of the api\n     * @returns {promise} promise\n     */\n    removeRatingOfUser(apiId) {\n        const promiseDelete = this.client.then((client) => {\n            return client.apis.Ratings.delete_apis__apiId__user_rating({ apiId }, this._requestMetaData());\n        }).catch((error) => {\n            console.error(error);\n        });\n        return promiseDelete;\n    }\n\n    /**\n     * Add Rating for a partiuclar API by the logged in user\n     * @param {apiId} apiId of the api\n     * @param {ratingInfo} ratingInfo user rating for the api\n     * @returns {promise} promise\n     */\n    addRating(apiId, ratingInfo) {\n        const promise = this.client.then((client) => {\n            return client.apis.Ratings.put_apis__apiId__user_rating(\n                { apiId, body: ratingInfo },\n                this._requestMetaData(),\n            );\n        }).catch((error) => {\n            console.error(error);\n        });\n        return promise;\n    }\n\n    /**\n     * Generate application keys\n     * @param applicationId id of the application that needs to generate the keys\n     * @param request_content payload of generate key request\n     * @param callback {function} Function which needs to be called upon success\n     * @returns {promise} With given callback attached to the success chain else API invoke promise.\n     * @deprecated Use Application.generateKeys() instead\n     */\n    generateKeys(applicationId, requestContent, callback = null) {\n        const promiseGet = this.client.then((client) => {\n            const payload = { applicationId, body: requestContent };\n            return client.apis.Applications.post_applications__applicationId__generate_keys(\n                payload,\n                this._requestMetaData(),\n            );\n        });\n        if (callback) {\n            return promiseGet.then(callback);\n        } else {\n            return promiseGet;\n        }\n    }\n\n    /**\n     * Generate token\n     * @param applicationId id of the application that needs to generate the token\n     * @param request_content payload of generate token request\n     * @param callback {function} Function which needs to be called upon success\n     * @returns {promise} With given callback attached to the success chain else API invoke promise.\n     * @deprecated Use Application.generateToken() instead\n     */\n    generateToken(applicationId, requestContent, callback = null) {\n        const promiseGet = this.client.then((client) => {\n            const payload = { applicationId, body: requestContent };\n            return client.apis.Applications.post_applications__applicationId__generate_token(\n                payload,\n                this._requestMetaData(),\n            );\n        });\n        if (callback) {\n            return promiseGet.then(callback);\n        } else {\n            return promiseGet;\n        }\n    }\n\n    /**\n     * Get keys of an application\n     * @param applicationId id of the application that needs to get the keys\n     * @param callback {function} Function which needs to be called upon success\n     * @returns {promise} With given callback attached to the success chain else API invoke promise.\n     * @deprecated Use Application.getKeys() instead\n     */\n    getKeys(applicationId, callback = null) {\n        const promiseGet = this.client.then((client) => {\n            return client.apis.Applications.get_applications__applicationId__keys(\n                { applicationId },\n                this._requestMetaData(),\n            );\n        });\n        if (callback) {\n            return promiseGet.then(callback);\n        } else {\n            return promiseGet;\n        }\n    }\n\n    generateApiKey(applicationId, keyType, validityPeriod, restrictions) {\n        const promiseGet = this.client.then((client) => {\n            const payload = {\n                applicationId, keyType,\n                body: {\n                    validityPeriod: validityPeriod,\n                    additionalProperties: restrictions\n                }\n            };\n            return client.apis['API Keys'].post_applications__applicationId__api_keys__keyType__generate(\n                payload,\n                this._requestMetaData(),\n            );\n        });\n        return promiseGet;\n    }\n\n    /**\n     * Get keys of an application\n     * @param applicationId id of the application that needs to get the keys\n     * @param callback {function} Function which needs to be called upon success\n     * @returns {promise} With given callback attached to the success chain else API invoke promise.\n     */\n    getSubscriptions(apiId, applicationId, callback = null) {\n        const payload = { apiId };\n        if (applicationId) {\n            payload[applicationId] = applicationId;\n        }\n        const promisedGet = this.client.then((client) => {\n            return client.apis.Subscriptions.get_subscriptions(payload, this._requestMetaData());\n        });\n        if (callback) {\n            return promisedGet.then(callback);\n        } else {\n            return promisedGet;\n        }\n    }\n\n    /**\n     * Create a subscription\n     * @param {string} apiId id of the API that needs to be subscribed\n     * @param {string} applicationId id of the application that needs to be subscribed\n     * @param {string} policy throttle policy applicable for the subscription\n     * @param {function} callback callback url\n     * @returns {promise} With given callback attached to the success chain else API invoke promise.\n     */\n    subscribe(apiId, applicationId, policy, callback = null) {\n        const promiseCreateSubscription = this.client.then((client) => {\n            let subscriptionData = null;\n\n            subscriptionData = {\n                apiId, applicationId, throttlingPolicy: policy,\n            };\n\n            const payload = { body: subscriptionData };\n            return client.apis.Subscriptions.post_subscriptions(payload, { 'Content-Type': 'application/json' });\n        });\n        if (callback) {\n            return promiseCreateSubscription.then(callback);\n        } else {\n            return promiseCreateSubscription;\n        }\n    }\n\n    /**\n     * Get the available labels.\n     * @returns {Promise.<TResult>}\n     */\n    labels() {\n        const promiseLabels = this.client.then((client) => {\n            return client.apis['Label (Collection)'].get_labels(\n                {},\n                this._requestMetaData(),\n            );\n        });\n        return promiseLabels;\n    }\n\n    /**\n     * Get the SDK generation supported languages.\n     * @returns {Promise} List of languages that supports SDK generation by swagger-codegen\n     */\n    getSdkLanguages() {\n        const promiseLanguages = this.client.then((client) => {\n            return client.apis.SDKs.get_sdk_gen_languages({}, this._requestMetaData());\n        });\n        return promiseLanguages;\n    }\n\n    /**\n     * Get the SDK for the API with the specified apiId and language.\n     * @returns {Promise} Zip file for the generated SDK.\n     */\n    getSdk(apiId, language) {\n        const payload = { apiId, language };\n\n        const promiseSdk = this.client.then((client) => {\n            return client.apis.SDKs.get_apis__apiId__sdks__language_(payload, this._requestMetaData());\n        });\n        return promiseSdk;\n    }\n\n    /**\n     * Get details of a given throttling policy\n     * @param id {string} name of the tier.\n     * @param callback {function} A callback function to invoke after receiving successful response.\n     * @returns {promise} With given callback attached to the success chain else API invoke promise.\n     */\n    getTierByName(name, level, callback = null) {\n        const payload = { policyId: name, policyLevel: level };\n        const promiseGet = this.client.then((client) => {\n            return client.apis['Throttling Policies'].get_throttling_policies__policyLevel___policyId_(\n                payload,\n                this._requestMetaData(),\n            );\n        });\n        if (callback) {\n            return promiseGet.then(callback);\n        } else {\n            return promiseGet;\n        }\n    }\n\n    /**\n     * Create new user\n     * @param body {JSON object} {username:\"\", password:\"\", firstName:\"\", lastName:\"\", email:\"\"}\n     * @returns {promise} With given callback attached to the success chain else API invoke promise.\n     */\n    createUser(body) {\n        const payload = { body };\n        const promise = this.client.then((client) => {\n            return client.apis['Sign Up'].post_self_signup(payload, { 'Content-Type': 'application/json' });\n        });\n        return promise;\n    }\n\n    /**\n     * Get all tags\n     * @returns {promise} promise all tags of APIs\n     */\n    getAllTags() {\n        const promiseGet = this.client.then((client) => {\n            return client.apis.Tags.get_tags(this._requestMetaData());\n        }).catch((error) => {\n            console.error(error);\n        });\n        return promiseGet;\n    }\n\n    /**\n     * Get the thumnail of an API\n     *\n     * @param id {string} UUID of the api\n     */\n    getAPIThumbnail(id) {\n        const promised_getAPIThumbnail = this.client.then((client) => {\n            return client.apis.APIs.get_apis__apiId__thumbnail({\n                apiId: id,\n            },\n                this._requestMetaData());\n        });\n\n        return promised_getAPIThumbnail;\n    }\n\n    /**\n     * method to search apis and documents based on content\n     * @param {Object} params APIs, Documents filtering parameters i:e { \"name\": \"MyBank API\"}\n     * @returns {Promise} promise object return from SwaggerClient-js\n     * @memberof API\n     */\n    search(params) {\n        return this.client.then((client) => {\n            return client.apis['Unified Search'].get_search(params, Resource._requestMetaData());\n        });\n    }\n\n\n    /**\n     * Returns the WSDL API client\n     *\n     * @return {Wsdl} WSDL API client\n     */\n    getWsdlClient() {\n        return this.wsdlClient;\n    }\n\n    /**\n     * method to get store settings such as grant types, scopes, application sharing settings etc\n     * Settings API can be invoked with and without access token, When a token is not present it will return the public\n     * settings info, when a valid token is present it will return all the settings info.\n     * @returns {Promise} promise object return from SwaggerClient-js\n     * @memberof API\n     */\n    getSettings() {\n        return this.client.then((client) => {\n            return client.apis.Settings.get_settings(this._requestMetaData());\n        });\n    }\n\n    /**\n     * @static\n     * Get the registered key managers.\n     * @return {Promise}\n     * */\n    getKeyManagers() {\n        return this.client.then((client) => {\n            return client.apis['Key Managers (Collection)'].get_key_managers(this._requestMetaData());\n        });\n    }\n\n    /**\n     * @static\n     * Get the supported alert types by the publisher.\n     * @return {Promise}\n     * */\n    getSupportedAlertTypes() {\n        return this.client.then((client) => {\n            return client.apis.Alerts.getStoreAlertTypes(this._requestMetaData());\n        });\n    }\n\n    /**\n     * @static\n     * Get the subscribed alert types by the current user.\n     * @returns {Promise}\n     * */\n    getSubscribedAlertTypesByUser() {\n        return this.client.then((client) => {\n            return client.apis['Alert Subscriptions'].getSubscribedAlertTypes(this._requestMetaData());\n        });\n    }\n\n    /**\n     * @static\n     * Subscribe to the provided set of alerts.\n     * @return {Promise}\n     * */\n    subscribeAlerts(alerts) {\n        return this.client.then((client) => {\n            return client.apis['Alert Subscriptions'].subscribeToAlerts({ body: alerts }, this._requestMetaData());\n        });\n    }\n\n    /**\n     * @static\n     * Unsubscribe from all the alerts.\n     * @return {Promise}\n     * */\n    unsubscribeAlerts() {\n        return this.client.then((client) => {\n            return client.apis['Alert Subscriptions'].unsubscribeAllAlerts(this._requestMetaData());\n        });\n    }\n\n    /**\n     * @static\n     * Get the configuration for the given alert type.\n     * @param {string} alertType The alert type name.\n     * @return {Promise}\n     * */\n    getAlertConfigurations(alertType) {\n        return this.client.then((client) => {\n            return client.apis['Alert Configuration'].getAllAlertConfigs(\n                {\n                    alertType,\n                },\n                this._requestMetaData(),\n            );\n        });\n    }\n\n    /**\n     * @static\n     * Add configuration for the given alert type.\n     * @param {string} alertType The alert type name.\n     * @param {object} alertConfig Alert configurations.\n     * @param {string} configId The alert configuration id.\n     * @return {Promise}\n     * */\n    putAlertConfiguration(alertType, alertConfig, configId) {\n        return this.client.then((client) => {\n            return client.apis['Alert Configuration'].addAlertConfig(\n                {\n                    alertType,\n                    body: alertConfig,\n                    configurationId: configId,\n                },\n                this._requestMetaData(),\n            );\n        });\n    }\n\n    /**\n     * @static\n     * Delete configuration.\n     * @param {string} alertType The alert type name.\n     * @param {string} configId The alert configuration id.\n     * @return {Promise}\n     * */\n    deleteAlertConfiguration(alertType, configId) {\n        return this.client.then((client) => {\n            return client.apis['Alert Configuration'].deleteAlertConfig(\n                {\n                    alertType,\n                    configurationId: configId,\n                },\n                this._requestMetaData(),\n            );\n        });\n    }\n\n    /**\n     * @static\n     * Get all API Categories of the given tenant\n     * @return {Promise}\n     * */\n    apiCategories(params) {\n        return this.client.then((client) => {\n            return client.apis['API Category (Collection)'].get_api_categories(\n                params, this._requestMetaData());\n        });\n    }\n\n    /**\n     * Get API recommendations for a given user.\n     * @param {string} userId The username.\n     * @return {Promise}\n     * */\n    getApiRecommendations(params = {}) {\n        const promiseGet = this.client.then((client) => {\n            return client.apis.Recommendations.get_recommendations(params, this._requestMetaData());\n        });\n        return promiseGet;\n    }\n    /**\n     * Get the complexity related details of an API\n     */\n\n    getGraphqlPoliciesComplexity(id) {\n        const promisePolicies = this.client.then(client => {\n            return client.apis['GraphQL Policies'].get_apis__apiId__graphql_policies_complexity(\n                {\n                    apiId: id,\n                },\n                this._requestMetaData(),\n            );\n        });\n        return promisePolicies.then(response => response.body);\n    }\n\n    /**\n     * Retrieve all types and fields of a GraphQL Schema\n     */\n    getGraphqlPoliciesComplexityTypes(id) {\n        const promisePolicies = this.client.then(client => {\n            return client.apis['GraphQL Policies'].get_apis__apiId__graphql_policies_complexity_types(\n                {\n                    apiId: id,\n                },\n                this._requestMetaData(),\n            );\n        });\n        return promisePolicies.then(response => response.body);\n    }\n\n    /**\n     * Change password\n     */\n    changePassword(currentPwd, newPwd, callback = null) {\n        const promiseChangePassword = this.client.then((client) => {\n            const payload = { currentPassword: currentPwd, newPassword: newPwd };\n            return client.apis.Users.changeUserPassword({ body: payload }, this._requestMetaData());\n        });\n        if (callback) {\n            return promiseChangePassword.then(callback);\n        } else {\n            return promiseChangePassword;\n        }\n    }\n}\n","/**\n * Copyright (c) 2017, WSO2 Inc. (http://wso2.com) All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nimport APIClientFactory from './APIClientFactory';\nimport Resource from './Resource';\nimport Utils from './Utils';\n\n/**\n * Class to expose Application {Resource} related operations i:e: Get all Application , Delete, Generate Keys ect..\n * @param {string} name Application name\n * @param {string} description Application description\n * @param {string} throttlingTier Application throttling tier\n * @param {string} kwargs Arguments\n */\nexport default class Application extends Resource {\n    constructor(name, description, throttlingTier, kwargs) {\n        super();\n        this.id = kwargs ? kwargs.applicationId : null;\n        this.client = new APIClientFactory().getAPIClient(Utils.getEnvironment().label).client;\n        this.productionKeys = new Map();\n        this.sandboxKeys = new Map();\n        this.productionTokens = new Map();\n        this.sandboxTokens = new Map();\n        for (const key in kwargs) {\n            if (kwargs.hasOwnProperty(key)) {\n                if (key === 'keys') {\n                    this._setKeys(kwargs[key]);\n                    continue;\n                }\n                this[key] = kwargs[key];\n            }\n        }\n    }\n\n    /** *\n     * Set this.keys object by iterating the keys array received from REST API\n     * @param {Array} keys  An array of keys object containing either PRODUCTION or/and SANDBOX key information\n     * @private\n     */\n    _setKeys(keys) {\n        for (const keyObj of keys) {\n            if (keyObj.keyType === 'PRODUCTION') {\n                this.productionKeys.set(keyObj.keyManager, keyObj);\n            } else {\n                this.sandboxKeys.set(keyObj.keyManager, keyObj);\n            }\n        }\n    }\n\n    /** *\n     * Set this.tokens object by iterating the keys array received from REST API\n     * @param {Array} keys  An array of keys object containing either PRODUCTION or/and SANDBOX key information\n     * @private\n     */\n    _setTokens(keys) {\n        for (const keyObj of keys) {\n            if (keyObj.keyType === 'PRODUCTION') {\n                this.productionTokens.set(keyObj.keyManager, keyObj.token);\n            } else {\n                this.sandboxTokens.set(keyObj.keyManager, keyObj.token);\n            }\n        }\n    }\n\n    /** *\n     * Get keys of the current instance of an application\n     * @param  {string} keyType Key type either `Production` or `SandBox`\n     * @returns {promise} Set the fetched CS/CK into current instance and return keys array as Promise object\n     */\n    getKeys(keyType) {\n        return this.client.then((client) => client.apis['Application Keys']\n            .get_applications__applicationId__oauth_keys({ applicationId: this.applicationId }))\n            .then((keysResponse) => {\n                const keys = keysResponse.obj.list;\n                this._setKeys(keys);\n                this._setTokens(keys);\n                if (keyType === 'PRODUCTION'){\n                    return this.productionKeys;\n                } else {\n                    return this.sandboxKeys;\n                }         \n            });\n    }\n\n    /** *\n     * Generate token for this application instance\n     * @param {string} type token type\n     * @param {string} validityPeriod token validityPeriod\n     * @param {string} selectedScopes token scopes\n     * @returns {promise} Set the generated token into current\n     * instance and return tokenObject received as Promise object\n     */\n    generateToken(selectedTab, type, validityPeriod, selectedScopes) {\n        const promiseToken = this.getKeys()\n            .then(() => this.client)\n            .then((client) => {\n                let keys;\n                if (type === 'PRODUCTION') {\n                    keys = this.productionKeys.get(selectedTab); \n                } else {\n                    keys = this.sandboxKeys.get(selectedTab); \n                }\n                const keyMappingId = keys.keyMappingId;\n                let accessToken;\n                if (type === 'PRODUCTION') {\n                    accessToken = this.productionTokens.get(selectedTab); \n                } else {\n                    accessToken = this.sandboxTokens.get(selectedTab); \n                }\n                const requestContent = {\n                    consumerSecret: keys.consumerSecret,\n                    validityPeriod,\n                    revokeToken: accessToken.accessToken,\n                    scopes: selectedScopes,\n                    additionalProperties: keys.additionalProperties,\n                };\n                const payload = { applicationId: this.id, keyMappingId: keyMappingId, body: requestContent };\n                return client.apis['Application Tokens']\n                    .post_applications__applicationId__oauth_keys__keyMappingId__generate_token(payload);\n            });\n        return promiseToken.then((tokenResponse) => {\n            const token = tokenResponse.obj;\n            if (type === 'PRODUCTION') {\n                this.productionTokens.set(selectedTab, token);\n            } else {\n                this.sandboxTokens.set(selectedTab, token);\n            }\n            return token;\n        });\n    }\n\n    /** *\n     * Generate Consumer Secret and Consumer Key for this application instance\n     * @param {string} keyType Key type either `Production` or `SandBox`\n     * @param {string[]} supportedGrantTypes Grant types supported\n     * @param  {string} callbackUrl callback url\n     * @param  {string} tokenType Token type either `OAUTH` or `JWT`\n     * @param {string} additionalProperties additional properties that needed for application.\n     * @returns {promise} Set the generated token into current instance and return tokenObject\n     * received as Promise object\n     */\n    generateKeys(keyType, supportedGrantTypes, callbackUrl, additionalProperties, keyManager) {\n        const promisedKeys = this.client.then((client) => {\n            const requestContent = {\n                keyType, /* TODO: need to support dynamic key types ~tmkb */\n                grantTypesToBeSupported: supportedGrantTypes,\n                callbackUrl,\n                additionalProperties,\n                keyManager,\n                validityTime: 3600,\n                scopes: ['default'],\n            };\n            const payload = { applicationId: this.id, body: requestContent };\n            return client.apis['Application Keys'].post_applications__applicationId__generate_keys(payload);\n        });\n        return promisedKeys.then((keysResponse) => {\n            if (keyType === 'PRODUCTION') {\n                this.productionKeys.set(keyManager, keysResponse.obj);\n                return this.productionKeys.get(keyManager);\n            } else {\n                this.sandboxKeys.set(keyManager, keysResponse.obj);\n                return this.sandboxKeys.get(keyManager);\n            }\n        });\n    }\n\n    /** *\n     * Cleanup Consumer Secret and Consumer Key for this application instance\n     * @param {string} keyType Key type either `Production` or `SandBox`\n     * @returns {promise} Set the generated token into current instance and return tokenObject\n     * received as Promise object\n     */\n    cleanUpKeys(keyType, keyManager, keyMappingId) {\n        const requestContent = {\n            keyType, \n            keyMappingId,\n            keyManager,\n        };\n        const payload = { applicationId: this.id, keyMappingId, body: requestContent };\n        return this.client.then((client) => client.apis['Application Keys']\n            .post_applications__applicationId__oauth_keys__keyMappingId__clean_up(payload))\n            .then((response) => {\n                if (keyType === 'PRODUCTION') {\n                    this.productionKeys = new Map();\n                } else {\n                    this.sandboxKeys = new Map();\n                }\n                return response.ok;\n            });\n    }\n\n    /** *\n     * Generate Consumer Secret and Consumer Key for this application instance\n     * @param  {string} tokenType Token Type either `OAUTH` or `JWT`\n     * @param  {string} keyType Key type either `Production` or `SandBox`\n     * @param {string[]} supportedGrantTypes Grant types supported\n     * @param  {string} callbackUrl callback url\n     * @param  {String} consumerKey Consumer key of application\n     * @param  {String} consumerSecret Consumer secret of application\n     * @param  {String} additionalProperties Additional properties for the oauth application\n     * @returns {promise} Update the callbackURL and/or supportedGrantTypes\n     */\n    updateKeys(tokenType, keyType, supportedGrantTypes, callbackUrl, consumerKey, consumerSecret, additionalProperties, keyManager, keyMappingId) {\n        const promisedPut = this.client.then((client) => {\n            const requestContent = {\n                keyManager,\n                keyMappingId,\n                consumerKey,\n                consumerSecret,\n                supportedGrantTypes,\n                callbackUrl,\n                keyType,\n                tokenType,\n                additionalProperties\n            };\n            const payload = { applicationId: this.id, keyMappingId, body: requestContent };\n            return client.apis['Application Keys'].put_applications__applicationId__oauth_keys__keyMappingId_(payload);\n        });\n        return promisedPut.then((keysResponse) => {\n            if (keyType === 'PRODUCTION') {\n                this.productionKeys.set(keyManager, keysResponse.obj);\n                return this.productionKeys.get(keyManager);\n            } else {\n                this.sandboxKeys.set(keyManager, keysResponse.obj);\n                return this.sandboxKeys.get(keyManager);\n            }\n        });\n    }\n\n    /**\n     * Regenerate Consumer Secret for this application instance\n     * @param {String} consumerKey Consumer key of application\n     * @param {string} keyType Key type either `Production` or `SandBox`\n     * @returns {promise} Update the consumerSecret\n     */\n    regenerateSecret(consumerKey, keyType, keyMappingId, keyManager) {\n        const requestContent = {\n            keyManager,\n            keyMappingId,\n            consumerKey,\n            keyType,\n        };\n        const promisedPost = this.client.then((client) => {\n            const payload = { applicationId: this.id, keyMappingId, body: requestContent };\n            return client.apis['Application Keys']\n                .post_applications__applicationId__oauth_keys__keyMappingId__regenerate_secret(payload);\n        });\n        return promisedPost.then((secretResponse) => {\n            const secret = secretResponse.obj;\n            if (keyType === 'PRODUCTION') {\n                this.productionKeys.set(keyManager, secretResponse.obj);\n            } else {\n                this.sandboxKeys.set(keyManager, secretResponse.obj);\n            }\n            return secret;\n        });\n    }\n\n    /**\n     * Provide Consumer Key and Secret of Existing OAuth Apps\n     *\n     * @param keyType           key type, either PRODUCTION or SANDBOX\n     * @param consumerKey       consumer key of the OAuth app\n     * @param consumerSecret    consumer secret of the OAuth app\n     * @returns {*}\n     */\n    provideKeys(keyType, consumerKey, consumerSecret, keyManager) {\n        const promisedKeys = this.client.then((client) => {\n            const requestContent = { consumerKey, consumerSecret, keyType, keyManager};\n            const payload = { applicationId: this.id, body: requestContent };\n            return client.apis['Application Keys'].post_applications__applicationId__map_keys(payload);\n        });\n        return promisedKeys.then((keysResponse) => {\n            if (keyType === 'PRODUCTION') {\n                this.productionKeys.set(keyManager, keysResponse.obj);\n                return this.productionKeys.get(keyManager);\n            } else {\n                this.sandboxKeys.set(keyManager, keysResponse.obj);\n                return this.sandboxKeys.get(keyManager);\n            }\n        });\n    }\n\n    static get(id) {\n        const apiClient = new APIClientFactory().getAPIClient(Utils.getEnvironment());\n        const promisedGet = apiClient.client.then((client) => {\n            return client.apis.Applications.get_applications__applicationId_(\n                { applicationId: id },\n                this._requestMetaData(),\n            );\n        });\n        return promisedGet.then((response) => {\n            const appJson = response.obj;\n            return new Application(appJson.name, appJson.description, appJson.throttlingTier, appJson);\n        });\n    }\n\n    static all(limit = 3, offset = null, sortOrder = 'asc', sortBy = 'name', query = '') {\n        const apiClient = new APIClientFactory().getAPIClient(Utils.getEnvironment());\n        const promisedAll = apiClient.client.then((client) => {\n            return client.apis.Applications.get_applications({\n                limit, offset, sortOrder, sortBy, query,\n            }, this._requestMetaData());\n        });\n        return promisedAll.then((response) => response.obj);\n    }\n\n    static deleteApp(id) {\n        const apiClient = new APIClientFactory().getAPIClient(Utils.getEnvironment());\n        const promisedDelete = apiClient.client.then((client) => {\n            return client.apis.Applications.delete_applications__applicationId_(\n                { applicationId: id },\n                this._requestMetaData(),\n            );\n        });\n        return promisedDelete.then((response) => response.ok);\n    }\n}\n\nApplication.KEY_TYPES = {\n    PRODUCTION: 'PRODUCTION',\n    SANDBOX: 'SANDBOX',\n};\n\nApplication.TOKEN_TYPES = {\n    JWT: { key: 'JWT', displayName: 'Self-contained (JWT)' },\n    OAUTH: { key: 'OAUTH', displayName: 'Reference (Opaque)' },\n};\n","import React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport {\n    Grid, FormControl, FormControlLabel, RadioGroup, Radio, Typography,\n} from '@material-ui/core';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { withStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\n\nconst styles = (theme) => ({\n    centerItems: {\n        margin: 'auto',\n    },\n    tryoutHeading: {\n        marginTop: theme.spacing(1),\n        fontWeight: 400,\n    },\n    menuItem: {\n        color: theme.palette.getContrastText(theme.palette.background.paper),\n    },\n});\n\nconst SelectAppPanel = (props) => {\n    let {\n        selectedApplication, selectedKeyType,\n    } = props;\n\n    const {\n        subscriptions, handleChanges, classes,\n    } = props;\n\n    /**\n     * This method is used to handle the updating of key generation\n     * request object.\n     * @param {*} event event fired\n     */\n    const handleSelectPanelChange = (event) => {\n        const { target } = event;\n        const { name, value } = target;\n        switch (name) {\n            case 'selectedApplication':\n                selectedApplication = value;\n                break;\n            case 'selectedKeyType':\n                selectedKeyType = value;\n                break;\n            default:\n                break;\n        }\n        handleChanges(event);\n    };\n    return (\n        <>\n            <Grid x={12} md={6} className={classes.centerItems}>\n                <TextField\n                    fullWidth\n                    id='selected-application'\n                    select\n                    label={(\n                        <FormattedMessage\n                            defaultMessage='Applications'\n                            id='Apis.Details.ApiConsole.SelectAppPanel.applications'\n                        />\n                    )}\n                    value={selectedApplication}\n                    name='selectedApplication'\n                    onChange={handleSelectPanelChange}\n                    SelectProps={subscriptions}\n                    helperText={(\n                        <FormattedMessage\n                            defaultMessage='Subscribed applications'\n                            id='Apis.Details.ApiConsole.SelectAppPanel.select.subscribed.application'\n                        />\n                    )}\n                    margin='normal'\n                    variant='outlined'\n                >\n                    {subscriptions.map((sub) => (\n                        <MenuItem\n                            value={sub.applicationInfo.applicationId}\n                            key={sub.applicationInfo.applicationId}\n                            className={classes.menuItem}\n                        >\n                            {sub.applicationInfo.name}\n                        </MenuItem>\n                    ))}\n                </TextField>\n            </Grid>\n            <Grid x={12} md={6} className={classes.centerItems}>\n                <Typography variant='h6' component='h4' color='textSecondary' className={classes.tryoutHeading}>\n                    <FormattedMessage\n                        id='Apis.Details.ApiConsole.SelectAppPanel.select.key.type.heading'\n                        defaultMessage='Key Type'\n                    />\n                </Typography>\n                <FormControl component='fieldKeyType'>\n                    <RadioGroup\n                        name='selectedKeyType'\n                        value={selectedKeyType}\n                        onChange={handleSelectPanelChange}\n                        row\n                    >\n                        {(subscriptions !== null && (subscriptions.find((sub) => sub.applicationId\n                                === selectedApplication).status === 'UNBLOCKED'\n                                || subscriptions.find((sub) => sub.applicationId\n                                === selectedApplication).status === 'TIER_UPDATE_PENDING'))\n                                && (\n                                    <FormControlLabel\n                                        value='PRODUCTION'\n                                        control={<Radio />}\n                                        label={(\n                                            <FormattedMessage\n                                                id='Apis.Details.ApiConsole.SelectAppPanel.production.radio'\n                                                defaultMessage='Production'\n                                            />\n                                        )}\n                                    />\n                                )}\n                        <FormControlLabel\n                            value='SANDBOX'\n                            control={<Radio />}\n                            label={(\n                                <FormattedMessage\n                                    id='Apis.Details.ApiConsole.SelectAppPanel.sandbox.radio'\n                                    defaultMessage='Sandbox'\n                                />\n                            )}\n                        />\n                    </RadioGroup>\n                </FormControl>\n            </Grid>\n        </>\n    );\n};\n\nexport default withStyles(styles)(SelectAppPanel);\n","/*\n * Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, {\n    useEffect, useState,\n} from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport PropTypes from 'prop-types';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport {\n    Radio, RadioGroup, FormControlLabel, FormControl, CircularProgress, Tooltip,\n} from '@material-ui/core';\nimport HelpOutline from '@material-ui/icons/HelpOutline';\nimport IconButton from '@material-ui/core/IconButton';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport Icon from '@material-ui/core/Icon';\nimport AuthManager from 'AppData/AuthManager';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Button from '@material-ui/core/Button';\nimport Box from '@material-ui/core/Box';\nimport WarningIcon from '@material-ui/icons/Warning';\nimport Progress from '../../../Shared/Progress';\nimport Api from '../../../../data/api';\nimport Application from '../../../../data/Application';\nimport SelectAppPanel from './SelectAppPanel';\n\n/**\n * @inheritdoc\n * @param {*} theme theme\n */\nconst styles = makeStyles((theme) => ({\n    centerItems: {\n        margin: 'auto',\n    },\n    tokenType: {\n        margin: 'auto',\n        display: 'flex',\n        '& .MuiButton-contained.Mui-disabled span.MuiButton-label': {\n            color: '#6d6d6d',\n        },\n    },\n    paper: {\n        margin: theme.spacing(1),\n        padding: theme.spacing(1),\n    },\n    grid: {\n        marginTop: theme.spacing(4),\n        marginBottom: theme.spacing(4),\n        paddingRight: theme.spacing(2),\n        justifyContent: 'center',\n    },\n    tryoutHeading: {\n        fontWeight: 400,\n    },\n    genKeyButton: {\n        width: theme.spacing(20),\n        height: theme.spacing(5),\n        marginTop: theme.spacing(2.5),\n        marginLeft: theme.spacing(2),\n        '&:disabled': {\n            cursor: 'not-allowed',\n            background: theme.palette.grey[50],\n        },\n    },\n    gatewayEnvironment: {\n        marginTop: theme.spacing(4),\n    },\n    categoryHeading: {\n        marginBottom: theme.spacing(2),\n        marginLeft: theme.spacing(-5),\n    },\n    tooltip: {\n        marginLeft: theme.spacing(1),\n    },\n    menuItem: {\n        color: theme.palette.getContrastText(theme.palette.background.paper),\n    },\n    warningIcon: {\n        color: '#ff9a00',\n        fontSize: 25,\n        marginRight: 10,\n    },\n}));\n\n/**\n * TryOut component\n *\n * @class TryOutController\n * @extends {Component}\n */\nfunction TryOutController(props) {\n    const {\n        securitySchemeType, selectedEnvironment, environments, containerMngEnvironments, labels,\n        productionAccessToken, sandboxAccessToken, selectedKeyType, setKeys, setSelectedKeyType,\n        setSelectedKeyManager,\n        setSelectedEnvironment, setProductionAccessToken, setSandboxAccessToken, scopes,\n        setSecurityScheme, setUsername, setPassword, username, password, updateSwagger,\n        setProductionApiKey, setSandboxApiKey, productionApiKey, sandboxApiKey, environmentObject, setURLs, api,\n    } = props;\n    let { selectedKeyManager } = props;\n    selectedKeyManager = selectedKeyManager || 'Resident Key Manager';\n\n    const classes = styles();\n    const [showToken, setShowToken] = useState(false);\n    const [isUpdating, setIsUpdating] = useState(false);\n    const [notFound, setNotFound] = useState(false);\n    const [subscriptions, setSubscriptions] = useState([]);\n    const [selectedApplication, setSelectedApplication] = useState([]);\n    const [keyManagers, setKeyManagers] = useState([]);\n    const [selectedKMObject, setSelectedKMObject] = useState(null);\n    const [ksGenerated, setKSGenerated] = useState(false);\n    const apiID = api.id;\n    const restApi = new Api();\n\n    useEffect(() => {\n        let subscriptionsList;\n        let newSelectedApplication;\n        let keys;\n        let selectedKeyTypes = 'PRODUCTION';\n        let accessToken;\n        if (api.lifeCycleStatus && api.lifeCycleStatus.toLowerCase() !== 'prototyped') {\n            const promiseSubscriptions = restApi.getSubscriptions(apiID);\n            promiseSubscriptions.then((subscriptionsResponse) => {\n                if (subscriptionsResponse !== null) {\n                    subscriptionsList = subscriptionsResponse.obj.list.filter((item) => item.status === 'UNBLOCKED'\n                        || item.status === 'PROD_ONLY_BLOCKED' || item.status === 'TIER_UPDATE_PENDING');\n\n                    if (subscriptionsList && subscriptionsList.length > 0) {\n                        newSelectedApplication = subscriptionsList[0].applicationId;\n                        Application.get(newSelectedApplication)\n                            .then((application) => {\n                                return application.getKeys();\n                            })\n                            .then((appKeys) => {\n                                if (appKeys.get(selectedKeyManager)\n                                    && appKeys.get(selectedKeyManager).keyType === 'SANDBOX') {\n                                    selectedKeyTypes = 'SANDBOX';\n                                    ({ accessToken } = appKeys.get(selectedKeyManager).token);\n                                } else if (appKeys.get(selectedKeyManager)\n                                    && appKeys.get(selectedKeyManager).keyType === 'PRODUCTION') {\n                                    selectedKeyTypes = 'PRODUCTION';\n                                    ({ accessToken } = appKeys.get(selectedKeyManager).token);\n                                }\n                                setSelectedApplication(newSelectedApplication);\n                                setSubscriptions(subscriptionsList);\n                                setKeys(appKeys);\n                                setSelectedEnvironment(selectedEnvironment, false);\n                                setSelectedKeyType(selectedKeyTypes, false);\n                                if (selectedKeyType === 'PRODUCTION') {\n                                    setProductionAccessToken(accessToken);\n                                } else {\n                                    setSandboxAccessToken(accessToken);\n                                }\n                            });\n                    } else {\n                        setSelectedApplication(newSelectedApplication);\n                        setSubscriptions(subscriptionsList);\n                        setKeys(keys);\n                        setSelectedEnvironment(selectedEnvironment, false);\n                        if (selectedKeyType === 'PRODUCTION') {\n                            setProductionAccessToken(accessToken);\n                        } else {\n                            setSandboxAccessToken(accessToken);\n                        }\n                        setSelectedKeyType(selectedKeyType, false);\n                    }\n                } else {\n                    setSelectedApplication(newSelectedApplication);\n                    setSubscriptions(subscriptionsList);\n                    setKeys(keys);\n                    setSelectedEnvironment(selectedEnvironment, false);\n                    if (selectedKeyType === 'PRODUCTION') {\n                        setProductionAccessToken(accessToken);\n                    } else {\n                        setSandboxAccessToken(accessToken);\n                    }\n                    setSelectedKeyType(selectedKeyType, false);\n                }\n            }).catch((error) => {\n                if (process.env.NODE_ENV !== 'production') {\n                    console.error(error);\n                }\n                const { status } = error;\n                if (status === 404) {\n                    setNotFound(true);\n                }\n            });\n            const promisedKeyManagers = restApi.getKeyManagers();\n            promisedKeyManagers\n                .then((response) => {\n                    const responseKeyManagerList = [];\n                    response.body.list.map((item) => responseKeyManagerList.push(item));\n                    setKeyManagers(responseKeyManagerList);\n                    const filteredKMs = (responseKeyManagerList.filter((km) => km.name === selectedKeyManager));\n                    if (filteredKMs && filteredKMs.length > 0) {\n                        setSelectedKMObject(filteredKMs[0]);\n                    }\n                })\n                .catch((error) => {\n                    if (process.env.NODE_ENV !== 'production') {\n                        console.log(error);\n                    }\n                    const { status } = error;\n                    if (status === 404) {\n                        setNotFound(true);\n                    }\n                });\n        }\n    }, []);\n\n\n    /**\n     * Generate access token\n     * */\n    function generateAccessToken() {\n        if (api.lifeCycleStatus && api.lifeCycleStatus.toLowerCase() !== 'prototyped') {\n            setIsUpdating(true);\n            const applicationPromise = Application.get(selectedApplication);\n            applicationPromise\n                .then((application) => application.generateToken(\n                    selectedKeyManager,\n                    selectedKeyType,\n                    3600,\n                    scopes,\n                ))\n                .then((response) => {\n                    console.log('token generated successfully ' + response);\n                    setShowToken(false);\n                    if (selectedKeyType === 'PRODUCTION') {\n                        setProductionAccessToken(response.accessToken);\n                    } else {\n                        setSandboxAccessToken(response.accessToken);\n                    }\n                    setIsUpdating(false);\n                })\n                .catch((error) => {\n                    console.error(error);\n                    const { status } = error;\n                    if (status === 404) {\n                        setNotFound(true);\n                    }\n                    setIsUpdating(false);\n                });\n        }\n    }\n\n    /**\n     * Generate api key\n     * */\n    function generateApiKey() {\n        if (api.lifeCycleStatus && api.lifeCycleStatus.toLowerCase() !== 'prototyped') {\n            setIsUpdating(true);\n            const promisedKey = restApi.generateApiKey(selectedApplication, selectedKeyType, -1);\n            promisedKey\n                .then((response) => {\n                    console.log('Non empty response received', response);\n                    setShowToken(false);\n                    if (selectedKeyType === 'PRODUCTION') {\n                        setProductionApiKey(response.body.apikey);\n                    } else {\n                        setSandboxApiKey(response.body.apikey);\n                    }\n                    setIsUpdating(false);\n                })\n                .catch((error) => {\n                    console.log(error);\n                    const { status } = error;\n                    if (status === 404) {\n                        setNotFound(true);\n                    }\n                    setIsUpdating(false);\n                });\n        }\n    }\n\n    /**\n     *\n     * Handle onClick of shown access token\n     * @memberof TryOutController\n     */\n    function handleClickShowToken() {\n        setShowToken(!showToken);\n    }\n\n    /**\n     * Load the selected application information\n     * @memberof TryOutController\n     */\n    function updateApplication() {\n        if (api.lifeCycleStatus && api.lifeCycleStatus.toLowerCase() !== 'prototyped') {\n            let accessToken;\n            let keyType;\n            if (subscriptions !== null && subscriptions.length !== 0 && selectedApplication.length !== 0) {\n                if (subscriptions.find((sub) => sub.applicationId\n                    === selectedApplication).status === 'PROD_ONLY_BLOCKED') {\n                    setSelectedKeyType(selectedKeyType, false);\n                    keyType = 'SANDBOX';\n                } else {\n                    keyType = selectedKeyType;\n                }\n            }\n            Application.get(selectedApplication)\n                .then((application) => {\n                    return application.getKeys(keyType || 'PRODUCTION');\n                })\n                .then((appKeys) => {\n                    const selectedKeys = appKeys.get(selectedKeyManager);\n                    if (selectedKeys && selectedKeys.keyType === selectedKeyType) {\n                        ({ accessToken } = selectedKeys.token);\n                    }\n                    if (selectedKeys && selectedKeys.keyType === 'PRODUCTION') {\n                        setProductionAccessToken(accessToken);\n                    } else if (selectedKeys && selectedKeys.keyType === 'SANDBOX') {\n                        setSandboxAccessToken(accessToken);\n                    }\n                    if (selectedKeys && selectedKeys.consumerKey && selectedKeys.consumerKey !== '') {\n                        setKSGenerated(true);\n                    } else {\n                        setKSGenerated(false);\n                    }\n                    setKeys(appKeys);\n                });\n        }\n    }\n\n    useEffect(() => {\n        updateApplication();\n    }, [selectedApplication, selectedKeyType, selectedEnvironment, securitySchemeType]);\n\n    /**\n     * Handle onChange of inputs\n     * @param {*} event event\n     * @memberof TryOutController\n     */\n    function handleChanges(event) {\n        const { target } = event;\n        const { name, value } = target;\n        switch (name) {\n            case 'selectedEnvironment':\n                setSelectedEnvironment(value, true);\n                if (api.type !== 'GRAPHQL') {\n                    updateSwagger(value);\n                }\n                if (environmentObject) {\n                    const urls = environmentObject.find((elm) => value === elm.environmentName).URLs;\n                    setURLs(urls);\n                }\n                break;\n            case 'selectedApplication':\n                setProductionAccessToken('');\n                setSandboxAccessToken('');\n                setProductionApiKey('');\n                setSandboxApiKey('');\n                setSelectedApplication(value);\n                break;\n            case 'selectedKeyManager':\n                setSelectedKeyManager(value, true, selectedApplication);\n                break;\n            case 'selectedKeyType':\n                if (!productionAccessToken || !sandboxAccessToken) {\n                    setSelectedKeyType(value, true, selectedApplication);\n                } else {\n                    setSelectedKeyType(value, false, selectedApplication);\n                }\n                break;\n            case 'securityScheme':\n                setSecurityScheme(value);\n                break;\n            case 'username':\n                setUsername(value);\n                break;\n            case 'password':\n                setPassword(value);\n                break;\n            case 'accessToken':\n                if (securitySchemeType === 'API-KEY' && selectedKeyType === 'PRODUCTION') {\n                    setProductionApiKey(value);\n                } else if (securitySchemeType === 'API-KEY' && selectedKeyType === 'SANDBOX') {\n                    setSandboxApiKey(value);\n                } else if (selectedKeyType === 'PRODUCTION') {\n                    setProductionAccessToken(value);\n                } else {\n                    setSandboxAccessToken(value);\n                }\n                break;\n            default:\n        }\n    }\n\n    const user = AuthManager.getUser();\n    if (api == null) {\n        return <Progress />;\n    }\n    if (notFound) {\n        return 'API Not found !';\n    }\n    let isApiKeyEnabled = false;\n    let isBasicAuthEnabled = false;\n    let isOAuthEnabled = false;\n    let isTestKeyEnabled = false;\n    let authorizationHeader = api.authorizationHeader ? api.authorizationHeader : 'Authorization';\n    let prefix = 'Bearer';\n    if (api && api.securityScheme) {\n        isApiKeyEnabled = api.securityScheme.includes('api_key');\n        isBasicAuthEnabled = api.securityScheme.includes('basic_auth');\n        isOAuthEnabled = api.securityScheme.includes('oauth2');\n        isTestKeyEnabled = api.securityScheme.includes('test_auth');\n        if (isApiKeyEnabled && securitySchemeType === 'API-KEY') {\n            authorizationHeader = 'apikey';\n            prefix = '';\n        }\n        if (isTestKeyEnabled && securitySchemeType === 'TEST') {\n            authorizationHeader = 'testKey';\n            prefix = '';\n        }\n    }\n    const isPrototypedAPI = api.lifeCycleStatus && api.lifeCycleStatus.toLowerCase() === 'prototyped';\n    const isPublished = api.lifeCycleStatus.toLowerCase() === 'published';\n    const showSecurityType = isPublished || (isPrototypedAPI && api.enableStore === true);\n\n    let tokenValue = '';\n    if (securitySchemeType === 'API-KEY') {\n        tokenValue = selectedKeyType === 'PRODUCTION' ? productionApiKey : sandboxApiKey;\n    } else {\n        tokenValue = selectedKeyType === 'PRODUCTION' ? productionAccessToken : sandboxAccessToken;\n    }\n\n    // The rendering logic of container management menus items are done here\n    // because when grouping container management type and clusters with <> and </>\n    // the handleChange event is not triggered. Hence handle rendering logic here.\n    const containerMngEnvMenuItems = [];\n    if (containerMngEnvironments) {\n        containerMngEnvironments.filter((envType) => envType.clusterDetails.length > 0).forEach((envType) => {\n            // container management system type\n            containerMngEnvMenuItems.push(\n                <MenuItem value='' disabled className={classes.menuItem}>\n                    <em>\n                        {envType.deploymentEnvironmentName}\n                    </em>\n                </MenuItem>,\n            );\n            // clusters of the container management system type\n            envType.clusterDetails.forEach((cluster) => {\n                containerMngEnvMenuItems.push(\n                    <MenuItem\n                        value={cluster.clusterName}\n                        key={cluster.clusterName}\n                        className={classes.menuItem}\n                    >\n                        {cluster.clusterDisplayName}\n                    </MenuItem>,\n                );\n            });\n        });\n    }\n\n    const authHeader = `${authorizationHeader}: ${prefix}`;\n\n    return (\n        <>\n            <Grid x={12} md={6} className={classes.centerItems}>\n                <Box>\n                    {securitySchemeType !== 'TEST' && (\n                        <>\n                            <Typography variant='h5' component='h3' color='textPrimary' className={classes.categoryHeading}>\n                                <FormattedMessage\n                                    id='api.console.security.heading'\n                                    defaultMessage='Security'\n                                />\n                            </Typography>\n                            <Box mb={1}>\n                                <Typography variant='body1'>\n                                    <Box display='flex' alignItems='center'>\n                                        {(selectedKMObject && selectedKMObject.enabled) && (\n                                            <FormattedMessage\n                                                id='Apis.Details.ApiConsole.TryOutController.default.km.msg.one'\n                                                defaultMessage='The Resident Key Manager is selected for try out console.'\n                                            />\n                                        )}\n                                        {(selectedKMObject && !selectedKMObject.enabled) && (\n                                            <>\n                                                <WarningIcon className={classes.warningIcon} />\n                                                <div>\n                                                    <FormattedMessage\n                                                        id='Apis.Details.ApiConsole.TryOutController.default.km.msg.two'\n                                                        defaultMessage={'Try it console is only accessible via the default key manager.'\n                                        + 'But the default key manager is disabled at the moment.'}\n                                                    />\n                                                </div>\n                                            </>\n                                        )}\n                                        {(selectedKMObject && selectedKMObject.length === 0) && (\n                                            <FormattedMessage\n                                                id='Apis.Details.ApiConsole.TryOutController.default.km.msg.three'\n                                                defaultMessage={'Try it console is only accessible via the default key manager.'\n                                        + 'Something went wrong while selecting the default Key manager.'}\n                                            />\n                                        )}\n                                    </Box>\n                                </Typography>\n                            </Box>\n                            <Typography variant='h6' component='h4' color='textSecondary' className={classes.tryoutHeading}>\n                                <FormattedMessage\n                                    id='api.console.security.type.heading'\n                                    defaultMessage='Security Type'\n                                />\n                            </Typography>\n                        </>\n                    )}\n                    {((isApiKeyEnabled || isBasicAuthEnabled || isOAuthEnabled) && showSecurityType) && (\n                        <FormControl component='fieldset'>\n                            <RadioGroup\n                                name='securityScheme'\n                                value={securitySchemeType}\n                                onChange={handleChanges}\n                                row\n                            >\n                                <FormControlLabel\n                                    value='OAUTH'\n                                    disabled={!isOAuthEnabled}\n                                    control={<Radio />}\n                                    label={(\n                                        <FormattedMessage\n                                            id='Apis.Details.ApiConsole.security.scheme.oauth'\n                                            defaultMessage='OAuth'\n                                        />\n                                    )}\n                                />\n                                <FormControlLabel\n                                    value='API-KEY'\n                                    disabled={!isApiKeyEnabled}\n                                    control={<Radio />}\n                                    label={(\n                                        <FormattedMessage\n                                            id='Apis.Details.ApiConsole.security.scheme.apikey'\n                                            defaultMessage='API Key'\n                                        />\n                                    )}\n                                />\n                                <FormControlLabel\n                                    value='BASIC'\n                                    disabled={!isBasicAuthEnabled}\n                                    control={<Radio />}\n                                    label={(\n                                        <FormattedMessage\n                                            id='Apis.Details.ApiConsole.security.scheme.basic'\n                                            defaultMessage='Basic'\n                                        />\n                                    )}\n                                />\n                            </RadioGroup>\n                        </FormControl>\n                    )}\n                </Box>\n            </Grid>\n            {!isPrototypedAPI\n                && (\n                    <Grid xs={12} md={12} item>\n                        <Box display='block'>\n                            {user && subscriptions\n                                && subscriptions.length > 0 && securitySchemeType !== 'BASIC' && securitySchemeType !== 'TEST'\n                                && (\n                                    <SelectAppPanel\n                                        subscriptions={subscriptions}\n                                        handleChanges={handleChanges}\n                                        selectedApplication={selectedApplication}\n                                        selectedKeyManager={selectedKeyManager}\n                                        selectedKeyType={selectedKeyType}\n                                        keyManagers={keyManagers}\n                                    />\n                                )}\n                            {subscriptions && subscriptions.length === 0 && securitySchemeType !== 'TEST' ? (\n                                <Grid x={8} md={6} className={classes.tokenType} item>\n                                    <Box mb={1} alignItems='center'>\n                                        <Typography variant='body1'>\n                                            <Box display='flex'>\n                                                <WarningIcon className={classes.warningIcon} />\n                                                <div>\n                                                    <FormattedMessage\n                                                        id='Apis.Details.ApiConsole.ApiConsole.subscribe.to.application'\n                                                        defaultMessage='Please subscribe to an application'\n                                                    />\n                                                </div>\n                                            </Box>\n                                        </Typography>\n                                    </Box>\n                                </Grid>\n                            ) : (\n                                (!ksGenerated && securitySchemeType === 'OAUTH') && (\n                                    <Grid x={8} md={6} className={classes.tokenType} item>\n                                        <Box mb={1} alignItems='center'>\n                                            <Typography variant='body1'>\n                                                <Box display='flex'>\n                                                    <WarningIcon className={classes.warningIcon} />\n                                                    <div>\n                                                        <FormattedMessage\n                                                            id='Apis.Details.ApiConsole.ApiConsole.keys.not.generated'\n                                                            defaultMessage={'Consumer key and secret not generated for the selected'\n                                                            + ' application on the {what} environment. '}\n                                                            values={{ what: selectedKeyType }}\n                                                        />\n                                                    </div>\n                                                </Box>\n                                            </Typography>\n                                        </Box>\n                                    </Grid>\n                                )\n                            )}\n                            <Box display='block' justifyContent='center'>\n                                <Grid x={8} md={6} className={classes.tokenType} item>\n                                    {securitySchemeType === 'BASIC' && (\n                                        <>\n                                            <Grid x={12} md={12} item>\n                                                <TextField\n                                                    margin='normal'\n                                                    variant='outlined'\n                                                    label={(\n                                                        <FormattedMessage\n                                                            id='username'\n                                                            defaultMessage='Username'\n                                                        />\n                                                    )}\n                                                    name='username'\n                                                    onChange={handleChanges}\n                                                    value={username || ''}\n                                                    fullWidth\n                                                />\n                                                <TextField\n                                                    margin='normal'\n                                                    variant='outlined'\n                                                    label={(\n                                                        <FormattedMessage\n                                                            id='password'\n                                                            defaultMessage='Password'\n                                                        />\n                                                    )}\n                                                    name='password'\n                                                    onChange={handleChanges}\n                                                    value={password || ''}\n                                                    fullWidth\n                                                    InputProps={{\n                                                        autoComplete: 'new-password',\n                                                    }}\n                                                />\n                                            </Grid>\n                                        </>\n                                    )}\n\n                                    {securitySchemeType !== 'BASIC' && securitySchemeType !== 'TEST' && (\n                                        <TextField\n                                            fullWidth\n                                            margin='normal'\n                                            variant='outlined'\n                                            label={(\n                                                <FormattedMessage\n                                                    id='access.token'\n                                                    defaultMessage='Access Token'\n                                                />\n                                            )}\n                                            name='accessToken'\n                                            onChange={handleChanges}\n                                            type={showToken ? 'text' : 'password'}\n                                            value={tokenValue || ''}\n                                            helperText={(\n                                                <FormattedMessage\n                                                    id='enter.access.token'\n                                                    defaultMessage='Enter access Token'\n                                                />\n                                            )}\n                                            id='accessTokenInput'\n                                            InputProps={{\n                                                autoComplete: 'new-password',\n                                                endAdornment: (\n                                                    <InputAdornment position='end'>\n                                                        <IconButton\n                                                            edge='end'\n                                                            aria-label='Toggle token visibility'\n                                                            onClick={handleClickShowToken}\n                                                        >\n                                                            {showToken ? <Icon>visibility_off</Icon>\n                                                                : <Icon>visibility</Icon>}\n                                                        </IconButton>\n                                                    </InputAdornment>\n                                                ),\n                                                startAdornment: (\n                                                    <InputAdornment\n                                                        style={{\n                                                            minWidth: (authHeader.length * 7),\n                                                        }}\n                                                        position='start'\n                                                    >\n                                                        {`${authorizationHeader}: ${prefix}`}\n                                                    </InputAdornment>\n                                                ),\n                                            }}\n                                        />\n                                    )}\n                                    {securitySchemeType !== 'BASIC' && securitySchemeType !== 'TEST' && (\n                                        <>\n                                            <Button\n                                                onClick={securitySchemeType === 'API-KEY' ? generateApiKey\n                                                    : generateAccessToken}\n                                                variant='contained'\n                                                className={classes.genKeyButton}\n                                                disabled={!user || (subscriptions && subscriptions.length === 0)\n                                                    || (!ksGenerated && securitySchemeType === 'OAUTH')}\n                                            >\n                                                {isUpdating && (\n                                                    <CircularProgress size={15} />\n                                                )}\n                                                <FormattedMessage\n                                                    id='Apis.Details.ApiCOnsole.generate.test.key'\n                                                    defaultMessage='GET TEST KEY '\n                                                />\n                                            </Button>\n                                            <Tooltip\n                                                placement='right'\n                                                interactive\n                                                title={(\n                                                    <FormattedMessage\n                                                        id='Apis.Details.TryOutConsole.access.token.tooltip'\n                                                        defaultMessage={\n                                                            'You can use your existing Access Token or '\n                                                            + 'you can generate a new Test Key.'\n                                                        }\n                                                    />\n                                                )}\n                                            >\n                                                <Box m={1} mt={2}>\n                                                    <IconButton\n                                                        aria-label='Use existing Access Token or generate a new Test Key'\n                                                    >\n                                                        <HelpOutline />\n                                                    </IconButton>\n                                                </Box>\n                                            </Tooltip>\n                                        </>\n                                    )}\n                                </Grid>\n                            </Box>\n                            <Box display='flex' justifyContent='center' className={classes.gatewayEnvironment}>\n                                <Grid xs={12} md={6} item>\n                                    {((environments && environments.length > 0) || (containerMngEnvMenuItems.length > 0)\n                                        || (labels && labels.length > 0))\n                                        && (\n                                            <>\n                                                <Typography\n                                                    variant='h5'\n                                                    component='h3'\n                                                    color='textPrimary'\n                                                    className={classes.categoryHeading}\n                                                >\n                                                    <FormattedMessage\n                                                        id='api.console.gateway.heading'\n                                                        defaultMessage='Gateway'\n                                                    />\n                                                </Typography>\n                                                <TextField\n                                                    fullWidth\n                                                    select\n                                                    label={(\n                                                        <FormattedMessage\n                                                            defaultMessage='Environment'\n                                                            id='Apis.Details.ApiConsole.environment'\n                                                        />\n                                                    )}\n                                                    value={selectedEnvironment || (environments && environments[0])}\n                                                    name='selectedEnvironment'\n                                                    onChange={handleChanges}\n                                                    helperText={(\n                                                        <FormattedMessage\n                                                            defaultMessage='Please select an environment'\n                                                            id='Apis.Details.ApiConsole.SelectAppPanel.environment'\n                                                        />\n                                                    )}\n                                                    margin='normal'\n                                                    variant='outlined'\n                                                >\n                                                    {environments && environments.length > 0 && (\n                                                        <MenuItem value='' disabled className={classes.menuItem}>\n                                                            <em>\n                                                                <FormattedMessage\n                                                                    id='api.gateways'\n                                                                    defaultMessage='API Gateways'\n                                                                />\n                                                            </em>\n                                                        </MenuItem>\n                                                    )}\n                                                    {environments && (\n                                                        environments.map((env) => (\n                                                            <MenuItem\n                                                                value={env}\n                                                                key={env}\n                                                                className={classes.menuItem}\n                                                            >\n                                                                {env}\n                                                            </MenuItem>\n                                                        )))}\n                                                    {containerMngEnvMenuItems}\n                                                    {labels && labels.length > 0 && (\n                                                        <MenuItem value='' disabled>\n                                                            <em>\n                                                                <FormattedMessage\n                                                                    id='gateways'\n                                                                    defaultMessage='Gateways'\n                                                                    className={classes.menuItem}\n                                                                />\n                                                            </em>\n                                                        </MenuItem>\n                                                    )}\n                                                    {labels && (\n                                                        labels.map((label) => (\n                                                            <MenuItem\n                                                                value={label}\n                                                                key={label}\n                                                                className={classes.menuItem}\n                                                            >\n                                                                {label}\n                                                            </MenuItem>\n                                                        ))\n                                                    )}\n                                                </TextField>\n                                            </>\n                                        )}\n                                </Grid>\n                            </Box>\n                        </Box>\n                    </Grid>\n                )}\n            {(isPrototypedAPI && !api.enableStore)\n                    && (\n                        <Box display='flex' justifyContent='center' className={classes.gatewayEnvironment}>\n                            <Grid xs={12} md={6} item>\n                                {((environments && environments.length > 0) || (containerMngEnvMenuItems.length > 0)\n                                        || (labels && labels.length > 0))\n                                        && (\n                                            <>\n                                                <Typography\n                                                    variant='h5'\n                                                    component='h3'\n                                                    color='textPrimary'\n                                                    className={classes.categoryHeading}\n                                                >\n                                                    <FormattedMessage\n                                                        id='api.console.gateway.heading'\n                                                        defaultMessage='Gateway'\n                                                    />\n                                                </Typography>\n                                                <TextField\n                                                    fullWidth\n                                                    select\n                                                    label={(\n                                                        <FormattedMessage\n                                                            defaultMessage='Environment'\n                                                            id='Apis.Details.ApiConsole.environment'\n                                                        />\n                                                    )}\n                                                    value={selectedEnvironment || (environments && environments[0])}\n                                                    name='selectedEnvironment'\n                                                    onChange={handleChanges}\n                                                    helperText={(\n                                                        <FormattedMessage\n                                                            defaultMessage='Please select an environment'\n                                                            id='Apis.Details.ApiConsole.SelectAppPanel.environment'\n                                                        />\n                                                    )}\n                                                    margin='normal'\n                                                    variant='outlined'\n                                                >\n                                                    {environments && environments.length > 0 && (\n                                                        <MenuItem value='' disabled className={classes.menuItem}>\n                                                            <em>\n                                                                <FormattedMessage\n                                                                    id='api.gateways'\n                                                                    defaultMessage='API Gateways'\n                                                                />\n                                                            </em>\n                                                        </MenuItem>\n                                                    )}\n                                                    {environments && (\n                                                        environments.map((env) => (\n                                                            <MenuItem\n                                                                value={env}\n                                                                key={env}\n                                                                className={classes.menuItem}\n                                                            >\n                                                                {env}\n                                                            </MenuItem>\n                                                        )))}\n                                                    {containerMngEnvMenuItems}\n                                                    {labels && labels.length > 0 && (\n                                                        <MenuItem value='' disabled>\n                                                            <em>\n                                                                <FormattedMessage\n                                                                    id='gateways'\n                                                                    defaultMessage='Gateways'\n                                                                    className={classes.menuItem}\n                                                                />\n                                                            </em>\n                                                        </MenuItem>\n                                                    )}\n                                                    {labels && (\n                                                        labels.map((label) => (\n                                                            <MenuItem\n                                                                value={label}\n                                                                key={label}\n                                                                className={classes.menuItem}\n                                                            >\n                                                                {label}\n                                                            </MenuItem>\n                                                        ))\n                                                    )}\n                                                </TextField>\n                                            </>\n                                        )}\n                            </Grid>\n                        </Box>\n                    )}\n        </>\n    );\n}\n\nTryOutController.propTypes = {\n    classes: PropTypes.shape({\n        paper: PropTypes.string.isRequired,\n        grid: PropTypes.string.isRequired,\n        inputAdornmentStart: PropTypes.string.isRequired,\n        centerItems: PropTypes.string.isRequired,\n    }).isRequired,\n};\n\nexport default withStyles(makeStyles)(TryOutController);\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport 'swagger-ui-react/swagger-ui.css';\nimport SwaggerUILib from 'swagger-ui-react';\n\nconst disableAuthorizeAndInfoPlugin = function () {\n    return {\n        wrapComponents: {\n            info: () => () => null,\n            authorizeBtn: () => () => null,\n        },\n    };\n};\n/**\n *\n * @class SwaggerUI\n * @extends {Component}\n */\nconst SwaggerUI = (props) => {\n    const {\n        spec, accessTokenProvider, authorizationHeader, api, securitySchemeType,\n    } = props;\n\n    const componentProps = {\n        spec,\n        validatorUrl: null,\n        defaultModelsExpandDepth: -1,\n        docExpansion: 'list',\n        requestInterceptor: (req) => {\n            const { url } = req;\n            const { context } = api;\n            const patternToCheck = `${context}/*`;\n            if (authorizationHeader === 'apikey') {\n                req.headers[authorizationHeader] = accessTokenProvider();\n            } else if (securitySchemeType === 'BASIC') {\n                req.headers[authorizationHeader] = 'Basic ' + accessTokenProvider();\n            } else if (securitySchemeType === 'TEST') {\n                req.headers[authorizationHeader] = accessTokenProvider();\n            } else {\n                req.headers[authorizationHeader] = 'Bearer ' + accessTokenProvider();\n            }\n            if (url.endsWith(patternToCheck)) {\n                req.url = url.substring(0, url.length - 2);\n            } else if (url.includes(patternToCheck + '?')) { // Check for query parameters.\n                const splitTokens = url.split('/*?');\n                req.url = splitTokens.length > 1 ? splitTokens[0] + '?' + splitTokens[1] : splitTokens[0];\n            }\n            return req;\n        },\n        defaultModelExpandDepth: -1,\n        plugins: [disableAuthorizeAndInfoPlugin],\n    };\n\n    const [render, setRender] = useState();\n    const [layoutRender, setlayoutRender] = useState();\n\n    useEffect(() => {\n        if (!layoutRender) return;\n        const len = document.querySelectorAll('.opblock .authorization__btn');\n        let i = 0;\n        for (; i < len.length; i++) {\n            len[i].remove();\n        }\n        document.querySelector('.schemes select').setAttribute('id', 'schemes');\n        document.getElementById('unlocked').parentNode.parentNode.remove();\n        setlayoutRender(false);\n    }, [layoutRender]);\n\n    useEffect(() => {\n        setlayoutRender(true);\n    }, [render]);\n\n    return (\n        <>\n            <SwaggerUILib {...componentProps} />\n            {setRender}\n        </>\n    );\n};\n\nSwaggerUI.propTypes = {\n    accessTokenProvider: PropTypes.func.isRequired,\n    authorizationHeader: PropTypes.string.isRequired,\n    api: PropTypes.shape({\n        context: PropTypes.string.isRequired,\n    }).isRequired,\n    spec: PropTypes.string.isRequired,\n};\nexport default SwaggerUI;\n","/*\n * Copyright (c), WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport 'AppComponents/Shared/testconsole.css';\nimport { withStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Progress from 'AppComponents/Shared/Progress';\nimport Typography from '@material-ui/core/Typography';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { FormattedMessage } from 'react-intl';\nimport Paper from '@material-ui/core/Paper';\nimport 'swagger-ui-react/swagger-ui.css';\nimport API from 'AppData/api';\nimport AuthManager, { isRestricted } from 'AppData/AuthManager';\nimport { TryOutController, SwaggerUI } from 'developer_portal';\nimport Button from '@material-ui/core/Button';\nimport InlineMessage from 'AppComponents/Shared/InlineMessage';\nimport ApiContext, { withAPI } from 'AppComponents/Apis/Details/components/ApiContext';\nimport uuid from 'uuid/v4';\nimport Alert from 'AppComponents/Shared/Alert';\n\n/**\n * @inheritdoc\n * @param {*} theme theme\n */\nconst styles = (theme) => ({\n    centerItems: {\n        margin: 'auto',\n    },\n    categoryHeading: {\n        marginBottom: theme.spacing(2),\n        marginLeft: theme.spacing(-5),\n    },\n    contentWrapper: {\n        maxWidth: theme.custom.contentAreaWidth,\n    },\n    buttonIcon: {\n        marginRight: 10,\n    },\n    paper: {\n        margin: theme.spacing(1),\n        padding: theme.spacing(1),\n        '& span, & h5, & label, & td, & li, & div, & input': {\n            color: theme.palette.getContrastText(theme.palette.background.paper),\n        },\n    },\n    grid: {\n        marginTop: theme.spacing(4),\n        marginBottom: theme.spacing(4),\n        paddingRight: theme.spacing(2),\n        justifyContent: 'center',\n    },\n    userNotificationPaper: {\n        padding: theme.spacing(2),\n    },\n    titleSub: {\n        marginLeft: theme.spacing(2),\n        paddingTop: theme.spacing(2),\n        paddingBottom: theme.spacing(2),\n        color: theme.palette.getContrastText(theme.palette.background.default),\n    },\n    tryoutHeading: {\n        fontWeight: 400,\n    },\n    noDataMessage: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        color: '#888888',\n        width: '100%',\n    },\n    swaggerUIPaper: {\n        showTryout: true,\n        swaggerUIBackground: '#efefef',\n        documentBackground: '#efefef',\n        tokenTextBoxBackground: '#efefef',\n    },\n    stateButton: {\n        marginRight: theme.spacing(),\n    },\n    head: {\n        fontWeight: 200,\n        marginBottom: 20,\n    },\n    emptyBox: {\n        marginTop: theme.spacing(2),\n    },\n    content: {\n        display: 'flex',\n        flex: 1,\n        flexDirection: 'column',\n        marginLeft: theme.custom.leftMenuWidth,\n        paddingBottom: theme.spacing(3),\n    },\n    actions: {\n        padding: '20px 0',\n        '& button': {\n            marginLeft: 0,\n        },\n    },\n    helpText: {\n        paddingTop: theme.spacing(1),\n    },\n    messageBox: {\n        marginTop: 20,\n    },\n});\n\n/**\n * @class TestConsole\n * @extends {React.Component}\n */\nclass TestConsole extends React.Component {\n    /**\n     *\n     * @param {*} props the props parameters\n     */\n    constructor(props) {\n        super(props);\n        this.state = {\n            securitySchemeType: 'TEST',\n            username: '',\n            password: '',\n            scopes: [],\n            selectedKeyType: 'PRODUCTION',\n            keys: [],\n            loading: false,\n        };\n        this.accessTokenProvider = this.accessTokenProvider.bind(this);\n        this.updateSwagger = this.updateSwagger.bind(this);\n        this.setSecurityScheme = this.setSecurityScheme.bind(this);\n        this.setSelectedEnvironment = this.setSelectedEnvironment.bind(this);\n        this.setProductionAccessToken = this.setProductionAccessToken.bind(this);\n        this.setSandboxAccessToken = this.setSandboxAccessToken.bind(this);\n        this.setUsername = this.setUsername.bind(this);\n        this.setPassword = this.setPassword.bind(this);\n        this.setSelectedKeyType = this.setSelectedKeyType.bind(this);\n        this.setKeys = this.setKeys.bind(this);\n        this.updateAccessToken = this.updateAccessToken.bind(this);\n        this.WORKFLOW_STATUS = {\n            CREATED: 'CREATED',\n            APPROVED: 'APPROVED',\n        };\n    }\n\n    /**\n     * @memberof ApiConsole\n     */\n    componentDidMount() {\n        const { apiObj } = this.props;\n        let apiData;\n        let environments;\n        let labels;\n        let selectedEnvironment;\n        let swagger;\n        let productionAccessToken;\n        let sandboxAccessToken;\n        let apiID;\n        let urls;\n        let basePath;\n        const user = AuthManager.getUser();\n        const promisedAPI = API.getAPIById(apiObj.id);\n        promisedAPI\n            .then((apiResponse) => {\n                apiID = apiResponse.obj.id;\n                apiData = apiResponse.obj;\n                if (apiData.gatewayEnvironments) {\n                    environments = apiData.gatewayEnvironments.map((endpoint) => { return endpoint; });\n                }\n                const securtySchemas = apiData.securityScheme;\n                securtySchemas.push('test_auth');\n                securtySchemas.shift();\n                if (apiData.endpointURLs) {\n                    environments = apiData.endpointURLs.map((endpoint) => { return endpoint.environmentName; });\n                }\n                if (apiData.labels) {\n                    labels = apiData.labels.map((label) => { return label.name; });\n                }\n                if (apiData.scopes) {\n                    const scopeList = apiData.scopes.map((scope) => { return scope.name; });\n                    this.setState({ scopes: scopeList });\n                }\n                let swaggerPromise = null;\n\n                if (environments && environments.length > 0) {\n                    [selectedEnvironment] = environments;\n                    swaggerPromise = API.getSwaggerByAPIIdAndEnvironment(apiResponse.obj.id, selectedEnvironment);\n                } else if (labels && labels.length > 0) {\n                    [selectedEnvironment] = labels;\n                    swaggerPromise = API.getSwaggerByAPIIdAndLabel(apiResponse.obj.id, selectedEnvironment);\n                } else {\n                    swaggerPromise = API.getSwaggerByAPIId(apiResponse.obj.id);\n                }\n                const settingPromise = API.getSettings();\n                return Promise.all([swaggerPromise, settingPromise]);\n            })\n            .then((values) => {\n                const swaggerResponse = values[0];\n                const settingsNew = values[1];\n\n                swagger = swaggerResponse.obj;\n\n                if (settingsNew.environment) {\n                    urls = settingsNew.environment.map((environment) => {\n                        const env = {\n                            name: environment.name,\n                            endpoints: {\n                                http: environment.endpoints.http + apiData.context + '/' + apiData.version,\n                                https: environment.endpoints.https + apiData.context + '/' + apiData.version,\n                            },\n                        };\n                        return env;\n                    });\n                    if (swagger.openapi) {\n                        basePath = apiData.context + '/' + apiData.version;\n                    }\n                }\n                if (user != null) {\n                    this.setState({\n                        settings: urls,\n                        host: urls[0].endpoints.https.split('//')[1],\n                        baseUrl: basePath,\n                        api: apiData,\n                        swagger,\n                        environments,\n                        labels,\n                        productionAccessToken,\n                        sandboxAccessToken,\n                    });\n                    return API.getSubscriptions(apiID);\n                } else {\n                    return null;\n                }\n            })\n            .catch((error) => {\n                if (process.env.NODE_ENV !== 'production') {\n                    Alert.error(error);\n                    console.error(error);\n                }\n                this.setState({ serverError: `${error.statusCode} - ${error.response.body.description}` });\n            });\n    }\n\n    /**\n     * Set SecurityScheme value\n     * @memberof ApiConsole\n     */\n    setSecurityScheme(securityScheme) {\n        this.setState({ securitySchemeType: securityScheme });\n    }\n\n    /**\n     * Set Selected Environment\n     * @memberof ApiConsole\n     */\n    setSelectedEnvironment(selectedEnvironment) {\n        this.setState({ selectedEnvironment });\n    }\n\n    /**\n     * Set Production Access Token\n     * @memberof ApiConsole\n     */\n    setProductionAccessToken(productionAccessToken) {\n        this.setState({ productionAccessToken });\n    }\n\n    /**\n     * Set Sandbox Access Token\n     * @memberof ApiConsole\n     */\n    setSandboxAccessToken(sandboxAccessToken) {\n        this.setState({ sandboxAccessToken });\n    }\n\n    /**\n     * Set Username\n     * @memberof ApiConsole\n     */\n    setUsername(username) {\n        this.setState({ username });\n    }\n\n    /**\n     * Set Password\n     * @memberof ApiConsole\n     */\n    setPassword(password) {\n        this.setState({ password });\n    }\n\n    /**\n     * Set Password\n     * @memberof ApiConsole\n     */\n    setSelectedKeyType(selectedKeyType, isUpdateToken) {\n        if (isUpdateToken) {\n            this.setState({ selectedKeyType }, this.updateAccessToken);\n        } else {\n            this.setState({ selectedKeyType });\n        }\n    }\n\n    /**\n     * Set Password\n     * @memberof ApiConsole\n     */\n    setKeys(keys) {\n        this.setState({ keys });\n    }\n\n\n    handleClick = () => {\n        const { apiObj } = this.props;\n        this.setState({ loading: true });\n        const action = 'Deploy as a Prototype';\n        const promisedUpdate = API.updateLcState(apiObj.id, action);\n        const promisedApi = API.get(apiObj.id);\n        Promise.all([promisedUpdate, promisedApi]).then((values) => {\n            const getResponse = values[1];\n            const apiData = getResponse;\n            apiData.enableStore = false;\n            const token = uuid();\n            apiData.testKey = token;\n            this.context.updateAPI({ enableStore: false, testKey: token });\n        }).catch((error) => {\n            const { response } = error;\n            if (response.body) {\n                const { description } = response.body;\n                Alert.error(description);\n            }\n            console.error(error);\n            this.setState({ loading: false });\n        });\n    };\n\n    /**\n     * Load the swagger file of the selected environemnt\n     * @memberof ApiConsole\n     */\n    updateSwagger() {\n        const {\n            selectedEnvironment, api, environments,\n        } = this.state;\n        let promiseSwagger;\n\n        if (selectedEnvironment) {\n            if (environments.includes(selectedEnvironment)) {\n                promiseSwagger = API.getSwaggerByAPIIdAndEnvironment(api.id, selectedEnvironment);\n            } else {\n                promiseSwagger = API.getSwaggerByAPIIdAndLabel(api.id, selectedEnvironment);\n            }\n        } else {\n            promiseSwagger = API.getSwaggerByAPIId(api.id);\n        }\n        promiseSwagger.then((swaggerResponse) => {\n            this.setState({ swagger: swaggerResponse.obj });\n        });\n    }\n\n    /**\n     *\n     * Provids the access token to the Swagger UI\n     * @returns {*} access token\n     * @memberof ApiConsole\n     */\n    accessTokenProvider() {\n        const {\n            securitySchemeType, username, password, productionAccessToken, sandboxAccessToken, selectedKeyType,\n        } = this.state;\n        if (securitySchemeType === 'BASIC') {\n            const credentials = username + ':' + password;\n            return btoa(credentials);\n        }\n        if (securitySchemeType === 'TEST') {\n            return this.state.api.testKey;\n        }\n        if (selectedKeyType === 'PRODUCTION') {\n            return productionAccessToken;\n        } else {\n            return sandboxAccessToken;\n        }\n    }\n\n\n    /**\n     * Load the access token for given key type\n     * @memberof TryOutController\n     */\n    updateAccessToken() {\n        const {\n            keys, selectedKeyType,\n        } = this.state;\n        let accessToken;\n        if (keys.get(selectedKeyType)) {\n            ({ accessToken } = keys.get(selectedKeyType).token);\n        }\n        if (selectedKeyType === 'PRODUCTION') {\n            this.setProductionAccessToken(accessToken);\n        } else {\n            this.setSandboxAccessToken(accessToken);\n        }\n    }\n\n    /**\n     * @inheritdoc\n     * @memberof ApiConsole\n     */\n    render() {\n        const { classes } = this.props;\n        const {\n            swagger, api, securitySchemeType, selectedEnvironment, productionAccessToken, sandboxAccessToken,\n            labels, environments, scopes, username, password, selectedKeyType, serverError, settings, host, baseUrl,\n            loading,\n        } = this.state;\n        if (serverError) {\n            return (\n                <Typography variant='h4' className={classes.titleSub}>\n                    {serverError}\n                </Typography>\n            );\n        }\n        if (!api || !swagger || !settings) {\n            return <Progress />;\n        }\n        let authorizationHeader = api.authorizationHeader ? api.authorizationHeader : 'Authorization';\n        authorizationHeader = 'testkey';\n        if (!swagger.openapi) {\n            swagger.host = host;\n            swagger.basePath = baseUrl;\n            swagger.schemes = ['https'];\n        } else {\n            let servers = [];\n            let httpUrls = [];\n            let httpsUrls = [];\n            for (let i = 0; i < settings.length; i++) {\n                if (environments.includes(settings[i].name)) {\n                    httpUrls = httpUrls.concat({ url: settings[i].endpoints.http });\n                    httpsUrls = httpsUrls.concat({ url: settings[i].endpoints.https });\n                }\n            }\n            const httpMissingValue = httpUrls.some((httpUrl) => httpUrl.url.includes('null'));\n            const httpsMissingValue = httpsUrls.some((httpUrl) => httpUrl.url.includes('null'));\n            if (api.transport.includes('http') && api.transport.includes('https')\n                && !httpMissingValue && !httpsMissingValue) {\n                servers = httpUrls.concat(httpsUrls);\n            } else if (api.transport.includes('https') && !httpsMissingValue) {\n                servers = httpsUrls;\n            } else if (api.transport.includes('http') && !httpMissingValue) {\n                servers = httpUrls;\n            }\n            swagger.servers = servers;\n        }\n        const isProtoTyped = api.lifeCycleStatus.toLowerCase() === 'prototyped';\n        const enableForTest = api.enableStore === false;\n        return (\n            <>\n                {!isProtoTyped && (\n                    <>\n                        <Typography variant='h4' component='h2' align='left' className={classes.mainTitle}>\n                            <FormattedMessage\n                                id='Apis.Details.index.Tryout'\n                                defaultMessage='Test Console'\n                            />\n                        </Typography>\n                        <Typography variant='caption' component='div' className={classes.helpText}>\n                            <FormattedMessage\n                                id='APis.Details.tryout.help.main'\n                                defaultMessage='Test APIs while in the Development stage.'\n                            />\n                        </Typography>\n                        <div className={classes.messageBox}>\n                            <InlineMessage type='info' height={140}>\n                                <div className={classes.contentWrapper}>\n                                    <Typography variant='h5' component='h3' className={classes.head}>\n                                        <FormattedMessage\n                                            id='Apis.Details.tryout.title'\n                                            defaultMessage='Start Testing'\n                                        />\n                                    </Typography>\n                                    <Typography component='p'>\n                                        <FormattedMessage\n                                            id='Apis.Details.tryout.initialize.test'\n                                            defaultMessage='Initialize the API for the testing phase'\n                                        />\n                                    </Typography>\n                                    <div className={classes.actions}>\n                                        <Button\n                                            variant='contained'\n                                            color='primary'\n                                            className={classes.button}\n                                            disabled={isRestricted([\n                                                'apim:api_create',\n                                                'apim:api_publish',\n                                            ], api)\n                                            || loading}\n                                            onClick={this.handleClick}\n                                        >\n\n                                            {loading ? (<CircularProgress size={32} />) : (\n                                                <FormattedMessage\n                                                    id='Apis.Details.index.initTest'\n                                                    defaultMessage='Initialize test'\n                                                />\n                                            )}\n                                        </Button>\n                                    </div>\n                                </div>\n                            </InlineMessage>\n                        </div>\n                    </>\n                )}\n                {(isProtoTyped && enableForTest) && (\n                    <Paper className={classes.paper}>\n                        <Typography variant='h4' component='h2' className={classes.titleSub}>\n                            <FormattedMessage id='Apis.Details.index.Tryout' defaultMessage='Test Console' />\n                        </Typography>\n                        <TryOutController\n                            setSecurityScheme={this.setSecurityScheme}\n                            securitySchemeType={securitySchemeType}\n                            setSelectedEnvironment={this.setSelectedEnvironment}\n                            selectedEnvironment={selectedEnvironment}\n                            productionAccessToken={productionAccessToken}\n                            setProductionAccessToken={this.setProductionAccessToken}\n                            sandboxAccessToken={sandboxAccessToken}\n                            setSandboxAccessToken={this.setSandboxAccessToken}\n                            swagger={swagger}\n                            labels={labels}\n                            environments={environments}\n                            scopes={scopes}\n                            setUsername={this.setUsername}\n                            setPassword={this.setPassword}\n                            username={username}\n                            password={password}\n                            setSelectedKeyType={this.setSelectedKeyType}\n                            selectedKeyType={selectedKeyType}\n                            updateSwagger={this.updateSwagger}\n                            setKeys={this.setKeys}\n                            api={this.state.api}\n                        />\n                        <SwaggerUI\n                            api={this.state.api}\n                            accessTokenProvider={this.accessTokenProvider}\n                            spec={swagger}\n                            authorizationHeader={authorizationHeader}\n                            securitySchemeType={securitySchemeType}\n                        />\n                    </Paper>\n                )}\n                {(isProtoTyped && !enableForTest) && (\n                    <>\n                        <Typography variant='h4' component='h2' align='left' className={classes.mainTitle}>\n                            <FormattedMessage\n                                id='Apis.Details.index.Tryout'\n                                defaultMessage='Test Console'\n                            />\n                        </Typography>\n                        <Typography variant='caption' component='div' className={classes.helpText}>\n                            <FormattedMessage\n                                id='APis.Details.tryout.help.main'\n                                defaultMessage='Test APIs while in the Development stage.'\n                            />\n                        </Typography>\n                        <div className={classes.messageBox}>\n                            <InlineMessage type='info' height={120}>\n                                <div className={classes.contentWrapper}>\n                                    <Typography variant='h5' component='h3' className={classes.head}>\n                                        <FormattedMessage\n                                            id='Apis.Details.TestConsole.TestConsole.info.title'\n                                            defaultMessage='API should be in prototype(testing) state.'\n                                        />\n                                    </Typography>\n                                    <Typography component='p'>\n                                        <FormattedMessage\n                                            id='Apis.Details.TestConsole.TestConsole.info.message'\n                                            defaultMessage={\n                                                `API should be in prototype(testing) state. \n                                            Please demote to created state and click\n                                            on the initialize Test button \n                                            in the Test Console left menu item.`\n                                            }\n                                        />\n                                    </Typography>\n                                </div>\n                            </InlineMessage>\n                        </div>\n                    </>\n\n                )}\n            </>\n        );\n    }\n}\nTestConsole.propTypes = {\n    classes: PropTypes.shape({\n        paper: PropTypes.string.isRequired,\n        titleSub: PropTypes.string.isRequired,\n        grid: PropTypes.string.isRequired,\n        userNotificationPaper: PropTypes.string.isRequired,\n        buttonIcon: PropTypes.string.isRequired,\n        lcState: PropTypes.shape({}).isRequired,\n        theme: PropTypes.shape({}).isRequired,\n        intl: PropTypes.shape({\n            formatMessage: PropTypes.func,\n        }).isRequired,\n    }).isRequired,\n};\n\nTestConsole.contextType = ApiContext;\n\nexport default withAPI(withStyles(styles)(TestConsole));\n","/*\n * Copyright (c) 2017, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { isRestricted } from 'AppData/AuthManager';\nimport LifeCycleIcon from '@material-ui/icons/Autorenew';\nimport EndpointIcon from '@material-ui/icons/GamesOutlined';\nimport PersonPinCircleOutlinedIcon from '@material-ui/icons/PersonPinCircleOutlined';\nimport ResourcesIcon from '@material-ui/icons/VerticalSplit';\nimport ScopesIcon from '@material-ui/icons/VpnKey';\nimport DocumentsIcon from '@material-ui/icons/LibraryBooks';\nimport BusinessIcon from '@material-ui/icons/Business';\nimport CodeIcon from '@material-ui/icons/Code';\nimport ConfigurationIcon from '@material-ui/icons/Build';\nimport RuntimeConfigurationIcon from '@material-ui/icons/Settings';\nimport PropertiesIcon from '@material-ui/icons/List';\nimport SubscriptionsIcon from '@material-ui/icons/RssFeed';\nimport MonetizationIcon from '@material-ui/icons/LocalAtm';\nimport StoreIcon from '@material-ui/icons/Store';\nimport DashboardIcon from '@material-ui/icons/Dashboard';\nimport { withStyles } from '@material-ui/core/styles';\nimport { injectIntl, defineMessages } from 'react-intl';\nimport {\n    Redirect, Route, Switch, Link, matchPath,\n} from 'react-router-dom';\nimport isEmpty from 'lodash/isEmpty';\nimport Utils from 'AppData/Utils';\nimport ResourceNotFound from 'AppComponents/Base/Errors/ResourceNotFound';\nimport CustomIcon from 'AppComponents/Shared/CustomIcon';\nimport LeftMenuItem from 'AppComponents/Shared/LeftMenuItem';\nimport API from 'AppData/api';\nimport APIProduct from 'AppData/APIProduct';\nimport { Progress } from 'AppComponents/Shared';\nimport Alert from 'AppComponents/Shared/Alert';\nimport { doRedirectToLogin } from 'AppComponents/Shared/RedirectToLogin';\nimport AppContext from 'AppComponents/Shared/AppContext';\nimport LastUpdatedTime from 'AppComponents/Apis/Details/components/LastUpdatedTime';\nimport Overview from './NewOverview/Overview';\nimport DesignConfigurations from './Configuration/DesignConfigurations';\nimport RuntimeConfiguration from './Configuration/RuntimeConfiguration';\nimport RuntimeConfigurationWebSocket from './Configuration/RuntimeConfigurationWebSocket';\nimport LifeCycle from './LifeCycle/LifeCycle';\nimport Documents from './Documents';\nimport Operations from './Operations/Operations';\nimport APIOperations from './Resources/APIOperations';\nimport APIProductOperations from './ProductResources/APIProductOperations';\nimport ProductResourcesEdit from './ProductResources/ProductResourcesEdit';\nimport Endpoints from './Endpoints/Endpoints';\nimport Environments from './Environments/Environments';\nimport Subscriptions from './Subscriptions/Subscriptions';\nimport Scope from './Scopes';\nimport Security from './Security';\nimport APIDefinition from './APIDefinition/APIDefinition';\nimport WSDL from './APIDefinition/WSDL';\nimport APIDetailsTopMenu from './components/APIDetailsTopMenu';\nimport BusinessInformation from './BusinessInformation/BusinessInformation';\nimport Properties from './Properties/Properties';\nimport Monetization from './Monetization';\nimport ExternalStores from './ExternalStores/ExternalStores';\nimport { APIProvider } from './components/ApiContext';\nimport CreateNewVersion from './NewVersion/NewVersion';\nimport TestConsole from './TestConsole/TestConsole';\n\nconst styles = (theme) => ({\n    LeftMenu: {\n        backgroundColor: theme.palette.background.leftMenu,\n        width: theme.custom.leftMenuWidth,\n        textAlign: 'center',\n        fontFamily: theme.typography.fontFamily,\n        position: 'absolute',\n        bottom: 0,\n        left: 0,\n        top: 0,\n        overflowY: 'auto',\n    },\n    leftLInkMain: {\n        borderRight: 'solid 1px ' + theme.palette.background.leftMenu,\n        paddingBottom: theme.spacing(1),\n        paddingTop: theme.spacing(1),\n        cursor: 'pointer',\n        backgroundColor: theme.palette.background.leftMenuActive,\n        color: theme.palette.getContrastText(theme.palette.background.leftMenuActive),\n        textDecoration: 'none',\n    },\n    detailsContent: {\n        display: 'flex',\n        flex: 1,\n    },\n    content: {\n        display: 'flex',\n        flex: 1,\n        flexDirection: 'column',\n        marginLeft: theme.custom.leftMenuWidth,\n        paddingBottom: theme.spacing(3),\n        overflow: 'auto',\n    },\n    contentInside: {\n        width: 'calc(100% - 56px)',\n        paddingLeft: theme.spacing(3),\n        paddingRight: theme.spacing(3),\n        paddingTop: theme.spacing(2),\n    },\n});\n\n/**\n * Base component for API specific Details page,\n * What this component do is, Handle all the request coming under `/apis/:api_uuid` path, If the :api_uuid or\n *  the later part of the URL is not valid , This will return a `PageNotFound` component.\n * For valid API request , This component will fetch the API and pass the API response data to below components in `api`\n * prop name.\n * Note: If you want to add new route or new page under APIs detail, add the desired path to `PATHS` constant mapping.\n * This mapping will be used in parent component to directly return `PageNotFound` component, If user making a request\n * to an undefined path segment.\n */\nclass Details extends Component {\n    /**\n     * Return boolean , whether provided URL has a valid Route under the Details page.\n     * Check https://github.com/ReactTraining/react-router/blob/master/packages/react-router-dom/modules/NavLink.js\n     * code for the usage of public matchPath method\n     * @static\n     * @param {String} pathname location URL of an incoming request\n     * @memberof Details\n     * @returns {Boolean} whether URL matched with defined sub paths or not\n     */\n    static isValidURL(pathname) {\n        for (const [subPathKey, subPath] of Object.entries(Details.subPaths)) {\n            // Skip the BASE path , because it will match for any `/apis/:apiUUID/*` values\n            if ((subPathKey !== 'BASE') && (subPathKey !== 'BASE_PRODUCT')) {\n                const matched = matchPath(pathname, subPath);\n                if (matched) {\n                    return matched;\n                }\n            }\n        }\n        return false;\n    }\n\n    /**\n     * Creates an instance of Details.\n     * @param {any} props @inheritDoc\n     * @memberof Details\n     */\n    constructor(props) {\n        super(props);\n        const isAPIProduct = null;\n        this.state = {\n            api: null,\n            apiNotFound: false,\n            // updateAPI: this.updateAPI,\n            isAPIProduct,\n            imageUpdate: 0,\n        };\n        this.setAPI = this.setAPI.bind(this);\n        this.setAPIProduct = this.setAPIProduct.bind(this);\n        this.updateAPI = this.updateAPI.bind(this);\n        this.setImageUpdate = this.setImageUpdate.bind(this);\n    }\n\n    /**\n     * @inheritDoc\n     * @memberof Details\n     */\n    componentDidMount() {\n        const {\n            location: { pathname },\n            isAPIProduct,\n        } = this.props;\n        // Load API data iff request page is valid\n        if (Details.isValidURL(pathname)) {\n            if (isAPIProduct) {\n                this.setAPIProduct();\n            } else {\n                this.setAPI();\n            }\n            const api = new API();\n            api.getTenantsByState('active')\n                .then((response) => {\n                    const { list } = response.body;\n                    this.setState({ tenantList: list });\n                }).catch((error) => {\n                    console.error('error when getting tenants ' + error);\n                });\n        }\n    }\n\n    /**\n     *\n     *\n     * @returns\n     * @memberof Details\n     */\n    componentDidUpdate() {\n        const { api } = this.state;\n        const { match, isAPIProduct } = this.props;\n        const { apiUUID } = match.params;\n        const { apiProdUUID } = match.params;\n        if (!api || (api.id === apiUUID || api.id === apiProdUUID)) {\n            return;\n        }\n        if (isAPIProduct) {\n            this.setAPIProduct();\n        } else {\n            this.setAPI();\n        }\n    }\n\n    /**\n     *\n     * This method is a hack to update the image in the toolbar when a new image is uploaded\n     * @memberof Details\n     */\n    setImageUpdate() {\n        this.setState((previousState) => ({\n            imageUpdate: previousState.imageUpdate + 1,\n        }));\n    }\n\n    /**\n     *\n     *\n     * @memberof Details\n     */\n    setAPI(newAPI) {\n        if (newAPI) {\n            this.setState({ api: newAPI });\n        } else {\n            const { match } = this.props;\n            const { apiUUID } = match.params;\n            const promisedApi = API.get(apiUUID);\n            promisedApi\n                .then((api) => {\n                    this.setState({ api });\n                })\n                .catch((error) => {\n                    if (process.env.NODE_ENV !== 'production') {\n                        console.log(error);\n                    }\n                    const { status } = error;\n                    if (status === 404) {\n                        this.setState({ apiNotFound: true });\n                    } else if (status === 401) {\n                        doRedirectToLogin();\n                    }\n                });\n        }\n    }\n\n    /**\n     *\n     *\n     * @memberof Details\n     */\n    setAPIProduct() {\n        const { match } = this.props;\n        const { apiProdUUID } = match.params;\n        const { isAPIProduct } = this.props;\n        const promisedApi = APIProduct.get(apiProdUUID);\n        promisedApi\n            .then((api) => {\n                this.setState({ isAPIProduct });\n                this.setState({ api });\n            })\n            .catch((error) => {\n                if (process.env.NODE_ENV !== 'production') {\n                    console.log(error);\n                }\n                const { status } = error;\n                if (status === 404) {\n                    this.setState({ apiNotFound: true });\n                }\n            });\n    }\n\n    /**\n     *\n     * @returns\n     * @memberof Details\n     */\n    getLeftMenuItemForDefinitionByType(apiType) {\n        const { isAPIProduct } = this.state;\n        const { intl, match } = this.props;\n        const uuid = match.params.apiUUID || match.params.api_uuid || match.params.apiProdUUID;\n        const pathPrefix = '/' + (isAPIProduct ? 'api-products' : 'apis') + '/' + uuid + '/';\n        const apiDefinitionMenuItem = (\n            <LeftMenuItem\n                text={intl.formatMessage({\n                    id: 'Apis.Details.index.api.definition2',\n                    defaultMessage: 'API definition',\n                })}\n                route='api definition'\n                to={pathPrefix + 'api definition'}\n                Icon={<CodeIcon />}\n            />\n        );\n\n        switch (apiType) {\n            case 'GRAPHQL':\n                return (\n                    <>\n                        <LeftMenuItem\n                            text={intl.formatMessage({\n                                id: 'Apis.Details.index.schema.definition',\n                                defaultMessage: 'Schema Definition',\n                            })}\n                            route='schema definition'\n                            to={pathPrefix + 'schema definition'}\n                            Icon={<CodeIcon />}\n                        />\n                    </>\n                );\n            case 'WS':\n                return '';\n            case 'SOAP':\n                return (\n                    <>\n                        {apiDefinitionMenuItem}\n                        <LeftMenuItem\n                            text={intl.formatMessage({\n                                id: 'Apis.Details.index.wsdl.definition',\n                                defaultMessage: 'WSDL Definition',\n                            })}\n                            route='wsdl'\n                            to={pathPrefix + 'wsdl'}\n                            Icon={<CodeIcon />}\n                        />\n                    </>\n                );\n            default:\n                return (\n                    <>\n                        {apiDefinitionMenuItem}\n                    </>\n                );\n        }\n    }\n\n    getLeftMenuItemForResourcesByType(apiType) {\n        const { isAPIProduct } = this.state;\n        const { intl, match } = this.props;\n        const uuid = match.params.apiUUID || match.params.api_uuid || match.params.apiProdUUID;\n        const pathPrefix = '/' + (isAPIProduct ? 'api-products' : 'apis') + '/' + uuid + '/';\n\n        switch (apiType) {\n            case 'GRAPHQL':\n                return (\n                    <>\n                        <LeftMenuItem\n                            text={intl.formatMessage({\n                                id: 'Apis.Details.index.operations',\n                                defaultMessage: 'operations',\n                            })}\n                            to={pathPrefix + 'operations'}\n                            Icon={<ResourcesIcon />}\n                        />\n                    </>\n                );\n            case 'WS':\n                return '';\n            default:\n                return (\n                    <>\n                        <LeftMenuItem\n                            text={intl.formatMessage({\n                                id: 'Apis.Details.index.resources',\n                                defaultMessage: 'resources',\n                            })}\n                            to={pathPrefix + 'resources'}\n                            Icon={<ResourcesIcon />}\n                        />\n                    </>\n                );\n        }\n    }\n\n    /**\n     * This method is similar to ReactJS `setState` method, In this `updateAPI()` method, we accept partially updated\n     * API object or comple API object. When updating , the provided updatedAPI object will be merged with the existing\n     * API object in the state and use it as the payload in the /apis PUT operation.\n     *\n     * Partially updated API object means: {description: \"Here is my new description..\"} kind of object. It should have\n     * a key in API object and value contains the updated value of that property\n     * @param {Object} [_updatedProperties={}] Partially updated API object or complete API object\n     * (even an instance of API class is accepted here)\n     * @param {Boolean} isAPIProduct Whether the update operation should execute on an API or API Product\n     * @returns {Promise} promise object that resolve to update (/apis PUT operation) response\n     */\n    updateAPI(_updatedProperties = {}) {\n        const { api } = this.state;\n        let isAPIProduct = false;\n        if (api.apiType === 'APIProduct') {\n            isAPIProduct = true;\n        }\n        const updatedProperties = _updatedProperties instanceof API ? _updatedProperties.toJson() : _updatedProperties;\n        let promisedUpdate;\n        // TODO: Ideally, The state should hold the corresponding API object\n        // which we could call it's `update` method safely ~tmkb\n        if (!isEmpty(updatedProperties)) {\n            // newApi object has to be provided as the updatedProperties. Then api will be updated.\n            promisedUpdate = api.update(updatedProperties);\n        } else {\n            // Just like calling noArg `setState()` will just trigger a re-render without modifying the state,\n            // Calling `updateAPI()` without args wil return the API without any update.\n            // Just sync-up the api state with backend\n            promisedUpdate = API.get(api.id);\n        }\n        return promisedUpdate\n            .then((updatedAPI) => {\n                if (isAPIProduct) {\n                    Alert.info(`${updatedAPI.name} API updated successfully`);\n                    this.setState({ api: updatedAPI });\n                    return updatedAPI;\n                } else {\n                    Alert.info(`${updatedAPI.name} API updated successfully`);\n                    this.setState({ api: updatedAPI });\n                    return updatedAPI;\n                }\n            })\n            .catch((error) => {\n                // TODO: Should log and handle the error case by the original callee ~tmkb\n                console.error(error);\n                Alert.error(`Something went wrong while updating the ${api.name} API!!`);\n                // Kinda force render,Resting API object to old one\n                this.setState({ api });\n                throw error;\n            });\n    }\n\n    /**\n     * Renders Grid container layout with NavBar place static in LHS, Components which coming as children for\n     * Details page\n     * should wrap it's content with <Grid item > element\n     * @returns {Component} Render API Details page\n     */\n    render() {\n        const {\n            api, apiNotFound, isAPIProduct, imageUpdate, tenantList,\n        } = this.state;\n        const {\n            classes,\n            theme,\n            match,\n            intl,\n            location: pageLocation,\n            location: { pathname }, // nested destructuring\n        } = this.props;\n\n        const { settings: settingsContext } = this.context;\n\n        // pageLocation renaming is to prevent es-lint errors saying can't use global name location\n        if (!Details.isValidURL(pathname)) {\n            return <ResourceNotFound location={pageLocation} />;\n        }\n        const uuid = match.params.apiUUID || match.params.api_uuid || match.params.apiProdUUID;\n        const pathPrefix = '/' + (isAPIProduct ? 'api-products' : 'apis') + '/' + uuid + '/';\n        const redirectUrl = pathPrefix;\n        if (apiNotFound) {\n            const { apiUUID } = match.params;\n            const resourceNotFoundMessageText = defineMessages({\n                titleMessage: {\n                    id: 'Apis.Details.index.api.not.found.title',\n                    defaultMessage: 'API is not found in the {environmentLabel} Environment',\n                },\n                bodyMessage: {\n                    id: 'Apis.Details.index.api.not.found.body',\n                    defaultMessage: 'Cannot find the API with the given id',\n                },\n            });\n            const resourceNotFountMessage = {\n                title: intl.formatMessage(resourceNotFoundMessageText.titleMessage, {\n                    environmentLabel: `${Utils.getCurrentEnvironment().label}`,\n                }),\n                body: intl.formatMessage(resourceNotFoundMessageText.bodyMessage, { apiUUID: `${apiUUID}` }),\n            };\n            return <ResourceNotFound message={resourceNotFountMessage} />;\n        }\n\n        if (!api) {\n            return <Progress />;\n        }\n        const { leftMenuIconMainSize } = theme.custom;\n\n        return (\n            <>\n                <APIProvider\n                    value={{\n                        api,\n                        updateAPI: this.updateAPI,\n                        isAPIProduct,\n                        setAPI: this.setAPI,\n                        setImageUpdate: this.setImageUpdate,\n                        imageUpdate,\n                        tenantList,\n                    }}\n                >\n                    <div className={classes.LeftMenu}>\n                        <nav name='secondaryNavigation' aria-label='secondary navigation'>\n                            <Link to={'/' + (isAPIProduct ? 'api-products' : 'apis') + '/'} aria-label='ALL APIs'>\n                                <div className={classes.leftLInkMain}>\n                                    <CustomIcon\n                                        width={leftMenuIconMainSize}\n                                        height={leftMenuIconMainSize}\n                                        icon={isAPIProduct ? 'api-product' : 'api'}\n                                    />\n                                </div>\n                            </Link>\n                            <LeftMenuItem\n                                text={intl.formatMessage({\n                                    id: 'Apis.Details.index.overview',\n                                    defaultMessage: 'overview',\n                                })}\n                                to={pathPrefix + 'overview'}\n                                Icon={<DashboardIcon />}\n                            />\n                            <LeftMenuItem\n                                text={intl.formatMessage({\n                                    id: 'Apis.Details.index.design.configs',\n                                    defaultMessage: 'Design Configurations',\n                                })}\n                                route='configuration'\n                                to={pathPrefix + 'configuration'}\n                                Icon={<ConfigurationIcon />}\n                            />\n                            {!api.isWebSocket() && (\n                                <LeftMenuItem\n                                    text={intl.formatMessage({\n                                        id: 'Apis.Details.index.runtime.configs',\n                                        defaultMessage: 'Runtime Configurations',\n                                    })}\n                                    route='runtime-configuration'\n                                    to={pathPrefix + 'runtime-configuration'}\n                                    Icon={<RuntimeConfigurationIcon />}\n                                />\n                            )}\n                            {api.isWebSocket() && (\n                                <LeftMenuItem\n                                    text={intl.formatMessage({\n                                        id: 'Apis.Details.index.runtime.configs',\n                                        defaultMessage: 'Runtime Configurations',\n                                    })}\n                                    route='runtime-configuration'\n                                    to={pathPrefix + 'runtime-configuration-websocket'}\n                                    Icon={<RuntimeConfigurationIcon />}\n                                />\n                            )}\n                            {this.getLeftMenuItemForResourcesByType(api.type)}\n                            {!isAPIProduct && (\n                                <LeftMenuItem\n                                    text={intl.formatMessage({\n                                        id: 'Apis.Details.index.endpoints',\n                                        defaultMessage: 'endpoints',\n                                    })}\n                                    to={pathPrefix + 'endpoints'}\n                                    Icon={<EndpointIcon />}\n                                />\n                            )}\n                            <LeftMenuItem\n                                text={intl.formatMessage({\n                                    id: 'Apis.Details.index.subscriptions',\n                                    defaultMessage: 'subscriptions',\n                                })}\n                                to={pathPrefix + 'subscriptions'}\n                                Icon={<SubscriptionsIcon />}\n                            />\n                            {!isAPIProduct && !isRestricted(['apim:api_publish'], api) && (\n                                <LeftMenuItem\n                                    text={intl.formatMessage({\n                                        id: 'Apis.Details.index.lifecycle',\n                                        defaultMessage: 'lifecycle',\n                                    })}\n                                    to={pathPrefix + 'lifecycle'}\n                                    Icon={<LifeCycleIcon />}\n                                />\n                            )}\n                            {this.getLeftMenuItemForDefinitionByType(api.type)}\n                            <LeftMenuItem\n                                text={intl.formatMessage({\n                                    id: 'Apis.Details.index.environments',\n                                    defaultMessage: 'environments',\n                                })}\n                                route='environments'\n                                to={pathPrefix + 'environments'}\n                                Icon={<PersonPinCircleOutlinedIcon />}\n                            />\n                            {!api.isWebSocket() && !isAPIProduct && (\n                                <LeftMenuItem\n                                    text={intl.formatMessage({\n                                        id: 'Apis.Details.index.left.menu.scope',\n                                        defaultMessage: 'Local Scopes',\n                                    })}\n                                    to={pathPrefix + 'scopes'}\n                                    Icon={<ScopesIcon />}\n                                />\n                            )}\n                            <LeftMenuItem\n                                text={intl.formatMessage({\n                                    id: 'Apis.Details.index.business.info',\n                                    defaultMessage: 'business info',\n                                })}\n                                to={pathPrefix + 'business info'}\n                                Icon={<BusinessIcon />}\n                            />\n                            <LeftMenuItem\n                                text={intl.formatMessage({\n                                    id: 'Apis.Details.index.properties',\n                                    defaultMessage: 'properties',\n                                })}\n                                to={pathPrefix + 'properties'}\n                                Icon={<PropertiesIcon />}\n                            />\n                            <LeftMenuItem\n                                text={intl.formatMessage({\n                                    id: 'Apis.Details.index.documents',\n                                    defaultMessage: 'Documentation',\n                                })}\n                                to={pathPrefix + 'documents'}\n                                Icon={<DocumentsIcon />}\n                            />\n                            {!api.isWebSocket() && !isAPIProduct && !api.isGraphql()\n                            && !isRestricted(['apim:api_publish'], api) && api.lifeCycleStatus !== 'PUBLISHED' && (\n                                <LeftMenuItem\n                                    text={intl.formatMessage({\n                                        id: 'Apis.Details.index.Tryout',\n                                        defaultMessage: 'test console',\n                                    })}\n                                    to={pathPrefix + 'test-console'}\n                                    iconText='test'\n                                />\n                            )}\n                            {!api.isWebSocket() && !isRestricted(['apim:api_publish'], api) && (\n                                <LeftMenuItem\n                                    text={intl.formatMessage({\n                                        id: 'Apis.Details.index.monetization',\n                                        defaultMessage: 'monetization',\n                                    })}\n                                    to={pathPrefix + 'monetization'}\n                                    Icon={<MonetizationIcon />}\n                                />\n                            )}\n                            {!isAPIProduct && settingsContext.externalStoresEnabled && (\n                                <LeftMenuItem\n                                    text={intl.formatMessage({\n                                        id: 'Apis.Details.index.external-stores',\n                                        defaultMessage: 'external dev portals',\n                                    })}\n                                    to={pathPrefix + 'external-devportals'}\n                                    Icon={<StoreIcon />}\n                                />\n                            )}\n                        </nav>\n                    </div>\n                    <div className={classes.content}>\n                        <APIDetailsTopMenu api={api} isAPIProduct={isAPIProduct} imageUpdate={imageUpdate} />\n                        <div className={classes.contentInside}>\n                            <LastUpdatedTime lastUpdatedTime={api.lastUpdatedTime} />\n                            <Switch>\n                                <Redirect exact from={Details.subPaths.BASE} to={redirectUrl} />\n                                <Route\n                                    path={Details.subPaths.OVERVIEW_PRODUCT}\n                                    key={Details.subPaths.OVERVIEW_PRODUCT}\n                                    component={() => <Overview api={api} />}\n                                />\n                                <Route path={Details.subPaths.OVERVIEW} component={() => <Overview api={api} />} />\n                                <Route\n                                    path={Details.subPaths.API_DEFINITION}\n                                    component={() => <APIDefinition api={api} updateAPI={this.updateAPI} />}\n                                />\n                                <Route\n                                    path={Details.subPaths.WSDL}\n                                    component={() => <WSDL api={api} />}\n                                />\n                                <Route\n                                    path={Details.subPaths.API_DEFINITION_PRODUCT}\n                                    component={() => <APIDefinition api={api} />}\n                                />\n                                <Route\n                                    path={Details.subPaths.SCHEMA_DEFINITION}\n                                    component={() => <APIDefinition api={api} />}\n                                />\n                                <Route path={Details.subPaths.LIFE_CYCLE} component={() => <LifeCycle api={api} />} />\n                                <Route\n                                    path={Details.subPaths.CONFIGURATION}\n                                    component={() => <DesignConfigurations api={api} />}\n                                />\n                                <Route\n                                    path={Details.subPaths.RUNTIME_CONFIGURATION}\n                                    component={() => <RuntimeConfiguration api={api} />}\n                                />\n                                <Route\n                                    path={Details.subPaths.RUNTIME_CONFIGURATION_WEBSOCKET}\n                                    component={() => <RuntimeConfigurationWebSocket api={api} />}\n                                />\n                                <Route\n                                    path={Details.subPaths.CONFIGURATION_PRODUCT}\n                                    component={() => <DesignConfigurations api={api} />}\n                                />\n                                <Route\n                                    path={Details.subPaths.RUNTIME_CONFIGURATION_PRODUCT}\n                                    component={() => <RuntimeConfiguration api={api} />}\n                                />\n                                <Route path={Details.subPaths.ENDPOINTS} component={() => <Endpoints api={api} />} />\n                                <Route\n                                    path={Details.subPaths.ENVIRONMENTS}\n                                    component={() => <Environments api={api} />}\n                                />\n                                <Route\n                                    path={Details.subPaths.ENVIRONMENTS_PRODUCT}\n                                    component={() => <Environments api={api} />}\n                                />\n                                <Route\n                                    path={Details.subPaths.OPERATIONS}\n                                    component={() => <Operations api={api} updateAPI={this.updateAPI} />}\n                                />\n                                <Route\n                                    exact\n                                    path={Details.subPaths.RESOURCES_PRODUCT}\n                                    component={APIProductOperations}\n                                />\n                                <Route\n                                    path={Details.subPaths.RESOURCES_PRODUCT_EDIT}\n                                    component={ProductResourcesEdit}\n                                />\n\n                                <Route\n                                    path={Details.subPaths.RESOURCES}\n                                    key={Details.subPaths.RESOURCES}\n                                    component={APIOperations}\n                                />\n\n                                <Route path={Details.subPaths.SCOPES} component={() => <Scope api={api} />} />\n                                <Route path={Details.subPaths.DOCUMENTS} component={() => <Documents api={api} />} />\n                                <Route\n                                    path={Details.subPaths.DOCUMENTS_PRODUCT}\n                                    component={() => <Documents api={api} />}\n                                />\n                                <Route\n                                    path={Details.subPaths.SUBSCRIPTIONS}\n                                    component={() => <Subscriptions api={api} updateAPI={this.updateAPI} />}\n                                />\n                                <Route\n                                    path={Details.subPaths.SUBSCRIPTIONS_PRODUCT}\n                                    component={() => <Subscriptions api={api} updateAPI={this.updateAPI} />}\n                                />\n                                <Route path={Details.subPaths.SECURITY} component={() => <Security api={api} />} />\n                                <Route\n                                    path={Details.subPaths.BUSINESS_INFO}\n                                    component={() => <BusinessInformation api={api} />}\n                                />\n                                <Route\n                                    path={Details.subPaths.BUSINESS_INFO_PRODUCT}\n                                    component={() => <BusinessInformation api={api} />}\n                                />\n                                <Route path={Details.subPaths.PROPERTIES} component={() => <Properties api={api} />} />\n                                <Route\n                                    path={Details.subPaths.PROPERTIES_PRODUCT}\n                                    component={() => <Properties api={api} />}\n                                />\n                                <Route path={Details.subPaths.NEW_VERSION} component={() => <CreateNewVersion />} />\n                                <Route path={Details.subPaths.SUBSCRIPTIONS} component={() => <Subscriptions />} />\n                                <Route\n                                    path={Details.subPaths.MONETIZATION}\n                                    component={() => <Monetization api={api} />}\n                                />\n                                <Route\n                                    path={Details.subPaths.MONETIZATION_PRODUCT}\n                                    component={() => <Monetization api={api} />}\n                                />\n                                <Route\n                                    path={Details.subPaths.TRYOUT}\n                                    component={() => <TestConsole apiObj={api} />}\n                                />\n                                <Route path={Details.subPaths.EXTERNAL_STORES} component={ExternalStores} />\n                            </Switch>\n                        </div>\n                    </div>\n                </APIProvider>\n            </>\n        );\n    }\n}\n\nDetails.contextType = AppContext;\n// Add your path here and refer it in above <Route/> component,\n// Paths that are not defined here will be returned with Not Found error\n// key name doesn't matter here, Use an appropriate name as the key\nDetails.subPaths = {\n    BASE: '/apis/:api_uuid',\n    BASE_PRODUCT: '/api-products/:apiprod_uuid',\n    OVERVIEW: '/apis/:api_uuid/overview',\n    OVERVIEW_PRODUCT: '/api-products/:apiprod_uuid/overview',\n    API_DEFINITION: '/apis/:api_uuid/api definition',\n    WSDL: '/apis/:api_uuid/wsdl',\n    API_DEFINITION_PRODUCT: '/api-products/:apiprod_uuid/api definition',\n    SCHEMA_DEFINITION: '/apis/:api_uuid/schema definition',\n    LIFE_CYCLE: '/apis/:api_uuid/lifecycle',\n    CONFIGURATION: '/apis/:api_uuid/configuration',\n    RUNTIME_CONFIGURATION: '/apis/:api_uuid/runtime-configuration',\n    CONFIGURATION_PRODUCT: '/api-products/:apiprod_uuid/configuration',\n    RUNTIME_CONFIGURATION_PRODUCT: '/api-products/:apiprod_uuid/runtime-configuration',\n    RUNTIME_CONFIGURATION_WEBSOCKET: '/apis/:api_uuid/runtime-configuration-websocket',\n    ENDPOINTS: '/apis/:api_uuid/endpoints',\n    ENVIRONMENTS_PRODUCT: '/api-products/:apiprod_uuid/environments',\n    ENVIRONMENTS: '/apis/:api_uuid/environments',\n    OPERATIONS: '/apis/:api_uuid/operations',\n    RESOURCES: '/apis/:api_uuid/resources',\n    RESOURCES_PRODUCT: '/api-products/:apiprod_uuid/resources',\n    RESOURCES_PRODUCT_EDIT: '/api-products/:apiprod_uuid/resources/edit',\n    SCOPES: '/apis/:api_uuid/scopes',\n    DOCUMENTS: '/apis/:api_uuid/documents',\n    DOCUMENTS_PRODUCT: '/api-products/:apiprod_uuid/documents',\n    SUBSCRIPTIONS_PRODUCT: '/api-products/:apiprod_uuid/subscriptions',\n    SUBSCRIPTIONS: '/apis/:api_uuid/subscriptions',\n    SECURITY: '/apis/:api_uuid/security',\n    BUSINESS_INFO: '/apis/:api_uuid/business info',\n    BUSINESS_INFO_PRODUCT: '/api-products/:apiprod_uuid/business info',\n    PROPERTIES: '/apis/:api_uuid/properties',\n    PROPERTIES_PRODUCT: '/api-products/:apiprod_uuid/properties',\n    NEW_VERSION: '/apis/:api_uuid/new_version',\n    MONETIZATION: '/apis/:api_uuid/monetization',\n    MONETIZATION_PRODUCT: '/api-products/:apiprod_uuid/monetization',\n    EXTERNAL_STORES: '/apis/:api_uuid/external-devportals',\n    TRYOUT: '/apis/:api_uuid/test-console',\n    QUERYANALYSIS: '/apis/:api_uuid/queryanalysis',\n};\n\n// To make sure that paths will not change by outsiders, Basically an enum\nObject.freeze(Details.paths);\n\nDetails.propTypes = {\n    classes: PropTypes.shape({\n        LeftMenu: PropTypes.string,\n        content: PropTypes.string,\n        leftLInkMain: PropTypes.string,\n        contentInside: PropTypes.string,\n    }).isRequired,\n    match: PropTypes.shape({\n        params: PropTypes.object,\n    }).isRequired,\n    location: PropTypes.shape({\n        pathname: PropTypes.object,\n    }).isRequired,\n    history: PropTypes.shape({\n        push: PropTypes.object,\n    }).isRequired,\n    theme: PropTypes.shape({\n        custom: PropTypes.shape({\n            leftMenuIconMainSize: PropTypes.number,\n        }),\n    }).isRequired,\n    isAPIProduct: PropTypes.bool.isRequired,\n    intl: PropTypes.shape({ formatMessage: PropTypes.func }).isRequired,\n};\n\nexport default injectIntl(withStyles(styles, { withTheme: true })(Details));\n"],"sourceRoot":""}