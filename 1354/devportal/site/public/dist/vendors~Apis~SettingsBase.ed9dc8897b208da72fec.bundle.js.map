{"version":3,"sources":["webpack:///./node_modules/@material-ui/lab/esm/internal/svg-icons/createSvgIcon.js","webpack:///./node_modules/@material-ui/lab/esm/internal/svg-icons/Close.js","webpack:///./node_modules/@material-ui/lab/esm/internal/svg-icons/ArrowDropDown.js","webpack:///./node_modules/@material-ui/lab/esm/useAutocomplete/useAutocomplete.js","webpack:///./node_modules/@material-ui/lab/esm/Autocomplete/Autocomplete.js"],"names":["createSvgIcon","path","displayName","Component","memo","forwardRef","props","ref","createElement","muiName","d","stripDiacritics","string","normalize","replace","defaultStringify","value","Object","keys","map","key","join","JSON","stringify","defaultFilterOptions","config","arguments","length","undefined","_config$ignoreAccents","ignoreAccents","_config$ignoreCase","ignoreCase","_config$matchFrom","matchFrom","_config$stringify","_config$trim","trim","options","_ref","inputValue","input","toLowerCase","filter","option","candidate","indexOf","createFilterOptions","pageSize","useAutocomplete","_props$autoComplete","autoComplete","_props$autoHighlight","autoHighlight","_props$autoSelect","autoSelect","_props$blurOnSelect","blurOnSelect","_props$clearOnEscape","clearOnEscape","_props$debug","debug","defaultValue","_props$disableClearab","disableClearable","_props$disableCloseOn","disableCloseOnSelect","_props$disableListWra","disableListWrap","_props$disableOpenOnF","disableOpenOnFocus","_props$filterOptions","filterOptions","_props$filterSelected","filterSelectedOptions","_props$freeSolo","freeSolo","getOptionDisabled","_props$getOptionLabel","getOptionLabel","x","_props$getOptionSelec","getOptionSelected","groupBy","idProp","id","_props$includeInputIn","includeInputInList","inputValueProp","_props$multiple","multiple","onChange","onClose","onOpen","onInputChange","openProp","open","_props$options","valueProp","_React$useState","useState","defaultId","setDefaultId","useEffect","concat","Math","round","random","ignoreFocus","useRef","firstFocus","inputRef","listboxRef","_React$useState2","anchorEl","setAnchorEl","_React$useState3","focusedTag","setFocusedTag","defaultHighlighted","highlightedIndexRef","selectedIndexRef","setHighlightedIndex","index","mouse","current","removeAttribute","setAttribute","prev","querySelector","listboxNode","parentElement","scrollHeight","clientHeight","element","scrollBottom","scrollTop","elementBottom","offsetTop","offsetHeight","isControlled","_React$useState4","valueState","setValue","isInputValueControlled","_React$useState5","inputValueState","setInputValue","_React$useState6","focused","setFocused","resetInputValue","useEventCallback","event","newValue","newInputValue","optionLabel","isOpenControlled","_React$useState7","openState","setOpenState","inputValueIsSelectedValue","popupOpen","filteredOptions","some","value2","focusTag","tagToFocus","focus","changeHighlightedIndex","diff","direction","nextIndex","nextFocus","hasAttribute","disabled","getAttribute","validOptionIndex","maxIndex","newIndex","abs","getNextIndex","setSelectionRange","handleOpen","handleClose","handleValue","selectNewValue","item","itemIndex","array","comp","i","findIndex","Array","isArray","valueItem","push","splice","handleFocusTag","nextTag","validTagIndex","handleClear","handleKeyDown","other","preventDefault","stopPropagation","onKeyDown","handleFocus","handleBlur","handleInputChange","target","handleOptionMouseOver","Number","currentTarget","isTouch","handleOptionTouchStart","handleOptionClick","blur","handleTagDelete","handleListboxRef","node","setRef","handlePopupIndicator","handleMouseDown","nodeName","handleClick","selectionEnd","selectionStart","select","handleInputMouseDown","document","activeElement","dirty","groupedOptions","reduce","acc","getRootProps","role","onMouseDown","onClick","getInputLabelProps","htmlFor","getInputProps","onBlur","onFocus","autoCapitalize","spellCheck","getClearProps","tabIndex","getPopupIndicatorProps","getTagProps","_ref2","onDelete","getListboxProps","getOptionProps","_ref3","selected","onMouseOver","onTouchStart","propTypes","bool","classes","object","className","any","func","DisablePortal","Close","fontSize","ArrowDropDown","startAdornment","ChipProps","_props$clearText","clearText","_props$closeIcon","closeIcon","_props$closeText","closeText","_props$disabled","_props$disablePortal","disablePortal","_props$forcePopupIcon","forcePopupIcon","_props$ListboxCompone","ListboxComponent","ListboxProps","_props$loading","loading","_props$loadingText","loadingText","_props$noOptionsText","noOptionsText","_props$openText","openText","_props$PaperComponent","PaperComponent","Paper","_props$PopperComponen","PopperComponent","PopperComponentProp","Popper","_props$popupIcon","popupIcon","renderGroupProp","renderGroup","renderInput","renderOptionProp","renderOption","renderTags","_props$size","size","_useAutocomplete","getCustomizedTagProps","params","tag","small","tagSizeSmall","Chip","label","ListSubheader","groupLabel","component","groupUl","children","renderListOption","optionProps","Fragment","root","InputLabelProps","InputProps","inputRoot","endAdornment","IconButton","title","clearIndicator","clearIndicatorDirty","popupIndicator","popupIndicatorOpen","inputProps","inputFocused","popper","popperDisablePortal","style","width","clientWidth","paper","noOptions","listbox","option2","index2","withStyles","theme","_option","visibility","margin","maxWidth","flexWrap","paddingRight","minWidth","paddingBottom","padding","paddingLeft","right","paddingTop","flexGrow","textOverflow","opacity","position","top","marginRight","color","palette","action","active","transform","zIndex","modal","typography","body1","overflow","maxHeight","listStyle","text","secondary","minHeight","display","justifyContent","alignItems","cursor","boxSizing","outline","WebkitTapHighlightColor","breakpoints","up","backgroundColor","hover","pointerEvents","background","name"],"mappings":"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","file":"vendors~Apis~SettingsBase.ed9dc8897b208da72fec.bundle.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport React from 'react';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nexport default function createSvgIcon(path, displayName) {\n  var Component = React.memo(React.forwardRef(function (props, ref) {\n    return React.createElement(SvgIcon, _extends({\n      ref: ref\n    }, props), path);\n  }));\n\n  if (process.env.NODE_ENV !== 'production') {\n    Component.displayName = \"\".concat(displayName, \"Icon\");\n  }\n\n  Component.muiName = SvgIcon.muiName;\n  return Component;\n}","import React from 'react';\nimport createSvgIcon from './createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\n}), 'Close');","import React from 'react';\nimport createSvgIcon from './createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M7 10l5 5 5-5z\"\n}), 'ArrowDropDown');","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _typeof from \"@babel/runtime/helpers/esm/typeof\";\n\n/* eslint-disable no-constant-condition */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { setRef, useEventCallback } from '@material-ui/core/utils'; // https://stackoverflow.com/questions/990904/remove-accents-diacritics-in-a-string-in-javascript\n// Give up on IE 11 support for this feature\n\nfunction stripDiacritics(string) {\n  return typeof string.normalize !== 'undefined' ? string.normalize('NFD').replace(/[\\u0300-\\u036f]/g, '') : string;\n}\n\nfunction defaultStringify(value) {\n  if (value == null) {\n    return '';\n  }\n\n  if (typeof value === 'string') {\n    return value;\n  }\n\n  if (_typeof(value) === 'object') {\n    return Object.keys(value).map(function (key) {\n      return value[key];\n    }).join(' ');\n  }\n\n  return JSON.stringify(value);\n}\n\nexport function createFilterOptions() {\n  var config = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var _config$ignoreAccents = config.ignoreAccents,\n      ignoreAccents = _config$ignoreAccents === void 0 ? true : _config$ignoreAccents,\n      _config$ignoreCase = config.ignoreCase,\n      ignoreCase = _config$ignoreCase === void 0 ? true : _config$ignoreCase,\n      _config$matchFrom = config.matchFrom,\n      matchFrom = _config$matchFrom === void 0 ? 'any' : _config$matchFrom,\n      _config$stringify = config.stringify,\n      stringify = _config$stringify === void 0 ? defaultStringify : _config$stringify,\n      _config$trim = config.trim,\n      trim = _config$trim === void 0 ? false : _config$trim;\n  return function (options, _ref) {\n    var inputValue = _ref.inputValue;\n    var input = trim ? inputValue.trim() : inputValue;\n\n    if (ignoreCase) {\n      input = input.toLowerCase();\n    }\n\n    if (ignoreAccents) {\n      input = stripDiacritics(input);\n    }\n\n    return options.filter(function (option) {\n      var candidate = stringify(option);\n\n      if (ignoreCase) {\n        candidate = candidate.toLowerCase();\n      }\n\n      if (ignoreAccents) {\n        candidate = stripDiacritics(candidate);\n      }\n\n      return matchFrom === 'start' ? candidate.indexOf(input) === 0 : candidate.indexOf(input) > -1;\n    });\n  };\n} // To replace with .findIndex() once we stop IE 11 support.\n\nfunction findIndex(array, comp) {\n  for (var i = 0; i < array.length; i += 1) {\n    if (comp(array[i])) {\n      return i;\n    }\n  }\n\n  return -1;\n}\n\nvar defaultFilterOptions = createFilterOptions(); // Number of options to jump in list box when pageup and pagedown keys are used.\n\nvar pageSize = 5;\nexport default function useAutocomplete(props) {\n  var _props$autoComplete = props.autoComplete,\n      autoComplete = _props$autoComplete === void 0 ? false : _props$autoComplete,\n      _props$autoHighlight = props.autoHighlight,\n      autoHighlight = _props$autoHighlight === void 0 ? false : _props$autoHighlight,\n      _props$autoSelect = props.autoSelect,\n      autoSelect = _props$autoSelect === void 0 ? false : _props$autoSelect,\n      _props$blurOnSelect = props.blurOnSelect,\n      blurOnSelect = _props$blurOnSelect === void 0 ? false : _props$blurOnSelect,\n      _props$clearOnEscape = props.clearOnEscape,\n      clearOnEscape = _props$clearOnEscape === void 0 ? false : _props$clearOnEscape,\n      _props$debug = props.debug,\n      debug = _props$debug === void 0 ? false : _props$debug,\n      defaultValue = props.defaultValue,\n      _props$disableClearab = props.disableClearable,\n      disableClearable = _props$disableClearab === void 0 ? false : _props$disableClearab,\n      _props$disableCloseOn = props.disableCloseOnSelect,\n      disableCloseOnSelect = _props$disableCloseOn === void 0 ? false : _props$disableCloseOn,\n      _props$disableListWra = props.disableListWrap,\n      disableListWrap = _props$disableListWra === void 0 ? false : _props$disableListWra,\n      _props$disableOpenOnF = props.disableOpenOnFocus,\n      disableOpenOnFocus = _props$disableOpenOnF === void 0 ? false : _props$disableOpenOnF,\n      _props$filterOptions = props.filterOptions,\n      filterOptions = _props$filterOptions === void 0 ? defaultFilterOptions : _props$filterOptions,\n      _props$filterSelected = props.filterSelectedOptions,\n      filterSelectedOptions = _props$filterSelected === void 0 ? false : _props$filterSelected,\n      _props$freeSolo = props.freeSolo,\n      freeSolo = _props$freeSolo === void 0 ? false : _props$freeSolo,\n      getOptionDisabled = props.getOptionDisabled,\n      _props$getOptionLabel = props.getOptionLabel,\n      getOptionLabel = _props$getOptionLabel === void 0 ? function (x) {\n    return x;\n  } : _props$getOptionLabel,\n      _props$getOptionSelec = props.getOptionSelected,\n      getOptionSelected = _props$getOptionSelec === void 0 ? function (option, value) {\n    return option === value;\n  } : _props$getOptionSelec,\n      groupBy = props.groupBy,\n      idProp = props.id,\n      _props$includeInputIn = props.includeInputInList,\n      includeInputInList = _props$includeInputIn === void 0 ? false : _props$includeInputIn,\n      inputValueProp = props.inputValue,\n      _props$multiple = props.multiple,\n      multiple = _props$multiple === void 0 ? false : _props$multiple,\n      onChange = props.onChange,\n      onClose = props.onClose,\n      onOpen = props.onOpen,\n      onInputChange = props.onInputChange,\n      openProp = props.open,\n      _props$options = props.options,\n      options = _props$options === void 0 ? [] : _props$options,\n      valueProp = props.value;\n\n  var _React$useState = React.useState(),\n      defaultId = _React$useState[0],\n      setDefaultId = _React$useState[1];\n\n  var id = idProp || defaultId;\n  React.useEffect(function () {\n    // Fallback to this default id when possible.\n    // Use the random value for client-side rendering only.\n    // We can't use it server-side.\n    setDefaultId(\"mui-autocomplete-\".concat(Math.round(Math.random() * 1e5)));\n  }, []);\n  var ignoreFocus = React.useRef(false);\n  var firstFocus = React.useRef(true);\n  var inputRef = React.useRef(null);\n  var listboxRef = React.useRef(null);\n\n  var _React$useState2 = React.useState(null),\n      anchorEl = _React$useState2[0],\n      setAnchorEl = _React$useState2[1];\n\n  var _React$useState3 = React.useState(-1),\n      focusedTag = _React$useState3[0],\n      setFocusedTag = _React$useState3[1];\n\n  var defaultHighlighted = autoHighlight ? 0 : -1;\n  var highlightedIndexRef = React.useRef(defaultHighlighted);\n  var selectedIndexRef = React.useRef(-1);\n\n  function setHighlightedIndex(index) {\n    var mouse = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    highlightedIndexRef.current = index; // does the index exist?\n\n    if (index === -1) {\n      inputRef.current.removeAttribute('aria-activedescendant');\n    } else {\n      inputRef.current.setAttribute('aria-activedescendant', \"\".concat(id, \"-option-\").concat(index));\n    }\n\n    if (!listboxRef.current) {\n      return;\n    }\n\n    var prev = listboxRef.current.querySelector('[data-focus]');\n\n    if (prev) {\n      prev.removeAttribute('data-focus');\n    }\n\n    var listboxNode = listboxRef.current.parentElement.querySelector('[role=\"listbox\"]'); // \"No results\"\n\n    if (!listboxNode) {\n      return;\n    }\n\n    if (index === -1) {\n      listboxNode.scrollTop = 0;\n      return;\n    }\n\n    var option = listboxRef.current.querySelector(\"[data-option-index=\\\"\".concat(index, \"\\\"]\"));\n\n    if (!option) {\n      return;\n    }\n\n    option.setAttribute('data-focus', 'true'); // Scroll active descendant into view.\n    // Logic copied from https://www.w3.org/TR/wai-aria-practices/examples/listbox/js/listbox.js\n    //\n    // Consider this API instead once it has a better browser support:\n    // .scrollIntoView({ scrollMode: 'if-needed', block: 'nearest' });\n\n    if (listboxNode.scrollHeight > listboxNode.clientHeight && !mouse) {\n      var element = option;\n      var scrollBottom = listboxNode.clientHeight + listboxNode.scrollTop;\n      var elementBottom = element.offsetTop + element.offsetHeight;\n\n      if (elementBottom > scrollBottom) {\n        listboxNode.scrollTop = elementBottom - listboxNode.clientHeight;\n      } else if (element.offsetTop < listboxNode.scrollTop) {\n        listboxNode.scrollTop = element.offsetTop;\n      }\n    }\n  }\n\n  var _React$useRef = React.useRef(valueProp !== undefined),\n      isControlled = _React$useRef.current;\n\n  var _React$useState4 = React.useState(function () {\n    return !isControlled ? defaultValue || (multiple ? [] : null) : null;\n  }),\n      valueState = _React$useState4[0],\n      setValue = _React$useState4[1];\n\n  var value = isControlled ? valueProp : valueState;\n\n  if (process.env.NODE_ENV !== 'production') {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useEffect(function () {\n      if (isControlled !== (valueProp !== undefined)) {\n        console.error([\"Material-UI: A component is changing \".concat(isControlled ? 'a ' : 'an un', \"controlled useAutocomplete to be \").concat(isControlled ? 'un' : '', \"controlled.\"), 'Elements should not switch from uncontrolled to controlled (or vice versa).', 'Decide between using a controlled or uncontrolled useAutocomplete ' + 'element for the lifetime of the component.', 'More info: https://fb.me/react-controlled-components'].join('\\n'));\n      }\n    }, [valueProp, isControlled]);\n  }\n\n  var _React$useRef2 = React.useRef(inputValueProp != null),\n      isInputValueControlled = _React$useRef2.current;\n\n  var _React$useState5 = React.useState(''),\n      inputValueState = _React$useState5[0],\n      setInputValue = _React$useState5[1];\n\n  var inputValue = isInputValueControlled ? inputValueProp : inputValueState;\n\n  var _React$useState6 = React.useState(false),\n      focused = _React$useState6[0],\n      setFocused = _React$useState6[1];\n\n  var resetInputValue = useEventCallback(function (event, newValue) {\n    var newInputValue;\n\n    if (multiple) {\n      newInputValue = '';\n    } else if (newValue == null) {\n      newInputValue = '';\n    } else {\n      var optionLabel = getOptionLabel(newValue);\n\n      if (process.env.NODE_ENV !== 'production') {\n        if (typeof optionLabel !== 'string') {\n          console.error(['Material-UI: the `getOptionLabel` method of useAutocomplete do not handle the options correctly.', \"The component expect a string but received \".concat(_typeof(optionLabel), \".\"), \"For the input option: \".concat(JSON.stringify(newValue), \", `getOptionLabel` returns: \").concat(newInputValue, \".\")].join('\\n'));\n        }\n      }\n\n      newInputValue = typeof optionLabel === 'string' ? optionLabel : '';\n    }\n\n    if (inputValue === newInputValue) {\n      return;\n    }\n\n    setInputValue(newInputValue);\n\n    if (onInputChange) {\n      onInputChange(event, newInputValue, 'reset');\n    }\n  });\n  React.useEffect(function () {\n    resetInputValue(null, value);\n  }, [value, resetInputValue]);\n\n  var _React$useRef3 = React.useRef(openProp != null),\n      isOpenControlled = _React$useRef3.current;\n\n  var _React$useState7 = React.useState(false),\n      openState = _React$useState7[0],\n      setOpenState = _React$useState7[1];\n\n  var open = isOpenControlled ? openProp : openState;\n  var inputValueIsSelectedValue = !multiple && value != null && inputValue === getOptionLabel(value);\n  var popupOpen = open;\n  var filteredOptions = popupOpen ? filterOptions(options.filter(function (option) {\n    if (filterSelectedOptions && (multiple ? value : [value]).some(function (value2) {\n      return value2 !== null && getOptionSelected(option, value2);\n    })) {\n      return false;\n    }\n\n    return true;\n  }), // we use the empty string to manipulate `filterOptions` to not filter any options\n  // i.e. the filter predicate always returns true\n  {\n    inputValue: inputValueIsSelectedValue ? '' : inputValue\n  }) : [];\n  popupOpen = freeSolo && filteredOptions.length === 0 ? false : popupOpen;\n  var focusTag = useEventCallback(function (tagToFocus) {\n    if (tagToFocus === -1) {\n      inputRef.current.focus();\n    } else {\n      anchorEl.querySelector(\"[data-tag-index=\\\"\".concat(tagToFocus, \"\\\"]\")).focus();\n    }\n  }); // Ensure the focusedTag is never inconsistent\n\n  React.useEffect(function () {\n    if (multiple && focusedTag > value.length - 1) {\n      setFocusedTag(-1);\n      focusTag(-1);\n    }\n  }, [value, multiple, focusedTag, focusTag]);\n\n  function validOptionIndex(index, direction) {\n    if (!listboxRef.current || index === -1) {\n      return -1;\n    }\n\n    var nextFocus = index;\n\n    while (true) {\n      // Out of range\n      if (direction === 'next' && nextFocus === filteredOptions.length || direction === 'previous' && nextFocus === -1) {\n        return -1;\n      }\n\n      var option = listboxRef.current.querySelector(\"[data-option-index=\\\"\".concat(nextFocus, \"\\\"]\")); // Same logic as MenuList.js\n\n      if (option && (!option.hasAttribute('tabindex') || option.disabled || option.getAttribute('aria-disabled') === 'true')) {\n        nextFocus += direction === 'next' ? 1 : -1;\n      } else {\n        return nextFocus;\n      }\n    }\n  }\n\n  var changeHighlightedIndex = function changeHighlightedIndex(diff, direction) {\n    if (!popupOpen) {\n      return;\n    }\n\n    var getNextIndex = function getNextIndex() {\n      var maxIndex = filteredOptions.length - 1;\n\n      if (diff === 'reset') {\n        return defaultHighlighted;\n      }\n\n      if (diff === 'start') {\n        return 0;\n      }\n\n      if (diff === 'end') {\n        return maxIndex;\n      }\n\n      var newIndex = highlightedIndexRef.current + diff;\n\n      if (newIndex < 0) {\n        if (newIndex === -1 && includeInputInList) {\n          return -1;\n        }\n\n        if (disableListWrap && highlightedIndexRef.current !== -1 || Math.abs(diff) > 1) {\n          return 0;\n        }\n\n        return maxIndex;\n      }\n\n      if (newIndex > maxIndex) {\n        if (newIndex === maxIndex + 1 && includeInputInList) {\n          return -1;\n        }\n\n        if (disableListWrap || Math.abs(diff) > 1) {\n          return maxIndex;\n        }\n\n        return 0;\n      }\n\n      return newIndex;\n    };\n\n    var nextIndex = validOptionIndex(getNextIndex(), direction);\n    setHighlightedIndex(nextIndex);\n    selectedIndexRef.current = nextIndex;\n\n    if (autoComplete && diff !== 'reset') {\n      if (nextIndex === -1) {\n        inputRef.current.value = inputValue;\n      } else {\n        var option = getOptionLabel(filteredOptions[nextIndex]);\n        inputRef.current.value = option; // The portion of the selected suggestion that has not been typed by the user,\n        // a completion string, appears inline after the input cursor in the textbox.\n\n        var index = option.toLowerCase().indexOf(inputValue.toLowerCase());\n\n        if (index === 0 && inputValue.length > 0) {\n          inputRef.current.setSelectionRange(inputValue.length, option.length);\n        }\n      }\n    }\n  };\n\n  React.useEffect(function () {\n    changeHighlightedIndex('reset', 'next');\n  }, [inputValue]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  var handleOpen = function handleOpen(event) {\n    if (open) {\n      return;\n    }\n\n    if (onOpen) {\n      onOpen(event);\n    }\n\n    if (!isOpenControlled) {\n      setOpenState(true);\n    }\n  };\n\n  var handleClose = function handleClose(event) {\n    if (!open) {\n      return;\n    }\n\n    if (onClose) {\n      onClose(event);\n    }\n\n    if (!isOpenControlled) {\n      setOpenState(false);\n    }\n  };\n\n  var handleValue = function handleValue(event, newValue) {\n    if (value === newValue) {\n      return;\n    }\n\n    if (onChange) {\n      onChange(event, newValue);\n    }\n\n    if (!isControlled) {\n      setValue(newValue);\n    }\n  };\n\n  var selectNewValue = function selectNewValue(event, newValue) {\n    if (multiple) {\n      var item = newValue;\n      newValue = Array.isArray(value) ? _toConsumableArray(value) : [];\n      var itemIndex = findIndex(newValue, function (valueItem) {\n        return getOptionSelected(item, valueItem);\n      });\n\n      if (itemIndex === -1) {\n        newValue.push(item);\n      } else {\n        newValue.splice(itemIndex, 1);\n      }\n    }\n\n    resetInputValue(event, newValue);\n    handleValue(event, newValue);\n\n    if (!disableCloseOnSelect) {\n      handleClose(event);\n    }\n\n    selectedIndexRef.current = -1;\n  };\n\n  function validTagIndex(index, direction) {\n    if (index === -1) {\n      return -1;\n    }\n\n    var nextFocus = index;\n\n    while (true) {\n      // Out of range\n      if (direction === 'next' && nextFocus === value.length || direction === 'previous' && nextFocus === -1) {\n        return -1;\n      }\n\n      var option = anchorEl.querySelector(\"[data-tag-index=\\\"\".concat(nextFocus, \"\\\"]\")); // Same logic as MenuList.js\n\n      if (option && (!option.hasAttribute('tabindex') || option.disabled || option.getAttribute('aria-disabled') === 'true')) {\n        nextFocus += direction === 'next' ? 1 : -1;\n      } else {\n        return nextFocus;\n      }\n    }\n  }\n\n  var handleFocusTag = function handleFocusTag(event, direction) {\n    if (!multiple) {\n      return;\n    }\n\n    handleClose(event);\n    var nextTag = focusedTag;\n\n    if (focusedTag === -1) {\n      if (inputValue === '' && direction === 'previous') {\n        nextTag = value.length - 1;\n      }\n    } else {\n      nextTag += direction === 'next' ? 1 : -1;\n\n      if (nextTag < 0) {\n        nextTag = 0;\n      }\n\n      if (nextTag === value.length) {\n        nextTag = -1;\n      }\n    }\n\n    nextTag = validTagIndex(nextTag, direction);\n    setFocusedTag(nextTag);\n    focusTag(nextTag);\n  };\n\n  var handleClear = function handleClear(event) {\n    ignoreFocus.current = true;\n    setInputValue('');\n\n    if (onInputChange) {\n      onInputChange(event, '', 'clear');\n    }\n\n    handleValue(event, multiple ? [] : null);\n  };\n\n  var handleKeyDown = function handleKeyDown(other) {\n    return function (event) {\n      if (focusedTag !== -1 && ['ArrowLeft', 'ArrowRight'].indexOf(event.key) === -1) {\n        setFocusedTag(-1);\n        focusTag(-1);\n      }\n\n      switch (event.key) {\n        case 'Home':\n          if (popupOpen) {\n            // Prevent scroll of the page\n            event.preventDefault();\n            changeHighlightedIndex('start', 'next');\n          }\n\n          break;\n\n        case 'End':\n          if (popupOpen) {\n            // Prevent scroll of the page\n            event.preventDefault();\n            changeHighlightedIndex('end', 'previous');\n          }\n\n          break;\n\n        case 'PageUp':\n          // Prevent scroll of the page\n          event.preventDefault();\n          changeHighlightedIndex(-pageSize, 'previous');\n          handleOpen(event);\n          break;\n\n        case 'PageDown':\n          // Prevent scroll of the page\n          event.preventDefault();\n          changeHighlightedIndex(pageSize, 'next');\n          handleOpen(event);\n          break;\n\n        case 'ArrowDown':\n          // Prevent cursor move\n          event.preventDefault();\n          changeHighlightedIndex(1, 'next');\n          handleOpen(event);\n          break;\n\n        case 'ArrowUp':\n          // Prevent cursor move\n          event.preventDefault();\n          changeHighlightedIndex(-1, 'previous');\n          handleOpen(event);\n          break;\n\n        case 'ArrowLeft':\n          handleFocusTag(event, 'previous');\n          break;\n\n        case 'ArrowRight':\n          handleFocusTag(event, 'next');\n          break;\n\n        case 'Enter':\n          if (highlightedIndexRef.current !== -1 && popupOpen) {\n            // We don't want to validate the form.\n            event.preventDefault();\n            selectNewValue(event, filteredOptions[highlightedIndexRef.current]); // Move the selection to the end.\n\n            if (autoComplete) {\n              inputRef.current.setSelectionRange(inputRef.current.value.length, inputRef.current.value.length);\n            }\n          } else if (freeSolo && inputValue !== '' && inputValueIsSelectedValue === false) {\n            if (multiple) {\n              // Allow people to add new values before they submit the form.\n              event.preventDefault();\n            }\n\n            selectNewValue(event, inputValue);\n          }\n\n          break;\n\n        case 'Escape':\n          if (popupOpen) {\n            // Avoid Opera to exit fullscreen mode.\n            event.preventDefault(); // Avoid the Modal to handle the event.\n\n            event.stopPropagation();\n            handleClose(event);\n          } else if (clearOnEscape && inputValue !== '') {\n            // Avoid Opera to exit fullscreen mode.\n            event.preventDefault(); // Avoid the Modal to handle the event.\n\n            event.stopPropagation();\n            handleClear(event);\n          }\n\n          break;\n\n        case 'Backspace':\n          if (multiple && inputValue === '' && value.length > 0) {\n            var index = focusedTag === -1 ? value.length - 1 : focusedTag;\n\n            var newValue = _toConsumableArray(value);\n\n            newValue.splice(index, 1);\n            handleValue(event, newValue);\n          }\n\n          break;\n\n        default:\n      }\n\n      if (other.onKeyDown) {\n        other.onKeyDown(event);\n      }\n    };\n  };\n\n  var handleFocus = function handleFocus(event) {\n    setFocused(true);\n\n    if (!disableOpenOnFocus && !ignoreFocus.current) {\n      handleOpen(event);\n    }\n  };\n\n  var handleBlur = function handleBlur(event) {\n    setFocused(false);\n    firstFocus.current = true;\n    ignoreFocus.current = false;\n\n    if (debug && inputValue !== '') {\n      return;\n    }\n\n    if (autoSelect && selectedIndexRef.current !== -1) {\n      handleValue(event, filteredOptions[selectedIndexRef.current]);\n    } else if (!freeSolo) {\n      resetInputValue(event, value);\n    }\n\n    handleClose(event);\n  };\n\n  var handleInputChange = function handleInputChange(event) {\n    var newValue = event.target.value;\n\n    if (inputValue !== newValue) {\n      setInputValue(newValue);\n\n      if (onInputChange) {\n        onInputChange(event, newValue, 'input');\n      }\n    }\n\n    if (newValue === '') {\n      if (disableOpenOnFocus) {\n        handleClose(event);\n      }\n\n      if (!disableClearable && !multiple) {\n        handleValue(event, null);\n      }\n    } else {\n      handleOpen(event);\n    }\n  };\n\n  var handleOptionMouseOver = function handleOptionMouseOver(event) {\n    var index = Number(event.currentTarget.getAttribute('data-option-index'));\n    setHighlightedIndex(index, 'mouse');\n  };\n\n  var isTouch = React.useRef(false);\n\n  var handleOptionTouchStart = function handleOptionTouchStart() {\n    isTouch.current = true;\n  };\n\n  var handleOptionClick = function handleOptionClick(event) {\n    var index = Number(event.currentTarget.getAttribute('data-option-index'));\n    selectNewValue(event, filteredOptions[index]);\n\n    if (blurOnSelect === true || blurOnSelect === 'touch' && isTouch.current || blurOnSelect === 'mouse' && !isTouch.current) {\n      inputRef.current.blur();\n    }\n\n    isTouch.current = false;\n  };\n\n  var handleTagDelete = function handleTagDelete(index) {\n    return function (event) {\n      var newValue = _toConsumableArray(value);\n\n      newValue.splice(index, 1);\n      handleValue(event, newValue);\n    };\n  };\n\n  var handleListboxRef = useEventCallback(function (node) {\n    setRef(listboxRef, node);\n\n    if (!node) {\n      return;\n    } // Restore the focus to the correct option.\n\n\n    setHighlightedIndex(highlightedIndexRef.current);\n  });\n\n  var handlePopupIndicator = function handlePopupIndicator(event) {\n    if (open) {\n      handleClose(event);\n    } else {\n      handleOpen(event);\n    }\n  }; // Prevent input blur when interacting with the combobox\n\n\n  var handleMouseDown = function handleMouseDown(event) {\n    if (event.target.nodeName !== 'INPUT') {\n      event.preventDefault();\n    }\n  }; // Focus the input when first interacting with the combobox\n\n\n  var handleClick = function handleClick() {\n    if (firstFocus.current && inputRef.current.selectionEnd - inputRef.current.selectionStart === 0) {\n      inputRef.current.focus();\n      inputRef.current.select();\n    }\n\n    firstFocus.current = false;\n  };\n\n  var handleInputMouseDown = function handleInputMouseDown(event) {\n    if (inputValue === '' && (!disableOpenOnFocus || inputRef.current === document.activeElement)) {\n      handlePopupIndicator(event);\n    }\n  };\n\n  var dirty = freeSolo && inputValue.length > 0;\n  dirty = dirty || (multiple ? value.length > 0 : value !== null);\n  var groupedOptions = filteredOptions;\n\n  if (groupBy) {\n    groupedOptions = filteredOptions.reduce(function (acc, option, index) {\n      var key = groupBy(option);\n\n      if (acc.length > 0 && acc[acc.length - 1].key === key) {\n        acc[acc.length - 1].options.push(option);\n      } else {\n        acc.push({\n          key: key,\n          index: index,\n          options: [option]\n        });\n      }\n\n      return acc;\n    }, []);\n  }\n\n  return {\n    getRootProps: function getRootProps() {\n      var other = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      return _extends({\n        'aria-owns': popupOpen ? \"\".concat(id, \"-popup\") : null,\n        role: 'combobox',\n        'aria-expanded': popupOpen\n      }, other, {\n        onKeyDown: handleKeyDown(other),\n        onMouseDown: handleMouseDown,\n        onClick: handleClick\n      });\n    },\n    getInputLabelProps: function getInputLabelProps() {\n      return {\n        id: \"\".concat(id, \"-label\"),\n        htmlFor: id\n      };\n    },\n    getInputProps: function getInputProps() {\n      return {\n        id: id,\n        value: inputValue,\n        onBlur: handleBlur,\n        onFocus: handleFocus,\n        onChange: handleInputChange,\n        onMouseDown: handleInputMouseDown,\n        // if open then this is handled imperativeley so don't let react override\n        // only have an opinion about this when closed\n        'aria-activedescendant': popupOpen ? '' : null,\n        'aria-autocomplete': autoComplete ? 'both' : 'list',\n        'aria-controls': popupOpen ? \"\".concat(id, \"-popup\") : null,\n        // Disable browser's suggestion that might overlap with the popup.\n        // Handle autocomplete but not autofill.\n        autoComplete: 'off',\n        ref: inputRef,\n        autoCapitalize: 'none',\n        spellCheck: 'false'\n      };\n    },\n    getClearProps: function getClearProps() {\n      return {\n        tabIndex: -1,\n        onClick: handleClear\n      };\n    },\n    getPopupIndicatorProps: function getPopupIndicatorProps() {\n      return {\n        tabIndex: -1,\n        onClick: handlePopupIndicator\n      };\n    },\n    getTagProps: function getTagProps(_ref2) {\n      var index = _ref2.index;\n      return {\n        key: index,\n        'data-tag-index': index,\n        tabIndex: -1,\n        onDelete: handleTagDelete(index)\n      };\n    },\n    getListboxProps: function getListboxProps() {\n      return {\n        role: 'listbox',\n        id: \"\".concat(id, \"-popup\"),\n        'aria-labelledby': \"\".concat(id, \"-label\"),\n        ref: handleListboxRef,\n        onMouseDown: function onMouseDown(event) {\n          // Prevent blur\n          event.preventDefault();\n        }\n      };\n    },\n    getOptionProps: function getOptionProps(_ref3) {\n      var index = _ref3.index,\n          option = _ref3.option;\n      var selected = (multiple ? value : [value]).some(function (value2) {\n        return value2 != null && getOptionSelected(option, value2);\n      });\n      var disabled = getOptionDisabled ? getOptionDisabled(option) : false;\n      return {\n        key: index,\n        tabIndex: -1,\n        role: 'option',\n        id: \"\".concat(id, \"-option-\").concat(index),\n        onMouseOver: handleOptionMouseOver,\n        onClick: handleOptionClick,\n        onTouchStart: handleOptionTouchStart,\n        'data-option-index': index,\n        'aria-disabled': disabled,\n        'aria-selected': selected\n      };\n    },\n    id: id,\n    inputValue: inputValue,\n    value: value,\n    dirty: dirty,\n    popupOpen: popupOpen,\n    focused: focused || focusedTag !== -1,\n    anchorEl: anchorEl,\n    setAnchorEl: setAnchorEl,\n    focusedTag: focusedTag,\n    groupedOptions: groupedOptions\n  };\n}\nuseAutocomplete.propTypes = {\n  /**\n   * If `true`, the portion of the selected suggestion that has not been typed by the user,\n   * known as the completion string, appears inline after the input cursor in the textbox.\n   * The inline completion string is visually highlighted and has a selected state.\n   */\n  autoComplete: PropTypes.bool,\n\n  /**\n   * If `true`, the first option is automatically highlighted.\n   */\n  autoHighlight: PropTypes.bool,\n\n  /**\n   * If `true`, the selected option becomes the value of the input\n   * when the Autocomplete loses focus unless the user chooses\n   * a different option or changes the character string in the input.\n   */\n  autoSelect: PropTypes.bool,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, clear all values when the user presses escape and the popup is closed.\n   */\n  clearOnEscape: PropTypes.bool,\n\n  /**\n   * If `true`, the popup will ignore the blur event if the input if filled.\n   * You can inspect the popup markup with your browser tools.\n   * Consider this option when you need to customize the component.\n   */\n  debug: PropTypes.bool,\n\n  /**\n   * The default input value. Use when the component is not controlled.\n   */\n  defaultValue: PropTypes.any,\n\n  /**\n   * If `true`, the input can't be cleared.\n   */\n  disableClearable: PropTypes.bool,\n\n  /**\n   * If `true`, the popup won't close when a value is selected.\n   */\n  disableCloseOnSelect: PropTypes.bool,\n\n  /**\n   * If `true`, the list box in the popup will not wrap focus.\n   */\n  disableListWrap: PropTypes.bool,\n\n  /**\n   * If `true`, the popup won't open on input focus.\n   */\n  disableOpenOnFocus: PropTypes.bool,\n\n  /**\n   * A filter function that determins the options that are eligible.\n   *\n   * @param {any} options The options to render.\n   * @param {object} state The state of the component.\n   * @returns {boolean}\n   */\n  filterOptions: PropTypes.func,\n\n  /**\n   * If `true`, hide the selected options from the list box.\n   */\n  filterSelectedOptions: PropTypes.bool,\n\n  /**\n   * If `true`, the Autocomplete is free solo, meaning that the user input is not bound to provided options.\n   */\n  freeSolo: PropTypes.bool,\n\n  /**\n   * Used to determine the disabled state for a given option.\n   */\n  getOptionDisabled: PropTypes.func,\n\n  /**\n   * Used to determine the string value for a given option.\n   * It's used to fill the input (and the list box options if `renderOption` is not provided).\n   */\n  getOptionLabel: PropTypes.func,\n\n  /**\n   * If provided, the options will be grouped under the returned string.\n   * The groupBy value is also used as the text for group headings when `renderGroup` is not provided.\n   *\n   * @param {any} options The option to group.\n   * @returns {string}\n   */\n  groupBy: PropTypes.func,\n\n  /**\n   * This prop is used to help implement the accessibility logic.\n   * If you don't provide this prop. It falls back to a randomly generated id.\n   */\n  id: PropTypes.string,\n\n  /**\n   * If `true`, the highlight can move to the input.\n   */\n  includeInputInList: PropTypes.bool,\n\n  /**\n   * If `true`, `value` must be an array and the menu will support multiple selections.\n   */\n  multiple: PropTypes.bool,\n\n  /**\n   * Callback fired when the value changes.\n   *\n   * @param {object} event The event source of the callback\n   * @param {any} value\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * Callback fired when the popup requests to be closed.\n   * Use in controlled mode (see open).\n   *\n   * @param {object} event The event source of the callback.\n   */\n  onClose: PropTypes.func,\n\n  /**\n   * Callback fired when the text input value changes.\n   *\n   * @param {object} event The event source of the callback\n   * @param {string} value The new value of the text input\n   * @param {string} reason One of \"input\" (user input) or \"reset\" (programmatic change)\n   */\n  onInputChange: PropTypes.func,\n\n  /**\n   * Callback fired when the popup requests to be opened.\n   * Use in controlled mode (see open).\n   *\n   * @param {object} event The event source of the callback.\n   */\n  onOpen: PropTypes.func,\n\n  /**\n   * Control the popup` open state.\n   */\n  open: PropTypes.bool,\n\n  /**\n   * Array of options.\n   */\n  options: PropTypes.array,\n\n  /**\n   * The input value.\n   */\n  value: PropTypes.any\n};","import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { withStyles } from '@material-ui/core/styles';\nimport Popper from '@material-ui/core/Popper';\nimport ListSubheader from '@material-ui/core/ListSubheader';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport Chip from '@material-ui/core/Chip';\nimport CloseIcon from '../internal/svg-icons/Close';\nimport ArrowDropDownIcon from '../internal/svg-icons/ArrowDropDown';\nimport useAutocomplete, { createFilterOptions } from '../useAutocomplete';\nexport { createFilterOptions };\nexport var styles = function styles(theme) {\n  var _option;\n\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      '&:hover $clearIndicatorDirty, &$focused $clearIndicatorDirty': {\n        visibility: 'visible'\n      }\n    },\n\n    /* Pseudo-class applied to the root element if focused. */\n    focused: {},\n\n    /* Styles applied to the tag elements, e.g. the chips. */\n    tag: {\n      margin: 3,\n      maxWidth: 'calc(100% - 6px)'\n    },\n\n    /* Styles applied to the tag elements, e.g. the chips if `size=\"small\"`. */\n    tagSizeSmall: {\n      margin: 2,\n      maxWidth: 'calc(100% - 4px)'\n    },\n\n    /* Styles applied to the Input element. */\n    inputRoot: {\n      flexWrap: 'wrap',\n      paddingRight: 62,\n      '& $input': {\n        width: 0,\n        minWidth: 30\n      },\n      '&[class*=\"MuiInput-root\"]': {\n        paddingBottom: 1,\n        '& $input': {\n          padding: 4\n        },\n        '& $input:first-child': {\n          padding: '6px 0'\n        }\n      },\n      '&[class*=\"MuiInput-root\"][class*=\"MuiInput-marginDense\"]': {\n        '& $input': {\n          padding: '4px 4px 5px'\n        },\n        '& $input:first-child': {\n          padding: '3px 0 6px'\n        }\n      },\n      '&[class*=\"MuiOutlinedInput-root\"]': {\n        padding: 9,\n        paddingRight: 62,\n        '& $input': {\n          padding: '9.5px 4px'\n        },\n        '& $input:first-child': {\n          paddingLeft: 6\n        },\n        '& $endAdornment': {\n          right: 7\n        }\n      },\n      '&[class*=\"MuiOutlinedInput-root\"][class*=\"MuiOutlinedInput-marginDense\"]': {\n        padding: 6,\n        paddingRight: 62,\n        '& $input': {\n          padding: '4.5px 4px'\n        }\n      },\n      '&[class*=\"MuiFilledInput-root\"]': {\n        paddingTop: 19,\n        paddingLeft: 8,\n        '& $input': {\n          padding: '9px 4px'\n        },\n        '& $endAdornment': {\n          right: 7\n        }\n      },\n      '&[class*=\"MuiFilledInput-root\"][class*=\"MuiFilledInput-marginDense\"]': {\n        paddingBottom: 1,\n        '& $input': {\n          padding: '4.5px 4px'\n        }\n      }\n    },\n\n    /* Styles applied to the input element. */\n    input: {\n      flexGrow: 1,\n      textOverflow: 'ellipsis',\n      opacity: 0\n    },\n\n    /* Styles applied to the input element if tag focused. */\n    inputFocused: {\n      opacity: 1\n    },\n\n    /* Styles applied to the endAdornment element. */\n    endAdornment: {\n      // We use a position absolute to support wrapping tags.\n      position: 'absolute',\n      right: 0,\n      top: 'calc(50% - 14px)' // Center vertically\n\n    },\n\n    /* Styles applied to the clear indictator. */\n    clearIndicator: {\n      marginRight: -2,\n      padding: 4,\n      color: theme.palette.action.active,\n      visibility: 'hidden'\n    },\n\n    /* Styles applied to the clear indictator if the input is dirty. */\n    clearIndicatorDirty: {},\n\n    /* Styles applied to the popup indictator. */\n    popupIndicator: {\n      padding: 2,\n      marginRight: -2,\n      color: theme.palette.action.active\n    },\n\n    /* Styles applied to the popup indictator if the popup is open. */\n    popupIndicatorOpen: {\n      transform: 'rotate(180deg)'\n    },\n\n    /* Styles applied to the popper element. */\n    popper: {\n      zIndex: theme.zIndex.modal\n    },\n\n    /* Styles applied to the popper element if `disablePortal={true}`. */\n    popperDisablePortal: {\n      position: 'absolute'\n    },\n\n    /* Styles applied to the `Paper` component. */\n    paper: _extends({}, theme.typography.body1, {\n      overflow: 'hidden',\n      margin: '4px 0',\n      '& > ul': {\n        maxHeight: '40vh',\n        overflow: 'auto'\n      }\n    }),\n\n    /* Styles applied to the `listbox` component. */\n    listbox: {\n      listStyle: 'none',\n      margin: 0,\n      padding: '8px 0px',\n      position: 'relative'\n    },\n\n    /* Styles applied to the loading wrapper. */\n    loading: {\n      color: theme.palette.text.secondary,\n      padding: '14px 16px'\n    },\n\n    /* Styles applied to the no option wrapper. */\n    noOptions: {\n      color: theme.palette.text.secondary,\n      padding: '14px 16px'\n    },\n\n    /* Styles applied to the option elements. */\n    option: (_option = {\n      minHeight: 48,\n      display: 'flex',\n      justifyContent: 'flex-start',\n      alignItems: 'center',\n      cursor: 'pointer',\n      paddingTop: 6,\n      boxSizing: 'border-box',\n      outline: '0',\n      WebkitTapHighlightColor: 'transparent',\n      paddingBottom: 6,\n      paddingLeft: 16,\n      paddingRight: 16\n    }, _defineProperty(_option, theme.breakpoints.up('sm'), {\n      minHeight: 'auto'\n    }), _defineProperty(_option, '&[aria-selected=\"true\"]', {\n      backgroundColor: theme.palette.action.selected\n    }), _defineProperty(_option, '&[data-focus=\"true\"]', {\n      backgroundColor: theme.palette.action.hover\n    }), _defineProperty(_option, '&[aria-disabled=\"true\"]', {\n      opacity: 0.5,\n      pointerEvents: 'none'\n    }), _defineProperty(_option, '&:active', {\n      backgroundColor: theme.palette.action.selected\n    }), _option),\n\n    /* Styles applied to the group's label elements. */\n    groupLabel: {\n      backgroundColor: theme.palette.background.paper,\n      top: -8\n    },\n\n    /* Styles applied to the group's ul elements. */\n    groupUl: {\n      padding: 0\n    }\n  };\n};\n\nfunction DisablePortal(props) {\n  // eslint-disable-next-line react/prop-types\n  var anchorEl = props.anchorEl,\n      open = props.open,\n      other = _objectWithoutProperties(props, [\"anchorEl\", \"open\"]);\n\n  return React.createElement(\"div\", other);\n}\n\nvar _ref = React.createElement(CloseIcon, {\n  fontSize: \"small\"\n});\n\nvar _ref2 = React.createElement(ArrowDropDownIcon, null);\n\nvar Autocomplete = React.forwardRef(function Autocomplete(props, ref) {\n  /* eslint-disable no-unused-vars */\n  var _props$autoComplete = props.autoComplete,\n      autoComplete = _props$autoComplete === void 0 ? false : _props$autoComplete,\n      _props$autoHighlight = props.autoHighlight,\n      autoHighlight = _props$autoHighlight === void 0 ? false : _props$autoHighlight,\n      _props$autoSelect = props.autoSelect,\n      autoSelect = _props$autoSelect === void 0 ? false : _props$autoSelect,\n      _props$blurOnSelect = props.blurOnSelect,\n      blurOnSelect = _props$blurOnSelect === void 0 ? false : _props$blurOnSelect,\n      ChipProps = props.ChipProps,\n      classes = props.classes,\n      className = props.className,\n      _props$clearOnEscape = props.clearOnEscape,\n      clearOnEscape = _props$clearOnEscape === void 0 ? false : _props$clearOnEscape,\n      _props$clearText = props.clearText,\n      clearText = _props$clearText === void 0 ? 'Clear' : _props$clearText,\n      _props$closeIcon = props.closeIcon,\n      closeIcon = _props$closeIcon === void 0 ? _ref : _props$closeIcon,\n      _props$closeText = props.closeText,\n      closeText = _props$closeText === void 0 ? 'Close' : _props$closeText,\n      _props$debug = props.debug,\n      debug = _props$debug === void 0 ? false : _props$debug,\n      defaultValue = props.defaultValue,\n      _props$disableClearab = props.disableClearable,\n      disableClearable = _props$disableClearab === void 0 ? false : _props$disableClearab,\n      _props$disableCloseOn = props.disableCloseOnSelect,\n      disableCloseOnSelect = _props$disableCloseOn === void 0 ? false : _props$disableCloseOn,\n      _props$disabled = props.disabled,\n      disabled = _props$disabled === void 0 ? false : _props$disabled,\n      _props$disableListWra = props.disableListWrap,\n      disableListWrap = _props$disableListWra === void 0 ? false : _props$disableListWra,\n      _props$disableOpenOnF = props.disableOpenOnFocus,\n      disableOpenOnFocus = _props$disableOpenOnF === void 0 ? false : _props$disableOpenOnF,\n      _props$disablePortal = props.disablePortal,\n      disablePortal = _props$disablePortal === void 0 ? false : _props$disablePortal,\n      filterOptions = props.filterOptions,\n      _props$filterSelected = props.filterSelectedOptions,\n      filterSelectedOptions = _props$filterSelected === void 0 ? false : _props$filterSelected,\n      _props$forcePopupIcon = props.forcePopupIcon,\n      forcePopupIcon = _props$forcePopupIcon === void 0 ? 'auto' : _props$forcePopupIcon,\n      _props$freeSolo = props.freeSolo,\n      freeSolo = _props$freeSolo === void 0 ? false : _props$freeSolo,\n      getOptionDisabled = props.getOptionDisabled,\n      _props$getOptionLabel = props.getOptionLabel,\n      getOptionLabel = _props$getOptionLabel === void 0 ? function (x) {\n    return x;\n  } : _props$getOptionLabel,\n      getOptionSelected = props.getOptionSelected,\n      groupBy = props.groupBy,\n      idProp = props.id,\n      _props$includeInputIn = props.includeInputInList,\n      includeInputInList = _props$includeInputIn === void 0 ? false : _props$includeInputIn,\n      inputValueProp = props.inputValue,\n      _props$ListboxCompone = props.ListboxComponent,\n      ListboxComponent = _props$ListboxCompone === void 0 ? 'ul' : _props$ListboxCompone,\n      ListboxProps = props.ListboxProps,\n      _props$loading = props.loading,\n      loading = _props$loading === void 0 ? false : _props$loading,\n      _props$loadingText = props.loadingText,\n      loadingText = _props$loadingText === void 0 ? 'Loading…' : _props$loadingText,\n      _props$multiple = props.multiple,\n      multiple = _props$multiple === void 0 ? false : _props$multiple,\n      _props$noOptionsText = props.noOptionsText,\n      noOptionsText = _props$noOptionsText === void 0 ? 'No options' : _props$noOptionsText,\n      onChange = props.onChange,\n      onClose = props.onClose,\n      onInputChange = props.onInputChange,\n      onOpen = props.onOpen,\n      open = props.open,\n      _props$openText = props.openText,\n      openText = _props$openText === void 0 ? 'Open' : _props$openText,\n      _props$options = props.options,\n      options = _props$options === void 0 ? [] : _props$options,\n      _props$PaperComponent = props.PaperComponent,\n      PaperComponent = _props$PaperComponent === void 0 ? Paper : _props$PaperComponent,\n      _props$PopperComponen = props.PopperComponent,\n      PopperComponentProp = _props$PopperComponen === void 0 ? Popper : _props$PopperComponen,\n      _props$popupIcon = props.popupIcon,\n      popupIcon = _props$popupIcon === void 0 ? _ref2 : _props$popupIcon,\n      renderGroupProp = props.renderGroup,\n      renderInput = props.renderInput,\n      renderOptionProp = props.renderOption,\n      renderTags = props.renderTags,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 'medium' : _props$size,\n      valueProp = props.value,\n      other = _objectWithoutProperties(props, [\"autoComplete\", \"autoHighlight\", \"autoSelect\", \"blurOnSelect\", \"ChipProps\", \"classes\", \"className\", \"clearOnEscape\", \"clearText\", \"closeIcon\", \"closeText\", \"debug\", \"defaultValue\", \"disableClearable\", \"disableCloseOnSelect\", \"disabled\", \"disableListWrap\", \"disableOpenOnFocus\", \"disablePortal\", \"filterOptions\", \"filterSelectedOptions\", \"forcePopupIcon\", \"freeSolo\", \"getOptionDisabled\", \"getOptionLabel\", \"getOptionSelected\", \"groupBy\", \"id\", \"includeInputInList\", \"inputValue\", \"ListboxComponent\", \"ListboxProps\", \"loading\", \"loadingText\", \"multiple\", \"noOptionsText\", \"onChange\", \"onClose\", \"onInputChange\", \"onOpen\", \"open\", \"openText\", \"options\", \"PaperComponent\", \"PopperComponent\", \"popupIcon\", \"renderGroup\", \"renderInput\", \"renderOption\", \"renderTags\", \"size\", \"value\"]);\n  /* eslint-enable no-unused-vars */\n\n\n  var PopperComponent = disablePortal ? DisablePortal : PopperComponentProp;\n\n  var _useAutocomplete = useAutocomplete(props),\n      getRootProps = _useAutocomplete.getRootProps,\n      getInputProps = _useAutocomplete.getInputProps,\n      getInputLabelProps = _useAutocomplete.getInputLabelProps,\n      getPopupIndicatorProps = _useAutocomplete.getPopupIndicatorProps,\n      getClearProps = _useAutocomplete.getClearProps,\n      getTagProps = _useAutocomplete.getTagProps,\n      getListboxProps = _useAutocomplete.getListboxProps,\n      getOptionProps = _useAutocomplete.getOptionProps,\n      value = _useAutocomplete.value,\n      dirty = _useAutocomplete.dirty,\n      id = _useAutocomplete.id,\n      popupOpen = _useAutocomplete.popupOpen,\n      focused = _useAutocomplete.focused,\n      focusedTag = _useAutocomplete.focusedTag,\n      anchorEl = _useAutocomplete.anchorEl,\n      setAnchorEl = _useAutocomplete.setAnchorEl,\n      inputValue = _useAutocomplete.inputValue,\n      groupedOptions = _useAutocomplete.groupedOptions;\n\n  var startAdornment;\n\n  if (multiple && value.length > 0) {\n    var getCustomizedTagProps = function getCustomizedTagProps(params) {\n      return _extends({\n        className: clsx(classes.tag, {\n          small: classes.tagSizeSmall\n        }[size]),\n        disabled: disabled\n      }, getTagProps(params));\n    };\n\n    if (renderTags) {\n      startAdornment = renderTags(value, getCustomizedTagProps);\n    } else {\n      startAdornment = value.map(function (option, index) {\n        return React.createElement(Chip, _extends({\n          label: getOptionLabel(option),\n          size: size\n        }, getCustomizedTagProps({\n          index: index\n        }), ChipProps));\n      });\n    }\n  }\n\n  var defaultRenderGroup = function defaultRenderGroup(params) {\n    return React.createElement(\"li\", {\n      key: params.key\n    }, React.createElement(ListSubheader, {\n      className: classes.groupLabel,\n      component: \"div\"\n    }, params.key), React.createElement(\"ul\", {\n      className: classes.groupUl\n    }, params.children));\n  };\n\n  var renderGroup = renderGroupProp || defaultRenderGroup;\n  var renderOption = renderOptionProp || getOptionLabel;\n\n  var renderListOption = function renderListOption(option, index) {\n    var optionProps = getOptionProps({\n      option: option,\n      index: index\n    });\n    return React.createElement(\"li\", _extends({}, optionProps, {\n      className: classes.option\n    }), renderOption(option, {\n      selected: optionProps['aria-selected'],\n      inputValue: inputValue\n    }));\n  };\n\n  return React.createElement(React.Fragment, null, React.createElement(\"div\", _extends({\n    ref: ref,\n    className: clsx(classes.root, className, focused && classes.focused)\n  }, getRootProps(other)), renderInput({\n    id: id,\n    disabled: disabled,\n    size: size === 'small' ? 'small' : undefined,\n    InputLabelProps: getInputLabelProps(),\n    InputProps: {\n      ref: setAnchorEl,\n      className: classes.inputRoot,\n      startAdornment: startAdornment,\n      endAdornment: React.createElement(\"div\", {\n        className: classes.endAdornment\n      }, disableClearable || disabled ? null : React.createElement(IconButton, _extends({}, getClearProps(), {\n        \"aria-label\": clearText,\n        title: clearText,\n        className: clsx(classes.clearIndicator, dirty && classes.clearIndicatorDirty)\n      }), closeIcon), (!freeSolo || forcePopupIcon === true) && forcePopupIcon !== false ? React.createElement(IconButton, _extends({}, getPopupIndicatorProps(), {\n        disabled: disabled,\n        \"aria-label\": popupOpen ? closeText : openText,\n        title: popupOpen ? closeText : openText,\n        className: clsx(classes.popupIndicator, popupOpen && classes.popupIndicatorOpen)\n      }), popupIcon) : null)\n    },\n    inputProps: _extends({\n      className: clsx(classes.input, focusedTag === -1 && classes.inputFocused),\n      disabled: disabled\n    }, getInputProps())\n  })), popupOpen && anchorEl ? React.createElement(PopperComponent, {\n    className: clsx(classes.popper, disablePortal && classes.popperDisablePortal),\n    style: {\n      width: anchorEl ? anchorEl.clientWidth : null\n    },\n    role: \"presentation\",\n    anchorEl: anchorEl,\n    open: true\n  }, React.createElement(PaperComponent, {\n    className: classes.paper\n  }, loading && groupedOptions.length === 0 ? React.createElement(\"div\", {\n    className: classes.loading\n  }, loadingText) : null, groupedOptions.length === 0 && !freeSolo && !loading ? React.createElement(\"div\", {\n    className: classes.noOptions\n  }, noOptionsText) : null, groupedOptions.length > 0 ? React.createElement(ListboxComponent, _extends({\n    className: classes.listbox\n  }, getListboxProps(), ListboxProps), groupedOptions.map(function (option, index) {\n    if (groupBy) {\n      return renderGroup({\n        key: option.key,\n        children: option.options.map(function (option2, index2) {\n          return renderListOption(option2, option.index + index2);\n        })\n      });\n    }\n\n    return renderListOption(option, index);\n  })) : null)) : null);\n});\nprocess.env.NODE_ENV !== \"production\" ? Autocomplete.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * If `true`, the portion of the selected suggestion that has not been typed by the user,\n   * known as the completion string, appears inline after the input cursor in the textbox.\n   * The inline completion string is visually highlighted and has a selected state.\n   */\n  autoComplete: PropTypes.bool,\n\n  /**\n   * If `true`, the first option is automatically highlighted.\n   */\n  autoHighlight: PropTypes.bool,\n\n  /**\n   * If `true`, the selected option becomes the value of the input\n   * when the Autocomplete loses focus unless the user chooses\n   * a different option or changes the character string in the input.\n   */\n  autoSelect: PropTypes.bool,\n\n  /**\n   * Control if the input should be blurred when an option is selected:\n   *\n   * - `false` the input is not blurred.\n   * - `true` the input is always blurred.\n   * - `touch` the input is blurred after a touch event.\n   * - `mouse` the input is blurred after a mouse event.\n   */\n  blurOnSelect: PropTypes.oneOfType([PropTypes.oneOf(['mouse', 'touch']), PropTypes.bool]),\n\n  /**\n   * Props applied to the [`Chip`](/api/chip/) element.\n   */\n  ChipProps: PropTypes.object,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, clear all values when the user presses escape and the popup is closed.\n   */\n  clearOnEscape: PropTypes.bool,\n\n  /**\n   * Override the default text for the *clear* icon button.\n   *\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\n   */\n  clearText: PropTypes.string,\n\n  /**\n   * The icon to display in place of the default close icon.\n   */\n  closeIcon: PropTypes.node,\n\n  /**\n   * Override the default text for the *close popup* icon button.\n   *\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\n   */\n  closeText: PropTypes.string,\n\n  /**\n   * If `true`, the popup will ignore the blur event if the input if filled.\n   * You can inspect the popup markup with your browser tools.\n   * Consider this option when you need to customize the component.\n   */\n  debug: PropTypes.bool,\n\n  /**\n   * The default input value. Use when the component is not controlled.\n   */\n  defaultValue: PropTypes.any,\n\n  /**\n   * If `true`, the input can't be cleared.\n   */\n  disableClearable: PropTypes.bool,\n\n  /**\n   * If `true`, the popup won't close when a value is selected.\n   */\n  disableCloseOnSelect: PropTypes.bool,\n\n  /**\n   * If `true`, the input will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the list box in the popup will not wrap focus.\n   */\n  disableListWrap: PropTypes.bool,\n\n  /**\n   * If `true`, the popup won't open on input focus.\n   */\n  disableOpenOnFocus: PropTypes.bool,\n\n  /**\n   * Disable the portal behavior.\n   * The children stay within it's parent DOM hierarchy.\n   */\n  disablePortal: PropTypes.bool,\n\n  /**\n   * A filter function that determines the options that are eligible.\n   *\n   * @param {any[]} options The options to render.\n   * @param {object} state The state of the component.\n   * @returns {any[]}\n   */\n  filterOptions: PropTypes.func,\n\n  /**\n   * If `true`, hide the selected options from the list box.\n   */\n  filterSelectedOptions: PropTypes.bool,\n\n  /**\n   * Force the visibility display of the popup icon.\n   */\n  forcePopupIcon: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.bool]),\n\n  /**\n   * If `true`, the Autocomplete is free solo, meaning that the user input is not bound to provided options.\n   */\n  freeSolo: PropTypes.bool,\n\n  /**\n   * Used to determine the disabled state for a given option.\n   */\n  getOptionDisabled: PropTypes.func,\n\n  /**\n   * Used to determine the string value for a given option.\n   * It's used to fill the input (and the list box options if `renderOption` is not provided).\n   */\n  getOptionLabel: PropTypes.func,\n\n  /**\n   * Used to determine if an option is selected.\n   * Uses strict equality by default.\n   */\n  getOptionSelected: PropTypes.func,\n\n  /**\n   * If provided, the options will be grouped under the returned string.\n   * The groupBy value is also used as the text for group headings when `renderGroup` is not provided.\n   *\n   * @param {any} options The option to group.\n   * @returns {string}\n   */\n  groupBy: PropTypes.func,\n\n  /**\n   * This prop is used to help implement the accessibility logic.\n   * If you don't provide this prop. It falls back to a randomly generated id.\n   */\n  id: PropTypes.string,\n\n  /**\n   * If `true`, the highlight can move to the input.\n   */\n  includeInputInList: PropTypes.bool,\n\n  /**\n   * The input value.\n   */\n  inputValue: PropTypes.string,\n\n  /**\n   * The component used to render the listbox.\n   */\n  ListboxComponent: PropTypes.elementType,\n\n  /**\n   * Props applied to the Listbox element.\n   */\n  ListboxProps: PropTypes.object,\n\n  /**\n   * If `true`, the component is in a loading state.\n   */\n  loading: PropTypes.bool,\n\n  /**\n   * Text to display when in a loading state.\n   *\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\n   */\n  loadingText: PropTypes.node,\n\n  /**\n   * If `true`, `value` must be an array and the menu will support multiple selections.\n   */\n  multiple: PropTypes.bool,\n\n  /**\n   * Text to display when there are no options.\n   *\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\n   */\n  noOptionsText: PropTypes.node,\n\n  /**\n   * Callback fired when the value changes.\n   *\n   * @param {object} event The event source of the callback.\n   * @param {any} value\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * Callback fired when the popup requests to be closed.\n   * Use in controlled mode (see open).\n   *\n   * @param {object} event The event source of the callback.\n   */\n  onClose: PropTypes.func,\n\n  /**\n   * Callback fired when the input value changes.\n   *\n   * @param {object} event The event source of the callback.\n   * @param {string} value The new value of the text input.\n   * @param {string} reason Can be: \"input\" (user input), \"reset\" (programmatic change), `\"clear\"`.\n   */\n  onInputChange: PropTypes.func,\n\n  /**\n   * Callback fired when the popup requests to be opened.\n   * Use in controlled mode (see open).\n   *\n   * @param {object} event The event source of the callback.\n   */\n  onOpen: PropTypes.func,\n\n  /**\n   * Control the popup` open state.\n   */\n  open: PropTypes.bool,\n\n  /**\n   * Override the default text for the *open popup* icon button.\n   *\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\n   */\n  openText: PropTypes.string,\n\n  /**\n   * Array of options.\n   */\n  options: PropTypes.array,\n\n  /**\n   * The component used to render the body of the popup.\n   */\n  PaperComponent: PropTypes.elementType,\n\n  /**\n   * The component used to position the popup.\n   */\n  PopperComponent: PropTypes.elementType,\n\n  /**\n   * The icon to display in place of the default popup icon.\n   */\n  popupIcon: PropTypes.node,\n\n  /**\n   * Render the group.\n   *\n   * @param {any} option The group to render.\n   * @returns {ReactNode}\n   */\n  renderGroup: PropTypes.func,\n\n  /**\n   * Render the input.\n   *\n   * @param {object} params\n   * @returns {ReactNode}\n   */\n  renderInput: PropTypes.func.isRequired,\n\n  /**\n   * Render the option, use `getOptionLabel` by default.\n   *\n   * @param {any} option The option to render.\n   * @param {object} state The state of the component.\n   * @returns {ReactNode}\n   */\n  renderOption: PropTypes.func,\n\n  /**\n   * Render the selected value.\n   *\n   * @param {any} value The `value` provided to the component.\n   * @param {function} getTagProps A tag props getter.\n   * @returns {ReactNode}\n   */\n  renderTags: PropTypes.func,\n\n  /**\n   * The size of the autocomplete.\n   */\n  size: PropTypes.oneOf(['medium', 'small']),\n\n  /**\n   * The value of the autocomplete.\n   *\n   * The value must have reference equality with the option in order to be selected.\n   * You can customize the equality behavior with the `getOptionSelected` prop.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiAutocomplete'\n})(Autocomplete);"],"sourceRoot":""}