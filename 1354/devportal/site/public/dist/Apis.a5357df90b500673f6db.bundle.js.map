{"version":3,"sources":["webpack:///./node_modules/@material-ui/lab/esm/internal/svg-icons/Star.js","webpack:///./node_modules/@material-ui/lab/esm/Rating/Rating.js","webpack:///./source/src/app/components/Apis/Listing/StarRatingBar.jsx","webpack:///./source/src/app/components/Apis/Listing/Background.jsx","webpack:///./source/src/app/components/Apis/Listing/ImageGenerator.jsx","webpack:///./node_modules/@material-ui/icons/StarRate.js","webpack:///./source/src/app/components/Shared/AppsAndKeys/ViewToken.jsx","webpack:///./source/src/app/components/Shared/AppsAndKeys/ViewSecret.jsx","webpack:///./source/src/app/components/Apis/Details/StarRatingSummary.jsx","webpack:///./source/src/app/components/Shared/withSettingsContext.jsx","webpack:///./source/src/app/components/Apis/Listing/ApiThumb.jsx","webpack:///./source/src/app/components/Shared/AppsAndKeys/Tokens.jsx","webpack:///./source/src/app/components/Apis/Listing/ApiTagThumb.jsx","webpack:///./source/src/app/components/Apis/Listing/TagCloudListingTags.jsx","webpack:///./node_modules/@material-ui/icons/Cancel.js","webpack:///./source/src/app/components/Apis/Listing/NoApi.jsx","webpack:///./source/src/app/components/Shared/LeftMenuItem.jsx","webpack:///./node_modules/@material-ui/icons/CloudDownloadRounded.js","webpack:///./source/src/app/components/Apis/Listing/TagCloudListing.jsx","webpack:///./source/src/app/components/Shared/AppsAndKeys/SubscribeToApi.jsx","webpack:///./node_modules/react-tagcloud/lib/index.js","webpack:///./node_modules/react-tagcloud/lib/TagCloud.js","webpack:///./node_modules/react-tagcloud/lib/defaultRenderer.js","webpack:///./node_modules/shuffle-array/index.js","webpack:///./node_modules/randomcolor/randomColor.js","webpack:///./node_modules/react-tagcloud/lib/helpers.js","webpack:///./node_modules/@material-ui/icons/Code.js","webpack:///./node_modules/@material-ui/icons/MailOutline.js","webpack:///./node_modules/@material-ui/icons/Launch.js","webpack:///./node_modules/@material-ui/icons/Grade.js","webpack:///./node_modules/@material-ui/icons/ArrowBackIos.js","webpack:///./node_modules/@material-ui/icons/ArrowForwardIos.js","webpack:///./source/src/app/components/Apis/Listing/ApiBreadcrumbs.jsx","webpack:///./source/src/app/components/Apis/Listing/DocThumb.jsx","webpack:///./source/src/app/components/Apis/Listing/ApiTableView.jsx","webpack:///./source/src/app/components/Apis/Listing/APICategoryThumb.jsx","webpack:///./source/src/app/components/Apis/Listing/CategoryListingCategories.jsx","webpack:///./source/src/app/components/Apis/Listing/ApiTagCloud.jsx","webpack:///./source/src/app/components/Apis/Listing/RecommendedApiThumb.jsx","webpack:///./source/src/app/components/Apis/Listing/Recommendations.jsx","webpack:///./source/src/app/components/Apis/Listing/CommonListing.jsx","webpack:///./source/src/app/components/Apis/Details/Social/EmbadCode.jsx","webpack:///./source/src/app/components/Apis/Details/Social/Social.jsx","webpack:///./source/src/app/components/Apis/Details/Environments.jsx","webpack:///./source/src/app/components/Apis/Details/Labels.jsx","webpack:///./source/src/app/components/Apis/Details/InfoBar.jsx","webpack:///./source/src/app/components/Apis/Details/Credentials/Wizard/ButtonPanel.jsx","webpack:///./source/src/app/components/Apis/Details/Credentials/Wizard/CreateAppStep.jsx","webpack:///./source/src/app/components/Apis/Details/Credentials/Wizard/SubscribeToAppStep.jsx","webpack:///./source/src/app/components/Apis/Details/Credentials/Wizard/GenerateKeysStep.jsx","webpack:///./source/src/app/components/Apis/Details/Credentials/Wizard/GenerateAccessTokenStep.jsx","webpack:///./source/src/app/components/Apis/Details/Credentials/Wizard/CopyAccessTokenStep.jsx","webpack:///./source/src/app/components/Apis/Details/Credentials/Wizard/Wizard.jsx","webpack:///./source/src/app/components/Apis/Details/index.jsx","webpack:///./source/src/app/components/Apis/Apis.jsx","webpack:///./source/src/app/components/Apis/Details/ApiContext.jsx","webpack:///./source/src/app/components/Shared/InlineMessage.jsx"],"names":["createSvgIcon","createElement","d","roundValueToPrecision","value","precision","decimalPart","nearest","Math","round","Number","toFixed","toString","split","length","IconContainer","props","other","defaultIcon","Star","fontSize","defaultLabelText","concat","forwardRef","ref","classes","className","_props$disabled","disabled","emptyIcon","_props$emptyLabelText","emptyLabelText","_props$getLabelText","getLabelText","_props$icon","icon","_props$IconContainerC","IconContainerComponent","_props$max","max","nameProp","name","onChange","onChangeActive","onMouseLeave","onMouseMove","_props$precision","_props$readOnly","readOnly","_props$size","size","_props$value","valueProp","_React$useState","useState","defaultName","setDefaultName","useEffect","random","valueRounded","theme","useTheme","_React$useState2","hover","focus","_React$useState2$","setState","_useIsFocusVisible","useIsFocusVisible","isFocusVisible","onBlurVisible","focusVisibleRef","_React$useState3","focusVisible","setFocusVisible","rootRef","useRef","handleFocusRef","useForkRef","handleRef","handleChange","event","parseFloat","target","handleClear","clientX","clientY","handleFocus","newFocus","prev","handleBlur","item","propsItem","state","id","String","replace","container","filled","iconFilled","iconEmpty","iconHover","iconFocus","active","iconActive","Fragment","key","label","htmlFor","visuallyhidden","onFocus","onBlur","onClick","type","checked","percent","rootNode","current","_rootNode$getBounding","getBoundingClientRect","right","left","width","querySelector","direction","newHover","min","clamp","root","capitalize","role","defaultChecked","pristine","Array","from","map","_","index","itemValue","items","decimal","ceil","$","indexDecimal","itemDecimalValue","style","overflow","zIndex","position","withStyles","display","typography","pxToRem","color","cursor","WebkitTapHighlightColor","opacity","pointerEvents","outline","sizeSmall","sizeLarge","border","clip","height","margin","padding","top","bottom","transition","transitions","create","duration","shortest","palette","action","transform","StarRatingBar","React","Component","constructor","super","this","avgRating","userRating","count","total","getApiRating","bind","removeUserRating","doRate","componentDidUpdate","prevProps","ratingUpdate","componentDidMount","apiId","setRatingUpdate","user","AuthManager","getUser","api","Api","getRatingFromUser","then","response","body","pagination","rateIndex","ratingInfo","rating","addRating","catch","error","Alert","removeRatingOfUser","render","isEditable","showSummary","apiRating","apiRatingNumber","StarRatingSummary","reviewCount","returnCount","i","aria-label","iconButton","starRate","noStarRate","removeRating","defaultProps","propTypes","PropTypes","shape","isRequired","string","bool","oneOfType","number","func","custom","infoBar","starColor","grey","A200","getContrastText","thumbnail","contentBackgroundColor","background","justifyContent","alignItems","minWidth","borderRadius","withTheme","aHexToOpacity","aHex","substring","getColorWithoutAlpha","Background","colorPair","thumbnailBoxChild","rects","j","sub","push","fill","fillOpacity","x","y","primeColor","prime","svgImage","aria-hidden","objectFit","ImageGenerator","PureComponent","fixedIcon","category","backgroundIndex","randomBackgroundIndex","IconElement","str","colorPairs","backgrounds","document","MaterialIcons","categories","icons","randomIconIndex","charCodeAt","iconWrapper","Icon","_interopRequireDefault","Object","defineProperty","exports","default","_react","_default","ViewToken","tokenCopied","that","elementName","setTimeout","getTokeScopesString","tokenScopes","join","token","consumerSecret","secretWrapper","secret","variant","component","isOauth","defaultMessage","epWrapper","for","prodLabel","defaultValue","accessToken","multiline","fullWidth","rows","InputProps","disableUnderline","bootstrapRoot","input","bootstrapInput","InputLabelProps","shrink","bootstrapFormLabel","title","placement","text","onCopy","validityTime","array","marginTop","spacing","flex","marginRight","backgroundColor","apiDetailPages","tokenTextBoxBackground","fontFamily","borderColor","boxShadow","marginBottom","lineHeight","whiteSpace","contentWrapper","maxWidth","contentAreaWidth","leftMenu","paper","ViewSecret","secretCopied","common","white","ratingSummary","gutterBottom","align","withSettings","WrappedComponent","context","windowURL","window","URL","webkitURL","ApiThumb","selectedIcon","imageObj","isHover","imageLoaded","toggleMouseOver","getAPIThumbnail","data","headers","iconJson","JSON","parse","url","createObjectURL","finally","componentWillUnmount","revokeObjectURL","getPathPrefix","path","isMonetizationEnabled","detailsLink","customWidth","customHeight","showInfo","social","showRating","version","provider","businessInformation","businessOwner","trim","lifeCycleStatus","status","imageWidth","imageHeight","defaultImage","defaultApiImage","ImageView","src","alt","media","iconColor","class","to","textWrapper","onMouseOver","onMouseOut","raised","classNames","card","textblock","monetizationLabel","app","apiDetails","thumbHeader","handleRedirectToAPIOverview","row","thumbBy","thumbInfo","thumbLeft","thumbRight","contextBox","thumbLeftAction","ratingWrapper","chipWrapper","transportType","undefined","apiType","contextType","ApiContext","contentPictureOverlap","suppressLinkStyles","textDecoration","thumbContent","alignSelf","paddingTop","flexDirection","textOverflow","parseInt","textAlign","thumbWrapper","deleteIcon","secondary","imageWrapper","imageOverlap","MenuProps","PaperProps","maxHeight","tokens","field","accessTokenRequest","updateAccessTokenRequest","newRequest","currentTarget","scopesSelected","keyType","subscriptionScopes","FormControlOdd","quotaHelp","multiple","e","renderValue","selected","chips","chip","scope","contextTypes","intl","FormControl","flexWrap","ApiTagThumb","tag","mainPage","tagLink","tagWise","image","Typography","ListItem","button","ListItemIcon","ListItemText","primary","tagCloud","useStyles","makeStyles","mainTitle","mainTitleWrapper","flexGrow","listContentWrapper","linkTextWrapper","main","tagWiseThumbWrapper","filterTitle","fontWeight","paddingLeft","titleBackground","mainPageList","mainPageAllApis","TagCloudListingTags","showAllApis","useHistory","allTags","apisTagCloudGroup","filter","List","keys","Divider","messageWrapper","NoApi","xs","noApiImage","LeftMenuItem","setSelected","history","route","submenu","open","routeToCheck","strokeColor","iconSize","ditectCurrentMenu","location","pathname","test1","RegExp","test2","match","listen","activeBackground","leftMenuActive","leftMenuActiveSubmenu","leftLInk","leftLink_IconLeft","cloneElement","leftLink_Icon","noIcon","iconText","leftLInkText","leftLInkText_IconLeft","leftLInkText_NoText","element","withRouter","textTransform","LeftMenu","paddingBottom","paddingRight","caption","appBar","borderBottom","mainIconWrapper","content","iconDefault","TagCloudListing","setAllTags","API","getAllTags","list","console","log","strokeColorMain","subscribeToApi","appSelected","setAppSelected","policySelected","setPolicySelected","applicationsList","setApplicationsList","throttlingPolicyList","applicationsAvailable","subscriptionRequest","updateSubscriptionRequest","renderSmall","tierName","applicationId","throttlingPolicy","subscribeRoot","subscribeRootSmall","md","smallDisplay","options","getOptionLabel","option","renderInput","params","smallDisplayFix","displayEmpty","selectEmpty","policy","appDropDown","tierPlan","selectMenuRoot","monetizationAttributes","pricePerRequest","currencyType","fixedPrice","billingCycle","arrayOf","titleBar","borderBottomWidth","borderBottomStyle","buttonLeft","buttonRight","marginLeft","buttonsWrapper","legend","inputText","buttonRightLink","_TagCloud","enumerable","get","TagCloud","_createClass","defineProperties","descriptor","configurable","writable","Constructor","protoProps","staticProps","prototype","_react2","_propTypes2","_defaultRenderer","_shuffleArray2","_randomcolor2","_helpers","obj","__esModule","_toConsumableArray","arr","isArray","arr2","eventHandlers","cloudProps","generateColor","_ref","disableRandomColor","colorOptions","_React$Component","instance","TypeError","_classCallCheck","self","call","ReferenceError","_possibleConstructorReturn","__proto__","getPrototypeOf","apply","arguments","subClass","superClass","setPrototypeOf","_inherits","newProps","propsEqual","propertiesEqual","arraysEqual","tags","_populate","omitProps","tagElements","_attachEventHandlers","_this2","cloudHandlers","includeProps","_data","_ref2","elem","renderer","tagHandlers","globalHandlers","reduce","r","k","shuffle","minSize","maxSize","randomNumberGenerator","counts","fontSizeConverter","copy","rng","object","defaultRenderer","_objectAssign2","styles","verticalAlign","Error","temp","collection","len","slice","floor","pick","picks","splice","module","seed","colorDictionary","defineColor","randomColor","MAX_SAFE_INTEGER","stringToInteger","H","S","totalColors","colors","hsv","format","HSVtoHSL","hsl","hslColor","HSVtoRGB","rgb","componentToHex","c","hex","HSVtoHex","setFormat","hue","randomWithin","colorInput","hueRange","getHueRange","pickHue","luminosity","saturationRange","getColorInfo","getSaturationRange","sMin","sMax","pickSaturation","bMin","lowerBounds","s1","v1","s2","v2","m","getMinimumBrightness","bMax","pickBrightness","colorName","range","rnd","brightnessRange","h","s","v","h_i","f","p","q","t","g","b","indexOf","arr1","every","o","o1","o2","properties","prop","link","linkNotActive","selectedTagText","textIndent","apiGroup","ApiBreadcrumbs","selectedTag","Paper","elevation","Breadcrumbs","Link","CustomIcon","DocThumb","loading","overview_link","isRedirect","openMoreMenu","doc","sourceType","apiName","apiVersion","apiUUID","details_link","minHeight","ApiTableView","gridView","themeAdditions","muiTheme","overrides","MUIDataTable","tableRoot","listView","tableBodyEvenBackgrund","tableBodyOddBackgrund","tableHeadBackground","MUIDataTablePagination","MuiMenuItem","MUIDataTableToolbar","MUIDataTableBodyCell","systemTheme","merge","DefaultConfigurations","Configurations","cloneDeep","dataTableTheme","createMuiTheme","xhrRequest","setTenantDomain","code","formatMessage","query","page","rowsPerPage","searchQuery","URLSearchParams","composeQuery","queryString","limit","offset","search","getAllAPIs","localStorage","getItem","pageType","getData","columns","customBodyRender","tableMeta","updateValue","tableViewObj","rowData","artifact","rowIndex","sort","apiNameLink","rowImageOverride","filterType","responsive","serverSide","onTableChange","tableState","changePage","selectableRows","onChangeRowsPerPage","numberOfRows","setItem","customRowRender","dataIndex","print","download","viewColumns","customToolbar","Loading","getMuiTheme","injectIntl","listViewIconSize","APICategoryThumb","categoryLink","CategoryListingCategories","allCategories","clickablePointer","ApiTagCloud","apisTagWithoutGroups","tagSearchURL","handleOnClick","listType","RecommendedApiThumb","Card","CardMedia","CardContent","Chip","unit","Recommendations","assign","getApiRecommendations","rowsPerPageOptions","CommonListing","prevState","showLeftMenu","enabled","settings","monetizationEnabled","recommendationEnabled","isRecommendationEnabled","defaultApiView","showToggle","restApiClient","apiCategories","tagCloudActive","splits","splitTagArray","tagPaneVisible","categoryPaneVisible","sliderButton","toggleLeftMenu","LeftMenuForSlider","rotatedText","contentWithoutTags","contentWithTagsHidden","contentWithTags","IconButton","setListType","iconSelected","Provider","Settings","rightIcon","ListingWrapper","listGridSelectedColor","sliderWidth","overflowY","sliderBackground","transformOrigin","recommendationsBar","getModalStyle","shadows","codeIcon","iconStyle","modalStyle","setOpen","codeCopied","setCodeCopied","searchParams","set","embadCode","Modal","onClose","aria-labelledby","aria-describedby","Tooltip","socialLink","oneFlex","socialLinkWrapper","divider","borderRight","useContext","apiUrl","encodeURI","github_repo","github","slack_url","slack","additionalProperties","showSharing","showFacebook","showReddit","showTwitter","showEmbad","showEmail","href","rel","Environments","urlCopied","apiClient","downloadWSDL","environmentName","getWsdlClient","downloadWSDLForEnvironment","done","Utils","downloadFile","process","downloadSwagger","environment","getSwaggerByAPIIdAndEnvironment","Grid","envRoot","endpointURLs","endpoint","ExpansionPanel","ExpansionPanelSummary","expandIcon","aria-controls","iconAligner","environmentType","iconEven","iconTextWrapper","heading","ExpansionPanelDetails","URLs","http","https","ws","wss","TextField","inputProps","defaultVersionURLs","Button","buttonIcon","ingressURLs","envType","clusterDetails","cluster","clusterName","clusterDisplayName","ingressURL","light","iconOdd","Labels","getSwaggerByAPIIdAndLabel","labels","accessUrls","propertyDisplaySuffix","InfoBar","showOverview","todo","applications","policies","dropDownApplications","dropDownPolicies","notFound","tabValue","comment","commentList","getSchema","getProvider","getProviderMail","mail","businessOwnerEmail","getTechnical","owner","technicalOwner","getTechnicalMail","technicalOwnerEmail","getKeyManagers","keyManagers","newAPI","getGraphQLSchemaByAPIId","windowUrl","binary","Blob","anchor","click","ratings","prodUrlCopied","sandboxUrlCopied","epUrl","showThumbnail","apisTagsWithoutGroups","additionalProperties__display","aProp","resourceNotFountMessage","ResourceNotFound","message","infoBarMain","linkTitle","VerticalDivider","advertiseInfo","advertised","originalStoreUrl","viewInPubStoreLauncher","linkText","Collapse","in","infoContent","description","Table","table","TableBody","TableRow","TableCell","leftCol","apiOwner","contentToTop","displayProp","infoContentBottom","expandWrapper","toggleOverview","buttonView","buttonOverviewText","leftMenuHorizontal","leftMenuVerticalLeft","leftMenuVerticalRight","leftLInkMain","leftLInkMainText","detailsContent","contentLoader","contentLoaderRightMenu","mainBack","infoBarHeight","backIcon","backText","iconEvenColor","iconOddColor","verticlaAlign","tagChipBackground","mt","mr","pl","ButtonPanel","currentStep","handleCurrentStep","handleReset","nextActive","updateSubscriptionData","Box","stepsLength","appCreateFormWrapper","warningIcon","APPLICATION_STATES","setThrottlingPolicyList","applicationRequest","setApplicationRequest","tokenType","groups","attributes","isNameValid","setIsNameValid","allAppAttributes","setAllAppAttributes","setNotFound","hasValidKM","setHasValidKM","setCreatedApp","incrementStep","setStepStatus","stepStatuses","apiObject","promiseTiers","getAllTiers","promisedAttributes","getAllApplicationAttributes","promisedKeyManagers","Promise","all","tierResponse","allAttributes","throttlingPolicyListLocal","allAppAttr","hidden","responseKeyManagerList","px","ApplicationCreateForm","updateApplicationRequest","validateName","resolve","reject","handleAttributesChange","newApplicationRequest","isRequiredAttribute","attribute","required","getAttributeValue","handleDeleteChip","appGroups","values","handleAddChip","createApplication","appCreated","PROCEED","BLOCKED","mb","ml","InlineMessage","SUBSCRIPTION_STATES","newApp","setNewApp","tiers","createdApp","newSubscriptionRequest","tierData","SubscribeToApi","subscribe","subscriptionId","info","keyConfigWrapper","radioWrapper","subTitle","tabPanel","hr","muiFormGroupRoot","node","any","generateKeysStep","useIntl","keyStates","selectedType","setSelectedType","setNextActive","isUserOwner","setIsUserOwner","keyManager","setKeyManager","selectedTab","setSelectedTab","keyRequest","setKeyRequest","supportedGrantTypes","callbackUrl","setCreatedKeyType","setCreatedSelectedTab","selectedKeyManager","responseKeyManagerList_default","newKeyRequest","availableGrantTypes","includes","lg","FormHelperText","displayName","tokenEndpoint","revokeEndpoint","userInfoEndpoint","gt","grantTypes","Application","application","generateKeys","keyState","tokenWrapper","setKeyType","setSubscriptionScopes","setAccessTokenRequest","timeout","setCreatedToken","createdKeyType","createdSelectedTab","getKeys","subscriptionScopesList","messages","defineMessages","dataInfo","Tokens","generateToken","stepComponents","CreateAppStep","SubscribeToAppStep","GenerateKeysStep","GenerateAccessTokenStep","createdToken","handleRedirectTest","my","mx","Wizard","stepStatus","steps","redirect","CurrentStepComponent","titleSub","py","Stepper","activeStep","Step","StepLabel","boxWrapper","handleNext","pt","toolbar","subscribeTitle","plainContent","instructions","wizardContent","ApiConsole","lazy","GraphQLConsole","Overview","Documents","Credentials","Comments","Sdk","LoadableSwitch","apiUuid","redirectURL","tryoutRoute","fallback","Progress","exact","Details","callback","existingSubscriptions","promisedApplications","restApi","getAPIById","api_uuid","user1","User","isSideBarOpen","getSubscriptions","subscriptionLimit","subscribeApplicationLimit","getAllApplications","subscriptions","subscribedApplications","acc","cur","applicationInfo","subscribedAppIds","filteredApp","overviewHiden","xo","setDetailsAPI","handleDrawerClose","handleDrawerOpen","prevApiUuid","newApiUuid","setUser","rootIconSize","rootIconTextVisible","rootIconVisible","showCredentials","showComments","showTryout","showDocuments","showSdks","prefix","sufix","globalStyle","pathPrefix","isWidget","Helmet","leftMenuVerticalLeftMinView","contentExpandView","innerRef","shiftToLeft","shiftToRight","shiftToLeftMinView","shiftToRightMinView","leftMenuPaddingLeft","backgroundImage","overflowX","rootBackground","shiftLeft","createContext","handleMenuSelect","expanded","messgeType","iconItem","children"],"mappings":"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","file":"Apis.a5357df90b500673f6db.bundle.js","sourcesContent":["import React from 'react';\nimport createSvgIcon from './createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M12 17.27L18.18 21l-1.64-7.03L22 9.24l-7.19-.61L12 2 9.19 8.63 2 9.24l5.46 4.73L5.82 21z\"\n}), 'Star');","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { chainPropTypes } from '@material-ui/utils';\nimport { useTheme, withStyles } from '@material-ui/core/styles';\nimport { capitalize, useForkRef, useIsFocusVisible } from '@material-ui/core/utils';\nimport Star from '../internal/svg-icons/Star';\n\nfunction clamp(value, min, max) {\n  if (value < min) {\n    return min;\n  }\n\n  if (value > max) {\n    return max;\n  }\n\n  return value;\n}\n\nfunction getDecimalPrecision(num) {\n  var decimalPart = num.toString().split('.')[1];\n  return decimalPart ? decimalPart.length : 0;\n}\n\nfunction roundValueToPrecision(value, precision) {\n  if (value == null) {\n    return value;\n  }\n\n  var nearest = Math.round(value / precision) * precision;\n  return Number(nearest.toFixed(getDecimalPrecision(precision)));\n}\n\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      display: 'inline-flex',\n      position: 'relative',\n      fontSize: theme.typography.pxToRem(24),\n      color: '#ffb400',\n      cursor: 'pointer',\n      WebkitTapHighlightColor: 'transparent',\n      '&$disabled': {\n        opacity: 0.5,\n        pointerEvents: 'none'\n      },\n      '&$focusVisible $iconActive': {\n        outline: '1px solid #999'\n      }\n    },\n\n    /* Styles applied to the root element if `size=\"small\"`. */\n    sizeSmall: {\n      fontSize: theme.typography.pxToRem(18)\n    },\n\n    /* Styles applied to the root element if `size=\"large\"`. */\n    sizeLarge: {\n      fontSize: theme.typography.pxToRem(30)\n    },\n\n    /* Styles applied to the root element if `readOnly={true}`. */\n    readOnly: {\n      pointerEvents: 'none'\n    },\n\n    /* Pseudo-class applied to the root element if `disabled={true}`. */\n    disabled: {},\n\n    /* Pseudo-class applied to the root element if keyboard focused. */\n    focusVisible: {},\n\n    /* Visually hide an element. */\n    visuallyhidden: {\n      border: 0,\n      clip: 'rect(0 0 0 0)',\n      height: 1,\n      margin: -1,\n      color: '#000',\n      overflow: 'hidden',\n      padding: 0,\n      position: 'absolute',\n      top: 20,\n      width: 1\n    },\n\n    /* Styles applied to the pristine label. */\n    pristine: {\n      'input:focus ~ &': {\n        top: 0,\n        bottom: 0,\n        position: 'absolute',\n        outline: '1px solid #999',\n        width: '100%'\n      }\n    },\n\n    /* Styles applied to the label elements. */\n    label: {\n      cursor: 'inherit'\n    },\n\n    /* Styles applied to the icon wrapping elements. */\n    icon: {\n      display: 'flex',\n      transition: theme.transitions.create('transform', {\n        duration: theme.transitions.duration.shortest\n      }),\n      // Fix mouseLeave issue.\n      // https://github.com/facebook/react/issues/4492\n      pointerEvents: 'none'\n    },\n\n    /* Styles applied to the icon wrapping elements when empty. */\n    iconEmpty: {\n      color: theme.palette.action.disabled\n    },\n\n    /* Styles applied to the icon wrapping elements when filled. */\n    iconFilled: {},\n\n    /* Styles applied to the icon wrapping elements when hover. */\n    iconHover: {},\n\n    /* Styles applied to the icon wrapping elements when focus. */\n    iconFocus: {},\n\n    /* Styles applied to the icon wrapping elements when active. */\n    iconActive: {\n      transform: 'scale(1.2)'\n    },\n\n    /* Styles applied to the icon wrapping elements when decimals are necessary. */\n    decimal: {\n      position: 'relative'\n    }\n  };\n};\n\nfunction IconContainer(props) {\n  var value = props.value,\n      other = _objectWithoutProperties(props, [\"value\"]);\n\n  return React.createElement(\"span\", other);\n}\n\nprocess.env.NODE_ENV !== \"production\" ? IconContainer.propTypes = {\n  value: PropTypes.number.isRequired\n} : void 0;\nvar defaultIcon = React.createElement(Star, {\n  fontSize: \"inherit\"\n});\n\nfunction defaultLabelText(value) {\n  return \"\".concat(value, \" Star\").concat(value !== 1 ? 's' : '');\n}\n\nvar Rating = React.forwardRef(function Rating(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$disabled = props.disabled,\n      disabled = _props$disabled === void 0 ? false : _props$disabled,\n      emptyIcon = props.emptyIcon,\n      _props$emptyLabelText = props.emptyLabelText,\n      emptyLabelText = _props$emptyLabelText === void 0 ? 'Empty' : _props$emptyLabelText,\n      _props$getLabelText = props.getLabelText,\n      getLabelText = _props$getLabelText === void 0 ? defaultLabelText : _props$getLabelText,\n      _props$icon = props.icon,\n      icon = _props$icon === void 0 ? defaultIcon : _props$icon,\n      _props$IconContainerC = props.IconContainerComponent,\n      IconContainerComponent = _props$IconContainerC === void 0 ? IconContainer : _props$IconContainerC,\n      _props$max = props.max,\n      max = _props$max === void 0 ? 5 : _props$max,\n      nameProp = props.name,\n      onChange = props.onChange,\n      onChangeActive = props.onChangeActive,\n      onMouseLeave = props.onMouseLeave,\n      onMouseMove = props.onMouseMove,\n      _props$precision = props.precision,\n      precision = _props$precision === void 0 ? 1 : _props$precision,\n      _props$readOnly = props.readOnly,\n      readOnly = _props$readOnly === void 0 ? false : _props$readOnly,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 'medium' : _props$size,\n      _props$value = props.value,\n      valueProp = _props$value === void 0 ? null : _props$value,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"disabled\", \"emptyIcon\", \"emptyLabelText\", \"getLabelText\", \"icon\", \"IconContainerComponent\", \"max\", \"name\", \"onChange\", \"onChangeActive\", \"onMouseLeave\", \"onMouseMove\", \"precision\", \"readOnly\", \"size\", \"value\"]);\n\n  var _React$useState = React.useState(),\n      defaultName = _React$useState[0],\n      setDefaultName = _React$useState[1];\n\n  var name = nameProp || defaultName;\n  React.useEffect(function () {\n    // Fallback to this default id when possible.\n    // Use the random value for client-side rendering only.\n    // We can't use it server-side.\n    setDefaultName(\"mui-rating-\".concat(Math.round(Math.random() * 1e5)));\n  }, []);\n  var valueRounded = roundValueToPrecision(valueProp, precision);\n  var theme = useTheme();\n\n  var _React$useState2 = React.useState({\n    hover: -1,\n    focus: -1\n  }),\n      _React$useState2$ = _React$useState2[0],\n      hover = _React$useState2$.hover,\n      focus = _React$useState2$.focus,\n      setState = _React$useState2[1];\n\n  var value = valueRounded;\n\n  if (hover !== -1) {\n    value = hover;\n  }\n\n  if (focus !== -1) {\n    value = focus;\n  }\n\n  var _useIsFocusVisible = useIsFocusVisible(),\n      isFocusVisible = _useIsFocusVisible.isFocusVisible,\n      onBlurVisible = _useIsFocusVisible.onBlurVisible,\n      focusVisibleRef = _useIsFocusVisible.ref;\n\n  var _React$useState3 = React.useState(false),\n      focusVisible = _React$useState3[0],\n      setFocusVisible = _React$useState3[1];\n\n  var rootRef = React.useRef();\n  var handleFocusRef = useForkRef(focusVisibleRef, rootRef);\n  var handleRef = useForkRef(handleFocusRef, ref);\n\n  var handleMouseMove = function handleMouseMove(event) {\n    if (onMouseMove) {\n      onMouseMove(event);\n    }\n\n    var rootNode = rootRef.current;\n\n    var _rootNode$getBounding = rootNode.getBoundingClientRect(),\n        right = _rootNode$getBounding.right,\n        left = _rootNode$getBounding.left;\n\n    var _rootNode$querySelect = rootNode.querySelector(\".\".concat(classes.label)).getBoundingClientRect(),\n        width = _rootNode$querySelect.width;\n\n    var percent;\n\n    if (theme.direction === 'rtl') {\n      percent = (right - event.clientX) / (width * max);\n    } else {\n      percent = (event.clientX - left) / (width * max);\n    }\n\n    var newHover = roundValueToPrecision(max * percent + precision / 2, precision);\n    newHover = clamp(newHover, precision, max);\n    setState(function (prev) {\n      return prev.hover === newHover && prev.focus === newHover ? prev : {\n        hover: newHover,\n        focus: newHover\n      };\n    });\n    setFocusVisible(false);\n\n    if (onChangeActive && hover !== newHover) {\n      onChangeActive(event, newHover);\n    }\n  };\n\n  var handleMouseLeave = function handleMouseLeave(event) {\n    if (onMouseLeave) {\n      onMouseLeave(event);\n    }\n\n    var newHover = -1;\n    setState({\n      hover: newHover,\n      focus: newHover\n    });\n\n    if (onChangeActive && hover !== newHover) {\n      onChangeActive(event, newHover);\n    }\n  };\n\n  var handleChange = function handleChange(event) {\n    if (onChange) {\n      onChange(event, parseFloat(event.target.value));\n    }\n  };\n\n  var handleClear = function handleClear(event) {\n    // Ignore keyboard events\n    // https://github.com/facebook/react/issues/7407\n    if (event.clientX === 0 && event.clientY === 0) {\n      return;\n    }\n\n    setState({\n      hover: -1,\n      focus: -1\n    });\n\n    if (onChange && parseFloat(event.target.value) === valueRounded) {\n      onChange(event, null);\n    }\n  };\n\n  var handleFocus = function handleFocus(event) {\n    if (isFocusVisible(event)) {\n      setFocusVisible(true);\n    }\n\n    var newFocus = parseFloat(event.target.value);\n    setState(function (prev) {\n      return {\n        hover: prev.hover,\n        focus: newFocus\n      };\n    });\n\n    if (onChangeActive && focus !== newFocus) {\n      onChangeActive(event, newFocus);\n    }\n  };\n\n  var handleBlur = function handleBlur(event) {\n    if (hover !== -1) {\n      return;\n    }\n\n    if (focusVisible !== false) {\n      setFocusVisible(false);\n      onBlurVisible();\n    }\n\n    var newFocus = -1;\n    setState(function (prev) {\n      return {\n        hover: prev.hover,\n        focus: newFocus\n      };\n    });\n\n    if (onChangeActive && focus !== newFocus) {\n      onChangeActive(event, newFocus);\n    }\n  };\n\n  var item = function item(propsItem, state) {\n    var id = \"\".concat(name, \"-\").concat(String(propsItem.value).replace('.', '-'));\n    var container = React.createElement(IconContainerComponent, _extends({}, propsItem, {\n      className: clsx(classes.icon, state.filled ? classes.iconFilled : classes.iconEmpty, state.hover && classes.iconHover, state.focus && classes.iconFocus, state.active && classes.iconActive)\n    }), emptyIcon && !state.filled ? emptyIcon : icon);\n\n    if (readOnly || disabled) {\n      return React.createElement(React.Fragment, {\n        key: propsItem.value\n      }, container);\n    }\n\n    return React.createElement(React.Fragment, {\n      key: propsItem.value\n    }, React.createElement(\"label\", {\n      className: classes.label,\n      htmlFor: id\n    }, container, React.createElement(\"span\", {\n      className: classes.visuallyhidden\n    }, getLabelText(propsItem.value))), React.createElement(\"input\", {\n      onFocus: handleFocus,\n      onBlur: handleBlur,\n      onChange: handleChange,\n      onClick: handleClear,\n      value: propsItem.value,\n      id: id,\n      type: \"radio\",\n      name: name,\n      checked: state.checked,\n      className: classes.visuallyhidden\n    }));\n  };\n\n  return React.createElement(\"span\", _extends({\n    ref: handleRef,\n    onMouseMove: handleMouseMove,\n    onMouseLeave: handleMouseLeave,\n    className: clsx(classes.root, className, size !== 'medium' && classes[\"size\".concat(capitalize(size))], disabled && classes.disabled, focusVisible && classes.focusVisible, readOnly && classes.readOnly),\n    role: readOnly ? 'img' : null,\n    \"aria-label\": readOnly ? getLabelText(value) : null\n  }, other), !readOnly && !disabled && valueRounded == null && React.createElement(React.Fragment, null, React.createElement(\"input\", {\n    value: \"\",\n    id: \"\".concat(name, \"-empty\"),\n    type: \"radio\",\n    name: name,\n    defaultChecked: true,\n    className: classes.visuallyhidden\n  }), React.createElement(\"label\", {\n    className: classes.pristine,\n    htmlFor: \"\".concat(name, \"-empty\")\n  }, React.createElement(\"span\", {\n    className: classes.visuallyhidden\n  }, emptyLabelText))), Array.from(new Array(max)).map(function (_, index) {\n    var itemValue = index + 1;\n\n    if (precision < 1) {\n      var items = Array.from(new Array(1 / precision));\n      return React.createElement(\"span\", {\n        key: itemValue,\n        className: clsx(classes.decimal, itemValue === Math.ceil(value) && (hover !== -1 || focus !== -1) && classes.iconActive)\n      }, items.map(function ($, indexDecimal) {\n        var itemDecimalValue = roundValueToPrecision(itemValue - 1 + (indexDecimal + 1) * precision, precision);\n        return item({\n          value: itemDecimalValue,\n          style: items.length - 1 === indexDecimal ? {} : {\n            width: itemDecimalValue === value ? \"\".concat((indexDecimal + 1) * precision * 100, \"%\") : '0%',\n            overflow: 'hidden',\n            zIndex: 1,\n            position: 'absolute'\n          }\n        }, {\n          filled: itemDecimalValue <= value,\n          hover: itemDecimalValue <= hover,\n          focus: itemDecimalValue <= focus,\n          checked: itemDecimalValue === valueRounded\n        });\n      }));\n    }\n\n    return item({\n      value: itemValue\n    }, {\n      active: itemValue === value && (hover !== -1 || focus !== -1),\n      filled: itemValue <= value,\n      hover: itemValue <= hover,\n      focus: itemValue <= focus,\n      checked: itemValue === valueRounded\n    });\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Rating.propTypes = {\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the rating will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * The icon to display when empty.\n   */\n  emptyIcon: PropTypes.node,\n\n  /**\n   * The label read when the rating input is empty.\n   */\n  emptyLabelText: PropTypes.node,\n\n  /**\n   * Accepts a function which returns a string value that provides a user-friendly name for the current value of the rating.\n   *\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\n   *\n   * @param {number} value The rating label's value to format.\n   * @returns {string}\n   */\n  getLabelText: PropTypes.func,\n\n  /**\n   * The icon to display.\n   */\n  icon: PropTypes.node,\n\n  /**\n   * The component containing the icon.\n   */\n  IconContainerComponent: PropTypes.elementType,\n\n  /**\n   * Maximum rating.\n   */\n  max: PropTypes.number,\n\n  /**\n   * The name attribute of the radio `input` elements.\n   * If `readOnly` is false, the prop is required,\n   * this input name`should be unique within the parent form.\n   */\n  name: chainPropTypes(PropTypes.string, function (props) {\n    if (!props.readOnly && !props.name) {\n      return new Error(['Material-UI: the prop `name` is required (when `readOnly` is false).', 'Additionally, the input name should be unique within the parent form.'].join('\\n'));\n    }\n\n    return null;\n  }),\n\n  /**\n   * Callback fired when the value changes.\n   *\n   * @param {object} event The event source of the callback.\n   * @param {number} value The new value.\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * Callback function that is fired when the hover state changes.\n   *\n   * @param {object} event The event source of the callback.\n   * @param {number} value The new value.\n   */\n  onChangeActive: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onMouseLeave: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onMouseMove: PropTypes.func,\n\n  /**\n   * The minimum increment value change allowed.\n   */\n  precision: PropTypes.number,\n\n  /**\n   * Removes all hover effects and pointer events.\n   */\n  readOnly: PropTypes.bool,\n\n  /**\n   * The size of the rating.\n   */\n  size: PropTypes.oneOf(['small', 'medium', 'large']),\n\n  /**\n   * The rating value.\n   */\n  value: PropTypes.number\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiRating'\n})(Rating);","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Cancel from '@material-ui/icons/Cancel';\nimport StarRate from '@material-ui/icons/StarRate';\nimport IconButton from '@material-ui/core/Button';\nimport Alert from 'AppComponents/Shared/Alert';\nimport Api from 'AppData/api';\nimport AuthManager from 'AppData/AuthManager';\nimport StarRatingSummary from 'AppComponents/Apis/Details/StarRatingSummary';\nimport Rating from '@material-ui/lab/Rating';\n\n/**\n *\n *\n * @param {*} theme\n */\nconst styles = theme => ({\n    starRate: {\n        fontSize: 30,\n        color: theme.custom.infoBar.starColor,\n    },\n    noStarRate: {\n        fontSize: 30,\n        color: theme.palette.grey.A200,\n    },\n    iconFilled: {\n        color: theme.custom.infoBar.starColor,\n    },\n    iconEmpty: {\n        color: theme.palette.getContrastText(theme.custom.thumbnail.contentBackgroundColor),\n    },\n    removeRating: {\n        fontSize: 20,\n        color: theme.palette.getContrastText(theme.custom.infoBar.background),\n    },\n    userRating: {\n        display: 'flex',\n        justifyContent: 'flex-start',\n        alignItems: 'center',\n        cursor: 'pointer',\n    },\n    iconButton: {\n        minWidth: 'initial',\n        borderRadius: '50%',\n    },\n});\n\n/**\n *\n *\n * @class StarRatingBar\n * @extends {React.Component}\n */\nclass StarRatingBar extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            avgRating: 0,\n            userRating: 0,\n            count: 0,\n            total: 0,\n        };\n        this.getApiRating = this.getApiRating.bind(this);\n        this.removeUserRating = this.removeUserRating.bind(this);\n        this.doRate = this.doRate.bind(this);\n    }\n    componentDidUpdate(prevProps) {\n        // Typical usage (don't forget to compare props):\n        if (this.props.ratingUpdate !== prevProps.ratingUpdate) {\n            this.getApiRating();\n        }\n    }\n    /**\n     *\n     *\n     * @memberof StarRatingBar\n     */\n    componentDidMount() {\n        this.getApiRating();\n    }\n\n    /**\n     *\n     *\n     * @memberof StarRatingBar\n     */\n    getApiRating() {\n        const { apiId, setRatingUpdate } = this.props;\n        const user = AuthManager.getUser();\n        const api = new Api();\n        // get api rating\n        if (user != null) {\n            const promisedRating = api.getRatingFromUser(apiId, null);\n            promisedRating.then((response) => {\n                this.setState({\n                    avgRating: response.body.avgRating,\n                    userRating: response.body.userRating,\n                    count: response.body.count,\n                    total: response.body.pagination.total,\n                });\n                if(setRatingUpdate) setRatingUpdate({\n                    avgRating: response.body.avgRating,\n                    count: response.body.count,\n                    total: response.body.pagination.total \n                });\n            });\n        }\n    }\n\n    /**\n     *\n     *\n     * @param {*} rateIndex\n     * @memberof StarRatingBar\n     */\n    doRate(rateIndex) {\n        const { apiId } = this.props;\n        const api = new Api();\n        const ratingInfo = { rating: rateIndex };\n        const promise = api.addRating(apiId, ratingInfo);\n        promise\n            .then(() => {\n                this.getApiRating();\n            })\n            .catch((error) => {\n                Alert.error('Error occurred while adding ratings');\n                if (process.env.NODE_ENV !== 'production') {\n                    console.log(error);\n                }\n            });\n    }\n\n    /**\n     *\n     *\n     * @memberof StarRatingBar\n     */\n    removeUserRating() {\n        const { apiId, setRatingUpdate } = this.props;\n        const api = new Api();\n        // remove user rating\n        api.removeRatingOfUser(apiId, null)\n            .then(() => {\n                this.getApiRating();\n                setRatingUpdate();\n            })\n            .catch((error) => {\n                Alert.error('Error occurred while removing ratings');\n                if (process.env.NODE_ENV !== 'production') {\n                    console.log(error);\n                }\n            });\n    }\n\n    /**\n     *\n     *\n     * @returns\n     * @memberof StarRatingBar\n     */\n    render() {\n        const {\n            avgRating, userRating, count, total,\n        } = this.state;\n        const {\n            classes, isEditable, showSummary, apiRating,\n        } = this.props;\n        const apiRatingNumber = parseFloat(apiRating);\n        return (\n            <React.Fragment>\n                {showSummary ? (\n                    <StarRatingSummary avgRating={avgRating} reviewCount={total} returnCount={count} />\n                ) : (\n                    <React.Fragment>\n                        {isEditable ? (\n                            <React.Fragment>\n                                <div className={classes.userRating}>\n                                    {[1, 2, 3, 4, 5].map(i => (\n                                        <IconButton\n                                            onClick={() => this.doRate(i)}\n                                            aria-label={'Rate ' + i + ' stars'}\n                                            className={classes.iconButton}\n                                        >\n                                            <StarRate\n                                                key={i}\n                                                className={userRating >= i ? classes.starRate : classes.noStarRate}\n                                            />\n                                        </IconButton>\n                                    ))}\n                                        <IconButton\n                                            onClick={() => this.removeUserRating()}\n                                            aria-label='Remove rating'\n                                            className={classes.iconButton}\n                                        >\n                                            <Cancel\n                                                className={classes.removeRating}\n                                            />    \n                                        </IconButton>\n                                </div>\n                            </React.Fragment>\n                        ) : (\n                            <React.Fragment>\n                                <Rating \n                                    name='half-rating' \n                                    value={apiRatingNumber} \n                                    precision={0.1} \n                                    readOnly \n                                    classes={{iconEmpty:classes.iconEmpty,iconFilled: classes.iconFilled}}\n                                />\n                            </React.Fragment>\n                        )}\n                    </React.Fragment>\n                )}\n            </React.Fragment>\n        );\n    }\n}\n\nStarRatingBar.defaultProps = {\n    apiRating: 0,\n    ratingUpdate: 0,\n    setRatingUpdate: () => {},\n};\n\nStarRatingBar.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    theme: PropTypes.shape({}).isRequired,\n    apiId: PropTypes.string.isRequired,\n    isEditable: PropTypes.bool.isRequired,\n    showSummary: PropTypes.bool.isRequired,\n    apiRating: PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.number\n    ]),\n    ratingUpdate: PropTypes.number,\n    setRatingUpdate: PropTypes.func,\n};\n\nexport default withStyles(styles, { withTheme: true })(StarRatingBar);\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\n\nconst styles = {\n    svgImage: {\n        cursor: 'pointer',\n        // ⚠️ object-fit is not supported by IE11.\n        objectFit: 'cover',\n    },\n};\n\nfunction aHexToOpacity(aHex) {\n    const alphaValue = '0x' + aHex.substring(7, 9);\n    return alphaValue / 256;\n}\n\n/**\n *\n * @param {*} aHex\n */\nfunction getColorWithoutAlpha(aHex) {\n    return aHex.substring(0, 7);\n}\n\n/**\n * Generate svg background.\n * @param {*} props\n */\nfunction Background(props) {\n    const {\n        classes, colorPair, width, height,\n    } = props;\n    // Creating the background\n\n    const thumbnailBox = {\n        width: 250,\n        height: 200,\n    };\n\n    const thumbnailBoxChild = {\n        width: 50,\n        height: 50,\n    };\n\n    const rects = [];\n    for (let i = 0; i <= 4; i++) {\n        for (let j = 0; j <= 4; j++) {\n            const color = '#' + (colorPair.sub - ((0x00000025 * i) - (j * 0x00000015))).toString(16);\n            rects.push(<rect\n                key={i + '_' + j}\n                {...thumbnailBoxChild}\n                /* eslint no-mixed-operators: 0 */\n                fill={getColorWithoutAlpha(color)}\n                fillOpacity={aHexToOpacity(color)}\n                x={200 - i * 54}\n                y={54 * j}\n            />);\n        }\n    }\n    const primeColor = '#' + colorPair.prime.toString(16);\n    return (\n        <svg width={width} height={height} className={classes.svgImage} aria-hidden='true'>\n            <rect {...thumbnailBox} fill={getColorWithoutAlpha(primeColor)} fillOpacity={aHexToOpacity(primeColor)} />\n            {rects}\n        </svg>\n    );\n}\n\nBackground.propTypes = {\n    classes: PropTypes.shape({ svgImage: PropTypes.string }).isRequired,\n    width: PropTypes.number.isRequired,\n    height: PropTypes.number.isRequired,\n    colorPair: PropTypes.shape({ sub: PropTypes.number, prime: PropTypes.number }).isRequired,\n};\n\nexport default withStyles(styles)(Background);\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Icon from '@material-ui/core/Icon';\nimport MaterialIcons from 'MaterialIcons';\nimport Background from './Background';\n\nconst styles = {\n    icon: {},\n    iconWrapper: {\n        position: 'relative',\n        display: 'flex',\n        justifyContent: 'center',\n        '& span': {\n            position: 'absolute',\n            right: 'auto',\n        },\n    },\n};\n\n/**\n * Generate dynamic API thumbnail image (SVG), Use PureComponent to avoid unnessasary re-rendering when hover ect\n *\n * @class ImageGenerator\n * @extends {PureComponent}\n */\nclass ImageGenerator extends PureComponent {\n    /**\n     *\n     * @inheritdoc\n     * @returns {React.PureComponent} @inheritdoc\n     * @memberof ImageGenerator\n     */\n    render() {\n        const {\n            classes, api, width, height, theme, fixedIcon,\n        } = this.props;\n\n        const {\n            category, key, color, backgroundIndex,\n        } = fixedIcon;\n\n        let str = api;\n        if (typeof api === 'object') str = api.name;\n        let count;\n        let colorPair;\n        let randomBackgroundIndex;\n        let IconElement;\n        const colorPairs = theme.custom.thumbnail.backgrounds;\n\n        // Creating the icon\n        if (key && category) {\n            IconElement = key;\n        } else if (api.type === 'DOC') {\n            IconElement = theme.custom.thumbnail.document.icon;\n        } else {\n            count = MaterialIcons.categories[0].icons.length;\n            const randomIconIndex = (str.charCodeAt(0) + str.charCodeAt(str.length - 1)) % count;\n            IconElement = MaterialIcons.categories[0].icons[randomIconIndex].id;\n        }\n\n        // Obtain or generate background color pair\n        if (api.type === 'DOC') {\n            colorPair = theme.custom.thumbnail.document.backgrounds;\n        } else if (backgroundIndex && colorPairs.length > backgroundIndex) {\n            colorPair = colorPairs[backgroundIndex];\n        } else {\n            randomBackgroundIndex = (str.charCodeAt(0) + str.charCodeAt(str.length - 1)) % colorPairs.length;\n            colorPair = colorPairs[randomBackgroundIndex];\n        }\n        return (\n            <div className={classes.iconWrapper} style={{ width }}>\n                <Icon className={classes.icon} style={{ fontSize: height + 'px', color }}>\n                    {IconElement}\n                </Icon>\n                <Background width={width} height={height} colorPair={colorPair} />\n            </div>\n        );\n    }\n}\n\nImageGenerator.defaultProps = {\n    height: 190,\n    width: 250,\n    fixedIcon: {\n        category: null,\n        key: null,\n        color: '',\n        backgroundIndex: null,\n    },\n};\n\nImageGenerator.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    height: PropTypes.number,\n    width: PropTypes.number,\n    fixedIcon: PropTypes.shape({}),\n    api: PropTypes.shape({}).isRequired,\n    theme: PropTypes.shape({}).isRequired,\n};\n\nexport default withStyles(styles, { withTheme: true })(ImageGenerator);\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  transform: \"scale(1.33, 1.33)\",\n  d: \"M9 11.3l3.71 2.7-1.42-4.36L15 7h-4.55L9 2.5 7.55 7H3l3.71 2.64L5.29 14z\"\n}), 'StarRate');\n\nexports.default = _default;","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport CopyToClipboard from 'react-copy-to-clipboard';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport FileCopy from '@material-ui/icons/FileCopy';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport IconButton from '@material-ui/core/IconButton';\nimport { FormattedMessage } from 'react-intl';\nimport InlineMessage from '../InlineMessage';\nimport ViewSecret from './ViewSecret';\n/**\n *\n *\n * @param {*} theme\n */\nconst styles = (theme) => ({\n    bootstrapRoot: {\n        padding: 0,\n        'label + &': {\n            marginTop: theme.spacing(3),\n        },\n        flex: 1,\n        marginRight: theme.spacing(1),\n    },\n    bootstrapInput: {\n        borderRadius: 4,\n        backgroundColor: theme.custom.apiDetailPages.tokenTextBoxBackground,\n        color: theme.palette.getContrastText(theme.custom.apiDetailPages.tokenTextBoxBackground),\n        border: '1px solid #ced4da',\n        padding: '5px 12px',\n        height: 100,\n        width: '100%',\n        transition: theme.transitions.create(['border-color', 'box-shadow']),\n        fontFamily: ['-apple-system', 'BlinkMacSystemFont', '\"Segoe UI\"', 'Roboto', '\"Helvetica Neue\"',\n            'Arial', 'sans-serif', '\"Apple Color Emoji\"', '\"Segoe UI Emoji\"', '\"Segoe UI Symbol\"'].join(','),\n        '&:focus': {\n            borderColor: '#80bdff',\n            boxShadow: '0 0 0 0.2rem rgba(0,123,255,.25)',\n        },\n    },\n    epWrapper: {\n        display: 'flex',\n        marginTop: 20,\n    },\n    secretWrapper: {\n        display: 'flex',\n        marginBottom: 20,\n    },\n    prodLabel: {\n        lineHeight: '30px',\n        marginRight: 10,\n        width: 100,\n        'text-align-last': 'center',\n        whiteSpace: 'nowrap',\n    },\n    contentWrapper: {\n        maxWidth: theme.custom.contentAreaWidth - theme.custom.leftMenu.width,\n    },\n    root: {\n        marginTop: 20,\n        '& span, & h5, & label, & td, & li, & div, & input': {\n            color: theme.palette.getContrastText(theme.palette.background.paper),\n        },\n\n    },\n});\n/**\n *\n *\n * @class ViewToken\n * @extends {React.Component}\n */\nclass ViewToken extends React.Component {\n    state = {\n        tokenCopied: false,\n    };\n\n    /**\n     *\n     *\n     * @memberof ViewToken\n     */\n    onCopy = (name) => () => {\n        this.setState({\n            [name]: true,\n        });\n        const that = this;\n        const elementName = name;\n        const caller = function () {\n            that.setState({\n                [elementName]: false,\n            });\n        };\n        setTimeout(caller, 4000);\n    };\n\n    /**\n     * Generate a comma separate string of token scopes\n     * @param {string} tokenScopes token scopes\n     * @returns {String} scopeString comma separated string of token scopes\n     * @memberof ViewToken\n     */\n    getTokeScopesString(tokenScopes) {\n        if (tokenScopes) {\n            return tokenScopes.join(', ');\n        }\n        return '';\n    }\n\n    /**\n     *\n     *\n     * @returns\n     * @memberof ViewToken\n     */\n    render() {\n        const {\n            classes, token, consumerSecret,\n        } = this.props;\n        const { tokenCopied } = this.state;\n        return (\n            <div className={classes.root}>\n                {consumerSecret && (\n                    <div className={classes.secretWrapper}>\n                        <ViewSecret secret={{ consumerSecret }} />\n                    </div>\n                )}\n                <InlineMessage type='warn'>\n                    <Typography variant='h5' component='h3'>\n                        {(token.isOauth) && (\n                            <FormattedMessage\n                                id='Shared.AppsAndKeys.ViewToken.please.copy'\n                                defaultMessage='Please Copy the Access Token'\n                            />\n                        )}\n                        {(!token.isOauth) && (\n                            <FormattedMessage\n                                id='Shared.AppsAndKeys.ViewToken.please.copy.apikey'\n                                defaultMessage='Please Copy the API Key'\n                            />\n                        )}\n                    </Typography>\n                    <Typography component='p'>\n                        <FormattedMessage\n                            id='Shared.AppsAndKeys.ViewToken.please.copy.help'\n                            defaultMessage={'Please copy this generated token value as it will be displayed only for'\n                            + ' the current browser session. '\n                            + '( The token will not be visible in the UI after the page is refreshed. )'}\n                        />\n                    </Typography>\n                </InlineMessage>\n                <div className={classes.epWrapper}>\n                    <label for='access-token' className={classes.prodLabel}>\n                        {(token.isOauth) && (\n                            <FormattedMessage\n                                id='Shared.AppsAndKeys.ViewToken.access.token'\n                                defaultMessage='Access Token'\n                            />\n                        )}\n                        {(!token.isOauth) && (\n                            <FormattedMessage\n                                id='Shared.AppsAndKeys.ViewToken.apikey'\n                                defaultMessage='API Key'\n                            />\n                        )}\n                    </label>\n                    <TextField\n                        defaultValue={token.accessToken}\n                        id='access-token'\n                        multiline\n                        fullWidth\n                        rows={4}\n                        InputProps={{\n                            disableUnderline: true,\n                            classes: {\n                                root: classes.bootstrapRoot,\n                                input: classes.bootstrapInput,\n                            },\n                        }}\n                        InputLabelProps={{\n                            shrink: true,\n                            className: classes.bootstrapFormLabel,\n                        }}\n                    />\n                    <Tooltip title={tokenCopied ? 'Copied' : 'Copy to clipboard'} placement='right'>\n                        <CopyToClipboard text={token.accessToken} onCopy={this.onCopy('tokenCopied')}>\n                            <IconButton aria-label='Copy to clipboard'>\n                                <FileCopy color='secondary'>file_copy</FileCopy>\n                            </IconButton>\n                        </CopyToClipboard>\n                    </Tooltip>\n                </div>\n                <FormHelperText>\n                    <FormattedMessage\n                        id='Shared.AppsAndKeys.ViewToken.info.first'\n                        defaultMessage='Above token has a validity period of '\n                    />\n                    {token.validityTime}\n                    <FormattedMessage\n                        id='Shared.AppsAndKeys.ViewToken.info.second'\n                        defaultMessage=' seconds'\n                    />\n                    {token.isOauth && (\n                        <FormattedMessage\n                            id='Shared.AppsAndKeys.ViewToken.info.third'\n                            defaultMessage=' and the token has ('\n                        />\n                    )}\n                    {this.getTokeScopesString(token.tokenScopes)}\n                    {token.isOauth && (\n                        <FormattedMessage\n                            id='Shared.AppsAndKeys.ViewToken.info.fourth'\n                            defaultMessage=') scopes'\n                        />\n                    )}\n.\n                </FormHelperText>\n            </div>\n        );\n    }\n}\n\nViewToken.defaultProps = {\n    consumerSecret: null,\n};\n\nViewToken.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    token: PropTypes.shape({\n        accessToken: PropTypes.string.isRequired,\n        validityTime: PropTypes.number.isRequired,\n        tokenScopes: PropTypes.array.isRequired,\n    }).isRequired,\n    consumerSecret: PropTypes.string,\n};\n\nexport default withStyles(styles)(ViewToken);\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport CopyToClipboard from 'react-copy-to-clipboard';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport FileCopy from '@material-ui/icons/FileCopy';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport { FormattedMessage } from 'react-intl';\nimport InlineMessage from '../InlineMessage';\n/**\n *\n *\n * @param {*} theme\n */\nconst styles = theme => ({\n    bootstrapRoot: {\n        padding: 0,\n        'label + &': {\n            marginTop: theme.spacing(3),\n        },\n    },\n    bootstrapInput: {\n        borderRadius: 4,\n        backgroundColor: theme.palette.common.white,\n        border: '1px solid #ced4da',\n        padding: '5px 12px',\n        width: 350,\n        height: 100,\n        transition: theme.transitions.create(['border-color', 'box-shadow']),\n        fontFamily: ['-apple-system', 'BlinkMacSystemFont', '\"Segoe UI\"', 'Roboto', '\"Helvetica Neue\"',\n            'Arial', 'sans-serif', '\"Apple Color Emoji\"', '\"Segoe UI Emoji\"', '\"Segoe UI Symbol\"'].join(','),\n        '&:focus': {\n            borderColor: '#80bdff',\n            boxShadow: '0 0 0 0.2rem rgba(0,123,255,.25)',\n        },\n    },\n    epWrapper: {\n        display: 'flex',\n        marginTop: 20,\n    },\n    prodLabel: {\n        lineHeight: '30px',\n        marginRight: 10,\n        width: 100,\n        'text-align-last': 'center',\n    },\n    contentWrapper: {\n        maxWidth: theme.custom.contentAreaWidth - theme.custom.leftMenu.width,\n    },\n    root: {\n        marginBottom: 20,\n    },\n});\n/**\n *\n *\n * @class ViewSecret\n * @extends {React.Component}\n */\nclass ViewSecret extends React.Component {\n    state = {\n        secretCopied: false,\n    };\n\n    /**\n     *\n     *\n     * @memberof ViewSecret\n     */\n    onCopy = name => () => {\n        this.setState({\n            [name]: true,\n        });\n        const that = this;\n        const elementName = name;\n        const caller = function () {\n            that.setState({\n                [elementName]: false,\n            });\n        };\n        setTimeout(caller, 4000);\n    };\n\n    /**\n     * Generate a comma separate string of token scopes\n     *\n     * @param {string} tokenScopes token scopes\n     * @returns {String} scopeString comma separated string of token scopes\n     * @memberof ViewSecret\n     */\n    getTokeScopesString(tokenScopes) {\n        if (tokenScopes) {\n            return tokenScopes.join(', ');\n        }\n        return '';\n    }\n\n    /**\n     *\n     *\n     * @returns\n     * @memberof ViewSecret\n     */\n    render() {\n        const { classes, secret } = this.props;\n        const { secretCopied } = this.state;\n        return (\n            <div className={classes.root}>\n                <InlineMessage type='warn'>\n                    <Typography variant='h5' component='h3'>\n                        <FormattedMessage\n                            id='Shared.AppsAndKeys.ViewSecret.please.copy.secret'\n                            defaultMessage='Please Copy the Consumer Secret'\n                        />\n                    </Typography>\n                    <Typography component='p'>\n                        <FormattedMessage\n                            id='Shared.AppsAndKeys.ViewSecret.please.copy.secret.help'\n                            defaultMessage={`Please make a note of the regenerated consumer \n                            secret value as it will be displayed only once.`}\n                        />\n                    </Typography>\n                </InlineMessage>\n                <div className={classes.epWrapper}>\n                    <Typography className={classes.prodLabel}>\n                        <FormattedMessage\n                            id='Shared.AppsAndKeys.ViewSecret.consumer.secret'\n                            defaultMessage='Consumer Secret'\n                        />\n                    </Typography>\n                    <TextField\n                        defaultValue={secret.consumerSecret}\n                        id='bootstrap-input'\n                        multiline\n                        rows={4}\n                        InputProps={{\n                            disableUnderline: true,\n                            classes: {\n                                root: classes.bootstrapRoot,\n                                input: classes.bootstrapInput,\n                            },\n                        }}\n                        InputLabelProps={{\n                            shrink: true,\n                            className: classes.bootstrapFormLabel,\n                        }}\n                    />\n                    <Tooltip title={secretCopied ? 'Copied' : 'Copy to clipboard'} placement='right'>\n                        <CopyToClipboard text={secret.consumerSecret} onCopy={this.onCopy('secretCopied')}>\n                            <FileCopy color='secondary'>file_copy</FileCopy>\n                        </CopyToClipboard>\n                    </Tooltip>\n                </div>\n            </div>\n        );\n    }\n}\n\nViewSecret.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    secret: PropTypes.shape({\n        consumerSecret: PropTypes.string.isRequired,\n    }).isRequired,\n};\n\nexport default withStyles(styles)(ViewSecret);\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport StarRate from '@material-ui/icons/StarRate';\nimport Icon from '@material-ui/core/Icon';\nimport { withStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport { FormattedMessage } from 'react-intl';\n\n/**\n *\n *\n * @param {*} theme\n */\nconst styles = (theme) => {\n    const starColor = theme.custom.infoBar.starColor || theme.palette.getContrastText(theme.custom.infoBar.background);\n    return {\n        starRate: {\n            color: starColor,\n            '&.material-icons': {\n                fontSize: 40,\n            },\n        },\n        userRating: {\n            display: 'flex',\n            justifyContent: 'flex-start',\n            alignItems: 'center',\n        },\n    };\n};\n\nfunction StarRatingSummary(props) {\n    const {\n        classes, theme, avgRating, reviewCount, returnCount,\n    } = props;\n    return (\n        <React.Fragment>\n            {returnCount > 0 ? (\n                <React.Fragment>\n                    <Icon className={classes.starRate}>star_border</Icon>\n                    <div className={classes.ratingSummary}>\n                        <div className={classes.userRating}>\n                            <Typography variant='body1'>{avgRating}</Typography>\n                            <Typography variant='body1'>/5.0</Typography>\n                        </div>\n                        <Typography variant='body1' gutterBottom align='left'>\n                            {reviewCount}{' '}\n                            {reviewCount === 1 ? (\n                                <FormattedMessage defaultMessage='user' id='Apis.Listing.StarRatingBar.user' />\n                            ) : (\n                                <FormattedMessage defaultMessage='users' id='Apis.Listing.StarRatingBar.users' />\n                            )}\n                        </Typography>\n                    </div>\n                </React.Fragment>\n            ) : (\n                <React.Fragment>\n                    <StarRate className={classes.starRate} style={{ color: theme.palette.grey.A200 }} />\n                    <div className={classes.ratingSummary}>\n                        <Typography variant='caption' gutterBottom align='left'>\n                            <FormattedMessage defaultMessage='Not Rated' id='Apis.Listing.StarRatingBar.not.rated' />\n                        </Typography>\n                    </div>\n                </React.Fragment>\n            )}\n        </React.Fragment>\n    );\n}\n\nexport default withStyles(styles, { withTheme: true })(StarRatingSummary);\n","import React from 'react';\nimport { SettingsConsumer } from './SettingsContext';\n\nconst withSettings = (WrappedComponent) => {\n    /**\n     * Higher order component with settings\n     * @param {*} props properties\n     * @returns {Context.Consumer}\n     */\n    function HOCWithSettings(props) {\n        return (\n            <SettingsConsumer>\n                {\n                    context => <WrappedComponent {...context} {...props} />\n                }\n            </SettingsConsumer>\n        );\n    }\n    return HOCWithSettings;\n};\n\nexport default withSettings;\n","/* eslint-disable react/prop-types */\n/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport Card from '@material-ui/core/Card';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardContent from '@material-ui/core/CardContent';\nimport { withStyles } from '@material-ui/core/styles';\nimport Chip from '@material-ui/core/Chip';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { FormattedMessage } from 'react-intl';\nimport MaterialIcons from 'MaterialIcons';\nimport StarRatingBar from 'AppComponents/Apis/Listing/StarRatingBar';\nimport { app } from 'Settings';\nimport ImageGenerator from './ImageGenerator';\nimport Api from '../../../data/api';\nimport { ApiContext } from '../Details/ApiContext';\nimport classNames from 'classnames';\n\n/**\n *\n *\n * @param {*} theme\n */\nconst styles = theme => ({\n    card: {\n        margin: theme.spacing(3 / 2),\n        maxWidth: theme.custom.thumbnail.width,\n        transition: 'box-shadow 0.3s ease-in-out',\n        position: 'relative',\n    },\n    apiDetails: {\n        padding: theme.spacing(1),\n        background: theme.custom.thumbnail.contentBackgroundColor,\n        padding: theme.spacing(1),\n        color: theme.palette.getContrastText(theme.custom.thumbnail.contentBackgroundColor),\n        '& a': {\n            color: theme.palette.getContrastText(theme.custom.thumbnail.contentBackgroundColor),\n        },\n        position: theme.custom.thumbnail.contentPictureOverlap ? 'absolute' : 'relative',\n        top: 0,\n    },\n    suppressLinkStyles: {\n        textDecoration: 'none',\n        color: theme.palette.text.disabled,\n    },\n    row: {\n        display: 'inline-block',\n    },\n    thumbBy: {\n        'padding-left': '5px',\n    },\n    media: {\n        // ⚠️ object-fit is not supported by IE11.\n        objectFit: 'cover',\n    },\n    thumbContent: {\n        width: theme.custom.thumbnail.width - theme.spacing(2),\n    },\n    thumbLeft: {\n        alignSelf: 'flex-start',\n        flex: 1,\n        width: '25%',\n        'padding-left': '5px',\n        'padding-right': '65px',\n        paddingTop: theme.spacing(1),\n    },\n    thumbLeftAction: {\n        alignSelf: 'flex-start',\n        flex: 1,\n        width: '25%',\n        'padding-left': '5px',\n        'padding-right': '10px',\n    },\n    thumbRight: {\n        display: 'flex',\n        alignItems: 'flex-start',\n        flexDirection: 'column',\n        paddingTop: theme.spacing(1),\n    },\n    thumbInfo: {\n        display: 'flex',\n    },\n    thumbHeader: {\n        width: theme.custom.thumbnail.width - theme.spacing(1),\n        whiteSpace: 'nowrap',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n        cursor: 'pointer',\n        margin: 0,\n        'padding-left': '5px',\n    },\n    contextBox: {\n        width: parseInt((theme.custom.thumbnail.width - theme.spacing(1)) / 2, 10),\n        whiteSpace: 'nowrap',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n        cursor: 'pointer',\n        margin: 0,\n        display: 'inline-block',\n        lineHeight: '1em',\n        'padding-top': 5,\n        'padding-right': 5,\n        'padding-bottom': 1.5,\n        textAlign: 'left',\n    },\n    thumbWrapper: {\n        position: 'relative',\n        paddingTop: 20,\n        marginRight: theme.spacing(2),\n    },\n    deleteIcon: {\n        fill: 'red',\n    },\n    textWrapper: {\n        color: theme.palette.text.secondary,\n        textDecoration: 'none',\n    },\n    imageWrapper: {\n        color: theme.custom.thumbnail.iconColor,\n        width: theme.custom.thumbnail.width,\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    imageOverlap: {\n        position: 'absolute',\n        bottom: 1,\n    },\n    chipWrapper: {\n        marginTop: '15px',\n    },\n    ratingWrapper: {\n        marginTop: '20px',\n    },\n    textblock: {\n        color: theme.palette.text.secondary,\n        position: 'absolute',\n        bottom: '35px',\n        right: '10px',\n        background: theme.custom.thumbnail.contentBackgroundColor,\n        'padding-left': '10px',\n        'padding-right': '10px',\n    },\n});\n\nconst windowURL = window.URL || window.webkitURL;\n\n/**\n *\n * Render API Card component in API listing card view,containing essential API information like name , version ect\n * @class APIThumb\n * @extends {Component}\n */\nclass ApiThumb extends React.Component {\n    /**\n     *Creates an instance of APIThumb.\n     * @param {*} props\n     * @memberof APIThumb\n     */\n    constructor(props) {\n        super(props);\n        this.state = {\n            category: MaterialIcons.categories[0].name,\n            selectedIcon: null,\n            color: null,\n            backgroundIndex: null,\n            imageObj: null,\n            isHover: false,\n            imageLoaded: false,\n        };\n        this.toggleMouseOver = this.toggleMouseOver.bind(this);\n    }\n\n    /**\n     *\n     *\n     * @memberof ApiThumb\n     */\n    componentDidMount() {\n        const { api } = this.props;\n        const restApi = new Api();\n\n        const promisedThumbnail = restApi.getAPIThumbnail(api.id);\n\n        promisedThumbnail.then((response) => {\n            if (response && response.data) {\n                if (response.headers['content-type'] === 'application/json') {\n                    const iconJson = JSON.parse(response.data);\n                    this.setState({\n                        selectedIcon: iconJson.key,\n                        category: iconJson.category,\n                        color: iconJson.color,\n                        backgroundIndex: iconJson.backgroundIndex,\n                    });\n                } else if (response && response.data.size > 0) {\n                    const url = windowURL.createObjectURL(response.data);\n                    this.setState({ imageObj: url });\n                }\n            }\n        }).finally(() => {\n            this.setState({ imageLoaded: true })\n        })\n    }\n\n    /**\n     * Clean up resource\n     */\n    componentWillUnmount() {\n        if (this.state.thumbnail) {\n            windowURL.revokeObjectURL(this.state.imageObj);\n        }\n    }\n\n    /**\n     * Get Path Prefix depedning on the respective API Type being rendered\n     *\n     * @returns {String} path\n     * @memberof ApiThumb\n     */\n    getPathPrefix() {\n        const path = '/apis/';\n        return path;\n    }\n\n    /**\n     * Toggle mouse Hover state to set the card `raised` property\n     *\n     * @param {React.SyntheticEvent} event mouseover and mouseout\n     * @memberof APIThumb\n     */\n    toggleMouseOver(event) {\n        this.setState({ isHover: event.type === 'mouseover' });\n    }\n\n    /**\n     * @inheritdoc\n     * @returns {React.Component} @inheritdoc\n     * @memberof APIThumb\n     */\n    render() {\n        const {\n            imageObj, selectedIcon, color, backgroundIndex, category, isHover, imageLoaded,\n        } = this.state;\n        const path = this.getPathPrefix();\n        const { isMonetizationEnabled } = this.context;\n\n        const detailsLink = path + this.props.api.id;\n        const {\n            api, classes, theme, customWidth, customHeight, showInfo,\n        } = this.props;\n        const { custom: { thumbnail, social: { showRating } } } = theme;\n        const { name, version, context } = api;\n\n        let { provider } = api;\n        if (\n            api.businessInformation &&\n            api.businessInformation.businessOwner &&\n            api.businessInformation.businessOwner.trim() !== ''\n        ) {\n            provider = api.businessInformation.businessOwner;\n        }\n        if (!api.lifeCycleStatus) {\n            api.lifeCycleStatus = api.status;\n        }\n        const imageWidth = customWidth || thumbnail.width;\n        const imageHeight = customHeight || 140;\n        const defaultImage = thumbnail.defaultApiImage;\n\n        let ImageView;\n        if (!imageLoaded) {\n            ImageView = (<div class=\"image-load-frame\">\n                <div class=\"image-load-animation1\"></div>\n                <div class=\"image-load-animation2\"></div>\n            </div>)\n        } else if (imageObj) {\n            ImageView = (\n                <img\n                    height={imageHeight}\n                    width={imageWidth}\n                    src={imageObj}\n                    alt='API Thumbnail'\n                    className={classes.media}\n                />\n            );\n        } else {\n            ImageView = (\n                <ImageGenerator\n                    width={imageWidth}\n                    height={imageHeight}\n                    api={api}\n                    fixedIcon={{\n                        key: selectedIcon,\n                        color: color || thumbnail.iconColor,\n                        backgroundIndex,\n                        category,\n                        api,\n                    }}\n                />\n            );\n        }\n        return (\n            <Link to={detailsLink} aria-label={name} role='button' className={classes.textWrapper}>\n            <Card\n                onMouseOver={this.toggleMouseOver}\n                onFocus={this.toggleMouseOver}\n                onMouseOut={this.toggleMouseOver}\n                onBlur={this.toggleMouseOver}\n                raised={isHover}\n                className={classNames('image-thumbnail', classes.card)}\n            >\n                {isMonetizationEnabled && (\n                    <div className={classes.textblock}>{api.monetizationLabel}</div>\n                )}\n                <CardMedia>\n                    {!defaultImage && ImageView}\n                    {defaultImage && <img src={app.context + defaultImage} alt='img' />}\n                </CardMedia>\n                {showInfo && (\n                    <CardContent classes={{ root: classes.apiDetails }}>\n                        <Typography\n                            className={classes.thumbHeader}\n                            variant='h5'\n                            component='h2'\n                            gutterBottom\n                            onClick={this.handleRedirectToAPIOverview}\n                            title={name}\n                        >\n                            {name}\n                        </Typography>\n                        <div className={classes.row}>\n                            <Typography variant='caption' gutterBottom align='left' className={classes.thumbBy}>\n                                <FormattedMessage defaultMessage='By' id='Apis.Listing.ApiThumb.by' />\n                                <FormattedMessage defaultMessage=' : ' id='Apis.Listing.ApiThumb.by.colon' />\n                                {provider}\n                            </Typography>\n                        </div>\n                        <div className={classes.thumbInfo}>\n                            <div className={classes.row}>\n                                <div className={classes.thumbLeft}>\n                                    <Typography variant='caption' gutterBottom align='left'>\n                                        <FormattedMessage defaultMessage='Version' id='Apis.Listing.ApiThumb.version' />\n                                    </Typography>\n                                    <Typography variant='subtitle1' component='div'>{version}</Typography>\n                                </div>\n                            </div>\n                            <div className={classes.row}>\n                                <div className={classes.thumbRight}>\n                                    <Typography\n                                        variant='caption'\n                                        gutterBottom\n                                        align='right'\n                                        className={classes.context}\n                                        Component='div'\n                                    >\n                                        <FormattedMessage defaultMessage='Context' id='Apis.Listing.ApiThumb.context' />\n                                    </Typography>\n                                    <Typography variant='subtitle1' component='div' align='right' className={classes.contextBox}>\n                                        {context}\n                                    </Typography>\n                                </div>\n                            </div>\n                        </div>\n                        <div className={classes.thumbInfo}>\n                            {showRating && <div className={classes.thumbLeftAction}>\n                                <Typography\n                                    variant='subtitle1'\n                                    component='div'\n                                    gutterBottom\n                                    align='left'\n                                    className={classNames('api-thumb-rating', classes.ratingWrapper)}\n                                >\n                                    <StarRatingBar\n                                        apiRating={api.avgRating}\n                                        apiId={api.id}\n                                        isEditable={false}\n                                        showSummary={false}\n                                    />\n                                </Typography>\n                            </div>}\n                            <div className={classes.thumbRight}>\n                                <Typography\n                                    variant='subtitle1'\n                                    component='div'\n                                    gutterBottom\n                                    align='right'\n                                    className={classes.chipWrapper}\n                                >\n                                    {(api.type === 'GRAPHQL' || api.transportType === 'GRAPHQL') && (\n                                        <Chip\n                                            label={api.transportType === undefined ? api.type : api.transportType}\n                                            color='primary'\n                                        />\n                                    )}\n                                    {(api.lifeCycleStatus === 'PROTOTYPED') && (\n                                        <Chip\n                                        label={api.apiType === 'APIProduct' ? api.state : api.lifeCycleStatus}\n                                        color='default'\n                                    />\n                                    )}\n                                </Typography>\n                            </div>\n                        </div>\n                    </CardContent>\n                )}\n            </Card>\n            </Link>\n        );\n    }\n}\nApiThumb.defaultProps = {\n    customWidth: null,\n    customHeight: null,\n    showInfo: true,\n};\nApiThumb.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    theme: PropTypes.shape({}).isRequired,\n    customWidth: PropTypes.number,\n    customHeight: PropTypes.number,\n    showInfo: PropTypes.bool,\n};\n\nApiThumb.contextType = ApiContext;\n\nexport default withStyles(styles, { withTheme: true })(ApiThumb);\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport Typography from '@material-ui/core/Typography';\nimport Chip from '@material-ui/core/Chip';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from '@material-ui/core/Select';\n\n// Styles for Grid and Paper elements\nconst styles = theme => ({\n    FormControl: {\n        padding: theme.spacing(2),\n        width: '100%',\n    },\n    FormControlOdd: {\n        padding: theme.spacing(2),\n        backgroundColor: theme.palette.background.paper,\n        width: '100%',\n    },\n    quotaHelp: {\n        position: 'relative',\n    },\n    chips: {\n        display: 'flex',\n        flexWrap: 'wrap',\n    },\n    chip: {\n        margin: theme.spacing(0.25),\n    },\n});\n\nconst MenuProps = {\n    PaperProps: {\n        style: {\n            maxHeight: 224,\n            width: 250,\n        },\n    },\n};\n\n/**\n * Used to display generate acctoken UI\n */\nconst tokens = (props) => {\n    /**\n    * This method is used to handle the updating of create application\n    * request object.\n    * @param {*} field field that should be updated in appliction request\n    * @param {*} event event fired\n    */\n    const handleChange = (field, event) => {\n        const { accessTokenRequest, updateAccessTokenRequest } = props;\n        const newRequest = { ...accessTokenRequest };\n\n        const { target: currentTarget } = event;\n\n        switch (field) {\n            case 'scopesSelected':\n                newRequest.scopesSelected = currentTarget.value;\n                break;\n            case 'keyType':\n                newRequest.keyType = currentTarget.value;\n                break;\n            default:\n                break;\n        }\n        updateAccessTokenRequest(newRequest);\n    };\n    const {\n        classes, accessTokenRequest, subscriptionScopes,\n    } = props;\n\n    return (\n        <>\n            <FormControl\n                margin='normal'\n                className={classes.FormControlOdd}\n                disabled={subscriptionScopes.length === 0}\n            >\n                <InputLabel htmlFor='quota-helper' className={classes.quotaHelp}>\n                    <FormattedMessage\n                        id='Shared.AppsAndKeys.Tokens.when.you.generate.scopes'\n                        defaultMessage='Scopes'\n                    />\n\n                </InputLabel>\n                <Select\n                    name='scopesSelected'\n                    multiple\n                    value={accessTokenRequest.scopesSelected}\n                    onChange={e => handleChange('scopesSelected', e)}\n                    input={<Input id='select-multiple-chip' />}\n                    renderValue={selected => (\n                        <div className={classes.chips}>\n                            {selected.map(value => (\n                                <Chip key={value} label={value} className={classes.chip} />\n                            ))}\n                        </div>\n                    )}\n                    MenuProps={MenuProps}\n                >\n                    {subscriptionScopes.map(scope => (\n                        <MenuItem\n                            key={scope}\n                            value={scope}\n                        >\n                            {scope}\n                        </MenuItem>\n                    ))}\n                </Select>\n                <Typography variant='caption'>\n                    <FormattedMessage\n                        id='Shared.AppsAndKeys.Tokens.when.you.generate'\n                        defaultMessage={'When you generate access tokens to APIs protected by scope/s,'\n                            + ' you can select the scope/s and then generate the token for it. Scopes enable '\n                            + 'fine-grained access control to API resources based on user roles. You define scopes to '\n                            + 'an API resource. When a user invokes the API, his/her OAuth 2 bearer token cannot grant '\n                            + 'access to any API resource beyond its associated scopes.'}\n                    />\n                </Typography>\n            </FormControl>\n        </>\n    );\n};\ntokens.contextTypes = {\n    intl: PropTypes.shape({}).isRequired,\n};\nexport default withStyles(styles)(tokens);\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport { withStyles } from '@material-ui/core/styles';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Icon from '@material-ui/core/Icon';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { app } from 'Settings';\n\n/**\n * @inheritdoc\n * @param {*} theme theme object\n */\nconst styles = theme => ({\n    thumbContent: {\n        width: theme.custom.tagWise.thumbnail.width - theme.spacing(1),\n        backgroundColor: theme.palette.background.paper,\n        padding: theme.spacing(1),\n    },\n    thumbLeft: {\n        alignSelf: 'flex-start',\n        flex: 1,\n    },\n    thumbRight: {\n        alignSelf: 'flex-end',\n    },\n    thumbInfo: {\n        display: 'flex',\n    },\n    thumbHeader: {\n        width: theme.custom.tagWise.thumbnail.width - theme.spacing(1),\n        whiteSpace: 'nowrap',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n        cursor: 'pointer',\n        justifyContent: 'center',\n        margin: 0,\n    },\n    contextBox: {\n        // eslint-disable-next-line radix\n        width: parseInt(150 - theme.spacing(0.5)),\n        whiteSpace: 'nowrap',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n        cursor: 'pointer',\n        margin: 0,\n        display: 'inline-block',\n        lineHeight: '1em',\n    },\n    thumbWrapper: {\n        position: 'relative',\n        paddingTop: 20,\n        marginRight: theme.spacing(2),\n    },\n    deleteIcon: {\n        fill: 'red',\n    },\n    textWrapper: {\n        color: theme.custom.tagCloud.leftMenu.color,\n        '& .material-icons': {\n            color: theme.custom.tagCloud.leftMenu.color,\n        },\n    },\n    image: {\n        width: theme.custom.tagWise.thumbnail.width,\n    },\n    imageWrapper: {\n        color: theme.palette.text.secondary,\n        backgroundColor: theme.palette.background.paper,\n        width: theme.custom.tagWise.thumbnail.width + theme.spacing(1),\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    imageOverlap: {\n        position: 'absolute',\n        bottom: 1,\n        backgroundColor: theme.custom.thumbnail.contentBackgroundColor,\n    },\n});\n\n/**\n * Get ApiTagThumb\n * @param {*} props properties\n * @returns {*}\n */\nfunction ApiTagThumb(props) {\n    const {\n        tag, path, classes, theme, style, mainPage,\n    } = props;\n    const tagLink = path + ':' + tag.value;\n    const {\n        tagWise: {\n            thumbnail: { image },\n        },\n    } = theme.custom;\n    const name = tag.value.split(theme.custom.tagWise.key)[0];\n    if (style === 'fixed-left' || !mainPage) {\n        return (\n            <Link to={tagLink} className={classes.textWrapper}>\n                <ListItem button>\n                    <ListItemIcon>\n                        <Icon>label</Icon>\n                    </ListItemIcon>\n                    <ListItemText primary={name} />\n                </ListItem>\n            </Link>\n        );\n    }\n\n    return (\n        <div className={classes.thumbWrapper}>\n            <Link to={tagLink} className={classes.imageWrapper}>\n                <img src={app.context + image} className={classes.image} alt='' />\n            </Link>\n            <div className={classNames(classes.thumbContent)}>\n                <Link to={tagLink} className={classes.textWrapper}>\n                    <Typography className={classes.thumbHeader} variant='h4' gutterBottom title={name}>\n                        {name}\n                    </Typography>\n                </Link>\n            </div>\n        </div>\n    );\n}\n\nApiTagThumb.propTypes = {\n    classes: PropTypes.shape({\n        thumbWrapper: PropTypes.shape({}).isRequired,\n        imageWrapper: PropTypes.shape({}).isRequired,\n        thumbContent: PropTypes.shape({}).isRequired,\n        imageOverlap: PropTypes.shape({}).isRequired,\n        textWrapper: PropTypes.shape({}).isRequired,\n        thumbHeader: PropTypes.shape({}).isRequired,\n        image: PropTypes.shape({}).isRequired,\n    }).isRequired,\n    theme: PropTypes.shape({\n        custom: PropTypes.shape({\n            tagWise: PropTypes.shape({}).isRequired,\n        }).isRequired,\n    }).isRequired,\n    tag: PropTypes.shape({\n        value: PropTypes.shape({\n            split: PropTypes.func,\n        }).isRequired,\n    }).isRequired,\n    path: PropTypes.shape({}).isRequired,\n    style: PropTypes.string.isRequired,\n};\n\nexport default withStyles(styles, { withTheme: true })(ApiTagThumb);\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { useTheme, makeStyles } from '@material-ui/core/styles';\nimport { Link, useHistory } from 'react-router-dom';\nimport Typography from '@material-ui/core/Typography';\nimport List from '@material-ui/core/List';\nimport Divider from '@material-ui/core/Divider';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Icon from '@material-ui/core/Icon';\nimport { FormattedMessage } from 'react-intl';\nimport ApiTagThumb from './ApiTagThumb';\nimport classNames from 'classnames';\n\nconst useStyles = makeStyles(theme => ({\n    mainTitle: {\n        paddingTop: 10,\n    },\n    mainTitleWrapper: {\n        flexGrow: 1,\n    },\n    listContentWrapper: {\n        padding: `0 ${theme.spacing(3)}px`,\n    },\n    textWrapper: {\n        color: theme.custom.tagCloud.leftMenu.color,\n        '& .material-icons': {\n            color: theme.custom.tagCloud.leftMenu.color,\n        },\n    },\n    linkTextWrapper: {\n        color: theme.palette.primary.main,\n    },\n    tagWiseThumbWrapper: {\n        display: 'flex',\n    },\n    filterTitle: {\n        fontWeight: 200,\n        paddingLeft: theme.spacing(2),\n        background: theme.custom.tagCloud.leftMenu.titleBackground,\n        color: theme.palette.getContrastText(theme.custom.tagCloud.leftMenu.titleBackground),\n        height: theme.custom.infoBar.height,\n        alignItems: 'center',\n        display: 'flex',\n    },\n    mainPageList: {\n        display: 'flex',\n    },\n    mainPageAllApis: {\n        width: '100%',\n    }\n}));\n\n/**\n * Shared listing page\n *\n * @class TagCloudListing\n * @extends {Component}\n */\nfunction TagCloudListingTags(props) {\n    const classes = useStyles();\n    const theme = useTheme();\n    const history = useHistory();\n    const {\n        custom: {\n            tagWise: {\n                key, active, style, showAllApis,\n            },\n        },\n    } = theme;\n\n\n    const tagWiseURL = '/apis?offset=0&query=tag';\n    const { allTags, mainPage } = props;\n    let apisTagCloudGroup = null;\n\n    if (allTags.count !== 0) {\n        if (allTags !== null) {\n            apisTagCloudGroup = allTags.filter(item => active === true && item.value.split(key).length > 1);\n        }\n        if (apisTagCloudGroup && apisTagCloudGroup.length > 0) {\n            // const tagLink = tagWiseURL + ':' + apisTagCloudGroup[0].value;\n            // if (style === 'fixed-left') history.push(tagLink);\n        }\n    }\n\n    /**\n     *\n     * @inheritdoctheme\n     * @returns {React.Component} @inheritdoc\n     * @memberof TagCloudListing\n     */\n    return apisTagCloudGroup && apisTagCloudGroup.length > 0 ? (\n        <>\n            {!mainPage && (<Typography variant='h6' gutterBottom className={classes.filterTitle}>\n                <FormattedMessage defaultMessage='API Groups' id='Apis.Listing.TagCloudListingTags.title' />\n            </Typography>)}\n            <List component='nav' aria-label='main mailbox folders' className={classNames({ [classes.mainPageList]: mainPage })}>\n                {Object.keys(apisTagCloudGroup).map((key) => {\n                    return <ApiTagThumb key={key} tag={apisTagCloudGroup[key]} path={tagWiseURL} style={style} mainPage={mainPage} />;\n                })}\n            </List>\n            {showAllApis && (\n                <div className={classNames({ [classes.mainPageAllApis]: mainPage })}>\n                    <Divider />\n\n                    <Link to='apis/' className={classes.textWrapper}>\n                        <ListItem button>\n                            <ListItemIcon>\n                                <Icon>label</Icon>\n                            </ListItemIcon>\n                            <ListItemText\n                                primary={\n                                    <FormattedMessage\n                                        defaultMessage='All Apis'\n                                        id='Apis.Listing.TagCloudListingTags.allApis'\n                                    />\n                                }\n                            />\n                        </ListItem>\n                    </Link>\n                </div>\n            )}\n        </>\n\n    ) : (\n            <>\n                {!mainPage && (<Typography variant='h6' gutterBottom className={classes.filterTitle}>\n                    <FormattedMessage defaultMessage='API Groups' id='Apis.Listing.TagCloudListingTags.title' />\n                </Typography>)}\n                <div className={classes.mainTitle}>\n                    <Typography variant='subtitle1' gutterBottom align='center'>\n                        <FormattedMessage\n                            defaultMessage='API groups cannot be found'\n                            id='Apis.Listing.TagCloudListingTags.tagsNotFound'\n                        />\n                    </Typography>\n                    <Link to='apis/' className={classes.linkTextWrapper}>\n                        <Typography variant='subtitle1' gutterBottom align='center'>\n                            <FormattedMessage\n                                defaultMessage='All Apis'\n                                id='Apis.Listing.TagCloudListingTags.allApis'\n                            />\n                        </Typography>\n                    </Link>\n                </div>\n            </>\n        );\n}\n\nTagCloudListingTags.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    theme: PropTypes.shape({}).isRequired,\n    allTags: PropTypes.shape({}).isRequired,\n};\n\nexport default TagCloudListingTags;\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M12 2C6.47 2 2 6.47 2 12s4.47 10 10 10 10-4.47 10-10S17.53 2 12 2zm5 13.59L15.59 17 12 13.41 8.41 17 7 15.59 10.59 12 7 8.41 8.41 7 12 10.59 15.59 7 17 8.41 13.41 12 17 15.59z\"\n}), 'Cancel');\n\nexports.default = _default;","import React from 'react';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport { FormattedMessage } from 'react-intl';\nimport { app } from 'Settings';\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        flexGrow: 1,\n    },\n    messageWrapper: {\n        marginTop: theme.spacing(4),\n        padding: theme.spacing(2),\n        textAlign: 'center',\n        color: theme.palette.text.secondary,\n    },\n}));\n\nexport default function NoApi() {\n    const classes = useStyles();\n    const theme = useTheme();\n\n    return (\n        <div className={classes.root}>\n            <Grid container spacing={3}>\n                <Grid item xs={12} className={classes.messageWrapper}>\n                    <img alt='API icon' src={app.context + theme.custom.noApiImage} className={classes.messageWrapper} />\n                    <Typography variant='h5' gutterBottom>\n                        <FormattedMessage id='Apis.Listing.NoApi.nodata.title' defaultMessage='No APIs Available' />\n                    </Typography>\n                    <Typography variant='subtitle1' gutterBottom>\n                        <FormattedMessage\n                            id='Apis.Listing.NoApi.nodata.content'\n                            defaultMessage='There are no APIs to display right now.'\n                        />\n                    </Typography>\n                </Grid>\n            </Grid>\n        </div>\n    );\n}\n","/* eslint-disable react/prop-types */\n/*\n * Copyright (c) 2017, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useEffect, useState } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport Typography from '@material-ui/core/Typography';\nimport { withStyles } from '@material-ui/core/styles';\nimport CustomIcon from './CustomIcon';\n\nconst styles = (theme) => ({\n    leftLInkText: {\n        color: theme.palette.getContrastText(theme.custom.leftMenu.background),\n        textTransform: 'capitalize',\n        width: '100%',\n        textAlign: 'left',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n        whiteSpace: 'nowrap',\n    },\n    leftLInkText_IconLeft: {\n        paddingLeft: 10,\n    },\n    LeftMenu: {\n        backgroundColor: theme.custom.leftMenu.background,\n        width: theme.custom.leftMenu.width,\n        textAlign: 'center',\n        fontFamily: theme.typography.fontFamily,\n        position: 'absolute',\n        bottom: 0,\n        left: 0,\n        top: 0,\n    },\n    leftLInk: {\n        paddingTop: theme.spacing(0.6),\n        paddingBottom: theme.spacing(0.6),\n        paddingLeft: theme.spacing(1),\n        paddingRight: 0,\n        fontSize: theme.typography.caption.fontSize,\n        cursor: 'pointer',\n        textDecoration: 'none',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    leftLink_Icon: {\n        color: theme.palette.getContrastText(theme.custom.leftMenu.background),\n        fontSize: theme.custom.leftMenu.iconSize + 'px',\n    },\n    leftLink_IconLeft: {\n        display: 'flex',\n        alignItems: 'center',\n    },\n    noIcon: {\n        display: 'none',\n    },\n    leftLInkText_NoText: {\n        display: 'none',\n    },\n    submenu: {\n        paddingLeft: theme.spacing(4),\n    },\n});\n/**\n * Renders the left menu section.\n * @param {JSON} props props passed from parent\n * @returns {JSX} Leftmenu element.\n */\nfunction LeftMenuItem(props) {\n    const [selected, setSelected] = useState(false);\n\n    const {\n        classes, theme, Icon, to, history, text, route, submenu, open\n    } = props;\n    const routeToCheck = route || text;\n    const { leftMenu } = theme.custom;\n    const strokeColor = theme.palette.getContrastText(leftMenu.background);\n    const { iconSize } = leftMenu;\n    const ditectCurrentMenu = (location = null) => {\n        if (!location) {\n            location = window.location;\n        }\n        const { pathname } = location;\n\n        const test1 = new RegExp('/' + routeToCheck + '$', 'g');\n        const test2 = new RegExp('/' + routeToCheck + '/', 'g');\n        if (pathname.match(test1) || pathname.match(test2)) {\n            setSelected(true);\n        } else {\n            setSelected(false);\n        }\n\n\n    };\n    useEffect(() => {\n        ditectCurrentMenu();\n    }, []);\n    history.listen((location) => {\n        ditectCurrentMenu(location);\n    });\n    let activeBackground = '';\n    if (selected && !submenu) {\n        activeBackground = leftMenu.leftMenuActive;\n    } else if (selected && submenu) {\n        activeBackground = leftMenu.leftMenuActiveSubmenu;\n    }\n    return (\n        <Link\n            className={classNames(\n                classes.leftLInk,\n                {\n                    [classes.leftLink_IconLeft]: leftMenu === 'icon left',\n                    [classes.submenu]: submenu,\n                },\n                'leftLInk',\n            )}\n            to={to}\n            style={{ backgroundColor: activeBackground }}\n        >\n            {!submenu && (\n                // If the icon pro ( which is comming from the React Material library )\n                // is coming we add css class and render.\n                // If leftMenu='no icon' at the theme object we hide the icon. Also we add static classes to\n                // allow customers theme\n                // the product without compiling.\n                Icon ? (\n                    React.cloneElement(Icon, {\n                        className: classNames(\n                            classes.leftLink_Icon,\n                            {\n                                [classes.noIcon]: leftMenu.style === 'no icon',\n                                [classes.submenu]: submenu,\n                            },\n                            'leftLink_Icon',\n                        ),\n                    })\n                ) : (\n                        // We can also add custom icons\n                        <CustomIcon\n                            strokeColor={strokeColor}\n                            width={iconSize}\n                            height={iconSize}\n                            aria-label={ props.text + ' icon'}\n                            icon={props.iconText}\n                            className={classNames(\n                                classes.leftLInk,\n                                {\n                                    [classes.noIcon]: leftMenu.style === 'no icon',\n                                },\n                                'leftLink_Icon',\n                            )}\n                        />\n                    ))}\n            {open && (\n                <Typography\n                    className={classNames(\n                        classes.leftLInkText,\n                        {\n                            [classes.leftLInkText_IconLeft]: leftMenu.style === 'icon left',\n                            [classes.leftLInkText_NoText]: leftMenu.style === 'no text',\n                        },\n                        'leftLInkText',\n                    )}\n                >\n                    {props.text}\n                </Typography>\n            )}\n            {!open && (\n                <Typography\n                    className={classNames(\n                        {\n                            [classes.leftLInkText_IconLeft]: leftMenu.style === 'icon left',\n                        },\n                        'leftLInkText',\n                    )}\n                />\n            )}\n            \n\n        </Link>\n    );\n}\nLeftMenuItem.defaultProps = {\n    route: null,\n    iconText: null,\n    Icon: null,\n    submenu: false,\n};\nLeftMenuItem.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    theme: PropTypes.shape({}).isRequired,\n    Icon: PropTypes.element,\n    text: PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.shape({}),\n    ]).isRequired,\n    to: PropTypes.string.isRequired,\n    route: PropTypes.string,\n    iconText: PropTypes.string,\n    history: PropTypes.shape({\n        location: PropTypes.shape({}).isRequired,\n    }).isRequired,\n    submenu: PropTypes.bool,\n};\nexport default withRouter(withStyles(styles, { withTheme: true })(LeftMenuItem));\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M19.35 10.04C18.67 6.59 15.64 4 12 4 9.11 4 6.6 5.64 5.35 8.04 2.34 8.36 0 10.91 0 14c0 3.31 2.69 6 6 6h13c2.76 0 5-2.24 5-5 0-2.64-2.05-4.78-4.65-4.96zM17 13l-4.65 4.65c-.2.2-.51.2-.71 0L7 13h3V9h4v4h3z\"\n}), 'CloudDownloadRounded');\n\nexports.default = _default;","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useEffect, useState } from 'react';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport { FormattedMessage } from 'react-intl';\nimport API from 'AppData/api';\nimport TagCloudListingTags from './TagCloudListingTags';\nimport CustomIcon from '../../Shared/CustomIcon';\n\nconst useStyles = makeStyles(theme => ({\n    appBar: {\n        height: 70,\n        background: theme.custom.infoBar.background,\n        color: theme.palette.getContrastText(theme.custom.infoBar.background),\n        borderBottom: 'solid 1px ' + theme.palette.grey.A200,\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    mainIconWrapper: {\n        paddingTop: 13,\n        paddingLeft: 20,\n        paddingRight: 20,\n    },\n    mainTitle: {\n        paddingTop: 10,\n    },\n    mainTitleWrapper: {\n        flexGrow: 1,\n    },\n    content: {\n        flexGrow: 1,\n    },\n    listContentWrapper: {\n        padding: `0 ${theme.spacing(3)}px`,\n    },\n    iconDefault: {\n        color: theme.palette.getContrastText(theme.custom.infoBar.background),\n    },\n}));\n\nexport default function TagCloudListing() {\n    const classes = useStyles();\n    const theme = useTheme();\n    const [allTags, setAllTags] = useState(null);\n    useEffect(() => {\n        const restApiClient = new API();\n        const promisedTags = restApiClient.getAllTags();\n        promisedTags\n            .then((response) => {\n                setAllTags(response.body.list);\n            })\n            .catch((error) => {\n                console.log(error);\n            });\n    }, []);\n    const strokeColorMain = theme.palette.getContrastText(theme.palette.background.paper);\n\n    return (\n        <main className={classes.content}>\n            <div className={classes.appBar}>\n                <div className={classes.mainIconWrapper}>\n                    <CustomIcon strokeColor={strokeColorMain} width={42} height={42} icon='api' />\n                </div>\n                <div className={classes.mainTitleWrapper}>\n                    <Typography variant='h4' className={classes.mainTitle}>\n                        <FormattedMessage\n                            defaultMessage='API Groups'\n                            id='Apis.Listing.TagCloudListing.apigroups.main'\n                        />\n                    </Typography>\n                </div>\n            </div>\n            <div className={classes.listContentWrapper}>\n                {allTags && <TagCloudListingTags allTags={allTags} mainPage={true} />}\n            </div>\n        </main>\n    );\n}\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useState, useEffect } from 'react';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Grid from '@material-ui/core/Grid';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Typography from '@material-ui/core/Typography';\nimport Select from '@material-ui/core/Select';\nimport { withStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport PropTypes from 'prop-types';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport { FormattedMessage } from 'react-intl';\nimport classNames from 'classnames';\n\n/**\n * @inheritdoc\n * @param {*} theme theme object\n */\nconst styles = theme => ({\n    titleBar: {\n        display: 'flex',\n        justifyContent: 'space-between',\n        borderBottomWidth: '1px',\n        borderBottomStyle: 'solid',\n        borderColor: theme.palette.text.secondary,\n        marginBottom: 20,\n    },\n    buttonLeft: {\n        alignSelf: 'flex-start',\n        display: 'flex',\n    },\n    buttonRight: {\n        alignSelf: 'flex-end',\n        display: 'flex',\n        marginLeft: 20,\n    },\n    title: {\n        display: 'inline-block',\n        marginLeft: 20,\n    },\n    buttonsWrapper: {\n        marginTop: 40,\n    },\n    legend: {\n        marginBottom: 0,\n        borderBottomStyle: 'none',\n        marginTop: 20,\n        fontSize: 12,\n    },\n    inputText: {\n        marginTop: 20,\n    },\n    buttonRightLink: {\n        textDecoration: 'none',\n    },\n    FormControl: {\n        padding: theme.spacing(2),\n        width: '100%',\n    },\n    fullWidth: {\n        '& .MuiFormControl-root':{\n            width: '100%',\n        }\n    },\n    FormControlOdd: {\n        backgroundColor: theme.palette.background.paper,\n    },\n    quotaHelp: {\n        position: 'relative',\n    },\n    subscribeRoot: {\n        paddingLeft: theme.spacing(2),\n    },\n    subscribeRootSmall: {\n        marginLeft: `-${theme.spacing(4)}px`,\n    },\n    smallDisplay: {\n        width: 240,\n        '& .MuiInput-formControl': {\n            marginTop: 0,\n        },\n    },\n    smallDisplayFix: {\n        '& .MuiSelect-selectMenu': {\n            padding: 0,\n        },\n    },\n    selectMenuRoot: {\n        margin: 0,\n        padding: 0,\n    },\n    appDropDown: {\n        color: theme.palette.getContrastText(theme.palette.background.paper),\n    },\n});\n\nconst subscribeToApi = (props) => {\n    const [appSelected, setAppSelected] = useState('');\n    const [policySelected, setPolicySelected] = useState('');\n    const [applicationsList, setApplicationsList] = useState([]);\n    const {\n        classes,\n        throttlingPolicyList,\n        applicationsAvailable,\n        subscriptionRequest,\n        updateSubscriptionRequest,\n        renderSmall,\n    } = props;\n\n    useEffect(() => {\n        if (throttlingPolicyList && throttlingPolicyList[0]) {\n            setPolicySelected(throttlingPolicyList[0].tierName);\n        }\n    }, [throttlingPolicyList]);\n\n    useEffect(() => {\n        if (applicationsAvailable && applicationsAvailable[0]) {\n            setApplicationsList(applicationsAvailable);\n            setAppSelected(applicationsAvailable[0]);\n            const newRequest = { ...subscriptionRequest };\n            newRequest.applicationId = applicationsAvailable[0].value;\n        }\n    }, [applicationsAvailable]);\n\n    /**\n     * This method is used to handle the updating of subscription\n     * request object and selected fields.\n     * @param {*} field field that should be updated in subscription request\n     * @param {*} event event fired\n     */\n    const handleChange = (field, event,value = null) => {\n        const newRequest = { ...subscriptionRequest };\n        const { target } = event;\n        switch (field) {\n            case 'application':\n                newRequest.applicationId = value.value;\n                setAppSelected(value);\n                break;\n            case 'throttlingPolicy':\n                newRequest.throttlingPolicy = target.value;\n                setPolicySelected(target.value);\n                break;\n            default:\n                break;\n        }\n        updateSubscriptionRequest(newRequest);\n    };\n\n    return (\n        <Grid container className={classNames(classes.subscribeRoot, { [classes.subscribeRootSmall]: renderSmall })}>\n            <Grid item xs={12} md={renderSmall ? 12 : 6}>\n                {appSelected && (\n                    <FormControl className={classNames(classes.FormControl, { [classes.smallDisplay]: renderSmall })}>\n                        <InputLabel shrink for='application-subscribe' className={classes.quotaHelp}>\n                            <FormattedMessage\n                                id='Shared.AppsAndKeys.SubscribeToApi.application'\n                                defaultMessage='Application'\n                            />\n                        </InputLabel>\n                        <Autocomplete\n                           id=\"application-subscribe\"\n                           options={applicationsList}\n                           value={(applicationsList.length !== 0 && appSelected === '') ?\n                                applicationsList[0] : appSelected}\n                           onChange={(e, value) => handleChange('application', e, value)}\n                           getOptionLabel={(option) => option.label}\n                           classes={{root:classes.fullWidth}}\n                           renderInput={(params) => <TextField {...params} />}\n                         />\n                        <FormHelperText>\n                            <FormattedMessage\n                                id='Shared.AppsAndKeys.SubscribeToApi.select.an.application.to.subscribe'\n                                defaultMessage='Select an Application to subscribe'\n                            />\n                        </FormHelperText>\n                    </FormControl>\n                )}\n                {throttlingPolicyList && (\n                    <FormControl\n                        className={classNames(classes.FormControl, classes.smallDisplayFix, {\n                            [classes.smallDisplay]: renderSmall,\n                            [classes.FormControlOdd]: !renderSmall,\n                        })}\n                    >\n                        <InputLabel shrink htmlFor='policy-label-placeholder' className={classes.quotaHelp}>\n                            <FormattedMessage\n                                id='Shared.AppsAndKeys.SubscribeToApi.throttling.policy'\n                                defaultMessage='Throttling Policy'\n                            />\n                        </InputLabel>\n                        <Select\n                            value={policySelected}\n                            onChange={e => handleChange('throttlingPolicy', e)}\n                            input={<Input name='policySelected' id='policy-label-placeholder' />}\n                            displayEmpty\n                            name='policySelected'\n                            className={classes.selectEmpty}\n                        >\n                            {throttlingPolicyList.map(policy => (\n                                <MenuItem value={policy.tierName} key={policy.tierName}  className={classes.appDropDown}>\n                                    {policy.tierPlan === 'COMMERCIAL' ? (\n                                        <React.Fragment>\n                                            <ListItemText\n                                                classes={{ root: classes.selectMenuRoot }}\n                                                primary={policy.tierName}\n                                                secondary={\n                                                    policy.monetizationAttributes.pricePerRequest ? (\n                                                        <Typography>\n                                                            {policy.monetizationAttributes.pricePerRequest}{' '}\n                                                            {policy.monetizationAttributes.currencyType}\n                                                            {' per Request'}\n                                                        </Typography>\n                                                    ) : (\n                                                        <Typography>\n                                                            {policy.monetizationAttributes.fixedPrice}{' '}\n                                                            {policy.monetizationAttributes.currencyType}\n                                                            {' per '}\n                                                            {policy.monetizationAttributes.billingCycle}\n                                                        </Typography>\n                                                    )\n                                                }\n                                            />\n                                        </React.Fragment>\n                                    ) : (\n                                        <ListItemText primary={policy.tierName} />\n                                    )}\n                                </MenuItem>\n                            ))}\n                        </Select>\n                        <FormHelperText>\n                            <FormattedMessage\n                                id='Shared.AppsAndKeys.SubscribeToApi.available.policies'\n                                defaultMessage='Available Policies -'\n                            />{' '}\n                            {throttlingPolicyList.map((policy, index) => (\n                                <span key={policy.tierName}>\n                                    {policy.tierName}\n                                    {index !== throttlingPolicyList.length - 1 && <span>,</span>}\n                                </span>\n                            ))}\n                        </FormHelperText>\n                    </FormControl>\n                )}\n            </Grid>\n        </Grid>\n    );\n};\nsubscribeToApi.propTypes = {\n    classes: PropTypes.shape({\n        FormControl: PropTypes.string,\n        quotaHelp: PropTypes.string,\n        selectEmpty: PropTypes.string,\n        FormControlOdd: PropTypes.string,\n        subscribeRoot: PropTypes.string,\n        subscribeRootSmall: PropTypes.string,\n        smallDisplayFix: PropTypes.string,\n        selectMenuRoot: PropTypes.string,\n        smallDisplay: PropTypes.string,\n    }).isRequired,\n    applicationsAvailable: PropTypes.arrayOf(PropTypes.shape({\n        value: PropTypes.string,\n        label: PropTypes.string,\n    })).isRequired,\n    throttlingPolicyList: PropTypes.arrayOf(PropTypes.shape({})).isRequired,\n    subscriptionRequest: PropTypes.shape({}).isRequired,\n    updateSubscriptionRequest: PropTypes.func.isRequired,\n    renderSmall: PropTypes.bool,\n};\nsubscribeToApi.defaultProps = {\n    renderSmall: false,\n};\n\nexport default withStyles(styles)(subscribeToApi);\n","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _TagCloud = require('./TagCloud');\n\nObject.defineProperty(exports, 'TagCloud', {\n  enumerable: true,\n  get: function get() {\n    return _TagCloud.TagCloud;\n  }\n});","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.TagCloud = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _defaultRenderer = require('./defaultRenderer');\n\nvar _shuffleArray = require('shuffle-array');\n\nvar _shuffleArray2 = _interopRequireDefault(_shuffleArray);\n\nvar _randomcolor = require('randomcolor');\n\nvar _randomcolor2 = _interopRequireDefault(_randomcolor);\n\nvar _helpers = require('./helpers');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar eventHandlers = ['onClick', 'onDoubleClick', 'onMouseMove'];\nvar cloudProps = ['tags', 'shuffle', 'renderer', 'maxSize', 'minSize', 'colorOptions', 'disableRandomColor', 'randomNumberGenerator'];\n\nvar generateColor = function generateColor(tag, _ref) {\n  var disableRandomColor = _ref.disableRandomColor,\n      colorOptions = _ref.colorOptions;\n\n  if (tag.color) {\n    return tag.color;\n  }\n  if (disableRandomColor) {\n    return undefined;\n  }\n  return (0, _randomcolor2.default)(colorOptions);\n};\n\nvar TagCloud = exports.TagCloud = function (_React$Component) {\n  _inherits(TagCloud, _React$Component);\n\n  function TagCloud() {\n    _classCallCheck(this, TagCloud);\n\n    return _possibleConstructorReturn(this, (TagCloud.__proto__ || Object.getPrototypeOf(TagCloud)).apply(this, arguments));\n  }\n\n  _createClass(TagCloud, [{\n    key: 'componentWillReceiveProps',\n    value: function componentWillReceiveProps(newProps) {\n      var propsEqual = (0, _helpers.propertiesEqual)(this.props, newProps, Object.keys(TagCloud.propTypes));\n      var tagsEqual = (0, _helpers.arraysEqual)(newProps.tags, this.props.tags);\n      if (!tagsEqual || !propsEqual) {\n        this._populate(newProps);\n      }\n    }\n  }, {\n    key: 'componentWillMount',\n    value: function componentWillMount() {\n      this._populate(this.props);\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var props = (0, _helpers.omitProps)(this.props, [].concat(cloudProps, eventHandlers));\n      var tagElements = this._attachEventHandlers();\n      return _react2.default.createElement(\n        'div',\n        props,\n        tagElements\n      );\n    }\n  }, {\n    key: '_attachEventHandlers',\n    value: function _attachEventHandlers() {\n      var _this2 = this;\n\n      var cloudHandlers = (0, _helpers.includeProps)(this.props, eventHandlers);\n      return this._data.map(function (_ref2) {\n        var tag = _ref2.tag,\n            fontSize = _ref2.fontSize,\n            color = _ref2.color;\n\n        var elem = _this2.props.renderer(tag, fontSize, color);\n        var tagHandlers = (0, _helpers.includeProps)(elem.props, eventHandlers);\n        var globalHandlers = Object.keys(cloudHandlers).reduce(function (r, k) {\n          r[k] = function (e) {\n            cloudHandlers[k](tag, e);\n            tagHandlers[k] && tagHandlers(e);\n          };\n          return r;\n        }, {});\n        return _react2.default.cloneElement(elem, globalHandlers);\n      });\n    }\n  }, {\n    key: '_populate',\n    value: function _populate(props) {\n      var tags = props.tags,\n          shuffle = props.shuffle,\n          minSize = props.minSize,\n          maxSize = props.maxSize,\n          randomNumberGenerator = props.randomNumberGenerator;\n\n      var counts = tags.map(function (tag) {\n        return tag.count;\n      }),\n          min = Math.min.apply(Math, _toConsumableArray(counts)),\n          max = Math.max.apply(Math, _toConsumableArray(counts));\n      var data = tags.map(function (tag) {\n        return {\n          tag: tag,\n          color: generateColor(tag, props),\n          fontSize: (0, _helpers.fontSizeConverter)(tag.count, min, max, minSize, maxSize)\n        };\n      });\n      this._data = shuffle ? (0, _shuffleArray2.default)(data, { copy: true, rng: randomNumberGenerator }) : data;\n    }\n  }]);\n\n  return TagCloud;\n}(_react2.default.Component);\n\nTagCloud.propTypes = {\n  tags: _propTypes2.default.array.isRequired,\n  maxSize: _propTypes2.default.number.isRequired,\n  minSize: _propTypes2.default.number.isRequired,\n  shuffle: _propTypes2.default.bool,\n  colorOptions: _propTypes2.default.object,\n  disableRandomColor: _propTypes2.default.bool,\n  renderer: _propTypes2.default.func,\n  className: _propTypes2.default.string,\n  randomNumberGenerator: _propTypes2.default.func\n};\n\nTagCloud.defaultProps = {\n  renderer: _defaultRenderer.defaultRenderer,\n  shuffle: true,\n  className: 'tag-cloud',\n  colorOptions: {}\n};","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.defaultRenderer = undefined;\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _objectAssign = require('object-assign');\n\nvar _objectAssign2 = _interopRequireDefault(_objectAssign);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar defaultRenderer = exports.defaultRenderer = function defaultRenderer(tag, size, color) {\n  var fontSize = size + 'px';\n  var key = tag.key || tag.value;\n  var style = (0, _objectAssign2.default)({}, styles, { color: color, fontSize: fontSize });\n  return _react2.default.createElement(\n    'span',\n    { className: 'tag-cloud-tag', style: style, key: key },\n    tag.value\n  );\n};\n\nvar styles = {\n  margin: '0px 3px',\n  verticalAlign: 'middle',\n  display: 'inline-block'\n};","'use strict';\n\n/**\n * Randomize the order of the elements in a given array.\n * @param {Array} arr - The given array.\n * @param {Object} [options] - Optional configuration options.\n * @param {Boolean} [options.copy] - Sets if should return a shuffled copy of the given array. By default it's a falsy value.\n * @param {Function} [options.rng] - Specifies a custom random number generator.\n * @returns {Array}\n */\nfunction shuffle(arr, options) {\n\n  if (!Array.isArray(arr)) {\n    throw new Error('shuffle expect an array as parameter.');\n  }\n\n  options = options || {};\n\n  var collection = arr,\n      len = arr.length,\n      rng = options.rng || Math.random,\n      random,\n      temp;\n\n  if (options.copy === true) {\n    collection = arr.slice();\n  }\n\n  while (len) {\n    random = Math.floor(rng() * len);\n    len -= 1;\n    temp = collection[len];\n    collection[len] = collection[random];\n    collection[random] = temp;\n  }\n\n  return collection;\n};\n\n/**\n * Pick one or more random elements from the given array.\n * @param {Array} arr - The given array.\n * @param {Object} [options] - Optional configuration options.\n * @param {Number} [options.picks] - Specifies how many random elements you want to pick. By default it picks 1.\n * @param {Function} [options.rng] - Specifies a custom random number generator.\n * @returns {Object}\n */\nshuffle.pick = function(arr, options) {\n\n  if (!Array.isArray(arr)) {\n    throw new Error('shuffle.pick() expect an array as parameter.');\n  }\n\n  options = options || {};\n\n  var rng = options.rng || Math.random,\n      picks = options.picks || 1;\n\n  if (typeof picks === 'number' && picks !== 1) {\n    var len = arr.length,\n        collection = arr.slice(),\n        random = [],\n        index;\n\n    while (picks && len) {\n      index = Math.floor(rng() * len);\n      random.push(collection[index]);\n      collection.splice(index, 1);\n      len -= 1;\n      picks -= 1;\n    }\n\n    return random;\n  }\n\n  return arr[Math.floor(rng() * arr.length)];\n};\n\n/**\n * Expose\n */\nmodule.exports = shuffle;\n","// randomColor by David Merfield under the CC0 license\n// https://github.com/davidmerfield/randomColor/\n\n;(function(root, factory) {\n\n  // Support AMD\n  if (typeof define === 'function' && define.amd) {\n    define([], factory);\n\n  // Support CommonJS\n  } else if (typeof exports === 'object') {\n    var randomColor = factory();\n\n    // Support NodeJS & Component, which allow module.exports to be a function\n    if (typeof module === 'object' && module && module.exports) {\n      exports = module.exports = randomColor;\n    }\n\n    // Support CommonJS 1.1.1 spec\n    exports.randomColor = randomColor;\n\n  // Support vanilla script loading\n  } else {\n    root.randomColor = factory();\n  }\n\n}(this, function() {\n\n  // Seed to get repeatable colors\n  var seed = null;\n\n  // Shared color dictionary\n  var colorDictionary = {};\n\n  // Populate the color dictionary\n  loadColorBounds();\n\n  var randomColor = function (options) {\n\n    options = options || {};\n\n    // Check if there is a seed and ensure it's an\n    // integer. Otherwise, reset the seed value.\n    if (options.seed && options.seed === parseInt(options.seed, 10)) {\n      seed = options.seed;\n\n    // A string was passed as a seed\n    } else if (typeof options.seed === 'string') {\n      seed = stringToInteger(options.seed);\n\n    // Something was passed as a seed but it wasn't an integer or string\n    } else if (options.seed !== undefined && options.seed !== null) {\n      throw new TypeError('The seed value must be an integer or string');\n\n    // No seed, reset the value outside.\n    } else {\n      seed = null;\n    }\n\n    var H,S,B;\n\n    // Check if we need to generate multiple colors\n    if (options.count !== null && options.count !== undefined) {\n\n      var totalColors = options.count,\n          colors = [];\n\n      options.count = null;\n\n      while (totalColors > colors.length) {\n\n        // Since we're generating multiple colors,\n        // incremement the seed. Otherwise we'd just\n        // generate the same color each time...\n        if (seed && options.seed) options.seed += 1;\n\n        colors.push(randomColor(options));\n      }\n\n      options.count = totalColors;\n\n      return colors;\n    }\n\n    // First we pick a hue (H)\n    H = pickHue(options);\n\n    // Then use H to determine saturation (S)\n    S = pickSaturation(H, options);\n\n    // Then use S and H to determine brightness (B).\n    B = pickBrightness(H, S, options);\n\n    // Then we return the HSB color in the desired format\n    return setFormat([H,S,B], options);\n  };\n\n  function pickHue (options) {\n\n    var hueRange = getHueRange(options.hue),\n        hue = randomWithin(hueRange);\n\n    // Instead of storing red as two seperate ranges,\n    // we group them, using negative numbers\n    if (hue < 0) {hue = 360 + hue;}\n\n    return hue;\n\n  }\n\n  function pickSaturation (hue, options) {\n\n    if (options.luminosity === 'random') {\n      return randomWithin([0,100]);\n    }\n\n    if (options.hue === 'monochrome') {\n      return 0;\n    }\n\n    var saturationRange = getSaturationRange(hue);\n\n    var sMin = saturationRange[0],\n        sMax = saturationRange[1];\n\n    switch (options.luminosity) {\n\n      case 'bright':\n        sMin = 55;\n        break;\n\n      case 'dark':\n        sMin = sMax - 10;\n        break;\n\n      case 'light':\n        sMax = 55;\n        break;\n   }\n\n    return randomWithin([sMin, sMax]);\n\n  }\n\n  function pickBrightness (H, S, options) {\n\n    var bMin = getMinimumBrightness(H, S),\n        bMax = 100;\n\n    switch (options.luminosity) {\n\n      case 'dark':\n        bMax = bMin + 20;\n        break;\n\n      case 'light':\n        bMin = (bMax + bMin)/2;\n        break;\n\n      case 'random':\n        bMin = 0;\n        bMax = 100;\n        break;\n    }\n\n    return randomWithin([bMin, bMax]);\n  }\n\n  function setFormat (hsv, options) {\n\n    switch (options.format) {\n\n      case 'hsvArray':\n        return hsv;\n\n      case 'hslArray':\n        return HSVtoHSL(hsv);\n\n      case 'hsl':\n        var hsl = HSVtoHSL(hsv);\n        return 'hsl('+hsl[0]+', '+hsl[1]+'%, '+hsl[2]+'%)';\n\n      case 'hsla':\n        var hslColor = HSVtoHSL(hsv);\n        return 'hsla('+hslColor[0]+', '+hslColor[1]+'%, '+hslColor[2]+'%, ' + Math.random() + ')';\n\n      case 'rgbArray':\n        return HSVtoRGB(hsv);\n\n      case 'rgb':\n        var rgb = HSVtoRGB(hsv);\n        return 'rgb(' + rgb.join(', ') + ')';\n\n      case 'rgba':\n        var rgbColor = HSVtoRGB(hsv);\n        return 'rgba(' + rgbColor.join(', ') + ', ' + Math.random() + ')';\n\n      default:\n        return HSVtoHex(hsv);\n    }\n\n  }\n\n  function getMinimumBrightness(H, S) {\n\n    var lowerBounds = getColorInfo(H).lowerBounds;\n\n    for (var i = 0; i < lowerBounds.length - 1; i++) {\n\n      var s1 = lowerBounds[i][0],\n          v1 = lowerBounds[i][1];\n\n      var s2 = lowerBounds[i+1][0],\n          v2 = lowerBounds[i+1][1];\n\n      if (S >= s1 && S <= s2) {\n\n         var m = (v2 - v1)/(s2 - s1),\n             b = v1 - m*s1;\n\n         return m*S + b;\n      }\n\n    }\n\n    return 0;\n  }\n\n  function getHueRange (colorInput) {\n\n    if (typeof parseInt(colorInput) === 'number') {\n\n      var number = parseInt(colorInput);\n\n      if (number < 360 && number > 0) {\n        return [number, number];\n      }\n\n    }\n\n    if (typeof colorInput === 'string') {\n\n      if (colorDictionary[colorInput]) {\n        var color = colorDictionary[colorInput];\n        if (color.hueRange) {return color.hueRange;}\n      }\n    }\n\n    return [0,360];\n\n  }\n\n  function getSaturationRange (hue) {\n    return getColorInfo(hue).saturationRange;\n  }\n\n  function getColorInfo (hue) {\n\n    // Maps red colors to make picking hue easier\n    if (hue >= 334 && hue <= 360) {\n      hue-= 360;\n    }\n\n    for (var colorName in colorDictionary) {\n       var color = colorDictionary[colorName];\n       if (color.hueRange &&\n           hue >= color.hueRange[0] &&\n           hue <= color.hueRange[1]) {\n          return colorDictionary[colorName];\n       }\n    } return 'Color not found';\n  }\n\n  function randomWithin (range) {\n    if (seed === null) {\n      return Math.floor(range[0] + Math.random()*(range[1] + 1 - range[0]));\n    } else {\n      //Seeded random algorithm from http://indiegamr.com/generate-repeatable-random-numbers-in-js/\n      var max = range[1] || 1;\n      var min = range[0] || 0;\n      seed = (seed * 9301 + 49297) % 233280;\n      var rnd = seed / 233280.0;\n      return Math.floor(min + rnd * (max - min));\n    }\n  }\n\n  function HSVtoHex (hsv){\n\n    var rgb = HSVtoRGB(hsv);\n\n    function componentToHex(c) {\n        var hex = c.toString(16);\n        return hex.length == 1 ? '0' + hex : hex;\n    }\n\n    var hex = '#' + componentToHex(rgb[0]) + componentToHex(rgb[1]) + componentToHex(rgb[2]);\n\n    return hex;\n\n  }\n\n  function defineColor (name, hueRange, lowerBounds) {\n\n    var sMin = lowerBounds[0][0],\n        sMax = lowerBounds[lowerBounds.length - 1][0],\n\n        bMin = lowerBounds[lowerBounds.length - 1][1],\n        bMax = lowerBounds[0][1];\n\n    colorDictionary[name] = {\n      hueRange: hueRange,\n      lowerBounds: lowerBounds,\n      saturationRange: [sMin, sMax],\n      brightnessRange: [bMin, bMax]\n    };\n\n  }\n\n  function loadColorBounds () {\n\n    defineColor(\n      'monochrome',\n      null,\n      [[0,0],[100,0]]\n    );\n\n    defineColor(\n      'red',\n      [-26,18],\n      [[20,100],[30,92],[40,89],[50,85],[60,78],[70,70],[80,60],[90,55],[100,50]]\n    );\n\n    defineColor(\n      'orange',\n      [19,46],\n      [[20,100],[30,93],[40,88],[50,86],[60,85],[70,70],[100,70]]\n    );\n\n    defineColor(\n      'yellow',\n      [47,62],\n      [[25,100],[40,94],[50,89],[60,86],[70,84],[80,82],[90,80],[100,75]]\n    );\n\n    defineColor(\n      'green',\n      [63,178],\n      [[30,100],[40,90],[50,85],[60,81],[70,74],[80,64],[90,50],[100,40]]\n    );\n\n    defineColor(\n      'blue',\n      [179, 257],\n      [[20,100],[30,86],[40,80],[50,74],[60,60],[70,52],[80,44],[90,39],[100,35]]\n    );\n\n    defineColor(\n      'purple',\n      [258, 282],\n      [[20,100],[30,87],[40,79],[50,70],[60,65],[70,59],[80,52],[90,45],[100,42]]\n    );\n\n    defineColor(\n      'pink',\n      [283, 334],\n      [[20,100],[30,90],[40,86],[60,84],[80,80],[90,75],[100,73]]\n    );\n\n  }\n\n  function HSVtoRGB (hsv) {\n\n    // this doesn't work for the values of 0 and 360\n    // here's the hacky fix\n    var h = hsv[0];\n    if (h === 0) {h = 1;}\n    if (h === 360) {h = 359;}\n\n    // Rebase the h,s,v values\n    h = h/360;\n    var s = hsv[1]/100,\n        v = hsv[2]/100;\n\n    var h_i = Math.floor(h*6),\n      f = h * 6 - h_i,\n      p = v * (1 - s),\n      q = v * (1 - f*s),\n      t = v * (1 - (1 - f)*s),\n      r = 256,\n      g = 256,\n      b = 256;\n\n    switch(h_i) {\n      case 0: r = v; g = t; b = p;  break;\n      case 1: r = q; g = v; b = p;  break;\n      case 2: r = p; g = v; b = t;  break;\n      case 3: r = p; g = q; b = v;  break;\n      case 4: r = t; g = p; b = v;  break;\n      case 5: r = v; g = p; b = q;  break;\n    }\n\n    var result = [Math.floor(r*255), Math.floor(g*255), Math.floor(b*255)];\n    return result;\n  }\n\n  function HSVtoHSL (hsv) {\n    var h = hsv[0],\n      s = hsv[1]/100,\n      v = hsv[2]/100,\n      k = (2-s)*v;\n\n    return [\n      h,\n      Math.round(s*v / (k<1 ? k : 2-k) * 10000) / 100,\n      k/2 * 100\n    ];\n  }\n\n  function stringToInteger (string) {\n    var total = 0\n    for (var i = 0; i !== string.length; i++) {\n      if (total >= Number.MAX_SAFE_INTEGER) break;\n      total += string.charCodeAt(i)\n    }\n    return total\n  }\n\n  return randomColor;\n}));\n","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/**\n * Creates new object from target excluding given properties.\n */\nvar omitProps = exports.omitProps = function omitProps(target, props) {\n  return Object.keys(target).reduce(function (r, key) {\n    if (!~props.indexOf(key)) {\n      r[key] = target[key];\n    }\n    return r;\n  }, {});\n};\n\n/**\n * Creates new object from target including all available properties.\n */\nvar includeProps = exports.includeProps = function includeProps(target, props) {\n  return Object.keys(target).reduce(function (r, key) {\n    if (~props.indexOf(key) && key in target) {\n      r[key] = target[key];\n    }\n    return r;\n  }, {});\n};\n\n/**\n * Computes appropriate font size of tag.\n */\nvar fontSizeConverter = exports.fontSizeConverter = function fontSizeConverter(count, min, max, minSize, maxSize) {\n  if (max - min === 0) {\n    // handle devision by zero\n    return Math.round((minSize + maxSize) / 2);\n  }\n  return Math.round((count - min) * (maxSize - minSize) / (max - min) + minSize);\n};\n\n/**\n * Returns true if arrays contains the same elements.\n */\nvar arraysEqual = exports.arraysEqual = function arraysEqual(arr1, arr2) {\n  if (arr1.length !== arr2.length) {\n    return false;\n  }\n  return arr1.every(function (o, i) {\n    return o === arr2[i];\n  });\n};\n\nvar propertiesEqual = exports.propertiesEqual = function propertiesEqual(o1, o2, properties) {\n  return properties.every(function (prop) {\n    return o1[prop] === o2[prop];\n  });\n};","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M9.4 16.6L4.8 12l4.6-4.6L8 6l-6 6 6 6 1.4-1.4zm5.2 0l4.6-4.6-4.6-4.6L16 6l6 6-6 6-1.4-1.4z\"\n}), 'Code');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M20 4H4c-1.1 0-1.99.9-1.99 2L2 18c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2zm0 14H4V8l8 5 8-5v10zm-8-7L4 6h16l-8 5z\"\n}), 'MailOutline');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M19 19H5V5h7V3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2v-7h-2v7zM14 3v2h3.59l-9.83 9.83 1.41 1.41L19 6.41V10h2V3h-7z\"\n}), 'Launch');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M12 17.27L18.18 21l-1.64-7.03L22 9.24l-7.19-.61L12 2 9.19 8.63 2 9.24l5.46 4.73L5.82 21z\"\n}), 'Grade');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M11.67 3.87L9.9 2.1 0 12l9.9 9.9 1.77-1.77L3.54 12z\"\n}), 'ArrowBackIos');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M5.88 4.12L13.76 12l-7.88 7.88L8 22l10-10L8 2z\"\n}), 'ArrowForwardIos');\n\nexports.default = _default;","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\nimport Link from '@material-ui/core/Link';\nimport { Link as RouterLink } from 'react-router-dom';\nimport CustomIcon from 'AppComponents/Shared/CustomIcon';\nimport Icon from '@material-ui/core/Icon';\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        padding: theme.spacing(1, 3),\n    },\n    link: {\n        display: 'flex',\n        alignItems: 'center',\n    },\n    linkNotActive: {\n        display: 'flex',\n        alignItems: 'center',\n        cursor: 'default',\n    },\n    icon: {\n        marginRight: theme.spacing(0.5),\n        width: 20,\n        height: 20,\n    },\n    selectedTagText: {\n        textIndent: 4,\n    },\n    apiGroup: {\n        color: theme.palette.grey[800],\n    },\n}));\n\nexport default function ApiBreadcrumbs(props) {\n    const classes = useStyles();\n    const theme = useTheme();\n    const { selectedTag } = props;\n    return (\n        <Paper elevation={0} className={classes.root}>\n            <Breadcrumbs aria-label='breadcrumb'>\n                <RouterLink\n                    to={theme.custom.tagWise.active && theme.custom.tagWise.style === 'page' ? '/api-groups' : '/apis'}\n                    className={classes.apiGroup}\n                >\n                    <Link color='inherit' className={classes.link}>\n                        <Icon className={classes.icon}>dynamic_feed</Icon>\n                        <FormattedMessage defaultMessage='API Groups' id='Apis.Listing.ApiBreadcrumbs.apigroups.main' />\n                    </Link>\n                </RouterLink>\n\n                {selectedTag && <Link color='inherit' className={classes.linkNotActive}>\n                    <CustomIcon width={16} height={16} icon='api' />\n                    <span className={classes.selectedTagText}>{selectedTag}</span>\n                </Link>}\n            </Breadcrumbs>\n        </Paper>\n    );\n}\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport { withStyles } from '@material-ui/core/styles';\nimport Chip from '@material-ui/core/Chip';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { FormattedMessage } from 'react-intl';\nimport MaterialIcons from 'MaterialIcons';\nimport CONSTS from 'AppData/Constants';\nimport ImageGenerator from './ImageGenerator';\nimport Api from '../../../data/api';\nimport { ApiContext } from '../Details/ApiContext';\n\n/**\n *\n *\n * @param {*} theme\n */\nconst styles = theme => ({\n    thumbContent: {\n        width: theme.custom.thumbnail.width - theme.spacing(1),\n        backgroundColor: theme.palette.background.paper,\n        padding: theme.spacing(1),\n        minHeight: 130,\n    },\n    thumbLeft: {\n        alignSelf: 'flex-start',\n        flex: 1,\n    },\n    thumbRight: {\n        alignSelf: 'flex-end',\n    },\n    thumbInfo: {\n        display: 'flex',\n    },\n    thumbHeader: {\n        width: theme.custom.thumbnail.width - theme.spacing(1),\n        whiteSpace: 'nowrap',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n        cursor: 'pointer',\n        margin: 0,\n    },\n    contextBox: {\n        width: parseInt((theme.custom.thumbnail.width - theme.spacing(1)) / 2),\n        whiteSpace: 'nowrap',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n        cursor: 'pointer',\n        margin: 0,\n        display: 'inline-block',\n        lineHeight: '1em',\n    },\n    thumbWrapper: {\n        position: 'relative',\n        paddingTop: 20,\n        marginRight: theme.spacing(2),\n    },\n    deleteIcon: {\n        fill: 'red',\n    },\n    textWrapper: {\n        color: theme.palette.text.secondary,\n        textDecoration: 'none',\n    },\n    imageWrapper: {\n        color: theme.palette.text.secondary,\n        backgroundColor: theme.palette.background.paper,\n        width: theme.custom.thumbnail.width + theme.spacing(1),\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    imageOverlap: {\n        position: 'absolute',\n        bottom: 1,\n        backgroundColor: theme.custom.thumbnail.contentBackgroundColor,\n    },\n});\n/**\n *\n *\n * @class DocThumb\n * @extends {React.Component}\n */\nconst windowURL = window.URL || window.webkitURL;\n\nclass DocThumb extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            active: true,\n            loading: false,\n            open: false,\n            overview_link: '',\n            isRedirect: false,\n            openMoreMenu: false,\n            category: MaterialIcons.categories[0].name,\n            selectedIcon: null,\n            color: null,\n            backgroundIndex: null,\n            imageObj: null,\n        };\n    }\n\n    /**\n     * Clean up resource\n     */\n    componentWillUnmount() {\n        if (this.state.thumbnail) {\n            windowURL.revokeObjectURL(this.state.imageObj);\n        }\n    }\n\n    /**\n     *\n     *\n     * @returns\n     * @memberof DocThumb\n     */\n    render() {\n        const {\n            selectedIcon, color, backgroundIndex, category,\n        } = this.state;\n        const { doc, classes, theme } = this.props;\n        const { doc: {\n name, sourceType, apiName, apiVersion, id, apiUUID \n} } = this.props;\n        const details_link = '/apis/' + apiUUID + '/documents/' + id + '/details';\n        const { thumbnail } = theme.custom;\n        const imageWidth = thumbnail.width;\n        const defaultImage = thumbnail.defaultApiImage;\n\n        const ImageView = (\n            <ImageGenerator\n                width={imageWidth}\n                height={140}\n                api={doc}\n                fixedIcon={{\n                    key: selectedIcon,\n                    color,\n                    backgroundIndex,\n                    category,\n                    doc,\n                }}\n            />\n        );\n\n        return (\n            <div className={classes.thumbWrapper}>\n                <Link to={details_link} className={classes.imageWrapper}>\n                    {!defaultImage && ImageView}\n                    {defaultImage && <img src={defaultImage} />}\n                </Link>\n\n                <div\n                    className={classNames(classes.thumbContent, {\n                        [classes.imageOverlap]: thumbnail.contentPictureOverlap,\n                    })}\n                >\n                    <Link to={details_link} className={classes.textWrapper}>\n                        <Typography\n                            className={classes.thumbHeader}\n                            variant='h4'\n                            gutterBottom\n                            onClick={this.handleRedirectToAPIOverview}\n                            title={name}\n                        >\n                            {name}\n                        </Typography>\n                    </Link>\n                    <Typography variant='caption' gutterBottom align='left'>\n                        <FormattedMessage defaultMessage='Source Type:' id='Apis.Listing.DocThumb.sourceType' />\n                        {sourceType}\n                    </Typography>\n                    <div className={classes.thumbInfo}>\n                        <div className={classes.thumbLeft}>\n                            <Typography variant='subtitle1'>{apiName}</Typography>\n                            <Typography variant='caption' gutterBottom align='left'>\n                                <FormattedMessage defaultMessage='Api Name' id='Apis.Listing.DocThumb.apiName' />\n                            </Typography>\n                        </div>\n                        <div className={classes.thumbRight}>\n                            <Typography variant='subtitle1' align='right' className={classes.contextBox}>\n                                {apiVersion}\n                            </Typography>\n                            <Typography variant='caption' gutterBottom align='right'>\n                                <FormattedMessage defaultMessage='API Version' id='Apis.Listing.DocThumb.apiVersion' />\n                            </Typography>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nDocThumb.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    theme: PropTypes.shape({}).isRequired,\n};\n\nDocThumb.contextType = ApiContext;\n\nexport default withStyles(styles, { withTheme: true })(DocThumb);\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { createMuiTheme, MuiThemeProvider, withStyles } from '@material-ui/core/styles';\nimport MUIDataTable from 'mui-datatables';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport merge from 'lodash.merge';\nimport cloneDeep from 'lodash.clonedeep';\nimport queryString from 'query-string';\nimport API from 'AppData/api';\nimport { withTheme } from '@material-ui/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Configurations from 'Config';\nimport StarRatingBar from 'AppComponents/Apis/Listing/StarRatingBar';\nimport withSettings from 'AppComponents/Shared/withSettingsContext';\nimport Loading from 'AppComponents/Base/Loading/Loading';\nimport Alert from 'AppComponents/Shared/Alert';\nimport Icon from '@material-ui/core/Icon';\nimport CustomIcon from 'AppComponents/Shared/CustomIcon';\nimport DefaultConfigurations from '../../../../defaultTheme';\nimport ImageGenerator from './ImageGenerator';\nimport ApiThumb from './ApiThumb';\nimport DocThumb from './DocThumb';\nimport { ApiContext } from '../Details/ApiContext';\nimport NoApi from './NoApi';\n\nconst styles = (theme) => ({\n    rowImageOverride: {\n        '& .material-icons': {\n            marginTop: 5,\n            color: `${theme.custom.thumbnail.iconColor} !important`,\n            fontSize: `${theme.custom.thumbnail.listViewIconSize}px !important`,\n        },\n    },\n    apiNameLink: {\n        display: 'flex',\n        alignItems: 'center',\n        '& span': {\n            marginLeft: theme.spacing(1),\n        },\n        color: theme.palette.getContrastText(theme.custom.listView.tableBodyEvenBackgrund),\n    },\n});\n/**\n * Table view for api listing\n *\n * @class ApiTableView\n * @extends {React.Component}\n */\nclass ApiTableView extends React.Component {\n    /**\n     * @inheritdoc\n     * @param {*} props properties\n     * @memberof ApiTableView\n     */\n    constructor(props) {\n        super(props);\n        this.state = {\n            data: null,\n            loading: true,\n        };\n        this.page = 0;\n        this.count = 100;\n        this.rowsPerPage = localStorage.getItem('portal.numberOfRows') || 10;\n        this.pageType = null;\n    }\n\n    getMuiTheme = () => {\n        const { gridView, theme } = this.props;\n        let themeAdditions = {};\n        let muiTheme = {\n            overrides: {\n                MUIDataTable: {\n                    root: {\n                        backgroundColor: 'transparent',\n                        marginLeft: 40,\n                        marginBottom: 20,\n                        width: '100%',\n                    },\n                    paper: {\n                        boxShadow: 'none',\n                        backgroundColor: 'transparent',\n                        width: '100%',\n                    },\n                    tableRoot: {\n                        border: 'solid 1px #fff',\n                        '& a': {\n                            display: 'flex',\n                            alignItems: 'center',\n                        },\n                        '& td': {\n                            whiteSpace: 'nowrap',\n                            lineHeight: 1,\n                        },\n                        '& tr:nth-child(even)': {\n                            backgroundColor: theme.custom.listView.tableBodyEvenBackgrund,\n                            '& td': {\n                                color: theme.palette.getContrastText(theme.custom.listView.tableBodyEvenBackgrund),\n                            },\n                        },\n                        '& tr:nth-child(odd)': {\n                            backgroundColor: theme.custom.listView.tableBodyOddBackgrund,\n                            '& td': {\n                                color: theme.palette.getContrastText(theme.custom.listView.tableBodyOddBackgrund),\n                            },\n                        },\n                        '& th': {\n                            backgroundColor: theme.custom.listView.tableHeadBackground,\n                            color: theme.palette.getContrastText(theme.custom.listView.tableHeadBackground),\n                        },\n                    },\n                },\n                MUIDataTablePagination: {\n                    root: {\n                        color: theme.palette.getContrastText(theme.palette.background.default),\n                        \n                    },\n                },\n                MuiMenuItem: {\n                    root: {\n                        color: theme.palette.getContrastText(theme.palette.background.default),\n                    }\n                },\n                MUIDataTableToolbar: {\n                    root: {\n                        '& svg': {\n                            color: theme.palette.getContrastText(theme.palette.background.default),\n                        }\n                    }\n                }\n            },\n        };\n        if (gridView) {\n            themeAdditions = {\n                overrides: {\n                    MUIDataTable: {\n                        tableRoot: {\n                            display: 'block',\n                            border: 'none',\n                            '& tbody': {\n                                display: 'flex',\n                                flexWrap: 'wrap',\n                                marginLeft: 0,\n                            },\n                            '& thead': {\n                                display: 'none',\n                            },\n                            '& tr:nth-child(odd),& tr:nth-child(even)': {\n                                display: 'block',\n                                marginRight: 5,\n                                marginBottom: 5,\n                                backgroundColor: 'transparent',\n                            },\n                            '& td': {\n                                display: 'block',\n                                backgroundColor: 'transparent',\n                            },\n                        },\n                        paper: {\n                            boxShadow: 'none',\n                            backgroundColor: 'transparent',\n                        },\n                    },\n                    MUIDataTableBodyCell: {\n                        root: {\n                            backgroundColor: 'transparent',\n                            width: '100%',\n                        },\n                    },\n                },\n            };\n        }\n        const systemTheme = merge({}, DefaultConfigurations, Configurations, {custom: cloneDeep(theme.custom)});\n        const dataTableTheme = merge({}, muiTheme, systemTheme, themeAdditions);\n        return createMuiTheme(dataTableTheme);\n    };\n\n    componentDidMount() {\n        this.apiType = this.context.apiType;\n        this.getData();\n    }\n\n    componentDidUpdate(prevProps) {\n        const { query, selectedTag } = this.props;\n        if (\n            this.apiType !== this.context.apiType\n            || query !== prevProps.query\n            || prevProps.selectedTag !== selectedTag\n        ) {\n            this.page = 0;\n            this.apiType = this.context.apiType;\n            this.getData();\n        }\n    }\n\n    // get data\n    getData = () => {\n        const { intl } = this.props;\n        this.setState({loading: true})\n        this.xhrRequest()\n            .then((data) => {\n                const { body } = data;\n                const { list, pagination } = body;\n                const { total } = pagination;\n                this.count = total;\n                this.setState({ data: list });\n            })\n            .catch((error) => {\n                const { response } = error;\n                const { setTenantDomain } = this.props;\n                if (response && response.body.code === 901300) {\n                    setTenantDomain('INVALID');\n                    Alert.error(intl.formatMessage({\n                        defaultMessage: 'Invalid tenant domain',\n                        id: 'Apis.Listing.ApiTableView.invalid.tenant.domain',\n                    }));\n                } else {\n                    Alert.error(intl.formatMessage({\n                        defaultMessage: 'Error While Loading APIs',\n                        id: 'Apis.Listing.ApiTableView.error.loading',\n                    }));\n                }\n            })\n            .finally(() => {\n                this.setState({ loading: false });\n            });\n    };\n\n    xhrRequest = () => {\n        const { query, selectedTag } = this.props;\n        const { page, rowsPerPage } = this;\n        const { apiType } = this.context;\n        const api = new API();\n        const searchParam = new URLSearchParams(query);\n        const searchQuery = searchParam.get('query');\n        if (query && searchQuery !== null) {\n            const composeQuery = queryString.parse(query);\n            composeQuery.limit = this.rowsPerPage;\n            composeQuery.offset = page * rowsPerPage;\n            return api.search(composeQuery);\n        }\n\n        if (selectedTag) {\n            return api.getAllAPIs({ query: 'tag:' + selectedTag, limit: this.rowsPerPage, offset: page * rowsPerPage });\n        } else {\n            return api.getAllAPIs({ limit: this.rowsPerPage, offset: page * rowsPerPage });\n        }\n    };\n\n    changePage = (page) => {\n        const { intl } = this.props;\n        this.page = page;\n        this.setState({ loading: true });\n        this.xhrRequest()\n            .then((data) => {\n                const { body } = data;\n                const { list } = body;\n                this.setState({\n                    data: list,\n                });\n            })\n            .catch((e) => {\n                Alert.error(intl.formatMessage({\n                    defaultMessage: 'Error While Loading APIs',\n                    id: 'Apis.Listing.ApiTableView.error.loading',\n                }));\n            })\n            .finally(() => {\n                this.setState({ loading: false });\n            });\n    };\n\n    /**\n     * @inheritdoc\n     * @returns {Component}x\n     * @memberof ApiTableView\n     */\n    render() {\n        const { intl, gridView, theme } = this.props;\n        const { custom: { social: { showRating } } } = theme;\n        const { loading } = this.state;\n        const columns = [\n            {\n                name: 'id',\n                options: {\n                    display: 'excluded',\n                    filter: false,\n                },\n            },\n            {\n                name: 'name',\n                options: {\n                    customBodyRender: (value, tableMeta, updateValue, tableViewObj = this) => {\n                        if (tableMeta.rowData) {\n                            const artifact = tableViewObj.state.data[tableMeta.rowIndex];\n                            return <ImageGenerator api={artifact} width={30} height={30} />;\n                        }\n                    },\n                    sort: false,\n                    filter: false,\n                    display: 'excluded',\n                },\n            },\n            {\n                name: 'name',\n                label: intl.formatMessage({\n                    id: 'Apis.Listing.ApiTableView.name',\n                    defaultMessage: 'Name',\n                }),\n                options: {\n                    customBodyRender: (value, tableMeta, updateValue, tableViewObj = this) => {\n                        if (tableMeta.rowData) {\n                            const artifact = tableViewObj.state.data[tableMeta.rowIndex];\n                            const apiName = tableMeta.rowData[2];\n                            const apiId = tableMeta.rowData[0];\n                            const { classes } = this.props;\n\n                            if (artifact) {\n                                if (artifact.type === 'DOC') {\n                                    return (\n                                        <Link\n                                            to={'/apis/' + artifact.apiUUID + '/documents'}\n                                            className={classes.apiNameLink}\n                                        >\n                                            <Icon>library_books</Icon>\n\n                                            <span>\n                                                {' '}\n                                                <FormattedMessage\n                                                    id='Apis.Listing.TableView.TableView.doc.flag'\n                                                    defaultMessage='[Doc] '\n                                                />\n                                                {' '}\n                                                {apiName}\n                                            </span>\n                                        </Link>\n                                    );\n                                }\n                                const strokeColor = theme.palette.getContrastText(theme.custom.listView.tableBodyEvenBackgrund);\n                                return (\n                                    <Link\n                                        to={'/apis/' + apiId + '/overview'}\n                                        className={classes.rowImageOverride}\n                                        className={classes.apiNameLink}\n                                    >\n                                        <CustomIcon width={16} height={16} icon='api' strokeColor={strokeColor} />\n\n                                        <span>{apiName}</span>\n                                    </Link>\n                                );\n                            }\n                        }\n                    },\n                    sort: false,\n                    filter: false,\n                },\n            },\n            {\n                name: 'version',\n                label: intl.formatMessage({\n                    id: 'Apis.Listing.ApiTableView.version',\n                    defaultMessage: 'Version',\n                }),\n                options: {\n                    sort: false,\n                },\n            },\n            {\n                name: 'context',\n                label: intl.formatMessage({\n                    id: 'Apis.Listing.ApiTableView.context',\n                    defaultMessage: 'Context',\n                }),\n                options: {\n                    sort: false,\n                },\n            },\n            {\n                name: 'provider',\n                label: intl.formatMessage({\n                    id: 'Apis.Listing.ApiTableView.provider',\n                    defaultMessage: 'Provider/Business Owner',\n                }),\n                options: {\n                    sort: false,\n                    customBodyRender: (value, tableMeta) => {\n                        if (tableMeta.rowData) {\n                            if (\n                                tableMeta.rowData[9] && tableMeta.rowData[9].businessOwner\n                            ) {\n                                return (\n                                    <>\n                                        <div>{tableMeta.rowData[9].businessOwner}</div>\n                                        <Typography variant='caption'>\n                                            <FormattedMessage defaultMessage='(Business Owner)' id='Apis.Listing.ApiTableView.business.owner.caption' />\n                                        </Typography>\n                                    </>\n                                );\n                            } else {\n                                return (\n                                    <>\n                                        {value && \n                                            <>\n                                                <div>{value}</div>\n                                                <Typography variant='caption'>\n                                                    <FormattedMessage defaultMessage='(Provider)' id='Apis.Listing.ApiTableView.provider.caption' />\n                                                </Typography>\n                                            </>\n                                        }\n                                    </>\n                                );\n                            }\n                        }\n                    }\n                },\n            },\n            {\n                name: 'type',\n                label: intl.formatMessage({\n                    id: 'Apis.Listing.ApiTableView.type',\n                    defaultMessage: 'Type',\n                }),\n                options: {\n                    sort: false,\n                },\n            },\n            {\n                name: 'rating',\n                label: intl.formatMessage({\n                    id: 'Apis.Listing.ApiTableView.rating',\n                    defaultMessage: 'Rating',\n                }),\n                options: {\n                    customBodyRender: (value, tableMeta, updateValue, tableViewObj = this) => {\n                        if (tableMeta.rowData) {\n                            const artifact = tableViewObj.state.data[tableMeta.rowIndex];\n                            if (artifact) {\n                                if (artifact.type !== 'DOC') {\n                                    const apiId = tableMeta.rowData[0];\n                                    const avgRating = tableMeta.rowData[8];\n                                    return (\n                                        <StarRatingBar\n                                            apiRating={avgRating}\n                                            apiId={apiId}\n                                            isEditable={false}\n                                            showSummary={false}\n                                        />\n                                    );\n                                }\n                            }\n                        }\n                    },\n                    sort: false,\n                    display: showRating ? 'true' : 'excluded',\n                },\n            },\n            {\n                name: 'avgRating',\n                options: {\n                    display: 'excluded',\n                    filter: false,\n                },\n            },\n            {\n                name: 'businessInformation',\n                options: {\n                    display: 'excluded',\n                    filter: false,\n                },\n            },\n        ];\n        const { page, count, rowsPerPage } = this;\n        const { data } = this.state;\n        const options = {\n            filterType: 'dropdown',\n            responsive: 'stacked',\n            serverSide: true,\n            search: false,\n            count,\n            page,\n            onTableChange: (action, tableState) => {\n                switch (action) {\n                    case 'changePage':\n                        this.changePage(tableState.page);\n                        break;\n                }\n            },\n            selectableRows: 'none',\n            rowsPerPage,\n            onChangeRowsPerPage: (numberOfRows) => {\n                const { page, count } = this;\n                if (page * numberOfRows > count) {\n                    this.page = 0;\n                }\n                this.rowsPerPage = numberOfRows;\n                localStorage.setItem('portal.numberOfRows', numberOfRows);\n                this.getData();\n            },\n        };\n        if (gridView) {\n            options.customRowRender = (data, dataIndex, rowIndex, tableViewObj = this) => {\n                const artifact = tableViewObj.state.data[dataIndex];\n                if (artifact) {\n                    if (artifact.type === 'DOC') {\n                        return <tr key={rowIndex}><td><DocThumb doc={artifact} /></td></tr>;\n                    } else {\n                        return <tr key={rowIndex}><td><ApiThumb api={artifact} customHeight={theme.custom.thumbnail.height}\n                        customWidth={theme.custom.thumbnail.width} /></td></tr>;\n                    }\n                }\n                return <span />;\n            };\n            options.title = false;\n            options.filter = false;\n            options.print = false;\n            options.download = false;\n            options.viewColumns = false;\n            options.customToolbar = false;\n        } else {\n            options.filter = false;\n        }\n        if (page === 0 && this.count <= rowsPerPage && rowsPerPage === 10) {\n            options.pagination = false;\n        } else {\n            options.pagination = true;\n        }\n        if (loading) {\n            return <Loading />;\n        }\n        if ((data && data.length === 0) || !data) {\n            return <NoApi />;\n        }\n        return (\n            <MuiThemeProvider theme={this.getMuiTheme()}>\n                <MUIDataTable title='' data={data} columns={columns} options={options} />\n            </MuiThemeProvider>\n        );\n    }\n}\n\nApiTableView.contextType = ApiContext;\n\nexport default withSettings(injectIntl(withTheme(withStyles(styles)(ApiTableView))));\n","/*\n * Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport { withStyles } from '@material-ui/core/styles';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Icon from '@material-ui/core/Icon';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { app } from 'Settings';\n\n/**\n * @inheritdoc\n * @param {*} theme theme object\n */\nconst styles = theme => ({\n    thumbContent: {\n        width: theme.custom.tagWise.thumbnail.width - theme.spacing(1),\n        backgroundColor: theme.palette.background.paper,\n        padding: theme.spacing(1),\n    },\n    thumbLeft: {\n        alignSelf: 'flex-start',\n        flex: 1,\n    },\n    thumbRight: {\n        alignSelf: 'flex-end',\n    },\n    thumbInfo: {\n        display: 'flex',\n    },\n    thumbHeader: {\n        width: theme.custom.tagWise.thumbnail.width - theme.spacing(1),\n        whiteSpace: 'nowrap',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n        cursor: 'pointer',\n        justifyContent: 'center',\n        margin: 0,\n    },\n    contextBox: {\n        // eslint-disable-next-line radix\n        width: parseInt(150 - theme.spacing(0.5)),\n        whiteSpace: 'nowrap',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n        cursor: 'pointer',\n        margin: 0,\n        display: 'inline-block',\n        lineHeight: '1em',\n    },\n    thumbWrapper: {\n        position: 'relative',\n        paddingTop: 20,\n        marginRight: theme.spacing(2),\n    },\n    deleteIcon: {\n        fill: 'red',\n    },\n    textWrapper: {\n        color: theme.custom.tagCloud.leftMenu.color,\n        '& .material-icons': {\n            color: theme.custom.tagCloud.leftMenu.color,\n        },\n    },\n    image: {\n        width: theme.custom.tagWise.thumbnail.width,\n    },\n    imageWrapper: {\n        color: theme.palette.text.secondary,\n        backgroundColor: theme.palette.background.paper,\n        width: theme.custom.tagWise.thumbnail.width + theme.spacing(1),\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    imageOverlap: {\n        position: 'absolute',\n        bottom: 1,\n        backgroundColor: theme.custom.thumbnail.contentBackgroundColor,\n    },\n});\n\n/**\n * Get APICategoryThumb\n * @param {*} props properties\n * @returns {*}\n */\nfunction APICategoryThumb(props) {\n    const {\n        category, path, classes, theme,\n    } = props;\n    const categoryLink = path + ':' + category.name;\n    const {\n        tagWise: {\n            thumbnail: { image },\n        },\n    } = theme.custom;\n\n    return (\n        <Link to={categoryLink} className={classes.textWrapper}>\n            <ListItem button>\n                <ListItemIcon>\n                    <Icon>label</Icon>\n                </ListItemIcon>\n                <ListItemText primary={category.name} />\n            </ListItem>\n        </Link>\n    );\n\n}\n\nAPICategoryThumb.propTypes = {\n    classes: PropTypes.shape({\n        thumbWrapper: PropTypes.shape({}).isRequired,\n        imageWrapper: PropTypes.shape({}).isRequired,\n        thumbContent: PropTypes.shape({}).isRequired,\n        imageOverlap: PropTypes.shape({}).isRequired,\n        textWrapper: PropTypes.shape({}).isRequired,\n        thumbHeader: PropTypes.shape({}).isRequired,\n        image: PropTypes.shape({}).isRequired,\n    }).isRequired,\n    theme: PropTypes.shape({\n        custom: PropTypes.shape({\n            tagWise: PropTypes.shape({}).isRequired,\n        }).isRequired,\n    }).isRequired,\n    category: PropTypes.shape({\n        name: PropTypes.string.isRequired,\n    }).isRequired,\n    path: PropTypes.shape({}).isRequired,\n    style: PropTypes.string.isRequired,\n};\n\nexport default withStyles(styles, { withTheme: true })(APICategoryThumb);\n","/*\n * Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { useTheme, makeStyles } from '@material-ui/core/styles';\nimport { Link, useHistory } from 'react-router-dom';\nimport Typography from '@material-ui/core/Typography';\nimport List from '@material-ui/core/List';\nimport Divider from '@material-ui/core/Divider';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Icon from '@material-ui/core/Icon';\nimport { FormattedMessage } from 'react-intl';\nimport APICategoryThumb from './APICategoryThumb';\n\nconst useStyles = makeStyles(theme => ({\n    mainTitle: {\n        paddingTop: 10,\n    },\n    mainTitleWrapper: {\n        flexGrow: 1,\n    },\n    listContentWrapper: {\n        padding: `0 ${theme.spacing(3)}px`,\n    },\n    textWrapper: {\n        color: theme.custom.tagCloud.leftMenu.color,\n        '& .material-icons': {\n            color: theme.custom.tagCloud.leftMenu.color,\n        },\n    },\n    tagWiseThumbWrapper: {\n        display: 'flex',\n    },\n    filterTitle: {\n        fontWeight: 200,\n        paddingLeft: theme.spacing(2),\n        background: theme.custom.tagCloud.leftMenu.titleBackground,\n        color: theme.palette.getContrastText(theme.custom.tagCloud.leftMenu.titleBackground),\n        height: theme.custom.infoBar.height,\n        alignItems: 'center',\n        display: 'flex',\n    },\n}));\n\n/**\n * Shared listing page\n *\n * @class CategoryListingCategories\n * @extends {Component}\n */\nfunction CategoryListingCategories(props) {\n    const classes = useStyles();\n    const theme = useTheme();\n    const history = useHistory();\n    const {\n        custom: {\n            tagWise: {\n                key, active, style, showAllApis,\n            },\n        },\n    } = theme;\n\n\n    const tagWiseURL = '/apis?offset=0&query=api-category';\n    const { allCategories } = props;\n\n    /**\n     *\n     * @inheritdoctheme\n     * @returns {React.Component} @inheritdoc\n     * @memberof TagCloudListing\n     */\n\n    return allCategories && allCategories.length > 0 ? (\n        (\n            <React.Fragment>\n                <Typography variant='h6' gutterBottom className={classes.filterTitle}>\n                    <FormattedMessage defaultMessage='API Categories' id='Apis.Listing.CategoryListingCategories.title' />\n                </Typography>\n                <List component='nav' aria-label='main mailbox folders'>\n                    {Object.keys(allCategories).map((key) => {\n                        return <APICategoryThumb key={key} category={allCategories[key]} path={tagWiseURL} style={style} />;\n                    })}\n                </List>\n            </React.Fragment>\n        )\n    ) : (\n        <div className={classes.mainTitle}>\n            <Typography variant='subtitle1' gutterBottom align='center'>\n                <FormattedMessage\n                    defaultMessage='Categories cannot be found'\n                    id='Apis.Listing.CategoryListingCategories.categoriesNotFound'\n                />\n            </Typography>\n        </div>\n    );\n}\n\nCategoryListingCategories.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    theme: PropTypes.shape({}).isRequired,\n    allTags: PropTypes.shape({}).isRequired,\n};\n\nexport default CategoryListingCategories;\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport { useTheme, makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport { FormattedMessage } from 'react-intl';\nimport { TagCloud } from 'react-tagcloud';\nimport PropTypes from 'prop-types';\nimport { useHistory } from 'react-router-dom';\n\nconst useStyles = makeStyles(theme => ({\n    clickablePointer: {\n        cursor: 'pointer',\n        padding: theme.spacing(1),\n    },\n    filterTitle: {\n        fontWeight: 200,\n        paddingLeft: theme.spacing(2),\n        background: theme.custom.tagCloud.leftMenu.titleBackground,\n        color: theme.palette.getContrastText(theme.custom.tagCloud.leftMenu.titleBackground),\n        height: theme.custom.infoBar.height,\n        alignItems: 'center',\n        display: 'flex',\n    },\n}));\n\n/**\n * Component used to handle API Tag Cloud\n * @class ApiTagCloud\n * @extends {React.Component}\n * @param {any} value @inheritDoc\n */\nfunction ApiTagCloud(props) {\n    const classes = useStyles();\n    const theme = useTheme();\n    const {\n        custom: {\n            tagWise: { key, active },\n            tagCloud: { colorOptions },\n        },\n    } = theme;\n    const history = useHistory();\n\n    const { allTags } = props;\n    let apisTagWithoutGroups = null;\n    if (allTags.count !== 0) {\n        // Remve the tags with a sufix '-group' to ignore the\n        if (active) {\n            apisTagWithoutGroups = allTags.filter(item => item.value.search(key) === -1);\n        } else {\n            apisTagWithoutGroups = allTags;\n        }\n    }\n\n    /**\n     *\n     * @param {String} tag selected tag\n     * @memberof ApiTagCloud\n     */\n    const handleOnClick = (tag) => {\n        const tagSearchURL = `/apis?offset=0&query=tag:${tag.value}`;\n        history.push(tagSearchURL);\n    };\n\n    return (\n        apisTagWithoutGroups && (\n            <React.Fragment>\n                <Typography variant='h6' gutterBottom className={classes.filterTitle}>\n                    <FormattedMessage defaultMessage='Tags' id='Apis.Listing.ApiTagCloud.title' />\n                </Typography>\n                <TagCloud\n                    minSize={14}\n                    maxSize={25}\n                    colorOptions={colorOptions}\n                    tags={apisTagWithoutGroups}\n                    shuffle={false}\n                    className={classes.clickablePointer}\n                    onClick={tag => handleOnClick(tag)}\n                />\n            </React.Fragment>\n        )\n    );\n}\n\nApiTagCloud.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    tag: PropTypes.shape({}).isRequired,\n    listType: PropTypes.string.isRequired,\n    apiType: PropTypes.string.isRequired,\n    allTags: PropTypes.shape({}).isRequired,\n};\n\nexport default ApiTagCloud;\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport Card from '@material-ui/core/Card';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardContent from '@material-ui/core/CardContent';\nimport { withStyles } from '@material-ui/core/styles';\nimport Chip from '@material-ui/core/Chip';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { FormattedMessage } from 'react-intl';\nimport MaterialIcons from 'MaterialIcons';\nimport StarRatingBar from 'AppComponents/Apis/Listing/StarRatingBar';\nimport ImageGenerator from './ImageGenerator';\nimport Api from '../../../data/api';\nimport { ApiContext } from '../Details/ApiContext';\nimport classNames from 'classnames';\n\n/**\n *\n *\n * @param {*} theme\n */\nconst styles = theme => ({\n    card: {\n        margin: theme.spacing.unit * (3 / 2),\n        maxWidth: theme.custom.thumbnail.width,\n        transition: 'box-shadow 0.3s ease-in-out',\n    },\n    apiDetails: {\n        padding: theme.spacing.unit,\n        background: theme.custom.thumbnail.contentBackgroundColor,\n        padding: theme.spacing.unit,\n        color: theme.palette.getContrastText(theme.custom.thumbnail.contentBackgroundColor),\n        '& a': {\n            color: theme.palette.getContrastText(theme.custom.thumbnail.contentBackgroundColor),\n        },\n    },\n    suppressLinkStyles: {\n        textDecoration: 'none',\n        color: theme.palette.text.disabled,\n    },\n    row: {\n        display: 'inline-block',\n    },\n    thumbBy: {\n        'padding-left': '5px',\n    },\n    media: {\n        // ⚠️ object-fit is not supported by IE11.\n        objectFit: 'cover',\n    },\n    thumbContent: {\n        width: theme.custom.thumbnail.width - theme.spacing(2),\n    },\n    thumbLeft: {\n        alignSelf: 'flex-start',\n        flex: 1,\n        width: '25%',\n        'padding-left': '5px',\n        'padding-right': '65px',\n    },\n    thumbRight: {\n        alignSelf: 'flex-end',\n    },\n    thumbInfo: {\n        display: 'flex',\n    },\n    thumbHeader: {\n        width: theme.custom.thumbnail.width - theme.spacing.unit,\n        whiteSpace: 'nowrap',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n        cursor: 'pointer',\n        margin: 0,\n        'padding-left': '5px',\n    },\n    contextBox: {\n        width: parseInt((theme.custom.thumbnail.width - theme.spacing.unit) / 2, 10),\n        whiteSpace: 'nowrap',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n        cursor: 'pointer',\n        margin: 0,\n        display: 'inline-block',\n        lineHeight: '1em',\n        'padding-top': 5,\n        'padding-right': 5,\n        'padding-bottom': 1.5,\n        textAlign: 'left',\n    },\n    thumbWrapper: {\n        position: 'relative',\n        paddingTop: 20,\n        marginRight: theme.spacing.unit * 2,\n    },\n    deleteIcon: {\n        fill: 'red',\n    },\n    textWrapper: {\n        color: theme.palette.text.secondary,\n        textDecoration: 'none',\n    },\n    imageWrapper: {\n        color: theme.custom.thumbnail.iconColor,\n        width: theme.custom.thumbnail.width,\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    imageOverlap: {\n        position: 'absolute',\n        bottom: 1,\n    },\n    chipWrapper: {\n        marginTop: '15px',\n    },\n    ratingWrapper: {\n        marginTop: '20px',\n    },\n});\n\nconst windowURL = window.URL || window.webkitURL;\n\n/**\n *\n * Render API Card component in API listing card view,containing essential API information like name , version ect\n * @class RecommendedApiThumb\n * @extends {Component}\n */\nclass RecommendedApiThumb extends React.Component {\n    /**\n     *Creates an instance of RecommendedApiThumb.\n     * @param {*} props\n     * @memberof RecommendedApiThumb\n     */\n    constructor(props) {\n        super(props);\n        this.state = {\n            category: MaterialIcons.categories[0].name,\n            selectedIcon: null,\n            color: null,\n            backgroundIndex: null,\n            imageObj: null,\n            isHover: false,\n        };\n        this.toggleMouseOver = this.toggleMouseOver.bind(this);\n    }\n\n    /**\n     *\n     *\n     * @memberof RecommendedApiThumb\n     */\n    componentDidMount() {\n        const { api } = this.props;\n        const restApi = new Api();\n\n        const promisedThumbnail = restApi.getAPIThumbnail(api.id);\n\n        promisedThumbnail.then((response) => {\n            if (response && response.data) {\n                if (response.headers['content-type'] === 'application/json') {\n                    const iconJson = JSON.parse(response.data);\n                    this.setState({\n                        selectedIcon: iconJson.key,\n                        category: iconJson.category,\n                        color: iconJson.color,\n                        backgroundIndex: iconJson.backgroundIndex,\n                    });\n                } else if (response && response.data.size > 0) {\n                    const url = windowURL.createObjectURL(response.data);\n                    this.setState({ imageObj: url });\n                }\n            }\n        });\n    }\n\n    /**\n     * Clean up resource\n     */\n    componentWillUnmount() {\n        if (this.state.thumbnail) {\n            windowURL.revokeObjectURL(this.state.imageObj);\n        }\n    }\n\n    /**\n     * Get Path Prefix depedning on the respective API Type being rendered\n     *\n     * @returns {String} path\n     * @memberof RecommendedApiThumb\n     */\n    getPathPrefix() {\n        const path = '/apis/';\n        return path;\n    }\n\n    /**\n     * Toggle mouse Hover state to set the card `raised` property\n     *\n     * @param {React.SyntheticEvent} event mouseover and mouseout\n     * @memberof RecommendedApiThumb\n     */\n    toggleMouseOver(event) {\n        this.setState({ isHover: event.type === 'mouseover' });\n    }\n\n    /**\n     * @inheritdoc\n     * @returns {React.Component} @inheritdoc\n     * @memberof RecommendedApiThumb\n     */\n    render() {\n        const {\n            imageObj, selectedIcon, color, backgroundIndex, category, isHover,\n        } = this.state;\n        const path = this.getPathPrefix();\n\n        // const detailsLink = path + this.props.api.id;\n        const detailsLink = path + this.props.api.id;\n        const {\n            api, classes, theme, customWidth, customHeight, showInfo,\n        } = this.props;\n        const { thumbnail } = theme.custom;\n        const { name, version, context } = api;\n\n        let { provider } = api;\n        // if (\n        //     api.businessInformation &&\n        //     api.businessInformation.businessOwner &&\n        //     api.businessInformation.businessOwner.trim() !== ''\n        // ) {\n        //     provider = api.businessInformation.businessOwner;\n        // }\n        // if (!api.lifeCycleStatus) {\n        //     api.lifeCycleStatus = api.status;\n        // }\n        const imageWidth = customWidth || thumbnail.width;\n        const imageHeight = customHeight || 140;\n        const defaultImage = thumbnail.defaultApiImage;\n\n        let ImageView;\n        if (imageObj) {\n            ImageView = (\n                <img\n                    height={imageHeight}\n                    width={imageWidth}\n                    src={imageObj}\n                    alt='API Thumbnail'\n                    className={classes.media}\n                />\n            );\n        } else {\n            ImageView = (\n                <ImageGenerator\n                    width={imageWidth}\n                    height={imageHeight}\n                    api={api}\n                    fixedIcon={{\n                        key: selectedIcon,\n                        color,\n                        backgroundIndex,\n                        category,\n                        api,\n                    }}\n                />\n            );\n        }\n        return (\n            <Card\n                onMouseOver={this.toggleMouseOver}\n                onFocus={this.toggleMouseOver}\n                onMouseOut={this.toggleMouseOver}\n                onBlur={this.toggleMouseOver}\n                raised={isHover}\n                className={classNames('image-thumbnail', classes.card)}\n            >\n                <CardMedia>\n                    <Link to={detailsLink} className={classes.suppressLinkStyles}>\n                        {!defaultImage && ImageView}\n                        {defaultImage && <img src={defaultImage} alt='img' />}\n                    </Link>\n                </CardMedia>\n                {showInfo && (\n                    <CardContent classes={{ root: classes.apiDetails }}>\n                        <Link to={detailsLink} className={classes.textWrapper}>\n                            <Typography\n                                className={classes.thumbHeader}\n                                variant='h5'\n                                gutterBottom\n                                onClick={this.handleRedirectToAPIOverview}\n                                title={name}\n                            >\n                                {name}\n                            </Typography>\n                        </Link>\n                        <div className={classes.thumbInfo}>\n                            <div className={classes.thumbLeft}>\n                                <Typography\n                                    variant='subtitle1'\n                                    gutterBottom\n                                    align='left'\n                                    className={classNames('api-thumb-rating', classes.ratingWrapper)}\n                                >\n                                    <StarRatingBar\n                                        apiRating={api.avgRating}\n                                        apiId={api.id}\n                                        isEditable={false}\n                                        showSummary={false}\n                                    />\n                                </Typography>\n                            </div>\n                            <div className={classes.thumbRight}>\n                                <Typography\n                                    variant='subtitle1'\n                                    gutterBottom\n                                    align='right'\n                                    className={classes.chipWrapper}\n                                >\n                                    {(api.type === 'GRAPHQL' || api.transportType === 'GRAPHQL') && (\n                                        <Chip\n                                            label={api.transportType === undefined ? api.type : api.transportType}\n                                            color='primary'\n                                        />\n                                    )}\n                                </Typography>\n                            </div>\n                        </div>\n                    </CardContent>\n                )}\n            </Card>\n        );\n    }\n}\nRecommendedApiThumb.defaultProps = {\n    customWidth: null,\n    customHeight: null,\n    showInfo: true,\n};\nRecommendedApiThumb.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    theme: PropTypes.shape({}).isRequired,\n    customWidth: PropTypes.number,\n    customHeight: PropTypes.number,\n    showInfo: PropTypes.bool,\n};\n\nRecommendedApiThumb.contextType = ApiContext;\n \nexport default withStyles(styles, { withTheme: true })(RecommendedApiThumb);\n ","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { createMuiTheme, MuiThemeProvider, withStyles } from '@material-ui/core/styles';\nimport MUIDataTable from 'mui-datatables';\nimport { injectIntl } from 'react-intl';\nimport API from 'AppData/api';\nimport { withTheme } from '@material-ui/styles';\nimport Configurations from 'Config';\nimport StarRatingBar from 'AppComponents/Apis/Listing/StarRatingBar';\nimport withSettings from 'AppComponents/Shared/withSettingsContext';\nimport Loading from 'AppComponents/Base/Loading/Loading';\nimport Alert from 'AppComponents/Shared/Alert';\nimport CustomIcon from 'AppComponents/Shared/CustomIcon';\nimport ImageGenerator from './ImageGenerator';\nimport RecommendedApiThumb from './RecommendedApiThumb';\nimport { ApiContext } from '../Details/ApiContext';\n\nconst styles = theme => ({\n    rowImageOverride: {\n        '& .material-icons': {\n            marginTop: 5,\n            color: `${theme.custom.thumbnail.iconColor} !important`,\n            fontSize: `${theme.custom.thumbnail.listViewIconSize}px !important`,\n        },\n    },\n    apiNameLink: {\n        display: 'flex',\n        alignItems: 'center',\n        '& span': {\n            marginLeft: theme.spacing(1),\n        },\n        color: theme.palette.getContrastText(theme.custom.listView.tableBodyEvenBackgrund),\n    },\n});\n/**\n * Table view for api listing\n *\n * @class Recommendations\n * @extends {React.Component}\n */\nclass Recommendations extends React.Component {\n    /**\n     * @inheritdoc\n     * @param {*} props properties\n     * @memberof Recommendations\n     */\n    constructor(props) {\n        super(props);\n        this.state = {\n            data: null,\n            loading: true,\n        };\n    }\n\n    getMuiTheme = () => {\n        const { gridView, theme } = this.props;\n        let themeAdditions = {};\n        let muiTheme = {\n            overrides: {\n                MUIDataTable: {\n                    root: {\n                        backgroundColor: 'transparent',\n                        marginLeft: 40,\n                        marginBottom: 20,\n                        width: '100%',\n                    },\n                    paper: {\n                        boxShadow: 'none',\n                        backgroundColor: 'transparent',\n                        width: '100%',\n                    },\n                    tableRoot: {\n                        border: 'solid 1px #fff',\n                        '& a': {\n                            display: 'flex',\n                            alignItems: 'center',\n                        },\n                        '& a > div': {\n                            paddingRight: 10,\n                        },\n                        '& td': {\n                            whiteSpace: 'nowrap',\n                        },\n                        '& tr:nth-child(even)': {\n                            backgroundColor: theme.custom.listView.tableBodyEvenBackgrund,\n                            '& td': {\n                                color: theme.palette.getContrastText(theme.custom.listView.tableBodyEvenBackgrund),\n                            },\n                        },\n                        '& tr:nth-child(odd)': {\n                            backgroundColor: theme.custom.listView.tableBodyOddBackgrund,\n                            '& td': {\n                                color: theme.palette.getContrastText(theme.custom.listView.tableBodyOddBackgrund),\n                            },\n                        },\n                        '& th': {\n                            backgroundColor: theme.custom.listView.tableHeadBackground,\n                            color: theme.palette.getContrastText(theme.custom.listView.tableHeadBackground),\n                        },\n                    },\n                },\n                MUIDataTableBodyCell: {\n                    root: {\n                        backgroundColor: 'transparent',\n                        width: '100%',\n                    },\n                },\n            },\n        };\n        if (gridView) {\n            themeAdditions = {\n                overrides: {\n                    MUIDataTable: {\n                        tableRoot: {\n                            display: 'block',\n                            '& tbody': {\n                                display: 'flex',\n                                flexWrap: 'wrap',\n                                marginLeft: 0,\n                            },\n                            '& thead': {\n                                display: 'none',\n                            },\n                        },\n                        paper: {\n                            boxShadow: 'none',\n                            backgroundColor: 'transparent',\n                        },\n                    },\n                },\n            };\n        }\n        muiTheme = Object.assign(muiTheme, themeAdditions, Configurations);\n        return createMuiTheme(muiTheme);\n    };\n\n    componentDidMount() {\n        this.getData();\n    }\n\n    componentDidUpdate(prevProps) {\n        const { query, selectedTag } = this.props;\n        if (\n            query !== prevProps.query ||\n            prevProps.selectedTag !== selectedTag\n        ) {\n            this.getData();\n        }\n    }\n\n    // get data\n    getData = () => {\n        const { intl } = this.props;\n        this.xhrRequest()\n            .then((data) => {\n                const { body } = data;\n                const { list } = body;\n                this.setState({ data: list });\n            })\n            .catch((error) => {\n                const { response } = error;\n                const { setTenantDomain } = this.props;\n                if (response && response.body.code === 901300) {\n                    setTenantDomain('INVALID');\n                    Alert.error(intl.formatMessage({\n                        defaultMessage: 'Invalid tenant domain',\n                        id: 'Apis.Listing.Recommendations.invalid.tenant.domain',\n                    }));\n                } else {\n                    Alert.error(intl.formatMessage({\n                        defaultMessage: 'Error While Loading APIs',\n                        id: 'Apis.Listing.Recommendations.error.loading',\n                    }));\n                }\n            })\n            .finally(() => {\n                this.setState({ loading: false });\n            });\n    };\n\n    xhrRequest = () => {\n        const api = new API();\n        return api.getApiRecommendations();\n    };\n\n    /**\n     * @inheritdoc\n     * @returns {Component}x\n     * @memberof Recommendations\n     */\n    render() {\n        const { intl, gridView } = this.props;\n        const { loading } = this.state;\n        const columns = [\n            {\n                name: 'id',\n                options: {\n                    display: 'excluded',\n                    filter: false,\n                },\n            },\n            {\n                name: 'name',\n                options: {\n                    customBodyRender: (value, tableMeta, updateValue, tableViewObj = this) => {\n                        if (tableMeta.rowData) {\n                            const artifact = tableViewObj.state.data[tableMeta.rowIndex];\n                            return <ImageGenerator api={artifact} width={30} height={30} />;\n                        }\n                    },\n                    sort: false,\n                    filter: false,\n                    display: 'excluded',\n                },\n            },\n            {\n                name: 'name',\n                label: intl.formatMessage({\n                    id: 'Apis.Listing.Recommendations.name',\n                    defaultMessage: 'Name',\n                }),\n                options: {\n                    customBodyRender: (tableMeta, tableViewObj = this) => {\n                        if (tableMeta.rowData) {\n                            const artifact = tableViewObj.state.data[tableMeta.rowIndex];\n                            const apiName = tableMeta.rowData[2];\n                            const apiId = tableMeta.rowData[0];\n                            const { classes } = this.props;\n\n                            if (artifact) {\n                                return (\n                                    <Link\n                                        to={'/apis/' + apiId + '/overview'}\n                                        className={classes.rowImageOverride}\n                                        className={classes.apiNameLink}\n                                    >\n                                        <CustomIcon width={16} height={16} icon='api' strokeColor='#444444' />\n\n                                        <span>{apiName}</span>\n                                    </Link>\n                                );\n                            }\n                        }\n                    },\n                    sort: false,\n                    filter: false,\n                },\n            },\n            {\n                name: 'rating',\n                label: intl.formatMessage({\n                    defaultMessage: 'Rating',\n                    id: 'Apis.Listing.Recommendations.rating',\n                }),\n                options: {\n                    customBodyRender: (value, tableMeta, updateValue, tableViewObj = this) => {\n                        if (tableMeta.rowData) {\n                            const artifact = tableViewObj.state.data[tableMeta.rowIndex];\n                            if (artifact) {\n                                if (artifact.type !== 'DOC') {\n                                    const apiId = tableMeta.rowData[0];\n                                    const avgRating = tableMeta.rowData[8];\n                                    return (\n                                        <StarRatingBar\n                                            apiRating={avgRating}\n                                            apiId={apiId}\n                                            isEditable={false}\n                                            showSummary={false}\n                                        />\n                                    );\n                                }\n                            }\n                        }\n                    },\n                    sort: false,\n                },\n            },\n            {\n                name: 'avgRating',\n                options: {\n                    display: 'excluded',\n                    filter: false,\n                },\n            },\n        ];\n        const { data } = this.state;\n        const options = {\n            filterType: 'dropdown',\n            responsive: 'stacked',\n            serverSide: true,\n            search: false,\n        };\n        if (gridView) {\n            options.customRowRender = (data, dataIndex, rowIndex, tableViewObj = this) => {\n                const artifact = tableViewObj.state.data[dataIndex];\n                if (artifact) {\n                    return <tr key={rowIndex}><td><RecommendedApiThumb api={artifact} /></td></tr>;\n                }\n                return <span />;\n            };\n            options.title = true;\n            options.filter = false;\n            options.print = false;\n            options.download = false;\n            options.viewColumns = false;\n            options.customToolbar = false;\n            options.rowsPerPageOptions = false;\n            options.pagination = false;\n        } else {\n            options.filter = false;\n        }\n        if (loading) {\n            return <Loading />;\n        }\n        if ((data && data.length === 0) || !data) {\n            return null;\n        }\n        return (\n            <MuiThemeProvider theme={this.getMuiTheme()}>\n                <MUIDataTable title='Recommended APIs for you' data={data} columns={columns} options={options} />\n            </MuiThemeProvider>\n        );\n    }\n}\n\nRecommendations.contextType = ApiContext;\n\nexport default withSettings(injectIntl(withTheme(withStyles(styles)(Recommendations))));\n\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Typography from '@material-ui/core/Typography';\nimport { FormattedMessage } from 'react-intl';\nimport IconButton from '@material-ui/core/IconButton';\nimport Icon from '@material-ui/core/Icon';\nimport { withStyles } from '@material-ui/core/styles';\nimport classNames from 'classnames';\nimport CustomIcon from 'AppComponents/Shared/CustomIcon';\nimport Settings from 'AppComponents/Shared/SettingsContext';\nimport API from 'AppData/api';\nimport ApiBreadcrumbs from './ApiBreadcrumbs';\nimport ApiTableView from './ApiTableView';\nimport { ApiContext } from '../Details/ApiContext';\nimport TagCloudListingTags from './TagCloudListingTags';\nimport CategoryListingCategories from './CategoryListingCategories';\nimport ApiTagCloud from './ApiTagCloud';\nimport Recommendations from './Recommendations';\nimport AuthManager from '../../../data/AuthManager';\n\nconst styles = (theme) => ({\n    rightIcon: {\n        marginLeft: theme.spacing(1),\n    },\n    button: {\n        margin: theme.spacing(1),\n        marginBottom: 0,\n    },\n    buttonRight: {\n        alignSelf: 'flex-end',\n        display: 'flex',\n    },\n    ListingWrapper: {\n        paddingTop: 10,\n        paddingLeft: 35,\n        maxWidth: theme.custom.contentAreaWidth,\n    },\n    appBar: {\n        height: 70,\n        background: theme.custom.infoBar.background,\n        color: theme.palette.getContrastText(theme.custom.infoBar.background),\n        borderBottom: 'solid 1px ' + theme.palette.grey.A200,\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    mainIconWrapper: {\n        paddingTop: 13,\n        paddingLeft: 20,\n        paddingRight: 20,\n    },\n    mainTitle: {\n        paddingTop: 10,\n    },\n    mainTitleWrapper: {\n        flexGrow: 1,\n    },\n    listContentWrapper: {\n        padding: `0 ${theme.spacing(3)}px`,\n        display: 'flex',\n    },\n    iconDefault: {\n        color: theme.palette.getContrastText(theme.custom.infoBar.background),\n    },\n    iconSelected: {\n        color: theme.custom.infoBar.listGridSelectedColor,\n    },\n    content: {\n        flexGrow: 1,\n        display: 'flex',\n        flex: 1,\n        flexDirection: 'column',\n        paddingBottom: theme.spacing(3),\n    },\n    contentWithTags: {\n        marginLeft: theme.custom.tagCloud.leftMenu.width,\n    },\n    contentWithoutTags: {\n        marginLeft: -4,\n    },\n    contentWithTagsHidden: {\n        marginLeft: theme.custom.tagCloud.leftMenu.sliderWidth,\n    },\n    LeftMenu: {\n        backgroundColor: theme.custom.tagCloud.leftMenu.background,\n        color: theme.custom.tagCloud.leftMenu.color,\n        textAlign: 'left',\n        fontFamily: theme.typography.fontFamily,\n        position: 'absolute',\n        bottom: 0,\n        paddingLeft: 0,\n        width: theme.custom.tagCloud.leftMenu.width,\n        top: 0,\n        left: 0,\n        overflowY: 'auto',\n    },\n    LeftMenuForSlider: {\n        backgroundColor: theme.custom.tagCloud.leftMenu.background,\n        color: theme.custom.tagCloud.leftMenu.color,\n        textAlign: 'left',\n        fontFamily: theme.typography.fontFamily,\n        position: 'absolute',\n        bottom: 0,\n        paddingLeft: 0,\n        width: theme.custom.tagCloud.leftMenu.sliderWidth,\n        top: 0,\n        left: 0,\n        overflowY: 'auto',\n        display: 'flex',\n    },\n    sliderButton: {\n        fontWeight: 200,\n        background: theme.custom.tagCloud.leftMenu.sliderBackground,\n        color: theme.palette.getContrastText(theme.custom.tagCloud.leftMenu.sliderBackground),\n        height: theme.custom.infoBar.height,\n        alignItems: 'center',\n        display: 'flex',\n        position: 'absolute',\n        right: 0,\n        cursor: 'pointer',\n    },\n    rotatedText: {\n        transform: 'rotate(270deg)',\n        transformOrigin: 'left bottom 0',\n        position: 'absolute',\n        whiteSpace: 'nowrap',\n        top: theme.custom.infoBar.height * 4,\n        marginLeft: 23,\n        cursor: 'pointer',\n    },\n    recommendationsBar: {\n        height: 60,\n        background: theme.custom.infoBar.background,\n        color: theme.palette.getContrastText(theme.custom.infoBar.background),\n        borderBottom: 'solid 1px ' + theme.palette.grey.A200,\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n});\n\n/**\n * Shared listing page\n *\n * @class CommonListing\n * @extends {Component}\n */\nclass CommonListing extends React.Component {\n    static contextType = Settings;\n\n    /**\n     * Constructor\n     *\n     * @param {*} props Properties\n     */\n    constructor(props) {\n        super(props);\n        let { defaultApiView } = props.theme.custom;\n        this.showToggle = true;\n        if(typeof defaultApiView === 'object' && defaultApiView.length > 0) {\n            if(defaultApiView.length === 1) { // We will disable the other\n                this.showToggle = false;\n            }\n            defaultApiView = defaultApiView[0];\n        } else {\n            defaultApiView = localStorage.getItem('portal.listType') || defaultApiView;\n        }\n        this.state = {\n            listType: defaultApiView,\n            allTags: null,\n            showLeftMenu: false,\n            isMonetizationEnabled: false,\n            isRecommendationEnabled: false,\n        };\n    }\n\n    /**\n     *\n     * Switch the view between grid and list view\n     * @param {String} value view type\n     * @memberof CommonListing\n     */\n    setListType = (value) => {\n        localStorage.setItem('portal.listType', value);\n        this.setState({ listType: value });\n    };\n\n    /**\n     *\n     * Get all tags\n     * @memberof CommonListing\n     */\n    componentDidMount() {\n        const restApiClient = new API();\n        const promisedTags = restApiClient.getAllTags();\n        promisedTags\n            .then((response) => {\n                this.setState({ allTags: response.body.list });\n            })\n            .catch((error) => {\n                console.log(error);\n            });\n        const promisedCategories = restApiClient.apiCategories();\n            promisedCategories\n                .then((response) => {\n                    this.setState({ allCategories: response.body.list });\n                })\n                .catch((error) => {\n                    console.log(error);\n                });\n        this.isMonetizationEnabled();\n        this.isRecommendationEnabled();\n    }\n\n    toggleLeftMenu = () => {\n        this.setState((prevState) => ({ showLeftMenu: !prevState.showLeftMenu }));\n    };\n\n    /**\n     * retrieve Settings from the context and check the monetization enabled\n     */\n    isMonetizationEnabled = () => {\n        const settingsContext = this.context;\n        const enabled = settingsContext.settings.monetizationEnabled;\n        this.setState({ isMonetizationEnabled: enabled });\n    }\n\n    /**\n     * retrieve Settings from the context and check whether recommendation is enabled\n     */\n    isRecommendationEnabled = () => {\n        const settingsContext = this.context;\n        const enabled = settingsContext.settings.recommendationEnabled;\n        this.setState({ isRecommendationEnabled: enabled });\n    }\n\n    /**\n     *\n     * @inheritdoctheme\n     * @returns {React.Component} @inheritdoc\n     * @memberof CommonListing\n     */\n    render() {\n        const {\n            theme,\n            classes,\n            location: { search },\n        } = this.props;\n        const user = AuthManager.getUser();\n        const {\n            custom: {\n                tagWise: { key, active, style },\n                tagCloud: { active: tagCloudActive },\n            },\n        } = theme;\n        const {\n            listType, allTags, showLeftMenu, isMonetizationEnabled, allCategories, isRecommendationEnabled\n        } = this.state;\n        const strokeColorMain = theme.palette.getContrastText(theme.custom.infoBar.background);\n        const searchParam = new URLSearchParams(search);\n        const searchQuery = searchParam.get('query');\n        let selectedTag = null;\n        if (search && searchQuery !== null) {\n            // For the tagWise search\n            if (active && key) {\n                const splits = searchQuery.split(':');\n                if (splits.length > 1 && splits[1].search(key) != -1) {\n                    const splitTagArray = splits[1].split(key);\n                    if (splitTagArray.length > 0) {\n                        selectedTag = splitTagArray[0];\n                    }\n                } else if (splits.length > 1 && splits[0] === 'tag') {\n                    selectedTag = splits[1];\n                }\n            }\n        }\n        const tagPaneVisible = allTags && allTags.length > 0 && (tagCloudActive || active);\n        const categoryPaneVisible = allCategories && allCategories.length > 0;\n        return (\n            <>\n                <aside>\n                    {(categoryPaneVisible || tagPaneVisible) && showLeftMenu && (\n                        <div className={classes.LeftMenu}>\n                            <div className={classes.sliderButton} onClick={this.toggleLeftMenu}>\n                                <Icon>keyboard_arrow_left</Icon>\n                            </div>\n                            {categoryPaneVisible && <CategoryListingCategories allCategories={allCategories} />}\n                            {tagPaneVisible && active && <TagCloudListingTags allTags={allTags} />}\n                            {tagPaneVisible && tagCloudActive && <ApiTagCloud allTags={allTags} />}\n                        </div>\n                    )}\n                    {(categoryPaneVisible || tagPaneVisible) && !showLeftMenu && (\n                        <div className={classes.LeftMenuForSlider}>\n                            <div className={classes.sliderButton} onClick={this.toggleLeftMenu}>\n                                <Icon>keyboard_arrow_right</Icon>\n                            </div>\n                            <div className={classes.rotatedText} onClick={this.toggleLeftMenu}>\n                                <FormattedMessage defaultMessage='Tags / API Categories' id='Apis.Listing.Listing.ApiTagCloud.title' />\n                            </div>\n                        </div>\n                    )}\n                </aside>\n\n                <div\n                    className={classNames(\n                        classes.content,\n                        { [classes.contentWithoutTags]: !(tagPaneVisible || categoryPaneVisible) || !showLeftMenu },\n                        { [classes.contentWithTagsHidden]: (tagPaneVisible || categoryPaneVisible) && !showLeftMenu },\n                        { [classes.contentWithTags]: (tagPaneVisible || categoryPaneVisible) && showLeftMenu },\n                    )}\n                    id='commonListing'\n                >\n                    <div className={classes.appBar} id='commonListingAppBar'>\n                        <div className={classes.mainIconWrapper}>\n                            <CustomIcon strokeColor={strokeColorMain} width={42} height={42} icon='api' />\n                        </div>\n                        <div className={classes.mainTitleWrapper} id='mainTitleWrapper'>\n                            <Typography variant='h4' component='h1' className={classes.mainTitle}>\n                                <FormattedMessage defaultMessage='APIs' id='Apis.Listing.Listing.apis.main' />\n                            </Typography>\n                        </div>\n                        {this.showToggle && (<div className={classes.buttonRight} id='listGridWrapper'>\n                            <IconButton\n                                aria-label='Switch to List View'\n                                className={classes.button}\n                                onClick={() => this.setListType('list')}\n                            >\n                                <Icon\n                                    className={classNames(\n                                        { [classes.iconSelected]: listType === 'list' },\n                                        { [classes.iconDefault]: listType === 'grid' },\n                                    )}\n                                >\n                                    list\n                                </Icon>\n                            </IconButton>\n                            <IconButton\n                                aria-label='Switch to Grid view'\n                                className={classes.button}\n                                onClick={() => this.setListType('grid')}\n                            >\n                                <Icon\n                                    className={classNames(\n                                        { [classes.iconSelected]: listType === 'grid' },\n                                        { [classes.iconDefault]: listType === 'list' },\n                                    )}\n                                >\n                                    grid_on\n                                </Icon>\n                            </IconButton>\n                        </div>)}\n                    </div>\n                    {active && allTags && allTags.length > 0 && <ApiBreadcrumbs selectedTag={selectedTag} />}\n                    <div className={classes.listContentWrapper}>\n                        {listType === 'grid' && (\n                            <ApiContext.Provider value={{ isMonetizationEnabled }}>\n                                <ApiTableView gridView query={search} />\n                            </ApiContext.Provider>\n                        )}\n                        {listType === 'list' && (\n                            <ApiContext.Provider value={{ isMonetizationEnabled }}>\n                                <ApiTableView gridView={false} query={search} />\n                            </ApiContext.Provider>\n                        )}\n                    </div>\n                    {isRecommendationEnabled && user &&\n                        <div>\n                            {active && allTags && allTags.length > 0 && <ApiBreadcrumbs selectedTag={selectedTag} />}\n                            <div className={classes.listContentWrapper}>\n                                {listType === 'grid' && (\n                                    <ApiContext.Provider value={{ isRecommendationEnabled }}>\n                                        <Recommendations gridView query={search} />\n                                    </ApiContext.Provider>\n                                )}\n                                {listType === 'list' && (\n                                    <ApiContext.Provider value={{ isRecommendationEnabled }}>\n                                        <Recommendations gridView query={search} />\n                                    </ApiContext.Provider>\n                                )}\n                            </div>\n                        </div>\n                    }\n                </div>\n            </>\n        );\n    }\n}\n\nCommonListing.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    theme: PropTypes.shape({}).isRequired,\n    location: PropTypes.shape({\n        search: PropTypes.string,\n    }),\n};\n\nCommonListing.defaultProps = {\n    location: PropTypes.shape({\n        search: '',\n    }),\n};\n\nexport default withStyles(styles, { withTheme: true })(CommonListing);\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Modal from '@material-ui/core/Modal';\nimport CodeIcon from '@material-ui/icons/Code';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport CopyToClipboard from 'react-copy-to-clipboard';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Icon from '@material-ui/core/Icon';\n\n/**\n * Position the modal\n * @returns {JSON} css atrributes JSON.\n */\nfunction getModalStyle() {\n    const top = 50;\n    const left = 50;\n\n    return {\n        top: `${top}%`,\n        left: `${left}%`,\n        transform: `translate(-${top}%, -${left}%)`,\n    };\n}\n\nconst useStyles = makeStyles((theme) => ({\n    paper: {\n        position: 'absolute',\n        width: 400,\n        backgroundColor: theme.palette.background.paper,\n        border: '2px solid #000',\n        boxShadow: theme.shadows[5],\n        padding: theme.spacing(2, 4, 3),\n    },\n    codeIcon: {\n        cursor: 'pointer',\n        color: theme.palette.getContrastText(theme.custom.infoBar.background),\n    },\n    code: {\n        background: '#efefef',\n        color: 'cc0000',\n        border: 'solid 1px #ccc',\n        padding: theme.spacing(1),\n    },\n    iconStyle: {\n        position: 'absolute',\n        top: 60,\n        right: 30,\n    },\n}));\n\n/**\n * Adds two numbers together.\n * @param {JSON} props props passed from parent\n * @returns {JSX} code in a modal\n */\nfunction EmbadCode(props) {\n    const { intl } = props;\n    const classes = useStyles();\n    // getModalStyle is not a pure function, we roll the style only on the first render\n    const [modalStyle] = React.useState(getModalStyle);\n    const [open, setOpen] = React.useState(false);\n    const [codeCopied, setCodeCopied] = React.useState(false);\n    const url = new URL(window.location);\n    url.searchParams.set('widget', true);\n\n    const onCopy = () => {\n        setCodeCopied(true);\n        setTimeout(() => setCodeCopied(false), 2000);\n    };\n\n    const handleOpen = () => {\n        setOpen(true);\n    };\n\n    const handleClose = () => {\n        setOpen(false);\n    };\n    const embadCode = '<iframe width=\"450\" height=\"120\" src=\"'\n        + url + '\" frameBorder=\"0\" allowFullScreen title=\"Embad API\" />';\n\n    return (\n        <div>\n            <CodeIcon className={classes.codeIcon} onClick={handleOpen} />\n            <Modal\n                open={open}\n                onClose={handleClose}\n                aria-labelledby='simple-modal-title'\n                aria-describedby='simple-modal-description'\n            >\n                <div style={modalStyle} className={classes.paper}>\n                    <h2 id='simple-modal-title'>\n                        <FormattedMessage\n                            id='Apis.Details.Social.EmbadCode'\n                            defaultMessage='Embed'\n                        />\n                    </h2>\n                    <div className={classes.code}>\n                        <code>{embadCode}</code>\n                    </div>\n                    <Tooltip\n                        title={\n                            codeCopied\n                                ? intl.formatMessage({\n                                    defaultMessage: 'Copied',\n                                    id: 'Apis.Details.Environments.copied',\n                                })\n                                : intl.formatMessage({\n                                    defaultMessage: 'Copy to clipboard',\n                                    id: 'Apis.Details.Environments.copy.to.clipboard',\n                                })\n                        }\n                        placement='right'\n                        className={classes.iconStyle}\n                    >\n                        <CopyToClipboard\n                            text={embadCode}\n                            onCopy={onCopy}\n                        >\n                            <Icon color='secondary'>file_copy</Icon>\n                        </CopyToClipboard>\n                    </Tooltip>\n                </div>\n            </Modal>\n        </div>\n    );\n}\n\nexport default injectIntl(EmbadCode);\n","/*\n * Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useContext } from 'react';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport { injectIntl } from 'react-intl';\nimport { app } from 'Settings';\nimport { ApiContext } from 'AppComponents/Apis/Details/ApiContext';\nimport EmbadCode from 'AppComponents/Apis/Details/Social/EmbadCode';\nimport MailOutlineIcon from '@material-ui/icons/MailOutline';\n\nconst useStyles = makeStyles((theme) => ({\n    socialLink: {\n        display: 'inline-block',\n        '& img': {\n            width: 32,\n            marginLeft: theme.spacing(1),\n        },\n    },\n    oneFlex: {\n        flex: 1,\n    },\n    socialLinkWrapper: {\n        display: 'flex',\n        alignItems: 'center',\n        paddingRight: theme.spacing(2),\n        '& > div': {\n            display: 'inline-block',\n        },\n    },\n    divider: {\n        display: 'inline-block',\n        borderRight: 'solid 1px #ccc',\n        marginLeft: theme.spacing(1),\n        marginRight: theme.spacing(1),\n        height: 30,\n    },\n    codeIcon: {\n        cursor: 'pointer',\n        color: theme.palette.getContrastText(theme.custom.infoBar.background),\n    },\n}));\n\n/**\n * Render the social icons\n * @param {int} num1 The first number.\n * @param {int} num2 The second number.\n * @returns {int} The sum of the two numbers.\n */\nfunction Social() {\n    const classes = useStyles();\n    const { api } = useContext(ApiContext);\n    const { name: apiName } = api;\n    const apiUrl = encodeURI(window.location);\n    const theme = useTheme();\n    const { github_repo: github, slack_url: slack } = api.additionalProperties;\n    const {\n        custom: {\n            social: {\n                showSharing: {\n                    active, showFacebook, showReddit, showTwitter, showEmbad, showEmail,\n                },\n            },\n        },\n    } = theme;\n    if (!active) {\n        return <span />;\n    }\n    return (\n        <>\n            <div className={classes.oneFlex} />\n            <div className={classes.socialLinkWrapper}>\n                {slack && (\n                    <>\n                        <a\n                            className={classes.socialLink}\n                            id='Slack'\n                            href={slack}\n                            target='_blank'\n                            rel='noopener noreferrer'\n                            title='Slack'\n                        >\n                            <img\n                                src={`${app.context}/site/public/images/social/slack.png`}\n                                alt='Slack'\n                            />\n                        </a>\n                    </>\n                )}\n                {github && (\n                    <>\n                        <a\n                            className={classes.socialLink}\n                            id='github'\n                            href={github}\n                            target='_blank'\n                            rel='noopener noreferrer'\n                            title='GitHub'\n                        >\n                            <img\n                                src={`${app.context}/site/public/images/social/github.jpg`}\n                                alt='GitHub'\n                            />\n                        </a>\n                    </>\n                )}\n                {(slack || github) && (\n                    <div className={classes.divider} />\n                )}\n                {showFacebook && (\n                    <a\n                        className={classes.socialLink}\n                        id='facebook'\n                        href={`http://www.facebook.com/sharer.php?u=${apiUrl}`}\n                        target='_blank'\n                        rel='noopener noreferrer'\n                        title='Facebook'\n                    >\n                        <img\n                            src={`${app.context}/site/public/images/social/facebook.png`}\n                            alt='Facebook'\n                        />\n                    </a>\n                )}\n                {/* Twitter */}\n                {showTwitter && (\n                    <a\n                        className={classes.socialLink}\n                        id='Twitter'\n                        href={`http://twitter.com/share?url=${apiUrl}&text=${apiName}`}\n                        target='_blank'\n                        rel='noopener noreferrer'\n                        title='Twitter'\n                    >\n                        <img\n                            src={`${app.context}/site/public/images/social/twitter.png`}\n                            alt='Twitter'\n                        />\n                    </a>\n                )}\n                {/* Reddit */}\n                {showReddit && (\n                    <a\n                        className={classes.socialLink}\n                        id='Reddit'\n                        href={`http://www.reddit.com/submit?url=${apiUrl}&title=${apiName}`}\n                        target='_blank'\n                        rel='noopener noreferrer'\n                        title='Reddit'\n                    >\n                        <img\n                            src={`${app.context}/site/public/images/social/reddit.png`}\n                            alt='Reddit'\n                        />\n                    </a>\n                )}\n                {showEmbad && (\n                    <>\n                        <div className={classes.divider} />\n                        {/* TODO: Fix spelling mistake ~tmkb */}\n                        <EmbadCode />\n                    </>\n                )}\n                {showEmail && (\n                    <>\n                        <div className={classes.divider} />\n                        <a href={`mailto:?Subject=${apiName}&body=Link+:+${apiUrl}\"`} className={classes.codeIcon}>\n                            <MailOutlineIcon />\n                        </a>\n                    </>\n                )}\n            </div>\n        </>\n    );\n}\n\nexport default injectIntl(Social);\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport CloudDownloadRounded from '@material-ui/icons/CloudDownloadRounded';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport IconButton from '@material-ui/core/IconButton';\nimport CopyToClipboard from 'react-copy-to-clipboard';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport TextField from '@material-ui/core/TextField';\nimport Icon from '@material-ui/core/Icon';\nimport API from 'AppData/api';\nimport Utils from 'AppData/Utils';\nimport Alert from 'AppComponents/Shared/Alert';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport { ApiContext } from './ApiContext';\n\nconst styles = theme => ({\n    buttonIcon: {\n        marginRight: 10,\n    },\n    iconAligner: {\n        display: 'flex',\n        justifyContent: 'flex-start',\n        alignItems: 'center',\n    },\n    iconEven: {\n        color: theme.palette.secondary.light,\n        width: theme.spacing(3),\n    },\n    iconOdd: {\n        color: theme.palette.secondary.main,\n        width: theme.spacing(3),\n    },\n    iconTextWrapper: {\n        display: 'inline-block',\n        paddingLeft: 20,\n    },\n    bootstrapRoot: {\n        padding: 0,\n        'label + &': {\n            marginTop: theme.spacing(3),\n        },\n    },\n    bootstrapInput: {\n        borderRadius: 4,\n        backgroundColor: theme.palette.common.white,\n        border: '1px solid #ced4da',\n        padding: '5px 12px',\n        width: 350,\n        transition: theme.transitions.create(['border-color', 'box-shadow']),\n        '&:focus': {\n            borderColor: '#80bdff',\n            boxShadow: '0 0 0 0.2rem rgba(0,123,255,.25)',\n        },\n    },\n    iconStyle: {\n        cursor: 'pointer',\n        margin: '-10px 0',\n    },\n    envRoot: {\n        '& span, & h5, & label, & td, & li': {\n            color: theme.palette.getContrastText(theme.palette.background.paper),\n        }\n    },\n});\n\n/**\n *  @inheritdoc\n */\nclass Environments extends React.Component {\n    constructor(props) {\n        super(props);\n        this.apiClient = new API();\n        this.state = {\n            urlCopied: false,\n        };\n        this.downloadWSDL = this.downloadWSDL.bind(this);\n        this.onCopy = this.onCopy.bind(this);\n    }\n\n    onCopy = (name) => {\n        this.setState({\n            [name]: true,\n        });\n        const that = this;\n        const caller = function () {\n            that.setState({ urlCopied: false });\n        };\n        setTimeout(caller, 2000);\n    }\n\n    /**\n     * Downloads the WSDL of the api for the provided environment\n     *\n     * @param {string} apiId uuid of the API\n     * @param {string} environmentName name of the environment\n     */\n    downloadWSDL(apiId, environmentName) {\n        const { intl } = this.props;\n        const wsdlClient = this.apiClient.getWsdlClient();\n        const promisedGet = wsdlClient.downloadWSDLForEnvironment(apiId, environmentName);\n        promisedGet\n            .then((done) => {\n                Utils.downloadFile(done);\n            })\n            .catch((error) => {\n                if (process.env.NODE_ENV !== 'production') {\n                    console.log(error);\n                    Alert.error(intl.formatMessage({\n                        id: 'Apis.Details.Environments.download.wsdl.error',\n                        defaultMessage: 'Error downloading the WSDL',\n                    }));\n                }\n            });\n    }\n\n    /**\n     * Downloads the swagger of the api for the provided environment\n     *\n     * @param {string} apiId uuid of the API\n     * @param {string} environment name of the environment\n     */\n    downloadSwagger(apiId, environment) {\n        const promiseSwagger = this.apiClient.getSwaggerByAPIIdAndEnvironment(apiId, environment);\n        promiseSwagger\n            .then((done) => {\n                Utils.downloadFile(done);\n            })\n            .catch((error) => {\n                console.log(error);\n                Alert.error(intl.formatMessage({\n                    id: 'Apis.Details.Environments.download.swagger.error',\n                    defaultMessage: 'Error downloading the Swagger',\n                }));\n            });\n    }\n\n    /**\n     *  @inheritdoc\n     */\n    render() {\n        const { api } = this.context;\n        const { classes, intl } = this.props;\n        const { urlCopied } = this.state;\n        // let kubernetes = 'kuberenetes'\n\n        // let kubernetes = [{\n        //     \"EnvName\" : \"Kubernetes\",\n        //     \"clusterDetails\" : [\n        //         {\n        //             \"clusterName\" : \"Docker-desktop\",\n        //             \"ingressURL\" : \"http://wso2.com:9443\"\n        //         },\n        //         {\n        //             \"clusterName\" : \"Minikube\",\n        //             \"ingressURL\" : \"http://wso2.system.com:9443\"\n        //         }\n        //     ]\n        // }]\n\n        let kubernetes = []\n\n        return (\n            <Grid container spacing={2} item xs={12} className={classes.envRoot}>\n                {api.endpointURLs.map((endpoint) => {\n                    return (\n                        <Grid key={endpoint} item xs={12} key={endpoint.environmentName}>\n                            <ExpansionPanel>\n                                <ExpansionPanelSummary\n                                    expandIcon={<Icon>expand_more</Icon>}\n                                    aria-controls='panel1a-content'\n                                    id='panel1a-header'\n                                >\n                                    <div className={classes.iconAligner}>\n                                        {endpoint.environmentType === 'hybrid' && (\n                                            <Icon className={classes.iconEven}>cloud</Icon>\n                                        )}\n                                        {endpoint.environmentType === 'production' && (\n                                            <Icon className={classes.iconEven}>check_circle</Icon>\n                                        )}\n                                        {endpoint.environmentType === 'sandbox' && (\n                                            <Icon className={classes.iconEven}>Build</Icon>\n                                        )}\n                                        <span className={classes.iconTextWrapper}>\n                                            <Typography className={classes.heading}>\n                                                {endpoint.environmentName}\n                                            </Typography>\n                                        </span>\n                                    </div>\n                                </ExpansionPanelSummary>\n                                <ExpansionPanelDetails>\n                                    <Grid container item xs={12} spacing={2}>\n                                        {(endpoint.URLs.http !== null\n                                            || endpoint.URLs.https !== null\n                                            || endpoint.URLs.ws !== null\n                                            || endpoint.URLs.wss !== null) && (\n                                                <Typography id='urls' component='label' className={classes.heading}>\n                                                    <FormattedMessage\n                                                        id='Apis.Details.InfoBar.gateway.urls'\n                                                        defaultMessage='Gateway URLs'\n                                                    />\n                                                </Typography>\n                                            )}\n                                        {endpoint.URLs.http !== null && (\n                                            <Grid item xs={12}>\n                                                <TextField\n                                                    defaultValue={endpoint.URLs.http}\n                                                    id='bootstrap-input'\n                                                    InputProps={{\n                                                        disableUnderline: true,\n                                                        readOnly: true,\n                                                        classes: {\n                                                            root: classes.bootstrapRoot,\n                                                            input: classes.bootstrapInput,\n                                                        },\n                                                    }}\n                                                    InputLabelProps={{\n                                                        shrink: true,\n                                                        className: classes.bootstrapFormLabel,\n                                                    }}\n                                                    inputProps={{\n                                                        'aria-labelledby':'urls',\n                                                    }}\n                                                />\n                                                <Tooltip\n                                                    title={\n                                                        urlCopied\n                                                            ? intl.formatMessage({\n                                                                defaultMessage: 'Copied',\n                                                                id: 'Apis.Details.Environments.copied',\n                                                            })\n                                                            : intl.formatMessage({\n                                                                defaultMessage: 'Copy to clipboard',\n                                                                id: 'Apis.Details.Environments.copy.to.clipboard',\n                                                            })\n                                                    }\n                                                    placement='right'\n                                                    className={classes.iconStyle}\n                                                >\n                                                    <CopyToClipboard\n                                                        text={endpoint.URLs.http}\n                                                        onCopy={() => this.onCopy('urlCopied')}\n                                                    >\n                                                        <IconButton aria-label='Copy to clipboard'>\n                                                            <Icon color='secondary'>insert_drive_file</Icon>\n                                                        </IconButton>\n                                                    </CopyToClipboard>\n                                                </Tooltip>\n                                            </Grid>\n                                        )}\n                                        {endpoint.URLs.https !== null && (\n                                            <Grid item xs={12}>\n                                                <TextField\n                                                    defaultValue={endpoint.URLs.https}\n                                                    id='environments-input'\n                                                    InputProps={{\n                                                        disableUnderline: true,\n                                                        readOnly: true,\n                                                        classes: {\n                                                            root: classes.bootstrapRoot,\n                                                            input: classes.bootstrapInput,\n                                                        },\n                                                    }}\n                                                    InputLabelProps={{\n                                                        shrink: true,\n                                                        className: classes.bootstrapFormLabel,\n                                                    }}\n                                                    inputProps={{\n                                                        'aria-labelledby':'urls',\n                                                    }}\n                                                />\n                                                <Tooltip\n                                                    title={\n                                                        urlCopied\n                                                            ? intl.formatMessage({\n                                                                defaultMessage: 'Copied',\n                                                                id: 'Apis.Details.Environments.copied',\n                                                            })\n                                                            : intl.formatMessage({\n                                                                defaultMessage: 'Copy to clipboard',\n                                                                id: 'Apis.Details.Environments.copy.to.clipboard',\n                                                            })\n                                                    }\n                                                    placement='right'\n                                                    className={classes.iconStyle}\n                                                >\n                                                    <CopyToClipboard\n                                                        text={endpoint.URLs.https}\n                                                        onCopy={() => this.onCopy('urlCopied')}\n                                                    >\n                                                        <IconButton aria-label='Copy to clipboard'>\n                                                            <Icon color='secondary'>insert_drive_file</Icon>\n                                                        </IconButton>\n                                                    </CopyToClipboard>\n                                                </Tooltip>\n                                            </Grid>\n                                        )}\n                                        {endpoint.URLs.ws !== null && (\n                                            <Grid item xs={12}>\n                                                <TextField\n                                                    defaultValue={endpoint.URLs.ws}\n                                                    id='bootstrap-input'\n                                                    InputProps={{\n                                                        disableUnderline: true,\n                                                        readOnly: true,\n                                                        classes: {\n                                                            root: classes.bootstrapRoot,\n                                                            input: classes.bootstrapInput,\n                                                        },\n                                                    }}\n                                                    InputLabelProps={{\n                                                        shrink: true,\n                                                        className: classes.bootstrapFormLabel,\n                                                    }}\n                                                />\n                                                <Tooltip\n                                                    title={\n                                                        urlCopied\n                                                            ? intl.formatMessage({\n                                                                defaultMessage: 'Copied',\n                                                                id: 'Apis.Details.Environments.copied',\n                                                            })\n                                                            : intl.formatMessage({\n                                                                defaultMessage: 'Copy to clipboard',\n                                                                id: 'Apis.Details.Environments.copy.to.clipboard',\n                                                            })\n                                                    }\n                                                    placement='right'\n                                                    className={classes.iconStyle}\n                                                >\n                                                    <CopyToClipboard\n                                                        text={endpoint.URLs.ws}\n                                                        onCopy={() => this.onCopy('urlCopied')}\n                                                    >\n                                                        <IconButton aria-label='Copy to clipboard'>\n                                                            <Icon color='secondary'>insert_drive_file</Icon>\n                                                        </IconButton>\n                                                    </CopyToClipboard>\n                                                </Tooltip>\n                                            </Grid>\n                                        )}\n                                        {endpoint.URLs.wss !== null && (\n                                            <Grid item xs={12}>\n                                                <TextField\n                                                    defaultValue={endpoint.URLs.wss}\n                                                    id='bootstrap-input'\n                                                    InputProps={{\n                                                        disableUnderline: true,\n                                                        readOnly: true,\n                                                        classes: {\n                                                            root: classes.bootstrapRoot,\n                                                            input: classes.bootstrapInput,\n                                                        },\n                                                    }}\n                                                    InputLabelProps={{\n                                                        shrink: true,\n                                                        className: classes.bootstrapFormLabel,\n                                                    }}\n                                                />\n                                                <Tooltip\n                                                    title={\n                                                        urlCopied\n                                                            ? intl.formatMessage({\n                                                                defaultMessage: 'Copied',\n                                                                id: 'Apis.Details.Environments.copied',\n                                                            })\n                                                            : intl.formatMessage({\n                                                                defaultMessage: 'Copy to clipboard',\n                                                                id: 'Apis.Details.Environments.copy.to.clipboard',\n                                                            })\n                                                    }\n                                                    placement='right'\n                                                    className={classes.iconStyle}\n                                                >\n                                                    <CopyToClipboard\n                                                        text={endpoint.URLs.wss}\n                                                        onCopy={() => this.onCopy('urlCopied')}\n                                                    >\n                                                        <IconButton aria-label='Copy to clipboard'>\n                                                            <Icon color='secondary'>insert_drive_file</Icon>\n                                                        </IconButton>\n                                                    </CopyToClipboard>\n                                                </Tooltip>\n                                            </Grid>\n                                        )}\n                                        {endpoint.defaultVersionURLs !== null &&\n                                            (endpoint.defaultVersionURLs.http !== null ||\n                                                endpoint.defaultVersionURLs.https !== null ||\n                                                endpoint.defaultVersionURLs.ws !== null ||\n                                                endpoint.defaultVersionURLs.wss !== null) && (\n                                                <Typography className={classes.heading} component='label' htmlFor='defaultGateway'>\n                                                    <FormattedMessage\n                                                        id='Apis.Details.InfoBar.default.gateway.urls'\n                                                        defaultMessage='Default Gateway URLs'\n                                                    />\n                                                </Typography>\n                                            )}\n                                        {endpoint.defaultVersionURLs !== null &&\n                                            endpoint.defaultVersionURLs.http !== null && (\n                                                <Grid item xs={12}>\n                                                    <TextField\n                                                        defaultValue={endpoint.defaultVersionURLs.http}\n                                                        id='defaultGateway'\n                                                        InputProps={{\n                                                            disableUnderline: true,\n                                                            readOnly: true,\n                                                            classes: {\n                                                                root: classes.bootstrapRoot,\n                                                                input: classes.bootstrapInput,\n                                                            },\n                                                        }}\n                                                        InputLabelProps={{\n                                                            shrink: true,\n                                                            className: classes.bootstrapFormLabel,\n                                                        }}\n                                                    />\n                                                    <Tooltip\n                                                        title={\n                                                            urlCopied\n                                                                ? intl.formatMessage({\n                                                                    defaultMessage: 'Copied',\n                                                                    id: 'Apis.Details.Environments.copied',\n                                                                })\n                                                                : intl.formatMessage({\n                                                                    defaultMessage: 'Copy to clipboard',\n                                                                    id: 'Apis.Details.Environments.copy.to.clipboard',\n                                                                })\n                                                        }\n                                                        placement='right'\n                                                        className={classes.iconStyle}\n                                                    >\n                                                        <CopyToClipboard\n                                                            text={endpoint.defaultVersionURLs.http}\n                                                            onCopy={() => this.onCopy('urlCopied')}\n                                                        >\n                                                            <IconButton aria-label='Copy to clipboard'>\n                                                                <Icon color='secondary'>file_copy</Icon>\n                                                            </IconButton>\n                                                        </CopyToClipboard>\n                                                    </Tooltip>\n                                                </Grid>\n                                            )}\n                                        {endpoint.defaultVersionURLs !== null &&\n                                            endpoint.defaultVersionURLs.https !== null && (\n                                                <Grid item xs={12}>\n                                                    <TextField\n                                                        defaultValue={endpoint.defaultVersionURLs.https}\n                                                        id='bootstrap-input'\n                                                        InputProps={{\n                                                            disableUnderline: true,\n                                                            readOnly: true,\n                                                            classes: {\n                                                                root: classes.bootstrapRoot,\n                                                                input: classes.bootstrapInput,\n                                                            },\n                                                        }}\n                                                        InputLabelProps={{\n                                                            shrink: true,\n                                                            className: classes.bootstrapFormLabel,\n                                                        }}\n                                                    />\n                                                    <Tooltip\n                                                        title={\n                                                            urlCopied\n                                                                ? intl.formatMessage({\n                                                                    defaultMessage: 'Copied',\n                                                                    id: 'Apis.Details.Environments.copied',\n                                                                })\n                                                                : intl.formatMessage({\n                                                                    defaultMessage: 'Copy to clipboard',\n                                                                    id: 'Apis.Details.Environments.copy.to.clipboard',\n                                                                })\n                                                        }\n                                                        placement='right'\n                                                        className={classes.iconStyle}\n                                                    >\n                                                        <CopyToClipboard\n                                                            text={endpoint.defaultVersionURLs.https}\n                                                            onCopy={() => this.onCopy('urlCopied')}\n                                                        >\n                                                            <IconButton aria-label='Copy to clipboard'>\n                                                                <Icon color='secondary'>file_copy</Icon>\n                                                            </IconButton>\n                                                        </CopyToClipboard>\n                                                    </Tooltip>\n                                                </Grid>\n                                            )}\n                                        {endpoint.defaultVersionURLs !== null &&\n                                            endpoint.defaultVersionURLs.ws !== null && (\n                                                <Grid item xs={12}>\n                                                    <TextField\n                                                        defaultValue={endpoint.defaultVersionURLs.ws}\n                                                        id='bootstrap-input'\n                                                        InputProps={{\n                                                            disableUnderline: true,\n                                                            readOnly: true,\n                                                            classes: {\n                                                                root: classes.bootstrapRoot,\n                                                                input: classes.bootstrapInput,\n                                                            },\n                                                        }}\n                                                        InputLabelProps={{\n                                                            shrink: true,\n                                                            className: classes.bootstrapFormLabel,\n                                                        }}\n                                                    />\n                                                    <Tooltip\n                                                        title={\n                                                            urlCopied\n                                                                ? intl.formatMessage({\n                                                                    defaultMessage: 'Copied',\n                                                                    id: 'Apis.Details.Environments.copied',\n                                                                })\n                                                                : intl.formatMessage({\n                                                                    defaultMessage: 'Copy to clipboard',\n                                                                    id: 'Apis.Details.Environments.copy.to.clipboard',\n                                                                })\n                                                        }\n                                                        placement='right'\n                                                        className={classes.iconStyle}\n                                                    >\n                                                        <CopyToClipboard\n                                                            text={endpoint.defaultVersionURLs.ws}\n                                                            onCopy={() => this.onCopy('urlCopied')}\n                                                        >\n                                                            <IconButton aria-label='Copy to clipboard'>\n                                                                <Icon color='secondary'>file_copy</Icon>\n                                                            </IconButton>\n                                                        </CopyToClipboard>\n                                                    </Tooltip>\n                                                </Grid>\n                                            )}\n                                        {endpoint.defaultVersionURLs !== null &&\n                                            endpoint.defaultVersionURLs.wss !== null && (\n                                                <Grid item xs={12}>\n                                                    <TextField\n                                                        defaultValue={endpoint.defaultVersionURLs.wss}\n                                                        id='bootstrap-input'\n                                                        InputProps={{\n                                                            disableUnderline: true,\n                                                            readOnly: true,\n                                                            classes: {\n                                                                root: classes.bootstrapRoot,\n                                                                input: classes.bootstrapInput,\n                                                            },\n                                                        }}\n                                                        InputLabelProps={{\n                                                            shrink: true,\n                                                            className: classes.bootstrapFormLabel,\n                                                        }}\n                                                    />\n                                                    <Tooltip\n                                                        title={\n                                                            urlCopied\n                                                                ? intl.formatMessage({\n                                                                    defaultMessage: 'Copied',\n                                                                    id: 'Apis.Details.Environments.copied',\n                                                                })\n                                                                : intl.formatMessage({\n                                                                    defaultMessage: 'Copy to clipboard',\n                                                                    id: 'Apis.Details.Environments.copy.to.clipboard',\n                                                                })\n                                                        }\n                                                        placement='right'\n                                                        className={classes.iconStyle}\n                                                    >\n                                                        <CopyToClipboard\n                                                            text={endpoint.defaultVersionURLs.wss}\n                                                            onCopy={() => this.onCopy('urlCopied')}\n                                                        >\n                                                            <IconButton aria-label='Copy to clipboard'>\n                                                                <Icon color='secondary'>file_copy</Icon>\n                                                            </IconButton>\n                                                        </CopyToClipboard>\n                                                    </Tooltip>\n                                                </Grid>\n                                            )}\n                                        {api.type === 'SOAP' && (\n                                            <Button\n                                                size='small'\n                                                onClick={() => this.downloadWSDL(api.id, endpoint.environmentName)}\n                                            >\n                                                <CloudDownloadRounded className={classes.buttonIcon} />\n                                                <FormattedMessage\n                                                    id='Apis.Details.Environments.download.wsdl'\n                                                    defaultMessage='WSDL'\n                                                />\n                                            </Button>\n                                        )}\n                                        {(api.type === 'HTTP' || api.type === 'SOAPTOREST') && (\n                                            <Button\n                                                size='small'\n                                                onClick={() => this.downloadSwagger(api.id, endpoint.environmentName)}\n                                            >\n                                                <CloudDownloadRounded className={classes.buttonIcon} />\n                                                <FormattedMessage\n                                                    id='Apis.Details.Environments.download.swagger'\n                                                    defaultMessage='Swagger'\n                                                />\n                                            </Button>\n                                        )}\n                                    </Grid>\n                                </ExpansionPanelDetails>\n                            </ExpansionPanel>\n                        </Grid>\n                    );\n                })}\n                {api.ingressURLs !== null && api.ingressURLs.filter((envType) => envType.clusterDetails.length > 0).map(\n                    (envType) => (\n                        envType.clusterDetails.map((cluster) => (\n                            <Grid key={cluster.clusterName} item xs={12} key={cluster.clusterName}>\n                                <ExpansionPanel>\n                                    <ExpansionPanelSummary\n                                        expandIcon={<Icon>expand_more</Icon>}\n                                        aria-controls='panel1a-content'\n                                        id='panel1a-header-cluster'\n                                    >\n                                        <div className={classes.iconAligner}>\n                                            <Icon className={classes.iconEven}>cloud</Icon>\n                                            <span className={classes.iconTextWrapper}>\n                                            <Typography className={classes.heading}>\n                                                {cluster.clusterDisplayName}\n                                            </Typography>\n                                        </span>\n                                        </div>\n                                    </ExpansionPanelSummary>\n                                    <ExpansionPanelDetails>\n                                        <Grid container item xs={12} spacing={2}>\n                                            {cluster.ingressURL !== null && (\n                                                <Typography className={classes.heading} component='label' htmlFor='ingressUrl'>\n                                                    <FormattedMessage\n                                                        id='Apis.Details.InfoBar.gateway.ingressUrls'\n                                                        defaultMessage='Cluster Ingress URLs'\n                                                    />\n                                                </Typography>\n                                            )}\n                                            {cluster.ingressURL !== null && (\n                                                <Grid item xs={12}>\n                                                    <TextField\n                                                        defaultValue={cluster.ingressURL}\n                                                        id='ingressUrl'\n                                                        InputProps={{\n                                                            disableUnderline: true,\n                                                            readOnly: true,\n                                                            classes: {\n                                                                root: classes.bootstrapRoot,\n                                                                input: classes.bootstrapInput,\n                                                            },\n                                                        }}\n                                                        InputLabelProps={{\n                                                            shrink: true,\n                                                            className: classes.bootstrapFormLabel,\n                                                        }}\n                                                    />\n                                                    <Tooltip\n                                                        title={\n                                                            urlCopied\n                                                                ? intl.formatMessage({\n                                                                    defaultMessage: 'Copied',\n                                                                    id: 'Apis.Details.Environments.copied',\n                                                                })\n                                                                : intl.formatMessage({\n                                                                    defaultMessage: 'Copy to clipboard',\n                                                                    id: 'Apis.Details.Environments.copy.to.clipboard',\n                                                                })\n                                                        }\n                                                        placement='right'\n                                                        className={classes.iconStyle}\n                                                    >\n                                                        <CopyToClipboard\n                                                            text={cluster.ingressURL}\n                                                            onCopy={() => this.onCopy('urlCopied')}\n                                                        >\n                                                            <IconButton aria-label='Copy to clipboard'>\n                                                                <Icon color='secondary'>insert_drive_file</Icon>\n                                                            </IconButton>\n                                                        </CopyToClipboard>\n                                                    </Tooltip>\n                                                </Grid>\n                                            )}\n                                        </Grid>\n                                    </ExpansionPanelDetails>\n                                </ExpansionPanel>\n                            </Grid>\n                        ))\n                    ))\n                }\n            </Grid>\n        );\n    }\n}\n\nEnvironments.propTypes = {\n    classes: PropTypes.object.isRequired,\n    intl: PropTypes.shape({}).isRequired,\n};\nEnvironments.contextType = ApiContext;\n\nexport default injectIntl(withStyles(styles)(Environments));\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport CloudDownloadRounded from '@material-ui/icons/CloudDownloadRounded';\nimport CopyToClipboard from 'react-copy-to-clipboard';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Icon from '@material-ui/core/Icon';\nimport API from 'AppData/api';\nimport Utils from 'AppData/Utils';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport { ApiContext } from './ApiContext';\n\nconst styles = (theme) => ({\n    iconAligner: {\n        display: 'flex',\n        justifyContent: 'flex-start',\n        alignItems: 'center',\n    },\n    iconEven: {\n        color: theme.palette.secondary.light,\n        width: theme.spacing(3),\n    },\n    iconTextWrapper: {\n        display: 'inline-block',\n        paddingLeft: 20,\n    },\n    bootstrapRoot: {\n        padding: 0,\n        'label + &': {\n            marginTop: theme.spacing(3),\n        },\n    },\n    bootstrapInput: {\n        borderRadius: 4,\n        backgroundColor: theme.palette.common.white,\n        border: '1px solid #ced4da',\n        padding: '5px 12px',\n        width: 350,\n        transition: theme.transitions.create(['border-color', 'box-shadow']),\n        '&:focus': {\n            borderColor: '#80bdff',\n            boxShadow: '0 0 0 0.2rem rgba(0,123,255,.25)',\n        },\n    },\n    buttonIcon: {\n        marginRight: 10,\n    },\n    iconStyle: {\n        cursor: 'grab',\n    },\n});\n\nclass Labels extends React.Component {\n    constructor(props) {\n        super(props);\n        this.apiClient = new API();\n        this.state = {\n            urlCopied: false,\n        };\n    }\n\n    onCopy = (name) => {\n        this.setState({\n            [name]: true,\n        });\n        const that = this;\n        const caller = function () {\n            that.setState({ urlCopied: false });\n        };\n        setTimeout(caller, 2000);\n    }\n\n    /**\n     * Downloads the Swagger of the api for the provided label\n     *\n     * @param {string} apiId uuid of the API\n     * @param {string} label name of the environment\n     */\n    downloadSwagger(apiId, label) {\n        const promiseSwagger = this.apiClient.getSwaggerByAPIIdAndLabel(apiId, label);\n        promiseSwagger\n            .then((done) => {\n                Utils.downloadFile(done);\n            })\n            .catch((error) => {\n                console.log(error);\n                Alert.error(intl.formatMessage({\n                    id: 'Apis.Details.Environments.download.wsdl.error',\n                    defaultMessage: 'Error downloading the Swagger',\n                }));\n            });\n    }\n\n    render() {\n        const { api } = this.context;\n        const { classes, intl } = this.props;\n        const { urlCopied } = this.state;\n\n        return (\n            <Grid container spacing={2} item xs={12}>\n                {api.labels.map((label) => {\n                    return (\n                        <Grid key={label} item xs={12}>\n                            <ExpansionPanel>\n                                <ExpansionPanelSummary\n                                    expandIcon={<Icon>expand_more</Icon>}\n                                    aria-controls='panel1a-content'\n                                    id='panel1a-header'\n                                >\n                                    <div className={classes.iconAligner}>\n                                        <Icon className={classes.iconEven}>label</Icon>\n                                        <span className={classes.iconTextWrapper}>\n                                            <Typography className={classes.heading}>\n                                                {label.name}\n                                            </Typography>\n                                        </span>\n                                    </div>\n                                </ExpansionPanelSummary>\n                                <ExpansionPanelDetails>\n                                    <Grid container item xs={12} spacing={2}>\n                                        <Typography className={classes.heading}>\n                                            <FormattedMessage\n                                                id='Apis.Details.InfoBar.Gateway.urls'\n                                                defaultMessage='Gateway URLs'\n                                            />\n                                        </Typography>\n                                        {label.accessUrls.map((row) => (\n                                            <Grid item xs={12} key={row}>\n                                                <TextField\n                                                    defaultValue={row}\n                                                    id='bootstrap-input'\n                                                    InputProps={{\n                                                        disableUnderline: true,\n                                                        readOnly: true,\n                                                        classes: {\n                                                            root: classes.bootstrapRoot,\n                                                            input: classes.bootstrapInput,\n                                                        },\n                                                    }}\n                                                    InputLabelProps={{\n                                                        shrink: true,\n                                                        className: classes.bootstrapFormLabel,\n                                                    }}\n                                                />\n                                                <Tooltip\n                                                    title={\n                                                        urlCopied\n                                                            ? intl.formatMessage({\n                                                                defaultMessage: 'Copied',\n                                                                id: 'Apis.Details.Labels.copied',\n                                                            })\n                                                            : intl.formatMessage({\n                                                                defaultMessage: 'Copy to clipboard',\n                                                                id: 'Apis.Details.Labels.copy.to.clipboard',\n                                                            })\n                                                    }\n                                                    placement='right'\n                                                    className={classes.iconStyle}\n                                                >\n                                                    <CopyToClipboard\n                                                        text={row}\n                                                        onCopy={() => this.onCopy('urlCopied')}\n                                                    >\n                                                        <Icon color='secondary'>insert_drive_file</Icon>\n                                                    </CopyToClipboard>\n                                                </Tooltip>\n                                            </Grid>\n                                        ))}\n                                        {(api.type === 'HTTP' || api.type === 'SOAPTOREST') && (\n                                            <Button\n                                                size='small'\n                                                onClick={\n                                                    () => this.downloadSwagger(api.id, label.name)\n                                                }\n                                            >\n                                                <CloudDownloadRounded className={classes.buttonIcon} />\n                                                <FormattedMessage\n                                                    id='Apis.Details.Environments.download.swagger'\n                                                    defaultMessage='Swagger'\n                                                />\n                                            </Button>\n                                        )}\n                                    </Grid>\n                                </ExpansionPanelDetails>\n                            </ExpansionPanel>\n                        </Grid>\n                    );\n                })}\n            </Grid>\n        );\n    }\n}\n\nLabels.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\nLabels.contextType = ApiContext;\n\nexport default injectIntl(withStyles(styles)(Labels));\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Settings from 'Settings';\nimport { withStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Icon from '@material-ui/core/Icon';\nimport { Link, withRouter } from 'react-router-dom';\nimport Collapse from '@material-ui/core/Collapse';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableRow from '@material-ui/core/TableRow';\nimport Grade from '@material-ui/icons/Grade';\nimport Chip from '@material-ui/core/Chip';\nimport LaunchIcon from '@material-ui/icons/Launch';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport API from 'AppData/api';\nimport StarRatingBar from 'AppComponents/Apis/Listing/StarRatingBar';\nimport StarRatingSummary from 'AppComponents/Apis/Details/StarRatingSummary';\nimport { ApiContext } from 'AppComponents/Apis/Details/ApiContext';\nimport Social from 'AppComponents/Apis/Details/Social/Social';\nimport VerticalDivider from '../../Shared/VerticalDivider';\nimport ApiThumb from '../Listing/ApiThumb';\nimport ResourceNotFound from '../../Base/Errors/ResourceNotFound';\nimport AuthManager from '../../../data/AuthManager';\nimport Environments from './Environments';\nimport Labels from './Labels';\n\nconst propertyDisplaySuffix = Settings.app.propertyDisplaySuffix || '__display';\n/**\n *\n *\n * @param {*} theme\n */\nconst styles = (theme) => {\n    const mainBack = theme.custom.infoBar.background || '#ffffff';\n    const infoBarHeight = theme.custom.infoBar.height || 70;\n    const starColor = theme.custom.infoBar.starColor || theme.palette.getContrastText(mainBack);\n\n    return {\n        table: {\n            minWidth: '100%',\n        },\n        root: {\n            height: infoBarHeight,\n            background: mainBack,\n            color: theme.palette.getContrastText(mainBack),\n            borderBottom: 'solid 1px ' + theme.palette.grey.A200,\n            display: 'flex',\n            alignItems: 'center',\n            paddingLeft: theme.spacing(2),\n        },\n        backIcon: {\n            color: theme.palette.primary.main,\n            fontSize: 56,\n            cursor: 'pointer',\n        },\n        backText: {\n            color: theme.palette.primary.main,\n            cursor: 'pointer',\n            fontFamily: theme.typography.fontFamily,\n        },\n        starRate: {\n            fontSize: 40,\n            color: starColor,\n        },\n        infoContent: {\n            color: theme.palette.getContrastText(mainBack),\n            background: mainBack,\n            padding: theme.spacing(3),\n            '& td, & th': {\n                color: theme.palette.getContrastText(mainBack),\n            },\n        },\n        infoContentBottom: {\n            background: theme.custom.infoBar.sliderBackground,\n            color: theme.palette.getContrastText(theme.custom.infoBar.sliderBackground),\n            borderBottom: 'solid 1px ' + theme.palette.grey.A200,\n        },\n        contentWrapper: {\n            maxWidth: theme.custom.contentAreaWidth - theme.custom.leftMenu.width,\n            alignItems: 'center',\n        },\n        infoBarMain: {\n            width: '100%',\n            zIndex: 100,\n        },\n        buttonView: {\n            textAlign: 'left',\n            justifyContent: 'left',\n            display: 'flex',\n            paddingLeft: theme.spacing(3),\n            cursor: 'pointer',\n        },\n        buttonOverviewText: {\n            display: 'inline-block',\n            paddingTop: 3,\n        },\n        paper: {\n            margin: theme.spacing(1),\n        },\n        leftCol: {\n            width: 200,\n        },\n        iconAligner: {\n            display: 'flex',\n            justifyContent: 'flex-start',\n            alignItems: 'center',\n        },\n        iconTextWrapper: {\n            display: 'inline-block',\n            paddingLeft: 20,\n        },\n        iconEven: {\n            color: theme.custom.infoBar.iconEvenColor,\n            width: theme.spacing(3),\n        },\n        iconOdd: {\n            color: theme.custom.infoBar.iconOddColor,\n            width: theme.spacing(3),\n        },\n        margin: {\n            marginLeft: 30,\n        },\n        contentToTop: {\n            verticlaAlign: 'top',\n        },\n        viewInPubStoreLauncher: {\n            display: 'flex',\n            flexDirection: 'column',\n            color: theme.palette.getContrastText(mainBack),\n            textAlign: 'center',\n            textDecoration: 'none',\n        },\n        linkText: {\n            fontSize: theme.typography.fontSize,\n        },\n        chip: {\n            background: theme.custom.infoBar.tagChipBackground,\n            color: theme.palette.getContrastText(theme.custom.infoBar.tagChipBackground),\n            marginRight: theme.spacing(1),\n        },\n        expandWrapper: {\n            cursor: 'pointer',\n            display: 'block',\n        },\n        linkTitle: {\n            color: theme.palette.getContrastText(theme.custom.infoBar.background),\n        },\n        leftMenu: {},\n        leftMenuHorizontal: {},\n        leftMenuVerticalLeft: {},\n        leftMenuVerticalRight: {},\n        leftLInkMain: {},\n        leftLInkMainText: {},\n        detailsContent: {},\n        content: {},\n        contentLoader: {},\n        contentLoaderRightMenu: {},\n    };\n};\n\n/**\n *\n *\n * @class InfoBar\n * @extends {React.Component}\n */\nclass InfoBar extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            api: null,\n            applications: null,\n            policies: null,\n            dropDownApplications: null,\n            dropDownPolicies: null,\n            notFound: false,\n            tabValue: 'Social Sites',\n            comment: '',\n            commentList: null,\n            showOverview: true,\n            checked: false,\n            avgRating: 0,\n            total: 0,\n            count: 0,\n        };\n        this.getSchema = this.getSchema.bind(this);\n        this.getProvider = this.getProvider.bind(this);\n        this.setRatingUpdate = this.setRatingUpdate.bind(this);\n    }\n\n    ditectCurrentMenu = (location) => {\n        const routeToCheck = 'overview';\n        const { pathname } = location;\n        const test1 = new RegExp('/' + routeToCheck + '$', 'g');\n        const test2 = new RegExp('/' + routeToCheck + '/', 'g');\n        if (pathname.match(test1) || pathname.match(test2)) {\n            this.setState({ showOverview: true });\n        } else {\n            this.setState({ showOverview: false });\n        }\n    };\n\n    componentDidMount() {\n        const { history } = this.props;\n        this.ditectCurrentMenu(history.location);\n        history.listen((location) => {\n            this.ditectCurrentMenu(location);\n        });\n    }\n\n    /**\n     *\n     *\n     * @memberof InfoBar\n     */\n    toggleOverview = (todo) => {\n        if (typeof todo === 'boolean') {\n            this.setState({ showOverview: todo });\n        } else {\n            this.setState((state) => ({ showOverview: !state.showOverview }));\n        }\n    };\n\n    getProvider(api) {\n        let { provider } = api;\n        if (\n            api.businessInformation\n            && api.businessInformation.businessOwner\n            && api.businessInformation.businessOwner.trim() !== ''\n        ) {\n            provider = api.businessInformation.businessOwner;\n        }\n        return provider;\n    }\n\n    getProviderMail(api) {\n        let mail;\n        if (\n            api.businessInformation\n            && api.businessInformation.businessOwnerEmail\n            && api.businessInformation.businessOwnerEmail.trim() !== ''\n        ) {\n            mail = '(' + api.businessInformation.businessOwnerEmail + ')';\n        }\n        return mail;\n    }\n\n    getTechnical(api) {\n        let owner;\n        if (\n            api.businessInformation\n            && api.businessInformation.technicalOwner\n            && api.businessInformation.technicalOwner.trim() !== ''\n        ) {\n            owner = api.businessInformation.technicalOwner;\n        }\n        return owner;\n    }\n\n    getTechnicalMail(api) {\n        let mail;\n        if (\n            api.businessInformation\n            && api.businessInformation.technicalOwnerEmail\n            && api.businessInformation.technicalOwnerEmail.trim() !== ''\n        ) {\n            mail = '(' + api.businessInformation.technicalOwnerEmail + ')';\n        }\n        return mail;\n    }\n\n    getKeyManagers(api) {\n        let keyManagers;\n        let response;\n        if (api.keyManagers) {\n            keyManagers = api.keyManagers;\n            keyManagers.map(name => {\n                if (name === 'all') {\n                    response = 'All Applicable';\n                } else {\n                    response = keyManagers.join();\n                }\n            });\n        }\n        return response;\n    }\n\n    getSchema() {\n        const newAPI = new API();\n        const { api } = this.context;\n        const promisedGraphQL = newAPI.getGraphQLSchemaByAPIId(api.id);\n        promisedGraphQL.then((response) => {\n            const windowUrl = window.URL || window.webkitURL;\n            const binary = new Blob([response.data]);\n            const url = windowUrl.createObjectURL(binary);\n            const anchor = document.createElement('a');\n            anchor.href = url;\n            anchor.download = this.getProvider(api) + '-' + api.name + '-' + api.version + '.graphql';\n            anchor.click();\n            windowUrl.revokeObjectURL(url);\n        });\n    }\n\n    setRatingUpdate(ratings) {\n        if (ratings) {\n            const { avgRating, total, count } = ratings;\n            this.setState({ avgRating, total, count });\n        }\n    }\n\n    /**\n     *\n     *\n     * @returns\n     * @memberof InfoBar\n     */\n    render() {\n        const { api } = this.context;\n\n        const { classes, theme, intl } = this.props;\n        const {\n            notFound, showOverview, prodUrlCopied, sandboxUrlCopied, epUrl, avgRating, total, count,\n        } = this.state;\n        const {\n            custom: {\n                leftMenu: { position },\n                infoBar: { showThumbnail, height },\n                tagWise: { key, active },\n                social: { showRating },\n            },\n        } = theme;\n\n        // Remve the tags with a sufix '-group' from tags\n        let apisTagsWithoutGroups = [];\n        if (!active) {\n            apisTagsWithoutGroups = api.tags;\n        }\n        if (active && api.tags && api.tags.length > 0) {\n            for (let i = 0; i < api.tags.length; i++) {\n                if (api.tags[i].search(key) != -1 && api.tags[i].split(key).length > 0) {\n                    apisTagsWithoutGroups.push(api.tags[i].split(key)[0]);\n                } else {\n                    apisTagsWithoutGroups.push(api.tags[i]);\n                }\n            }\n        }\n        const { additionalProperties } = api;\n        let additionalProperties__display = null;\n        if (additionalProperties && Object.keys(additionalProperties).length > 0 && additionalProperties.constructor === Object) {\n            additionalProperties__display = Object.keys(additionalProperties).filter(aProp => aProp.indexOf(propertyDisplaySuffix) !== -1);\n        }\n\n        const { resourceNotFountMessage } = this.props;\n        const user = AuthManager.getUser();\n        if (notFound) {\n            return <ResourceNotFound message={resourceNotFountMessage} />;\n        }\n\n        return (\n            <div className={classes.infoBarMain} id='infoBar'>\n                <div className={classes.root}>\n                    {showThumbnail && (\n                        <ApiThumb api={api} customWidth={70} customHeight={50} showInfo={false} />\n                    )}\n                    <div style={{ marginLeft: theme.spacing(1) }}>\n                        <Link to={'/apis/' + api.id + '/overview'} className={classes.linkTitle}>\n                            <Typography variant='h4' component='h1'>{api.name}</Typography>\n                        </Link>\n                        <Typography variant='caption' gutterBottom align='left'>\n                            {this.getProvider(api)}\n                        </Typography>\n                    </div>\n                    <VerticalDivider height={70} />\n                    {!api.advertiseInfo.advertised && user && showRating && (\n                        <StarRatingSummary avgRating={avgRating} reviewCount={total} returnCount={count} />\n\n                    )}\n                    {api.advertiseInfo.advertised && (\n                        <>\n                            <a\n                                target='_blank'\n                                rel='noopener noreferrer'\n                                href={api.advertiseInfo.originalStoreUrl}\n                                className={classes.viewInPubStoreLauncher}\n                            >\n                                <div>\n                                    <LaunchIcon />\n                                </div>\n                                <div className={classes.linkText}>Visit Publisher Dev Portal</div>\n                            </a>\n                            <VerticalDivider height={70} />\n                        </>\n                    )}\n                    <Social />\n                </div>\n                {position === 'horizontal' && <div style={{ height: 60 }} />}\n                {showOverview && (\n                    <Collapse in={showOverview}>\n                        <div className={classes.infoContent}>\n                            <div className={classes.contentWrapper}>\n                                <Typography>{api.description}</Typography>\n                                <Table className={classes.table}>\n                                    <TableBody>\n                                        <TableRow>\n                                            <TableCell component='th' role='rowheader' scope='row' className={classes.leftCol}>\n                                                <div className={classes.iconAligner}>\n                                                    <Icon className={classes.iconOdd}>settings_input_component</Icon>\n                                                    <span className={classes.iconTextWrapper}>\n                                                        <FormattedMessage\n                                                            id='Apis.Details.InfoBar.list.version'\n                                                            defaultMessage='Version'\n                                                        />\n                                                    </span>\n                                                </div>\n                                            </TableCell>\n                                            <TableCell>{api.version}</TableCell>\n                                        </TableRow>\n                                        <TableRow>\n                                            <TableCell component='th' role='rowheader'>\n                                                <div className={classes.iconAligner}>\n                                                    <Icon className={classes.iconOdd}>account_balance_wallet</Icon>\n                                                    <span className={classes.iconTextWrapper}>\n                                                        <FormattedMessage\n                                                            id='Apis.Details.InfoBar.list.context'\n                                                            defaultMessage='Context'\n                                                        />\n                                                    </span>\n                                                </div>\n                                            </TableCell>\n                                            <TableCell style={{ 'word-break' : 'break-all' }}>{api.context}</TableCell>\n                                        </TableRow>\n                                        <TableRow>\n                                            <TableCell component='th' role='rowheader'>\n                                                <div className={classes.iconAligner}>\n                                                    <Icon className={classes.iconOdd}>account_circle</Icon>\n                                                    <span className={classes.iconTextWrapper}>\n                                                        <FormattedMessage\n                                                            id='Apis.Details.InfoBar.provider'\n                                                            defaultMessage='Provider'\n                                                        />\n                                                    </span>\n                                                </div>\n                                            </TableCell>\n                                            <TableCell>{this.getProvider(api)} {this.getProviderMail(api)}</TableCell>\n                                        </TableRow>\n                                        <TableRow>\n                                            <TableCell component='th' role='rowheader'>\n                                                <div className={classes.iconAligner}>\n                                                    <Icon className={classes.iconOdd}>account_box</Icon>\n                                                    <span className={classes.iconTextWrapper}>\n                                                        <FormattedMessage\n                                                            id='Apis.Details.InfoBar.technical'\n                                                            defaultMessage='Technical Owner'\n                                                        />\n                                                    </span>\n                                                </div>\n                                            </TableCell>\n                                            <TableCell>{this.getTechnical(api)} {this.getTechnicalMail(api)}</TableCell>\n                                        </TableRow>\n                                        <TableRow>\n                                            <TableCell component='th' role='rowheader'>\n                                                <div className={classes.iconAligner}>\n                                                    <Icon className={classes.iconOdd}>vpn_key</Icon>\n                                                    <span className={classes.iconTextWrapper}>\n                                                        <FormattedMessage\n                                                            id='Apis.Details.InfoBar.keyManagers'\n                                                            defaultMessage='Key Managers'\n                                                        />\n                                                    </span>\n                                                </div>\n                                            </TableCell>\n                                            <TableCell>{this.getKeyManagers(api)}</TableCell>\n                                        </TableRow>\n                                        {/* <TableRow>\n                                                    <TableCell component='th' scope='row'>\n                                                        <div className={classes.iconAligner}>\n                                                            <Icon className={classes.iconEven}>update</Icon>\n                                                            <span className={classes.iconTextWrapper}>\n                                                                <FormattedMessage\n                                                                    id='Apis.Details.InfoBar.last.updated'\n                                                                    defaultMessage='Last updated'\n                                                                />\n                                                            </span>\n                                                        </div>\n                                                    </TableCell>\n                                                    <TableCell>21 May 2018</TableCell>\n                                                </TableRow> */}\n                                        {user && !api.advertiseInfo.advertised && showRating && (\n                                            <TableRow>\n                                                <TableCell component='th' role='rowheader'>\n                                                    <div className={classes.iconAligner}>\n                                                        <Grade className={classes.iconOdd} />\n                                                        <span className={classes.iconTextWrapper}>\n                                                            <FormattedMessage\n                                                                id='Apis.Details.InfoBar.list.context.rating'\n                                                                defaultMessage='Rating'\n                                                            />\n                                                        </span>\n                                                    </div>\n                                                </TableCell>\n                                                <TableCell>\n                                                    <StarRatingBar\n                                                        apiId={api.id}\n                                                        isEditable\n                                                        showSummary={false}\n                                                        setRatingUpdate={this.setRatingUpdate}\n                                                    />\n                                                </TableCell>\n                                            </TableRow>\n                                        )}\n                                        {api.type === 'GRAPHQL' && (\n                                            <TableRow>\n                                                <TableCell component='th' role='rowheader'>\n                                                    <div className={classes.iconAligner}>\n                                                        <Icon className={classes.iconOdd}>cloud_download</Icon>\n                                                        <span className={classes.iconTextWrapper}>\n                                                            <FormattedMessage\n                                                                id='Apis.Details.InfoBar.download.Schema'\n                                                                defaultMessage='Download Schema'\n                                                            />\n                                                        </span>\n                                                    </div>\n                                                </TableCell>\n                                                <TableCell>\n                                                    <Button\n                                                        onClick={this.getSchema}\n                                                        size='small'\n                                                        fontSize='small'\n                                                        variant='outlined'\n                                                    >\n                                                        <FormattedMessage\n                                                            id='Apis.Details.InfoBar.graphQL.schema'\n                                                            defaultMessage='GraphQL Schema'\n                                                        />\n                                                    </Button>\n                                                </TableCell>\n                                            </TableRow>\n                                        )}\n                                        {!api.advertiseInfo.advertised ? (\n                                            <>\n                                                <TableRow>\n                                                    <TableCell\n                                                        component='th'\n                                                        role='rowheader'\n                                                        className={classes.contentToTop}\n                                                    >\n                                                        <div className={classes.iconAligner}>\n                                                            <Icon className={classes.iconOdd}>desktop_windows</Icon>\n                                                            <span className={classes.iconTextWrapper}>\n                                                                <FormattedMessage\n                                                                    id='Apis.Details.InfoBar.gateway.environments'\n                                                                    defaultMessage='Gateway Environments'\n                                                                />\n                                                            </span>\n                                                        </div>\n                                                    </TableCell>\n                                                    <TableCell>\n                                                        <Environments />\n                                                    </TableCell>\n                                                </TableRow>\n                                                {api.labels.length !== 0 && (\n                                                    <TableRow>\n                                                        <TableCell\n                                                            component='th'\n                                                            role='rowheader'\n                                                            className={classes.contentToTop}\n                                                        >\n                                                            <div className={classes.iconAligner}>\n                                                                <Icon className={classes.iconOdd}>games</Icon>\n                                                                <span className={classes.iconTextWrapper}>\n                                                                    <FormattedMessage\n                                                                        id='Apis.Details.InfoBar.available.gLabels'\n                                                                        defaultMessage='Available Gateways'\n                                                                    />\n                                                                </span>\n                                                            </div>\n                                                        </TableCell>\n                                                        <TableCell>\n                                                            <Labels />\n                                                        </TableCell>\n                                                    </TableRow>\n                                                )}\n                                            </>\n                                        ) : (\n                                                <TableRow>\n                                                    <TableCell component='th' role='rowheader'>\n                                                        <div className={classes.iconAligner}>\n                                                            <Icon className={classes.iconOdd}>account_circle</Icon>\n                                                            <span className={classes.iconTextWrapper}>\n                                                                <FormattedMessage\n                                                                    id='Apis.Details.InfoBar.owner'\n                                                                    defaultMessage='Owner'\n                                                                />\n                                                            </span>\n                                                        </div>\n                                                    </TableCell>\n                                                    <TableCell>{api.advertiseInfo.apiOwner}</TableCell>\n                                                </TableRow>\n                                            )}\n                                        {apisTagsWithoutGroups && apisTagsWithoutGroups.length > 0 && (\n                                            <TableRow>\n                                                <TableCell component='th' role='rowheader'>\n                                                    <div className={classes.iconAligner}>\n                                                        <Icon className={classes.iconOdd}>bookmark</Icon>\n                                                        <span className={classes.iconTextWrapper}>\n                                                            <FormattedMessage\n                                                                id='Apis.Details.InfoBar.list.tags'\n                                                                defaultMessage='Tags'\n                                                            />\n                                                        </span>\n                                                    </div>\n                                                </TableCell>\n                                                <TableCell>\n                                                    {apisTagsWithoutGroups.map((tag) => (\n                                                        <Chip label={tag} className={classes.chip} key={tag} />\n                                                    ))}\n                                                </TableCell>\n                                            </TableRow>\n                                        )}\n                                        {additionalProperties__display && additionalProperties__display.length > 0 && (\n                                            additionalProperties__display.map((displayProp, index) => (\n                                                <TableRow>\n                                                    <TableCell component='th' role='rowheader'>\n                                                        <div className={classes.iconAligner}>\n                                                            <Icon className={classes.iconEven}>adjust</Icon>\n                                                            <span className={classes.iconTextWrapper}>\n                                                                {displayProp.split(propertyDisplaySuffix)[0]}\n                                                            </span>\n                                                        </div>\n                                                    </TableCell>\n                                                    <TableCell>\n                                                        {additionalProperties[displayProp]}\n                                                    </TableCell>\n                                                </TableRow>))\n                                        )}\n                                    </TableBody>\n                                </Table>\n                            </div>\n                        </div>\n                    </Collapse>\n                )}\n                <div className={classes.infoContentBottom}>\n                    <Button className={classes.expandWrapper} onClick={this.toggleOverview}>\n                        <div className={classes.buttonView}>\n                            {showOverview ? (\n                                <Typography className={classes.buttonOverviewText}>\n                                    <FormattedMessage id='Apis.Details.InfoBar.less' defaultMessage='LESS' />\n                                </Typography>\n                            ) : (\n                                    <Typography className={classes.buttonOverviewText}>\n                                        <FormattedMessage id='Apis.Details.InfoBar.more' defaultMessage='MORE' />\n                                    </Typography>\n                                )}\n                            {showOverview ? <Icon>arrow_drop_up</Icon> : <Icon>arrow_drop_down</Icon>}\n                        </div>\n                    </Button>\n                </div>\n            </div>\n        );\n    }\n}\nInfoBar.defaultProps = {\n    classes: {\n        leftMenu: {},\n        leftMenuHorizontal: {},\n        leftMenuVerticalLeft: {},\n        leftMenuVerticalRight: {},\n        leftLInkMain: {},\n        leftLInkMainText: {},\n        detailsContent: {},\n        content: {},\n        contentLoader: {},\n        contentLoaderRightMenu: {},\n    },\n};\nInfoBar.propTypes = {\n    classes: PropTypes.shape({}),\n    theme: PropTypes.object.isRequired,\n    intl: PropTypes.shape({\n        formatMessage: PropTypes.func,\n    }).isRequired,\n};\n\nInfoBar.contextType = ApiContext;\n\nexport default injectIntl(withRouter(withStyles(styles, { withTheme: true })(InfoBar)));\n","import React, { useContext } from 'react';\nimport Button from '@material-ui/core/Button';\nimport { FormattedMessage } from 'react-intl';\nimport { ApiContext } from 'AppComponents/Apis/Details/ApiContext';\nimport { Box } from '@material-ui/core';\nimport { useHistory } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nconst styles = {\n    button: {\n        mt: 2,\n        mr: 1,\n    },\n    wizardButtons: {\n        pl: 2,\n    },\n};\n\nconst ButtonPanel = (props) => {\n    const {\n        currentStep, handleCurrentStep, handleReset, nextActive,\n    } = props;\n    const stepsLength = 5;\n    const { api, updateSubscriptionData } = useContext(ApiContext);\n    const history = useHistory();\n\n    /**\n     * Redirect  to the API console page\n     */\n    const handleTest = () => {\n        history.push(`/apis/${api.id}/test`);\n    };\n\n    /**\n     * Redirect back to credentials page\n     */\n    const handleCancel = () => {\n        updateSubscriptionData(history.push('credentials'));\n    };\n\n    return (\n        <Box display='flex' {...styles.wizardButtons}>\n            {currentStep < stepsLength - 1 && (\n                <Box {...styles.button}>\n                    <Button\n                        onClick={handleCancel}\n                        variant='text'\n                    >\n                        <FormattedMessage\n                            id='Apis.Details.Credentials.Wizard.Wizard.Cancel'\n                            defaultMessage='CANCEL'\n                        />\n                    </Button>\n                </Box>\n            )}\n            {currentStep >= stepsLength - 1 && (\n                <Box {...styles.button}>\n                    <Button\n                        onClick={handleTest}\n                        {...styles.button}\n                        variant='outlined'\n                    >\n                        <FormattedMessage\n                            id='Apis.Details.Credentials.Wizard.Wizard.test'\n                            defaultMessage='Test'\n                        />\n                    </Button>\n                </Box>\n            )}\n            {currentStep >= stepsLength - 1 && (\n                <Box {...styles.button}>\n                    <Button\n                        variant='outlined'\n                        onClick={handleReset}\n                    >\n                        <FormattedMessage\n                            id='Apis.Details.Credentials.Wizard.Wizard.rest'\n                            defaultMessage='Reset'\n                        />\n                    </Button>\n                </Box>\n            )}\n            <Box {...styles.button}>\n                <Button\n                    variant='contained'\n                    color='primary'\n                    onClick={handleCurrentStep}\n                    disabled={!nextActive}\n                >\n                    {currentStep === stepsLength - 1\n                        ? (\n                            <FormattedMessage\n                                id='Apis.Details.Credentials.Wizard.Wizard.finish'\n                                defaultMessage='Finish'\n                            />\n                        )\n                        : (\n                            <FormattedMessage\n                                id='Apis.Details.Credentials.Wizard.Wizard.next'\n                                defaultMessage='Next'\n                            />\n                        )}\n                </Button>\n            </Box>\n        </Box>\n    );\n};\n\nButtonPanel.defaultProps = {\n    nextActive: true,\n};\n\nButtonPanel.propTypes = {\n    currentStep: PropTypes.func.isRequired,\n    handleCurrentStep: PropTypes.func.isRequired,\n    handleReset: PropTypes.func.isRequired,\n    nextActive: PropTypes.bool,\n};\n\nexport default ButtonPanel;\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useState, useEffect, useContext } from 'react';\nimport { Link } from 'react-router-dom';\nimport Box from '@material-ui/core/Box';\nimport Grid from '@material-ui/core/Grid';\nimport ApplicationCreateForm from 'AppComponents/Shared/AppsAndKeys/ApplicationCreateForm';\nimport API from 'AppData/api';\nimport Alert from 'AppComponents/Shared/Alert';\nimport cloneDeep from 'lodash.clonedeep';\nimport { injectIntl, FormattedMessage } from 'react-intl';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport InlineMessage from 'AppComponents/Shared/InlineMessage'\nimport { ApiContext } from 'AppComponents/Apis/Details/ApiContext';\nimport ButtonPanel from './ButtonPanel';\n\nconst useStyles = makeStyles((theme) => ({\n    appCreateFormWrapper: {\n        paddingLeft: theme.spacing(2),\n    },\n    warningIcon: {\n        color: '#ff9a00',\n        fontSize: 43,\n        marginRight: 10,\n    },\n}));\n\nconst createAppStep = (props) => {\n    const APPLICATION_STATES = {\n        CREATED: 'CREATED',\n        APPROVED: 'APPROVED',\n        REJECTED: 'REJECTED',\n    };\n    const [throttlingPolicyList, setThrottlingPolicyList] = useState([]);\n    const [applicationRequest, setApplicationRequest] = useState({\n        name: '',\n        throttlingPolicy: '',\n        description: '',\n        tokenType: 'JWT',\n        groups: null,\n        attributes: {},\n    });\n    const [isNameValid, setIsNameValid] = useState(true);\n    const [allAppAttributes, setAllAppAttributes] = useState(null);\n    const [notFound, setNotFound] = useState(false);\n    const [hasValidKM, setHasValidKM] = useState(null);\n    const {\n        currentStep, setCreatedApp, incrementStep, intl, setStepStatus, stepStatuses,\n    } = props;\n    const { api: apiObject } = useContext(ApiContext);\n\n    const validateName = (value) => {\n        if (!value || value.trim() === '') {\n            setIsNameValid({ isNameValid: false });\n            return Promise.reject(new Error(intl.formatMessage({\n                defaultMessage: 'Application name is required',\n                id: 'Apis.Details.Credentials.Wizard.CreateAppStep.application.name.is.required',\n            })));\n        }\n        setIsNameValid({ isNameValid: true });\n        return Promise.resolve(true);\n    };\n\n    /**\n     * @param {object} name application attribute name\n     * @returns {void}\n     * @memberof ApplicationFormHandler\n     */\n    const isRequiredAttribute = (name) => {\n        if (allAppAttributes) {\n            for (let i = 0; i < allAppAttributes.length; i++) {\n                if (allAppAttributes[i].attribute === name) {\n                    return allAppAttributes[i].required === 'true';\n                }\n            }\n        }\n        return false;\n    };\n\n    /**\n     * @param {object} name application attribute name\n     * @returns {Object} attribute value\n     * @memberof ApplicationFormHandler\n     */\n    const getAttributeValue = (name) => {\n        return applicationRequest.attributes[name];\n    };\n\n    const createApplication = () => {\n        const api = new API();\n        if (!applicationRequest.name || applicationRequest.name.trim() === '') {\n            Alert.error(intl.formatMessage({\n                defaultMessage: 'Application name is required',\n                id: 'Apis.Details.Credentials.Wizard.CreateAppStep.application.name.is.required',\n            }));\n            return;\n        }\n        api.createApplication(applicationRequest)\n            .then((response) => {\n                const data = response.body;\n                if (data.status === APPLICATION_STATES.APPROVED) {\n                    const appCreated = { value: data.applicationId, label: data.name };\n                    console.log('Application created successfully.');\n                    setCreatedApp(appCreated);\n                    incrementStep();\n                    setStepStatus(stepStatuses.PROCEED);\n                } else {\n                    setStepStatus(stepStatuses.BLOCKED);\n                }\n            })\n            .catch((error) => {\n                const { response } = error;\n                if (response && response.body) {\n                    const message = response.body.description || intl.formatMessage({\n                        defaultMessage: 'Error while creating the application',\n                        id: 'Apis.Details.Credentials.Wizard.CreateAppStep.error.while.creating.the.application',\n                    });\n                    Alert.error(message);\n                } else {\n                    Alert.error(error.message);\n                }\n                console.error('Error while creating the application');\n            });\n    };\n\n    /**\n     * @param {object} name application attribute name\n     * @returns {void}\n     * @memberof ApplicationFormHandler\n     */\n    const handleAttributesChange = (name) => (event) => {\n        const newApplicationRequest = cloneDeep(applicationRequest);\n        newApplicationRequest.attributes[name] = event.target.value;\n        setApplicationRequest(newApplicationRequest);\n    };\n\n    /**\n     * add a new group function\n     * @param {*} chip newly added group\n     * @param {*} appGroups already existing groups\n     */\n    const handleAddChip = (chip, appGroups) => {\n        const newRequest = { ...applicationRequest };\n        let values = appGroups || [];\n        values = values.slice();\n        values.push(chip);\n        newRequest.groups = values;\n        setApplicationRequest(newRequest);\n    };\n\n    /**\n     * remove a group from already existing groups function\n     * @param {*} chip selected group to be removed\n     * @param {*} index selected group index to be removed\n     * @param {*} appGroups already existing groups\n     */\n    const handleDeleteChip = (chip, index, appGroups) => {\n        const newRequest = { ...applicationRequest };\n        let values = appGroups || [];\n        values = values.filter((v) => v !== chip);\n        newRequest.groups = values;\n        setApplicationRequest(newRequest);\n    };\n\n    useEffect(() => {\n        // Get all the tiers to populate the drop down.\n        const api = new API();\n        const promiseTiers = api.getAllTiers('application');\n        const promisedAttributes = api.getAllApplicationAttributes();\n        const promisedKeyManagers = api.getKeyManagers();\n\n        Promise.all([promiseTiers, promisedAttributes, promisedKeyManagers])\n            .then((response) => {\n                const [tierResponse, allAttributes, keyManagers] = response;\n                const throttlingPolicyListLocal = tierResponse.body.list.map((item) => item.name);\n                const newRequest = { ...applicationRequest };\n                if (throttlingPolicyListLocal.length > 0) {\n                    [newRequest.throttlingPolicy] = throttlingPolicyListLocal;\n                }\n                const allAppAttr = [];\n                allAttributes.body.list.map((item) => allAppAttr.push(item));\n                if (allAttributes.length > 0) {\n                    newRequest.attributes = allAppAttr.filter((item) => !item.hidden);\n                }\n                // Selecting the resident key manager\n                const responseKeyManagerList = [];\n                keyManagers.body.list.map((item) => responseKeyManagerList.push(item));\n\n                let hasValidKM;\n                if (responseKeyManagerList.length > 0) {\n                    const responseKeyManagerList_default = responseKeyManagerList.filter(x => x.name === 'Resident Key Manager' && x.enabled);\n                    hasValidKM = responseKeyManagerList_default.length !== 0;\n                }\n                setHasValidKM(hasValidKM);\n                setApplicationRequest(newRequest);\n                setThrottlingPolicyList(throttlingPolicyListLocal);\n                setAllAppAttributes(allAppAttr);\n            })\n            .catch((error) => {\n                if (process.env.NODE_ENV !== 'production') {\n                    console.log(error);\n                }\n                const { status } = error;\n                if (status === 404) {\n                    setNotFound(true);\n                }\n            });\n    }, []);\n\n    const classes = useStyles();\n    if (!hasValidKM) {\n        return (\n            <Box mb={1} ml={4}>\n                <InlineMessage type='warn'>\n                        <FormattedMessage\n                            id='Apis.Details.Credentials.Wizard.CreateAppStep.default.km.msg'\n                            defaultMessage={'Wizard is only accessible via the Resident Key Manager.'\n                                + 'But the Resident Key Manager is disabled at the moment.'}\n                        />\n                </InlineMessage>\n                <Box mt={2}>\n                    <Link to={`/apis/${apiObject.id}/credentials`}>\n                        <Button variant=\"contained\"><FormattedMessage\n                            id='Apis.Details.Credentials.Wizard.CreateAppStep.cancel'\n                            defaultMessage='Cancel'\n                        /></Button>\n                    </Link>\n                </Box>\n            </Box>);\n    }\n\n    return (\n        <div className={classes.appCreateFormWrapper}>\n            <Box px={2} display='flex' justifyContent='flex-start'>\n                <Grid item xs={10} md={6}>\n                    <ApplicationCreateForm\n                        throttlingPolicyList={throttlingPolicyList}\n                        applicationRequest={applicationRequest}\n                        updateApplicationRequest={setApplicationRequest}\n                        validateName={validateName}\n                        isNameValid={isNameValid}\n                        allAppAttributes={allAppAttributes}\n                        handleAttributesChange={handleAttributesChange}\n                        isRequiredAttribute={isRequiredAttribute}\n                        getAttributeValue={getAttributeValue}\n                        handleDeleteChip={handleDeleteChip}\n                        handleAddChip={handleAddChip}\n                    />\n                </Grid>\n            </Box>\n            <ButtonPanel\n                classes={classes}\n                currentStep={currentStep}\n                handleCurrentStep={createApplication}\n            />\n        </div>\n    );\n};\n\nexport default injectIntl(createAppStep);\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useState, useEffect, useContext } from 'react';\nimport SubscribeToApi from 'AppComponents/Shared/AppsAndKeys/SubscribeToApi';\nimport Alert from 'AppComponents/Shared/Alert';\nimport API from 'AppData/api';\nimport { ApiContext } from 'AppComponents/Apis/Details/ApiContext';\nimport { injectIntl } from 'react-intl';\nimport ButtonPanel from './ButtonPanel';\n\nconst subscribeToAppStep = (props) => {\n    const SUBSCRIPTION_STATES = {\n        ON_HOLD: 'ON_HOLD',\n        UNBLOCKED: 'UNBLOCKED',\n        REJECTED: 'REJECTED',\n    };\n    const [subscriptionRequest, setApplicationRequest] = useState({\n        applicationId: '',\n        apiId: '',\n        throttlingPolicy: '',\n    });\n    const { api: apiObject } = useContext(ApiContext);\n    const [newApp, setNewApp] = useState(null);\n    const [throttlingPolicyList] = useState(apiObject.tiers);\n    const {\n        currentStep, createdApp, incrementStep, intl, setStepStatus,\n        stepStatuses, classes,\n    } = props;\n    const subscribeToApplication = () => {\n        const api = new API();\n        api.subscribe(\n            subscriptionRequest.apiId, subscriptionRequest.applicationId,\n            subscriptionRequest.throttlingPolicy,\n        )\n            .then((response) => {\n                if (response.body.status === SUBSCRIPTION_STATES.UNBLOCKED) {\n                    console.log('Subscription created successfully with ID : ' + response.body.subscriptionId);\n                    Alert.info(intl.formatMessage({\n                        defaultMessage: 'Subscribed successfully',\n                        id: 'Apis.Details.Credentials.Wizard.SubscribeToAppStep.subscribed.successfully',\n                    }));\n                    incrementStep();\n                    setStepStatus(stepStatuses.PROCEED);\n                } else {\n                    setStepStatus(stepStatuses.BLOCKED);\n                }\n            })\n            .catch((error) => {\n                console.log('Error while creating the subscription.');\n                console.error(error);\n            });\n    };\n\n    useEffect(() => {\n        const newSubscriptionRequest = { ...subscriptionRequest, apiId: apiObject.id };\n        if (throttlingPolicyList) {\n            const [tierData] = throttlingPolicyList;\n            newSubscriptionRequest.throttlingPolicy = tierData.tierName;\n        }\n        if (createdApp) {\n            newSubscriptionRequest.applicationId = createdApp.value;\n        }\n        setApplicationRequest(newSubscriptionRequest);\n        setNewApp(createdApp);\n    }, [createdApp]);\n\n    return (\n        <>\n            <SubscribeToApi\n                throttlingPolicyList={throttlingPolicyList}\n                applicationsAvailable={[newApp]}\n                subscriptionRequest={subscriptionRequest}\n                updateSubscriptionRequest={setApplicationRequest}\n            />\n            <ButtonPanel\n                classes={classes}\n                currentStep={currentStep}\n                handleCurrentStep={subscribeToApplication}\n            />\n        </>\n    );\n};\n\nexport default injectIntl(subscribeToAppStep);\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableRow from '@material-ui/core/TableRow';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport Alert from 'AppComponents/Shared/Alert';\nimport Application from 'AppData/Application';\nimport API from 'AppData/api';\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport { makeStyles } from '@material-ui/core/styles';\nimport cloneDeep from 'lodash.clonedeep';\nimport ButtonPanel from './ButtonPanel';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport Typography from '@material-ui/core/Typography';\nimport Settings from 'Settings';\n\nconst useStyles = makeStyles((theme) => ({\n    keyConfigWrapper: {\n        paddingLeft: theme.spacing(4),\n        flexDirection: 'column',\n    },\n    radioWrapper: {\n        flexDirection: 'row',\n    },\n    paper: {\n        background: 'none',\n        marginBottom: theme.spacing(2),\n        marginTop: theme.spacing(2),\n    },\n    subTitle: {\n        fontWeight: 400,\n    },\n    tabPanel: {\n        '& .MuiBox-root': {\n            padding: 0,\n        }\n    },\n    hr: {\n        border: 'solid 1px #efefef',\n    },\n    muiFormGroupRoot: {\n        flexDirection: 'row',\n    },\n    table: {\n        minWidth: '100%',\n        '& td, & th': {\n            padding: theme.spacing(),\n        }\n    },\n    leftCol: {\n        width: 200,\n    },\n    iconAligner: {\n        display: 'flex',\n        justifyContent: 'flex-start',\n        alignItems: 'center',\n    },\n}));\n\nfunction TabPanel(props) {\n    const { children, value, index, ...other } = props;\n\n    return (\n        <div\n            role=\"tabpanel\"\n            hidden={value !== index}\n            id={`nav-tabpanel-${index}`}\n            aria-labelledby={`nav-tab-${index}`}\n            {...other}\n        >\n            {value === index && (\n                <>{children}</>\n            )}\n        </div>\n    );\n};\n\nTabPanel.propTypes = {\n    children: PropTypes.node,\n    index: PropTypes.any.isRequired,\n    value: PropTypes.any.isRequired,\n};\n\nconst generateKeysStep = (props) => {\n    const intl = useIntl();\n\n    const keyStates = {\n        COMPLETED: 'COMPLETED',\n        APPROVED: 'APPROVED',\n        CREATED: 'CREATED',\n        REJECTED: 'REJECTED',\n    };\n    const [selectedType, setSelectedType] = useState('PRODUCTION');\n    const [nextActive, setNextActive] = useState(true);\n    const [isUserOwner, setIsUserOwner] = useState(false);\n    const [keyManager, setKeyManager] = useState(null);\n    const [selectedTab, setSelectedTab] = useState('Resident Key Manager');\n\n    const [keyRequest, setKeyRequest] = useState({\n        keyType: 'SANDBOX',\n        supportedGrantTypes: [],\n        callbackUrl: '',\n        additionalProperties: {},\n        keyManager: '',\n    });\n\n    const {\n        currentStep, createdApp, incrementStep, setCreatedKeyType,\n        setStepStatus, stepStatuses, setCreatedSelectedTab\n    } = props;\n\n    /**\n    * @param {*} event event\n    * @param {*} currentTab current tab\n    * @memberof Wizard\n    */\n    const handleRadioChange = (event) => {\n        const newKeyType = event.target.value;\n        setSelectedType(newKeyType);\n        const newKeyRequest = cloneDeep(keyRequest);\n        newKeyRequest.keyType = newKeyType;\n        setKeyRequest(newKeyRequest);\n    };\n\n    /**\n    * @param {*} event event\n    * @param {*} currentTab current tab\n    * @memberof Wizard\n    */\n    const handleTabChange = (event, newSelectedTab) => {\n        setSelectedTab(newSelectedTab);\n    };\n\n    useEffect(() => {\n        setIsUserOwner(true);\n        const api = new API();\n        const promisedKeyManagers = api.getKeyManagers();\n        promisedKeyManagers\n            .then((response) => {\n                const responseKeyManagerList = [];\n                response.body.list.map((item) => responseKeyManagerList.push(item));\n\n                // Selecting a key manager from the list of key managers.\n                let selectedKeyManager;\n                if (responseKeyManagerList.length > 0) {\n                    const responseKeyManagerList_default = responseKeyManagerList.filter(x => x.name === 'Resident Key Manager');\n                    selectedKeyManager = responseKeyManagerList_default.length > 0 ? responseKeyManagerList_default[0]\n                        : responseKeyManagerList[0];\n                }\n                setKeyManager(selectedKeyManager);\n\n                // Setting key request\n                try {\n                    const newKeyRequest = { ...keyRequest };\n                    newKeyRequest.keyManager = selectedKeyManager.id;\n                    newKeyRequest.supportedGrantTypes = selectedKeyManager.availableGrantTypes;\n                    if (selectedKeyManager.availableGrantTypes.includes('implicit')\n                        || selectedKeyManager.availableGrantTypes.includes('authorization_code')) {\n                        newKeyRequest.callbackUrl = 'http://localhost';\n                    }\n                    if (!selectedKeyManager.availableGrantTypes.includes('client_credentials')) {\n                        setNextActive(false);\n                    }\n                    setKeyRequest(newKeyRequest);\n                } catch (e) {\n                    Alert.error(intl.formatMessage({\n                        id: 'Apis.Details.Credentials.Wizard.GenerateKeysStep.error.keymanager',\n                        defaultMessage: 'Error while selecting the key manager',\n                    }));\n                }\n\n            })\n            .catch((error) => {\n                if (process.env.NODE_ENV !== 'production') {\n                    console.log(error);\n                }\n            });\n    }, []);\n\n    const generateKeys = () => {\n        Application.get(createdApp.value).then((application) => {\n            return application.generateKeys(\n                keyRequest.keyType, keyRequest.supportedGrantTypes,\n                keyRequest.callbackUrl,\n                keyRequest.additionalProperties, keyRequest.keyManager\n            );\n        }).then((response) => {\n            if (response.keyState === keyStates.CREATED || response.keyState === keyStates.REJECTED) {\n                setStepStatus(stepStatuses.BLOCKED);\n            } else {\n                incrementStep();\n                setCreatedKeyType(keyRequest.keyType);\n                setCreatedSelectedTab(selectedTab);\n                setStepStatus(stepStatuses.PROCEED);\n                console.log('Keys generated successfully with ID : ' + response);\n            }\n        }).catch((error) => {\n            if (process.env.NODE_ENV !== 'production') {\n                console.log(error);\n            }\n            const { status } = error;\n            if (status === 404) {\n                setNotFound(true);\n            }\n        });\n    };\n    \n    const classes = useStyles();\n\n    return (\n        <>\n            <Box component='div' marginLeft={4}>\n                <Grid container spacing={2}>\n                    {keyManager && (<>\n                        <Grid item xs={12} md={12} lg={3}>\n                            <Typography color='inherit' variant='subtitle2' component='div'>\n                                <FormattedMessage\n                                    defaultMessage='Key Configuration'\n                                    id='Apis.Details.Credentials.Wizard.GenerateKeysStep.key.configuration'\n                                />\n                            </Typography>\n                            <Typography color='inherit' variant='caption' component='p'>\n                                <FormHelperText><FormattedMessage\n                                    defaultMessage={'These configurations are set for the purpose of the wizard.' +\n                                        'You have more control over them when you go to the application view. '}\n                                    id='Apis.Details.Credentials.Wizard.GenerateKeysStep.key.configuration.help'\n                                /></FormHelperText>\n\n                            </Typography>\n                        </Grid>\n                        <Grid item xs={12} md={12} lg={9}>\n                            <Table className={classes.table}>\n                                <TableBody>\n                                    <TableRow>\n                                        <TableCell component='th' scope='row' className={classes.leftCol}>\n                                            <FormattedMessage\n                                                id='Apis.Details.Credentials.Wizard.GenerateKeysStep.config.km.name'\n                                                defaultMessage='Key Manager'\n                                            />\n                                        </TableCell>\n                                        <TableCell>\n                                            <div>{keyManager.displayName || keyManager.name}</div>\n                                            <Typography variant=\"caption\" component='div'>{keyManager.description}</Typography>\n                                        </TableCell>\n                                    </TableRow>\n                                    <TableRow>\n                                        <TableCell component='th' scope='row' className={classes.leftCol}>\n                                            <FormattedMessage\n                                                id='Apis.Details.Credentials.Wizard.GenerateKeysStep.list.environment'\n                                                defaultMessage='Environment'\n                                            />\n                                        </TableCell>\n                                        <TableCell>Sandbox</TableCell>\n                                    </TableRow>\n                                    <TableRow>\n                                        <TableCell component='th' scope='row' className={classes.leftCol}>\n                                            <FormattedMessage\n                                                id='Apis.Details.Credentials.Wizard.GenerateKeysStep.list.tokenEndpoint'\n                                                defaultMessage='Token Endpoint'\n                                            />\n                                        </TableCell>\n                                        <TableCell>{keyManager.additionalProperties['sandbox_token_endpoint'] || keyManager.tokenEndpoint}</TableCell>\n                                    </TableRow>\n                                    <TableRow>\n                                        <TableCell component='th' scope='row' className={classes.leftCol}>\n                                            <FormattedMessage\n                                                id='Apis.Details.Credentials.Wizard.GenerateKeysStep.list.revokeEndpoint'\n                                                defaultMessage='Revoke Endpoint'\n                                            />\n                                        </TableCell>\n                                        <TableCell>{keyManager.additionalProperties['sandbox_revoke_endpoint'] || keyManager.revokeEndpoint}</TableCell>\n                                    </TableRow>\n                                    <TableRow>\n                                        <TableCell component='th' scope='row' className={classes.leftCol}>\n                                            <FormattedMessage\n                                                id='Apis.Details.Credentials.Wizard.GenerateKeysStep.list.userInfoEndpoint'\n                                                defaultMessage='User Info Endpoint'\n                                            />\n                                        </TableCell>\n                                        <TableCell>{keyManager.userInfoEndpoint}</TableCell>\n                                    </TableRow>\n                                    <TableRow>\n                                        <TableCell component='th' scope='row' className={classes.leftCol}>\n                                            <FormattedMessage\n                                                id='Apis.Details.Credentials.Wizard.GenerateKeysStep.list.grantTypes'\n                                                defaultMessage='Grant Types'\n                                            />\n                                        </TableCell>\n                                        <TableCell>{keyManager.availableGrantTypes.map(gt => (<span>{Settings.grantTypes[gt] || gt}, </span>))}</TableCell>\n                                    </TableRow>\n                                </TableBody>\n                            </Table>\n                        </Grid>\n                    </>)}\n                </Grid>\n                <Grid container spacing={2}>\n                    <Grid item xs={12}>\n                        <Box component='span' m={1}>\n                            <ButtonPanel\n                                classes={classes}\n                                currentStep={currentStep}\n                                handleCurrentStep={generateKeys}\n                                nextActive={nextActive}\n                            />\n                        </Box>\n\n                    </Grid>\n                </Grid>\n            </Box>\n        </>\n    );\n};\n\nexport default generateKeysStep;\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useState, useEffect } from 'react';\nimport Tokens from 'AppComponents/Shared/AppsAndKeys/Tokens';\nimport Application from 'AppData/Application';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { injectIntl, defineMessages } from 'react-intl';\nimport Typography from '@material-ui/core/Typography';\nimport ButtonPanel from './ButtonPanel';\n\nconst useStyles = makeStyles((theme) => ({\n    tokenWrapper: {\n        paddingLeft: theme.spacing(3),\n        paddingRight: theme.spacing(7),\n    },\n    title: {\n        paddingLeft: theme.spacing(2),\n    },\n}));\n\nconst generateAccessTokenStep = (props) => {\n    const [keyType, setKeyType] = useState('PRODUCTION');\n    const [selectedTab, setSelectedTab] = useState('Resident Key Manager');\n    const [subscriptionScopes, setSubscriptionScopes] = useState([]);\n    const [notFound, setNotFound] = useState(false);\n\n    const [accessTokenRequest, setAccessTokenRequest] = useState({\n        timeout: 3600,\n        scopesSelected: [],\n        keyType: '',\n    });\n    const {\n        currentStep, createdApp, setCreatedToken, incrementStep, createdKeyType, intl, createdSelectedTab\n    } = props;\n\n    useEffect(() => {\n        const newRequest = { ...accessTokenRequest, keyType: createdKeyType };\n        setKeyType(createdKeyType);\n        setSelectedTab(createdSelectedTab);\n        setAccessTokenRequest(newRequest);\n    }, [createdKeyType,createdSelectedTab]);\n\n    useEffect(() => {\n        Application.get(createdApp.value)\n            .then((application) => {\n                application.getKeys().then(() => {\n                    const subscriptionScopesList = application.subscriptionScopes\n                        .map((scope) => { return scope.key; });\n                    setSubscriptionScopes(subscriptionScopesList);\n                });\n            }).catch((error) => {\n                if (process.env.NODE_ENV !== 'production') {\n                    console.error(error);\n                }\n                const { status } = error;\n                if (status === 404) {\n                    setNotFound(true);\n                }\n            });\n    }, []);\n\n    const generateAccessToken = () => {\n        setSelectedTab(createdSelectedTab);\n        Application.get(createdApp.value)\n            .then((application) => {\n                return application.generateToken(\n                    selectedTab,\n                    accessTokenRequest.keyType,\n                    accessTokenRequest.timeout,\n                    accessTokenRequest.scopesSelected,\n                );\n            })\n            .then((response) => {\n                console.log('token generated successfully ' + response);\n                setCreatedToken(response);\n                incrementStep();\n            })\n            .catch((error) => {\n                if (process.env.NODE_ENV !== 'production') {\n                    console.error(error);\n                }\n                const { status } = error;\n                if (status === 404) {\n                    setNotFound(true);\n                }\n            });\n    };\n    const classes = useStyles();\n    const messages = defineMessages({\n        dataInfo: {\n            id: 'Apis.Details.Credentials.Wizard.GenerateAccessTokenStep',\n            defaultMessage: 'Generate Access Token for {keyType} environment',\n        },\n    });\n\n    return (\n        <>\n            <div className={classes.tokenWrapper}>\n                <Typography variant='subtitle1' component='div' className={classes.title}>\n                    {intl.formatMessage(messages.dataInfo, { keyType })}\n                </Typography>\n                <Tokens\n                    updateAccessTokenRequest={setAccessTokenRequest}\n                    accessTokenRequest={accessTokenRequest}\n                    subscriptionScopes={subscriptionScopes}\n                />\n                <ButtonPanel\n                    classes={classes}\n                    currentStep={currentStep}\n                    handleCurrentStep={generateAccessToken}\n                />\n            </div>\n        </>\n    );\n};\n\nexport default injectIntl(generateAccessTokenStep);\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useContext } from 'react';\nimport ViewToken from 'AppComponents/Shared/AppsAndKeys/ViewToken';\nimport { ApiContext } from 'AppComponents/Apis/Details/ApiContext';\nimport { Box } from '@material-ui/core';\nimport Grid from '@material-ui/core/Grid';\nimport { useHistory } from 'react-router-dom';\nimport { makeStyles } from '@material-ui/core/styles';\nimport ButtonPanel from './ButtonPanel';\n\nconst useStyles = makeStyles((theme) => ({\n    tokenWrapper: {\n        paddingLeft: theme.spacing(2),\n    },\n}));\n\nconst copyAccessTokenStep = (props) => {\n    const {\n        currentStep, createdToken, handleReset, handleRedirectTest,\n    } = props;\n    const history = useHistory();\n    const { api, updateSubscriptionData } = useContext(ApiContext);\n    const completeStep = () => {\n        updateSubscriptionData(history.push(`/apis/${api.id}/credentials`));\n    };\n    const classes = useStyles();\n\n    return (\n        <div className={classes.tokenWrapper}>\n            <Grid md={10}>\n                <Box my={1} mx={2}>\n                    <ViewToken token={{ ...createdToken, isOauth: true }} />\n                </Box>\n            </Grid>\n            <ButtonPanel\n                classes={classes}\n                currentStep={currentStep}\n                handleCurrentStep={completeStep}\n                handleReset={handleReset}\n            />\n        </div>\n    );\n};\n\nexport default copyAccessTokenStep;\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Grid from '@material-ui/core/Grid';\nimport { Typography, Paper, Box } from '@material-ui/core';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport { withStyles } from '@material-ui/core/styles';\nimport CreateAppStep from './CreateAppStep';\nimport SubscribeToAppStep from './SubscribeToAppStep';\nimport GenerateKeysStep from './GenerateKeysStep';\nimport GenerateAccessTokenStep from './GenerateAccessTokenStep';\nimport CopyAccessTokenStep from './CopyAccessTokenStep';\n\nconst styles = (theme) => ({\n    paper: {\n        marginLeft: theme.spacing(3),\n    },\n    titleSub: {\n        marginLeft: theme.spacing(3),\n        paddingTop: theme.spacing(2),\n        paddingBottom: theme.spacing(2),\n        color: theme.palette.getContrastText(theme.palette.background.default),\n    },\n    boxWrapper: {\n        '& h5, & label, & td, & li, & div, & input, & p.MuiFormHelperText-root': {\n            color: theme.palette.getContrastText(theme.palette.background.paper),\n        },\n        '& .MuiButton-containedPrimary span.MuiButton-label' : {\n            color: theme.palette.getContrastText(theme.palette.primary.main),\n        }\n    }\n    \n});\n\nconst stepComponents = [CreateAppStep, SubscribeToAppStep, GenerateKeysStep,\n    GenerateAccessTokenStep, CopyAccessTokenStep];\n\n/**\n * Class used for wizard\n */\nclass Wizard extends Component {\n    /**\n     * @param {*} props properties\n     */\n    constructor(props) {\n        super(props);\n        const { intl } = this.props;\n        this.steps = [\n            intl.formatMessage({\n                defaultMessage: 'Create application',\n                id: 'Apis.Details.Credentials.Wizard.Wizard.create',\n            }),\n            intl.formatMessage({\n                defaultMessage: 'Subscribe to new application',\n                id: 'Apis.Details.Credentials.Wizard.Wizard.subscribe.to.new.application',\n            }),\n            intl.formatMessage({\n                defaultMessage: 'Generate Keys',\n                id: 'Apis.Details.Credentials.Wizard.Wizard.generate.keys',\n            }),\n            intl.formatMessage({\n                defaultMessage: 'Generate Access Token',\n                id: 'Apis.Details.Credentials.Wizard.Wizard.generate.access.token',\n            }),\n            intl.formatMessage({\n                defaultMessage: 'Copy Access Token',\n                id: 'Apis.Details.Credentials.Wizard.Wizard.copy.access.token',\n            }),\n        ];\n        this.stepStatuses = {\n            PROCEED: 'PROCEED',\n            BLOCKED: 'BLOCKED',\n        };\n        this.state = {\n            currentStep: 0,\n            createdApp: null,\n            createdToken: null,\n            redirect: false,\n            createdKeyType: '',\n            createdSelectedTab: '',\n            stepStatus: 'PROCEED',\n        };\n    }\n\n    /**\n     * Used to set the status retured after executing each step. Used in workflow\n     * scenario to evaluate wheather we can proceed to next step\n     * @param {*} stepStatus status\n     */\n    setStepStatus = (stepStatus) => {\n        this.setState({ stepStatus });\n    }\n\n    /**\n     * Set the created app from step 1\n     * @param {*} createdApp app created\n     */\n    setCreatedApp = (createdApp) => {\n        this.setState({ createdApp });\n    }\n\n    /**\n     * Set the created token from step 4\n     * @param {*} createdToken token created\n     */\n    setCreatedToken = (createdToken) => {\n        this.setState({ createdToken });\n    }\n\n    /**\n     * Set the created keytype from step 3\n     * @param {*} createdKeyType token created\n     */\n    setCreatedKeyType = (createdKeyType) => {\n        this.setState({ createdKeyType });\n    }\n\n    /**\n     * Set the created selectedTab from step 3\n     * @param {*} selectedTab token created\n     */\n    setCreatedSelectedTab = (createdSelectedTab) => {\n        this.setState({ createdSelectedTab });\n    }\n\n    /**\n     * Increment the current step or next step by 1\n     */\n    handleNext = () => {\n        this.setState(({ currentStep }) => {\n            return { currentStep: currentStep + 1 };\n        });\n    }\n\n    /**\n     * Rest the currentStep to 0 and bring wizard back to first step\n     * @memberof Wizard\n     */\n    handleReset = () => {\n        this.setState({\n            currentStep: 0,\n        });\n    };\n\n    /**\n     * @inheritdoc\n     */\n    render() {\n        const { classes } = this.props;\n        const { currentStep, stepStatus } = this.state;\n        const CurrentStepComponent = stepComponents[currentStep];\n        return (\n            <>\n                <Typography variant='h4' component='h2' className={classes.titleSub}>\n                    <FormattedMessage\n                        id={'Apis.Details.Credentials.Credentials'\n                    + '.api.credentials.generate'}\n                        defaultMessage='Subscription &amp; Key Generation Wizard'\n                    />\n                </Typography>\n                <Paper elevation={0} className={classes.paper}>\n                    <Box py={1} mx='auto' display='flex' >\n                        <Grid item xs={12} md={12}>\n                            <Stepper activeStep={currentStep}>\n                                {this.steps.map((label) => {\n                                    return (\n                                        <Step key={label}>\n                                            <StepLabel>{label}</StepLabel>\n                                        </Step>\n                                    );\n                                })}\n                            </Stepper>\n                        </Grid>\n                    </Box>\n                    <Box py={1} mx='auto' display='block' className={classes.boxWrapper}>\n                        {stepStatus === this.stepStatuses.PROCEED && (\n                            <>\n                                <CurrentStepComponent\n                                    {...this.state}\n                                    incrementStep={this.handleNext}\n                                    setStepStatus={this.setStepStatus}\n                                    stepStatuses={this.stepStatuses}\n                                    classes={classes}\n                                    setCreatedApp={this.setCreatedApp}\n                                    setCreatedKeyType={this.setCreatedKeyType}\n                                    setCreatedSelectedTab={this.setCreatedSelectedTab}\n                                    setCreatedToken={this.setCreatedToken}\n                                    handleReset={this.handleReset}\n                                />\n                            </>\n                        )}\n                    </Box>\n                    <Box py={1} mb={1} mx='auto' display='flex' >\n                        {stepStatus === this.stepStatuses.BLOCKED && (\n                            <Box pt={2} px={3} display='flex' >\n                                <Typography variant='h5'>\n                                    <FormattedMessage\n                                        id={'Apis.Details.Credentials.Wizard.Wizard.approval.request.'\n                                                + 'for.this.step.has'}\n                                        defaultMessage='A request to register this step has been sent.'\n                                    />\n                                </Typography>\n                            </Box>\n                        )}\n                    </Box>\n                </Paper>\n            </>\n        );\n    }\n}\n\nWizard.propTypes = {\n    classes: PropTypes.shape({\n        appBar: PropTypes.string,\n        toolbar: PropTypes.string,\n        subscribeTitle: PropTypes.string,\n        plainContent: PropTypes.string,\n        root: PropTypes.string,\n        instructions: PropTypes.string,\n        button: PropTypes.string,\n        wizardContent: PropTypes.string,\n    }).isRequired,\n    intl: PropTypes.func.isRequired,\n    throttlingPolicyList: PropTypes.arrayOf(PropTypes.string).isRequired,\n};\n\nexport default injectIntl(withStyles(styles)(Wizard));\n","/* eslint-disable react/jsx-props-no-spreading */\n/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { lazy, Suspense } from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\nimport ArrowForwardIosIcon from '@material-ui/icons/ArrowForwardIos';\nimport {\n    Route, Switch, Redirect, Link, withRouter,\n} from 'react-router-dom';\nimport Typography from '@material-ui/core/Typography';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport Api from 'AppData/api';\nimport AuthManager from 'AppData/AuthManager';\nimport withSettings from 'AppComponents/Shared/withSettingsContext';\nimport Alert from 'AppComponents/Shared/Alert';\nimport classNames from 'classnames';\nimport { Helmet } from 'react-helmet';\nimport { app } from 'Settings';\nimport CustomIcon from '../../Shared/CustomIcon';\nimport LeftMenuItem from '../../Shared/LeftMenuItem';\nimport { ResourceNotFound } from '../../Base/Errors/index';\nimport InfoBar from './InfoBar';\nimport { ApiContext } from './ApiContext';\nimport Progress from '../../Shared/Progress';\nimport Wizard from './Credentials/Wizard/Wizard';\nimport User from '../../../data/User';\n\n\nconst ApiConsole = lazy(() => import('./ApiConsole/ApiConsole' /* webpackChunkName: \"APIConsole\" */));\nconst GraphQLConsole = lazy(() => import('./GraphQLConsole/GraphQLConsole' /* webpackChunkName: \"GraphQLConsole\" */));\nconst Overview = lazy(() => import('./Overview' /* webpackChunkName: \"APIOverview\" */));\nconst Documents = lazy(() => import('./Documents/Documents' /* webpackChunkName: \"APIDocuments\" */));\nconst Credentials = lazy(() => import('./Credentials/Credentials' /* webpackChunkName: \"APICredentials\" */));\nconst Comments = lazy(() => import('./Comments/Comments' /* webpackChunkName: \"APIComments\" */));\nconst Sdk = lazy(() => import('./Sdk' /* webpackChunkName: \"APISdk\" */));\n\nconst LoadableSwitch = withRouter((props) => {\n    const { match, api } = props;\n    const apiUuid = match.params.apiUuid;\n    const path = '/apis/';\n    const { advertised } = api.advertiseInfo;\n    const redirectURL = path + apiUuid + '/overview';\n\n    let tryoutRoute;\n    if (api.type === 'GRAPHQL') {\n        tryoutRoute = <Route path='/apis/:apiUuid/test' component={GraphQLConsole} />\n    }else {\n        tryoutRoute = <Route path='/apis/:apiUuid/test' component={ApiConsole} />\n    }\n\n    return (\n        <Suspense fallback={<Progress />}>\n            <Switch>\n                <Redirect exact from='/apis/:apiUuid' to={redirectURL} />\n                <Route path='/apis/:apiUuid/overview' render={() => <Overview {...props} />} />\n                <Route path='/apis/:apiUuid/documents' component={Documents} />\n                <Route exact path='/apis/:apiUuid/credentials/wizard' component={Wizard} />\n                {!advertised && <Route path='/apis/:apiUuid/comments' component={Comments} />}\n                {!advertised && <Route path='/apis/:apiUuid/credentials' component={Credentials} />}\n                {!advertised && tryoutRoute}\n                {!advertised && <Route path='/apis/:apiUuid/sdk' component={Sdk} />}\n                <Route component={ResourceNotFound} />\n            </Switch>\n        </Suspense>\n    );\n});\n\n/**\n *\n * @returns style object\n * @param {*} theme\n */\nconst styles = (theme) => {\n    const {\n        custom: {\n            leftMenu: { width, position },\n        },\n    } = theme;\n    const shiftToLeft = position === 'vertical-left' ? width : 0;\n    const shiftToRight = position === 'vertical-right' ? width : 0;\n    const shiftToLeftMinView = position === 'vertical-left' ? 45 : 0;\n    const shiftToRightMinView = position === 'vertical-right' ? 45 : 0;\n    const leftMenuPaddingLeft = position === 'horizontal' ? theme.spacing(3) : 0;\n\n    return {\n        leftMenu: {\n            backgroundColor: theme.custom.leftMenu.background,\n            backgroundImage: `url(${app.context}${theme.custom.leftMenu.backgroundImage})`,\n            textAlign: 'left',\n            fontFamily: theme.typography.fontFamily,\n            position: 'absolute',\n            bottom: 0,\n            paddingLeft: leftMenuPaddingLeft,\n        },\n        leftMenuHorizontal: {\n            top: theme.custom.infoBar.height,\n            width: '100%',\n            overflowX: 'auto',\n            height: 60,\n            display: 'flex',\n            left: 0,\n        },\n        leftMenuVerticalLeft: {\n            width: theme.custom.leftMenu.width,\n            top: 0,\n            left: 0,\n            overflowY: 'auto', \n        },\n        leftMenuVerticalLeftMinView: {\n            width: 45,\n            top: 0,\n            left: 0,\n            overflowY: 'auto',  \n        },\n        leftMenuVerticalRight: {\n            width: theme.custom.leftMenu.width,\n            top: 0,\n            right: 0,\n            overflowY: 'auto',\n        },\n        leftLInkMain: {\n            borderRight: 'solid 1px ' + theme.custom.leftMenu.background,\n            cursor: 'pointer',\n            background: theme.custom.leftMenu.rootBackground,\n            color: theme.palette.getContrastText(theme.custom.leftMenu.rootBackground),\n            textDecoration: 'none',\n            alignItems: 'center',\n            justifyContent: 'center',\n            display: 'flex',\n            height: theme.custom.infoBar.height,\n            textDecoration: 'none',\n        },\n        leftLInkMainText: {\n            fontSize: 18,\n            color: theme.palette.grey[500],\n            textDecoration: 'none',\n            paddingLeft: theme.spacing(2),\n        },\n        detailsContent: {\n            display: 'flex',\n            flex: 1,\n        },\n        content: {\n            display: 'flex',\n            flex: 1,\n            flexGrow: 1,\n            flexDirection: 'column',\n            marginLeft: shiftToLeft,\n            marginRight: shiftToRight,\n            paddingBottom: theme.spacing(3),\n            overflowX: 'hidden',\n        },\n        contentExpandView: {\n            display: 'flex',\n            flex: 1,\n            flexGrow: 1,\n            flexDirection: 'column',\n            marginLeft: shiftToLeftMinView,\n            marginRight: shiftToRightMinView,\n            paddingBottom: theme.spacing(3),\n            overflowX: 'hidden', \n            minHeight: 'calc(100vh - 114px)',\n        },\n        shiftLeft: {\n            marginLeft: 0,\n        },\n        contentLoader: {\n            paddingTop: theme.spacing(3),\n        },\n        contentLoaderRightMenu: {\n            paddingRight: theme.custom.leftMenu.width,\n        },\n    };\n};\n/**\n *\n *\n * @class Details\n * @extends {React.Component}\n */\nclass Details extends React.Component {\n    /**\n     *Creates an instance of Details.\n     * @param {*} props\n     * @memberof Details\n     */\n    constructor(props) {\n        super(props);\n        /**\n         *\n         *\n         * @memberof Details\n         */\n        this.updateSubscriptionData = (callback) => {\n            let existingSubscriptions = null;\n            let promisedApplications = null;\n\n            const restApi = new Api();\n\n            // const subscriptionClient = new Subscription();\n            const promisedAPI = restApi.getAPIById(this.api_uuid);\n\n            promisedAPI\n                .then((api) => {\n                    this.setState({ api: api.body });\n                })\n                .catch((error) => {\n                    const { status, response } = error;\n                    const { setTenantDomain, intl } = this.props;\n\n                    const message = intl.formatMessage({\n                        defaultMessage: 'Invalid tenant domain',\n                        id: 'Apis.Details.index.invalid.tenant.domain',\n                    });\n                    if (response && response.body.code === 901300) {\n                        setTenantDomain('INVALID');\n                        Alert.error(message);\n                    }\n                    console.error('Error when getting apis', error);\n                    if (status === 404 || status === 403) {\n                        this.setState({ notFound: true });\n                    }\n                });\n            const user = AuthManager.getUser();\n            if(user === null){\n                const user1 = new User();\n                this.setState({open:user1.isSideBarOpen});\n            }\n            if (user != null) {\n                this.setState({open:user.isSideBarOpen});\n                existingSubscriptions = restApi.getSubscriptions(this.api_uuid, null);\n                const subscriptionLimit = Settings.app.subscribeApplicationLimit || 5000;\n                promisedApplications = restApi.getAllApplications(null, subscriptionLimit);\n\n                Promise.all([existingSubscriptions, promisedApplications])\n                    .then((response) => {\n                        const [subscriptions, applications] = response.map((data) => data.obj);\n                        const appIdToNameMapping = applications.list.reduce((acc, cur) => {\n                            acc[cur.applicationId] = cur.name;\n                            return acc;\n                        }, {});\n                        // get the application IDs of existing subscriptions\n                        const subscribedApplications = subscriptions.list.map((element) => {\n                            return {\n                                value: element.applicationId,\n                                policy: element.throttlingPolicy,\n                                status: element.status,\n                                subscriptionId: element.subscriptionId,\n                                label: element.applicationInfo.name,\n                            };\n                        });\n\n                        // Removing subscribed applications from all the applications and get\n                        // the available applications to subscribe\n                        const subscribedAppIds = subscribedApplications.map((sub) => sub.value);\n                        const applicationsAvailable = applications.list\n                            .filter((app) => !subscribedAppIds.includes(app.applicationId) && app.status === 'APPROVED')\n                            .map((filteredApp) => {\n                                return {\n                                    value: filteredApp.applicationId,\n                                    label: filteredApp.name,\n                                };\n                            });\n                        this.setState({ subscribedApplications, applicationsAvailable }, () => {\n                            if (callback) {\n                                callback();\n                            }\n                        });\n                    })\n                    .catch((error) => {\n                        if (process.env.NODE_ENV !== 'production') {\n                            console.log(error);\n                        }\n                        const { status } = error;\n                        if (status === 404) {\n                            this.setState({ notFound: true });\n                        }\n                    });\n            }\n        };\n\n\n        this.state = {\n            active: 'overview',\n            overviewHiden: false,\n            updateSubscriptionData: this.updateSubscriptionData,\n            api: null,\n            applications: null,\n            subscribedApplications: [],\n            applicationsAvailable: [],\n            item: 1,\n            xo: null,\n        };\n        this.setDetailsAPI = this.setDetailsAPI.bind(this);\n        this.api_uuid = this.props.match.params.apiUuid;\n        this.handleDrawerClose = this.handleDrawerClose.bind(this);\n        this.handleDrawerOpen = this.handleDrawerOpen.bind(this);\n    }\n\n    /**\n     *\n     *\n     * @memberof Details\n     */\n    componentDidMount() {\n        this.updateSubscriptionData();\n    }\n\n    componentDidUpdate(prevProps) {\n        const { match: { params: {apiUuid: prevApiUuid}} } = prevProps;\n        const { match: { params: {apiUuid: newApiUuid}} } = this.props;\n        if ( prevApiUuid !== newApiUuid ) {\n            this.api_uuid = newApiUuid;\n            this.updateSubscriptionData();\n        } \n    }\n\n    handleDrawerOpen() {\n        this.setState({ open: true });  \n        const user = AuthManager.getUser();\n        if(user != null){\n            user.isSideBarOpen = true;\n            AuthManager.setUser(user);\n        }\n    };\n\n    handleDrawerClose() {\n        this.setState({ open: false });\n        const user = AuthManager.getUser();\n        if(user != null){\n            user.isSideBarOpen = false;\n            AuthManager.setUser(user);\n        }\n    };\n\n    /**\n     *\n     *\n     * @param {*} api\n     * @memberof Details\n     */\n    setDetailsAPI(api) {\n        this.setState({ api });\n    }\n\n    /**\n     *\n     *\n     * @returns\n     * @memberof Details\n     */\n    render() {\n        const {\n            classes, theme, intl, match,\n        } = this.props;\n        const user = AuthManager.getUser();\n        const { apiUuid } = match.params;\n        const { api, notFound , open} = this.state;\n        const {\n            custom: {\n                leftMenu: {\n                    rootIconSize, rootIconTextVisible, rootIconVisible, position,\n                },\n                apiDetailPages: {\n                    showCredentials, showComments, showTryout, showDocuments, showSdks,\n                },\n                title: {\n                    prefix, sufix,\n                }\n            },\n        } = theme;\n        const globalStyle = 'body{ font-family: ' + theme.typography.fontFamily + '}';\n        const pathPrefix = '/apis/' + this.api_uuid + '/';\n        if (!api && notFound) {\n            return <ResourceNotFound />;\n        }\n        // check for widget=true in the query params. If it's present we render without <Base> component.\n        const pageUrl = new URL(window.location);\n        const isWidget = pageUrl.searchParams.get('widget');\n\n        return api ? (\n            <ApiContext.Provider value={this.state}>\n                <Helmet>\n                    <title>{`${prefix} ${api.name}${sufix}`}</title>\n                </Helmet>\n                <style>{globalStyle}</style>\n                  {!isWidget && (\n                <nav\n                    className={classNames(\n                        classes.leftMenu,\n                        {\n                            [classes.leftMenuHorizontal]: position === 'horizontal'\n                        },\n                        {\n                            [classes.leftMenuVerticalLeft]: position === 'vertical-left' && open,\n                            [classes.leftMenuVerticalLeftMinView]: position === 'vertical-left' && !open,\n\n                        },\n                        {\n                            [classes.leftMenuVerticalRight]: position === 'vertical-right',\n                        },\n                        'left-menu',\n\n                    )}\n                    aria-label='API Navigation'\n                >\n                    {rootIconVisible && (\n                        <Link to='/apis' className={classes.leftLInkMain} aria-label='ALL APIs'>\n                            <CustomIcon aria-label='ALL APIs icon' width={rootIconSize} height={rootIconSize} icon='api' />\n                            {rootIconTextVisible && (\n                                <Typography className={classes.leftLInkMainText}>\n                                    <FormattedMessage id='Apis.Details.index.all.apis' defaultMessage='ALL APIs' />\n                                </Typography>\n                            )}\n                        </Link>\n                    )}\n                    <LeftMenuItem\n                        text={<FormattedMessage id='Apis.Details.index.overview' defaultMessage='Overview' />}\n                        route='overview'\n                        iconText='overview'\n                        to={pathPrefix + 'overview'}\n                        open={open}\n                    />\n                    {!api.advertiseInfo.advertised && (\n                        <>\n                            {user && showCredentials && (\n                                <>\n                                   \n                                        <LeftMenuItem\n                                            text={\n                                                <FormattedMessage\n                                                    id='Apis.Details.index.subscriptions'\n                                                    defaultMessage='Subscriptions'\n                                                />\n                                            }\n                                            route='credentials'\n                                            iconText='credentials'\n                                            to={pathPrefix + 'credentials'}\n                                            open={open}\n                                        />\n                                    \n                                </>\n                            )}\n                            {api.type !== 'WS' && showTryout && (\n                               \n                                    <LeftMenuItem\n                                        text={<FormattedMessage id='Apis.Details.index.try.out'\n                                            defaultMessage='Try out' />}\n                                        route='test'\n                                        iconText='test'\n                                        to={pathPrefix + 'test'}\n                                        open={open}\n                                    />\n                                \n                            )}\n                            {showComments && (\n                                \n                                    <LeftMenuItem\n                                        text={\n                                            <FormattedMessage id='Apis.Details.index.comments'\n                                                defaultMessage='Comments' />\n                                        }\n                                        route='comments'\n                                        iconText='comments'\n                                        to={pathPrefix + 'comments'}\n                                        open={open}\n                                    />\n                               \n                            )}\n                        </>\n                    )}\n                    {showDocuments && (\n                       \n                            <LeftMenuItem\n                                text={<FormattedMessage id='Apis.Details.index.documentation'\n                                    defaultMessage='Documentation' />}\n                                route='documents'\n                                iconText='docs'\n                                to={pathPrefix + 'documents'}\n                                open={open}\n                            />\n                       \n                    )}\n                    {!api.advertiseInfo.advertised && api.type !== 'WS' && showSdks && (\n                        \n                            <LeftMenuItem\n                                text={<FormattedMessage id='Apis.Details.index.sdk' defaultMessage='SDKs' />}\n                                route='sdk'\n                                iconText='sdk'\n                                to={pathPrefix + 'sdk'}\n                                open={open}\n                            />\n                       \n                    )}\n                    {open ? (\n                        <div onClick={this.handleDrawerClose}\n                            style={{ width:100, paddingLeft: '15px', position: 'absolute',bottom: 0, cursor: 'pointer',}}\n                        >\n                            <ArrowBackIosIcon fontSize='medium' style={{ color: 'white' }} />\n                        </div>\n                    ) : (\n                        <div onClick={this.handleDrawerOpen}\n                            style={{ paddingLeft: '15px', position: 'absolute', bottom: 0, cursor: 'pointer',}}\n                        >\n                            <ArrowForwardIosIcon fontSize='medium' style={{ color: 'white' }} />\n                        </div>\n\n                    )}\n\n                </nav>\n                )}\n\n                <div\n                    className={classNames(\n                        { [classes.content]: open },\n                        { [classes.contentExpandView]: !open },\n                    )}\n                >\n                    <InfoBar apiId={apiUuid} innerRef={(node) => (this.infoBar = node)} intl={intl} {...this.props} />\n                    <div\n                        className={classNames(\n                            { [classes.contentLoader]: position === 'horizontal' },\n                            { [classes.contentLoaderRightMenu]: position === 'vertical-right' },\n                        )}\n                    >\n                        <LoadableSwitch \n                            api={api} \n                            updateSubscriptionData={this.updateSubscriptionData}\n                        />\n                    </div>\n                </div>\n            </ApiContext.Provider>\n        ) : (\n                <div className='apim-dual-ring' />\n            );\n    }\n}\n\nDetails.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    theme: PropTypes.shape({}).isRequired,\n    match: PropTypes.shape({}).isRequired,\n    intl: PropTypes.shape({\n        formatMessage: PropTypes.func,\n    }).isRequired,\n};\n\nexport default withSettings(injectIntl(withStyles(styles, { withTheme: true })(Details)));\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport { Route, Switch, Redirect } from 'react-router-dom';\nimport { withStyles } from '@material-ui/core';\nimport CommonListing from './Listing/CommonListing';\nimport TagCloudListing from './Listing/TagCloudListing';\nimport Details from './Details/index';\nimport { ResourceNotFound } from '../Base/Errors';\n\n/**\n * Default API Store overview page\n *\n * @returns {React.Component}\n */\nfunction Apis() {\n    return (\n        <Switch>\n            <Route\n                exact\n                path='/api-groups'\n                render={(props) => (\n                    <TagCloudListing {...props} />)}\n            />\n            <Route\n                exact\n                path='/apis'\n                render={(props) => (\n                    <CommonListing {...props} />)}\n            />\n            <Route\n                path='/apis/search'\n                render={(props) => (\n                    <CommonListing {...props} />)}\n            />\n            <Route\n                path='/apis/:apiUuid/'\n                render={(props) => (\n                    <Details {...props} />)}\n            />\n            <Route component={ResourceNotFound} />\n        </Switch>\n    );\n}\n\nexport default withStyles({}, { withTheme: true })(Apis);\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\n\nexport const ApiContext = React.createContext({\n    active: 'overview',\n    handleMenuSelect: () => {},\n    api: null,\n    applications: null,\n    subscribedApplications: [],\n    applicationsAvailable: [],\n    updateSubscriptionData: () => {},\n});\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Icon from '@material-ui/core/Icon';\nimport VerticalDivider from './VerticalDivider';\n/**\n * Main style object\n *\n * @param {*} theme\n */\nconst styles = theme => ({\n    root: {\n        display: 'flex',\n        minHeight: 100,\n        alignItems: 'center',\n        paddingLeft: theme.spacing(2),\n        borderRadius: theme.shape.borderRadius,\n        border: 'solid 1px #ddd',\n        '& span.material-icons': {\n            fontSize: 60,\n            color: theme.custom.info.color,\n        },\n        '& span, & h5, & label, & input': {\n            color: theme.palette.getContrastText(theme.palette.background.paper),\n        },\n    },\n    iconItem: {\n        paddingRight: theme.spacing(2),\n        fontSize: 60,\n    },\n    button: {\n        marginTop: theme.spacing(1),\n        marginBottom: theme.spacing(1),\n    },\n    content: {\n        paddingTop: theme.spacing(1),\n        paddingBottom: theme.spacing(1),\n    },\n});\n/**\n *  Renders a inline massage\n *\n * @class InlineMessage\n * @extends {React.Component}\n */\nclass InlineMessage extends React.Component {\n    state = {\n        value: 0,\n    };\n\n    handleExpandClick = () => {\n        this.setState(state => ({ expanded: !state.expanded }));\n    };\n\n    render() {\n        const { classes, type } = this.props;\n        const messgeType = type || 'info';\n        return (\n            <Paper className={classes.root} elevation={1}>\n                {messgeType === 'info' && <Icon className={classes.iconItem}>info</Icon>}\n                {messgeType === 'warn' && <Icon className={classes.iconItem}>warning</Icon>}\n                <VerticalDivider height={100} />\n                <div className={classes.content}>{this.props.children}</div>\n            </Paper>\n        );\n    }\n}\nInlineMessage.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    type: PropTypes.string.isRequired,\n};\n\nexport default withStyles(styles)(InlineMessage);\n"],"sourceRoot":""}