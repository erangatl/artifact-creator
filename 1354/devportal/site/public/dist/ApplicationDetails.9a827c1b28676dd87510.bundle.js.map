{"version":3,"sources":["webpack:///./source/src/app/data/Validation.jsx","webpack:///./source/src/app/components/Shared/AppsAndKeys/ViewToken.jsx","webpack:///./source/src/app/components/Shared/AppsAndKeys/ViewSecret.jsx","webpack:///./source/src/app/data/Subscription.jsx","webpack:///./source/src/app/components/Shared/AppsAndKeys/Tokens.jsx","webpack:///./source/src/app/components/Apis/Listing/NoApi.jsx","webpack:///./source/src/app/components/Shared/LeftMenuItem.jsx","webpack:///./source/src/app/components/Applications/Listing/DeleteConfirmation.jsx","webpack:///./node_modules/@material-ui/icons/PlayForWork.js","webpack:///./source/src/app/components/Shared/AppsAndKeys/ImportExternalApp.jsx","webpack:///./source/src/app/components/Shared/AppsAndKeys/AppConfiguration.jsx","webpack:///./source/src/app/components/Shared/AppsAndKeys/KeyConfiguration.jsx","webpack:///./source/src/app/components/Shared/AppsAndKeys/ViewCurl.jsx","webpack:///./source/src/app/components/Shared/AppsAndKeys/ViewKeys.jsx","webpack:///./source/src/app/components/Shared/AppsAndKeys/WaitingForApproval.jsx","webpack:///./source/src/app/components/Shared/AppsAndKeys/TokenManagerSummary.jsx","webpack:///./source/src/app/components/Shared/AppsAndKeys/TokenManager.jsx","webpack:///./node_modules/@material-ui/icons/Add.js","webpack:///./node_modules/@material-ui/icons/HighlightOff.js","webpack:///./node_modules/@material-ui/icons/ErrorOutline.js","webpack:///./source/src/app/components/Shared/ApiKey.jsx","webpack:///./source/src/app/components/Shared/ApiKeyRestriction.jsx","webpack:///./source/src/app/components/Shared/AppsAndKeys/ApiKeyManager.jsx","webpack:///./source/src/app/components/Apis/Listing/SubscriptionPolicySelect.jsx","webpack:///./source/src/app/components/Apis/Listing/APICardView.jsx","webpack:///./source/src/app/components/Applications/Details/Invoice.jsx","webpack:///./source/src/app/components/Applications/Details/SubscriptionTableData.jsx","webpack:///./source/src/app/components/Applications/Details/Subscriptions.jsx","webpack:///./source/src/app/components/Applications/Details/InfoBar.jsx","webpack:///./source/src/app/components/Applications/Details/Overview.jsx","webpack:///./source/src/app/components/Applications/Details/index.jsx","webpack:///./source/src/app/components/Shared/InlineMessage.jsx","webpack:///./source/src/app/components/Shared/ScopeValidation.jsx"],"names":["definition","number","Joi","integer","url","string","uri","allow","ipAddress","ip","version","cidr","ViewToken","React","Component","tokenCopied","name","this","setState","that","elementName","setTimeout","getTokeScopesString","tokenScopes","join","render","classes","token","consumerSecret","props","state","className","root","secretWrapper","secret","type","variant","component","isOauth","id","defaultMessage","epWrapper","for","prodLabel","defaultValue","accessToken","multiline","fullWidth","rows","InputProps","disableUnderline","bootstrapRoot","input","bootstrapInput","InputLabelProps","shrink","bootstrapFormLabel","title","placement","text","onCopy","aria-label","color","validityTime","defaultProps","propTypes","PropTypes","shape","isRequired","array","withStyles","theme","padding","marginTop","spacing","flex","marginRight","borderRadius","backgroundColor","custom","apiDetailPages","tokenTextBoxBackground","palette","getContrastText","border","height","width","transition","transitions","create","fontFamily","borderColor","boxShadow","display","marginBottom","lineHeight","whiteSpace","contentWrapper","maxWidth","contentAreaWidth","leftMenu","background","paper","ViewSecret","secretCopied","common","white","Subscription","Resource","constructor","super","client","APIClientFactory","getAPIClient","Utils","getEnvironment","label","getSubscriptions","apiId","applicationId","limit","then","apis","get_subscriptions","getSubscription","subscriptionUUID","get_subscriptions__subscriptionId_","subscriptionId","getMonetizationInvoice","get_subscriptions__subscriptionId__usage","deleteSubscription","delete_subscriptions__subscriptionId_","updateSubscription","throttlingPolicy","status","requestedThrottlingPolicy","subscriptionData","payload","body","Subscriptions","put_subscriptions__subscriptionId_","MenuProps","PaperProps","style","maxHeight","tokens","handleChange","field","event","accessTokenRequest","updateAccessTokenRequest","newRequest","target","currentTarget","scopesSelected","value","keyType","subscriptionScopes","margin","FormControlOdd","disabled","length","htmlFor","quotaHelp","multiple","onChange","e","renderValue","selected","chips","map","key","chip","scope","contextTypes","intl","FormControl","position","flexWrap","useStyles","makeStyles","flexGrow","messageWrapper","textAlign","secondary","NoApi","useTheme","container","item","xs","alt","src","app","context","noApiImage","gutterBottom","LeftMenuItem","setSelected","useState","Icon","to","history","route","submenu","open","routeToCheck","strokeColor","iconSize","ditectCurrentMenu","location","window","pathname","test1","RegExp","test2","match","useEffect","listen","activeBackground","leftMenuActive","leftMenuActiveSubmenu","classNames","leftLInk","leftLink_IconLeft","cloneElement","leftLink_Icon","noIcon","icon","iconText","leftLInkText","leftLInkText_IconLeft","leftLInkText_NoText","element","oneOfType","bool","withRouter","textTransform","overflow","textOverflow","paddingLeft","LeftMenu","typography","bottom","left","top","paddingTop","paddingBottom","paddingRight","fontSize","caption","cursor","textDecoration","alignItems","justifyContent","withTheme","DeleteConfirmation","handleAppDelete","isDeleteOpen","toggleDeleteConfirmation","Slide","role","dense","onClick","size","func","_interopRequireDefault","Object","defineProperty","exports","default","_react","_default","createElement","d","ImportExternalApp","consumerKey","isUserOwner","provideOAuthKeySecret","importDisabled","useIntl","setOpen","handleClose","Button","startIcon","Dialog","onClose","aria-labelledby","DialogTitle","DialogContent","Grid","direction","TextField","formatMessage","FormHelperText","DialogActions","ScopeValidation","resourcePath","resourcePaths","APPLICATION_GENERATE_KEYS","resourceMethod","resourceMethods","POST","Typography","AppConfiguration","config","previousValue","selectedValue","setSelectedValue","handleAppRequestChange","TableRow","TableCell","leftCol","Box","removeHelperPadding","select","helperText","tooltip","values","MenuItem","formControl","InputLabel","Select","labelId","displayEmpty","Input","Chip","Checkbox","checked","indexOf","ListItemText","primary","notFound","instanceOf","any","injectIntl","button","marginLeft","checkboxWrapper","checkboxWrapperColumn","flexDirection","group","KeyConfiguration","urlCopied","setUrlCopied","callbackHelper","setCallbackHelper","keyManagerConfig","updateKeyRequest","keyRequest","updateHasError","callbackError","selectedGrantTypes","callbackUrl","applicationConfiguration","availableGrantTypes","description","additionalProperties","enableMapOAuthConsumerApps","enableOAuthAppCreation","enableTokenEncryption","enableTokenGeneration","revokeEndpoint","tokenEndpoint","userInfoEndpoint","cloneDeep","newGrantTypes","keyManager","includes","callbackUrlLocal","callBackHasErrors","filter","clonedAdditionalProperties","getPreviousValue","isPreviousValueSet","ResourceNotFound","grantTypeDisplayListMap","grantTypes","grantTypeDisplayNameMap","modifiedGrantTypes","forEach","grantType","getGrantTypeDisplayList","Settings","propPrefix","toLowerCase","Table","table","TableBody","Tooltip","iconStyle","IconButton","iconButton","keys","FormControlLabel","control","error","placeholder","validating","isKeysAvailable","setGenerateEnabled","titleColumn","fontWeight","keyInfoTable","borderCollapse","borderBottom","code","grey","command","encodeVisible","ViewCurl","bas64Encoded","btoa","showReal","setShowReal","setTokenCopied","applyReal","Fragment","ViewKeys","data","preventDefault","showToken","keyMappingId","selectedTab","applicationPromise","application","regenerateSecret","response","console","log","showSecretGen","secretGenResponse","catch","showCurl","isKeyJWT","isUpdating","generateToken","timeout","tokenResponse","tokenValidityTime","Alert1","Alert","message","selectedApp","hashEnabled","keyCopied","showCS","copyWrapper","readOnly","endAdornment","InputAdornment","handleSecretRegenerate","handleShowHidden","onMouseDown","handleMouseDownGeneric","appId","Application","get","componentDidMount","getKeys","componentDidUpdate","prevProps","fullScreen","tokenType","summary","Loading","csCkKeys","accessTokenScopes","validityPeriod","tokenDetails","dialogHead","viewKeyAndSecret","supportedGrantTypes","supportedGrantTypesUnchanged","inputWrapper","dialogWrapper","DialogContentText","Tokens","CircularProgress","generateAccessToken","autoFocus","tokenSection","find","a","handleClickOpen","handleClickOpenCurl","keyState","states","REJECTED","noKeysRoot","backgroundImage","overviewPage","keysBackground","backgroundPosition","backgroundRepeat","backgroundSize","minHeight","TokenManagerSummary","keyStates","emptyBox","CREATED","WaitingForApproval","keyGrantTypes","TabPanel","children","index","other","hidden","p","node","StyledTabs","indicator","flexContainer","borderLeft","Tabs","TabIndicatorProps","StyledTab","fontWeightRegular","pxToRem","opacity","borderRight","Tab","disableRipple","TokenManager","newSelectedTab","keyManagers","selectedKM","x","getDefaultAdditionalProperties","promisedKeyManagers","API","getKeyManagers","promisedGetKeys","Promise","all","responseKeyManagerList","list","enabled","push","selectdKM","mode","selectdKMGrants","validatingState","str","replace","txt","charAt","toUpperCase","substr","hasError","isLoading","scopes","providedConsumerKey","providedConsumerSecret","COMPLETED","APPROVED","bind","generateKeys","updateKeys","cleanUpKeys","handleOnChangeProvidedOAuth","loadApplication","nextProps","nextKeyType","prevKeyType","confItem","updateSubscriptionData","getKeyManagerIdentifier","newKeys","Map","set","info","finally","applicationKey","provideKeys","getKeyManagerDescription","selectedKMObject","mb","keyTitle","toTitleCase","InlineMessage","dialogContainer","username","AuthManager","getUser","owner","Progress","cleanUpInfoText","cleanUpButton","indicatorColor","textColor","handleTabChange","keymanager","displayName","tabPanel","heading","subTitle","ml","m","enableTokenHashing","setValidating","generateWrapper","warningIcon","kmName","main","keyConfigWrapper","muiFormGroupRoot","infiniteValidity","setInfiniteValidity","invalidTimeout","setInvaildTimeout","undefined","Validation","validate","required","inputText","apiKeyRestrictions","invalidIP","setInvalidIP","invalidReferer","setInvalidReferer","newIP","updateNewIp","ipList","updateIpList","restrictSchema","updateRestrictSchema","newReferer","updateNewReferer","refererList","updateRefererList","outterBox","RadioGroup","row","Radio","labelPlacement","justify","md","trim","Fab","List","ListItem","ListItemSecondaryAction","edge","ipItem","splice","deleteIpItem","referer","refererItem","deleteRefererItem","ApiKeyManager","isGenerating","restrictions","permittedIP","permittedReferer","generateApiKey","apikey","ApiKeyRestriction","FormGroup","formGroup","generateKey","formLabel","dialog","dialogTitle","dialogContent","ApiKey","Card","CardContent","cardBody","linebreak","ip1","ip2","ip3","ip4","url1","url2","url3","gridWrapper","SubscriptionPolicySelect","selectedPolicy","policies","handleSubscribe","policy","SUBSCRIPTIONS","buttonGap","object","APICardView","xhrRequest","pagination","total","count","updateUnsubscribedAPIsList","setTenantDomain","loading","searchText","page","rowsPerPage","api","getAllAPIs","query","offset","pageType","getData","subscriptions","getIdsOfSubscribedEntities","sub","Boolean","subscribedIds","i","advertiseInfo","advertised","isSubscriptionAvailable","throttlingPolicies","apisNotFound","columns","options","customBodyRender","tableMeta","updateValue","rowData","search","print","download","viewColumns","customToolbar","responsive","serverSide","onTableChange","action","tableState","changePage","selectableRows","onChangeRowsPerPage","numberOfRows","filterType","sort","selectableRowsHeader","Invoice","isMonetizedAPI","isDynamicUsagePolicy","tiers","showPopup","setShowPopup","showErrorPopup","setShowErrorPopup","invoice","setInvoice","handleAlertClose","obj","invoiceData","properties","invoiveItem","insideArray","arrayOf","SubscriptionTableData","openMenu","openMenuEdit","selectedTier","handleRequestClose","handleRequestOpen","handleRequestDelete","checkIfDynamicUsagePolicy","checkIfMonetizedAPI","populateSubscriptionTiers","handleSubscriptionTierUpdate","handleRequestCloseEditMenu","handleRequestOpenEditMenu","setSelectedTier","handleSubscriptionDelete","currentThrottlingPolicy","handleSubscriptionUpdate","apiUUID","Api","getAPIById","apiTiers","JSON","parse","tierName","policyName","apiData","monetization","getTierByName","policyResponse","policyData","monetizationAttributes","billingType","subscription","apiInfo","link","hover","lifeCycleStatus","SINGLE_SUBSCRIPTION","PUT","tier","DELETE","unsubscribedAPIList","subscriptionsNotFound","isAuthorize","openDialog","updateSubscriptions","handleOpenDialog","handleSearchTextChange","handleSearchTextTmpChange","handleClearSearch","handleEnterPress","searchTextTmp","prevState","subscriptionLimit","endpointIndex","prototype","hasOwnProperty","call","getApplication","subscribe","keyCode","titleWrapper","buttonElm","xl","genericMessageWrapper","cardContent","subsTable","TableHead","firstCell","subscribePop","disableTypography","searchWrapper","Paper","searchRoot","clearSearchIcon","InputBase","inputProps","onKeyDown","searchResults","closeButton","divider","cardTitle","listView","tableBodyEvenBackgrund","tableBodyOddBackgrund","tableHeadBackground","InfoBar","showOverview","applicationOwner","toggleOverview","handleDeleteConfimation","todo","promisedDelete","deleteApp","ok","tierDescription","infoBarMain","linkTitle","align","subscriptionCount","SINGLE_APPLICATION","VerticalDivider","editButton","mainBack","infoBar","infoBarHeight","starColor","A200","backIcon","backText","starRate","starRateMy","rateLink","topBar","infoContent","infoContentBottom","sliderBackground","ratingBoxWrapper","ratingBox","userRating","verticalDividerStar","backLink","ratingSummery","buttonView","buttonOverviewText","appNameXSmall","overflowX","overflowY","appNameSmall","appNameMid","appNameBig","minWidth","iconAligner","iconTextWrapper","iconEven","iconOddColor","iconOdd","summaryRoot","actionPanel","disabledTier","setApplication","setTierDescription","tierDisabled","setTierDisabled","setNotFound","params","tierResponse","TOKEN_TYPES","attributes","attr","attrValue","Details","application_uuid","menuLink","active","secScheme","pathPrefix","redirectUrl","rootIconSize","rootIconTextVisible","rootIconVisible","prefix","sufix","errorBox","Helmet","leftMenuHorizontal","leftMenuVerticalLeft","leftMenuVerticalRight","leftLInkMain","CustomIcon","leftLInkMainText","content","innerRef","contentLoader","contentLoaderRightMenu","exact","from","path","Overview","renderManager","shiftToLeft","shiftToRight","leftMenuPaddingLeft","right","rootBackground","detailsContent","expanded","messgeType","elevation","iconItem","APIS","SINGLE_API","API_SWAGGER","API_WSDL","API_GW_CONFIG","API_THUMBNAIL","API_COPY","API_LC_HISTORY","API_CHANGE_LC","API_LC","API_LC_PENDING_TASK","API_DEF","API_VALIDATE_DEF","API_DOCS","API_DOC","API_DOC_CONTENT","APPLICATIONS","APPLICATION_GENERATE_KEY_TYPE","EXPORT_APIS","IMPORT_APIS","SUBSCRIPTION","BLOCK_SUBSCRIPTION","UNBLOCK_SUBSCRIPTION","POLICIES","POLICY","ENDPOINTS","ENDPOINT","LABLES","WORKFLOW","SERVICE_DISCOVERY","GET","hasScope","hasScopes","haveScope"],"mappings":"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","file":"ApplicationDetails.9a827c1b28676dd87510.bundle.js","sourcesContent":["/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport Joi from '@hapi/joi';\n\nconst definition = {\n    number: Joi.number().integer(),\n    url: Joi.string().uri().allow(''),\n    ipAddress: Joi.string().ip({\n      version: [\n        'ipv4',\n        'ipv6'\n      ],\n      cidr: 'optional'\n    }),\n};\n\nexport default definition;\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport CopyToClipboard from 'react-copy-to-clipboard';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport FileCopy from '@material-ui/icons/FileCopy';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport IconButton from '@material-ui/core/IconButton';\nimport { FormattedMessage } from 'react-intl';\nimport InlineMessage from '../InlineMessage';\nimport ViewSecret from './ViewSecret';\n/**\n *\n *\n * @param {*} theme\n */\nconst styles = (theme) => ({\n    bootstrapRoot: {\n        padding: 0,\n        'label + &': {\n            marginTop: theme.spacing(3),\n        },\n        flex: 1,\n        marginRight: theme.spacing(1),\n    },\n    bootstrapInput: {\n        borderRadius: 4,\n        backgroundColor: theme.custom.apiDetailPages.tokenTextBoxBackground,\n        color: theme.palette.getContrastText(theme.custom.apiDetailPages.tokenTextBoxBackground),\n        border: '1px solid #ced4da',\n        padding: '5px 12px',\n        height: 100,\n        width: '100%',\n        transition: theme.transitions.create(['border-color', 'box-shadow']),\n        fontFamily: ['-apple-system', 'BlinkMacSystemFont', '\"Segoe UI\"', 'Roboto', '\"Helvetica Neue\"',\n            'Arial', 'sans-serif', '\"Apple Color Emoji\"', '\"Segoe UI Emoji\"', '\"Segoe UI Symbol\"'].join(','),\n        '&:focus': {\n            borderColor: '#80bdff',\n            boxShadow: '0 0 0 0.2rem rgba(0,123,255,.25)',\n        },\n    },\n    epWrapper: {\n        display: 'flex',\n        marginTop: 20,\n    },\n    secretWrapper: {\n        display: 'flex',\n        marginBottom: 20,\n    },\n    prodLabel: {\n        lineHeight: '30px',\n        marginRight: 10,\n        width: 100,\n        'text-align-last': 'center',\n        whiteSpace: 'nowrap',\n    },\n    contentWrapper: {\n        maxWidth: theme.custom.contentAreaWidth - theme.custom.leftMenu.width,\n    },\n    root: {\n        marginTop: 20,\n        '& span, & h5, & label, & td, & li, & div, & input': {\n            color: theme.palette.getContrastText(theme.palette.background.paper),\n        },\n\n    },\n});\n/**\n *\n *\n * @class ViewToken\n * @extends {React.Component}\n */\nclass ViewToken extends React.Component {\n    state = {\n        tokenCopied: false,\n    };\n\n    /**\n     *\n     *\n     * @memberof ViewToken\n     */\n    onCopy = (name) => () => {\n        this.setState({\n            [name]: true,\n        });\n        const that = this;\n        const elementName = name;\n        const caller = function () {\n            that.setState({\n                [elementName]: false,\n            });\n        };\n        setTimeout(caller, 4000);\n    };\n\n    /**\n     * Generate a comma separate string of token scopes\n     * @param {string} tokenScopes token scopes\n     * @returns {String} scopeString comma separated string of token scopes\n     * @memberof ViewToken\n     */\n    getTokeScopesString(tokenScopes) {\n        if (tokenScopes) {\n            return tokenScopes.join(', ');\n        }\n        return '';\n    }\n\n    /**\n     *\n     *\n     * @returns\n     * @memberof ViewToken\n     */\n    render() {\n        const {\n            classes, token, consumerSecret,\n        } = this.props;\n        const { tokenCopied } = this.state;\n        return (\n            <div className={classes.root}>\n                {consumerSecret && (\n                    <div className={classes.secretWrapper}>\n                        <ViewSecret secret={{ consumerSecret }} />\n                    </div>\n                )}\n                <InlineMessage type='warn'>\n                    <Typography variant='h5' component='h3'>\n                        {(token.isOauth) && (\n                            <FormattedMessage\n                                id='Shared.AppsAndKeys.ViewToken.please.copy'\n                                defaultMessage='Please Copy the Access Token'\n                            />\n                        )}\n                        {(!token.isOauth) && (\n                            <FormattedMessage\n                                id='Shared.AppsAndKeys.ViewToken.please.copy.apikey'\n                                defaultMessage='Please Copy the API Key'\n                            />\n                        )}\n                    </Typography>\n                    <Typography component='p'>\n                        <FormattedMessage\n                            id='Shared.AppsAndKeys.ViewToken.please.copy.help'\n                            defaultMessage={'Please copy this generated token value as it will be displayed only for'\n                            + ' the current browser session. '\n                            + '( The token will not be visible in the UI after the page is refreshed. )'}\n                        />\n                    </Typography>\n                </InlineMessage>\n                <div className={classes.epWrapper}>\n                    <label for='access-token' className={classes.prodLabel}>\n                        {(token.isOauth) && (\n                            <FormattedMessage\n                                id='Shared.AppsAndKeys.ViewToken.access.token'\n                                defaultMessage='Access Token'\n                            />\n                        )}\n                        {(!token.isOauth) && (\n                            <FormattedMessage\n                                id='Shared.AppsAndKeys.ViewToken.apikey'\n                                defaultMessage='API Key'\n                            />\n                        )}\n                    </label>\n                    <TextField\n                        defaultValue={token.accessToken}\n                        id='access-token'\n                        multiline\n                        fullWidth\n                        rows={4}\n                        InputProps={{\n                            disableUnderline: true,\n                            classes: {\n                                root: classes.bootstrapRoot,\n                                input: classes.bootstrapInput,\n                            },\n                        }}\n                        InputLabelProps={{\n                            shrink: true,\n                            className: classes.bootstrapFormLabel,\n                        }}\n                    />\n                    <Tooltip title={tokenCopied ? 'Copied' : 'Copy to clipboard'} placement='right'>\n                        <CopyToClipboard text={token.accessToken} onCopy={this.onCopy('tokenCopied')}>\n                            <IconButton aria-label='Copy to clipboard'>\n                                <FileCopy color='secondary'>file_copy</FileCopy>\n                            </IconButton>\n                        </CopyToClipboard>\n                    </Tooltip>\n                </div>\n                <FormHelperText>\n                    <FormattedMessage\n                        id='Shared.AppsAndKeys.ViewToken.info.first'\n                        defaultMessage='Above token has a validity period of '\n                    />\n                    {token.validityTime}\n                    <FormattedMessage\n                        id='Shared.AppsAndKeys.ViewToken.info.second'\n                        defaultMessage=' seconds'\n                    />\n                    {token.isOauth && (\n                        <FormattedMessage\n                            id='Shared.AppsAndKeys.ViewToken.info.third'\n                            defaultMessage=' and the token has ('\n                        />\n                    )}\n                    {this.getTokeScopesString(token.tokenScopes)}\n                    {token.isOauth && (\n                        <FormattedMessage\n                            id='Shared.AppsAndKeys.ViewToken.info.fourth'\n                            defaultMessage=') scopes'\n                        />\n                    )}\n.\n                </FormHelperText>\n            </div>\n        );\n    }\n}\n\nViewToken.defaultProps = {\n    consumerSecret: null,\n};\n\nViewToken.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    token: PropTypes.shape({\n        accessToken: PropTypes.string.isRequired,\n        validityTime: PropTypes.number.isRequired,\n        tokenScopes: PropTypes.array.isRequired,\n    }).isRequired,\n    consumerSecret: PropTypes.string,\n};\n\nexport default withStyles(styles)(ViewToken);\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport CopyToClipboard from 'react-copy-to-clipboard';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport FileCopy from '@material-ui/icons/FileCopy';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport { FormattedMessage } from 'react-intl';\nimport InlineMessage from '../InlineMessage';\n/**\n *\n *\n * @param {*} theme\n */\nconst styles = theme => ({\n    bootstrapRoot: {\n        padding: 0,\n        'label + &': {\n            marginTop: theme.spacing(3),\n        },\n    },\n    bootstrapInput: {\n        borderRadius: 4,\n        backgroundColor: theme.palette.common.white,\n        border: '1px solid #ced4da',\n        padding: '5px 12px',\n        width: 350,\n        height: 100,\n        transition: theme.transitions.create(['border-color', 'box-shadow']),\n        fontFamily: ['-apple-system', 'BlinkMacSystemFont', '\"Segoe UI\"', 'Roboto', '\"Helvetica Neue\"',\n            'Arial', 'sans-serif', '\"Apple Color Emoji\"', '\"Segoe UI Emoji\"', '\"Segoe UI Symbol\"'].join(','),\n        '&:focus': {\n            borderColor: '#80bdff',\n            boxShadow: '0 0 0 0.2rem rgba(0,123,255,.25)',\n        },\n    },\n    epWrapper: {\n        display: 'flex',\n        marginTop: 20,\n    },\n    prodLabel: {\n        lineHeight: '30px',\n        marginRight: 10,\n        width: 100,\n        'text-align-last': 'center',\n    },\n    contentWrapper: {\n        maxWidth: theme.custom.contentAreaWidth - theme.custom.leftMenu.width,\n    },\n    root: {\n        marginBottom: 20,\n    },\n});\n/**\n *\n *\n * @class ViewSecret\n * @extends {React.Component}\n */\nclass ViewSecret extends React.Component {\n    state = {\n        secretCopied: false,\n    };\n\n    /**\n     *\n     *\n     * @memberof ViewSecret\n     */\n    onCopy = name => () => {\n        this.setState({\n            [name]: true,\n        });\n        const that = this;\n        const elementName = name;\n        const caller = function () {\n            that.setState({\n                [elementName]: false,\n            });\n        };\n        setTimeout(caller, 4000);\n    };\n\n    /**\n     * Generate a comma separate string of token scopes\n     *\n     * @param {string} tokenScopes token scopes\n     * @returns {String} scopeString comma separated string of token scopes\n     * @memberof ViewSecret\n     */\n    getTokeScopesString(tokenScopes) {\n        if (tokenScopes) {\n            return tokenScopes.join(', ');\n        }\n        return '';\n    }\n\n    /**\n     *\n     *\n     * @returns\n     * @memberof ViewSecret\n     */\n    render() {\n        const { classes, secret } = this.props;\n        const { secretCopied } = this.state;\n        return (\n            <div className={classes.root}>\n                <InlineMessage type='warn'>\n                    <Typography variant='h5' component='h3'>\n                        <FormattedMessage\n                            id='Shared.AppsAndKeys.ViewSecret.please.copy.secret'\n                            defaultMessage='Please Copy the Consumer Secret'\n                        />\n                    </Typography>\n                    <Typography component='p'>\n                        <FormattedMessage\n                            id='Shared.AppsAndKeys.ViewSecret.please.copy.secret.help'\n                            defaultMessage={`Please make a note of the regenerated consumer \n                            secret value as it will be displayed only once.`}\n                        />\n                    </Typography>\n                </InlineMessage>\n                <div className={classes.epWrapper}>\n                    <Typography className={classes.prodLabel}>\n                        <FormattedMessage\n                            id='Shared.AppsAndKeys.ViewSecret.consumer.secret'\n                            defaultMessage='Consumer Secret'\n                        />\n                    </Typography>\n                    <TextField\n                        defaultValue={secret.consumerSecret}\n                        id='bootstrap-input'\n                        multiline\n                        rows={4}\n                        InputProps={{\n                            disableUnderline: true,\n                            classes: {\n                                root: classes.bootstrapRoot,\n                                input: classes.bootstrapInput,\n                            },\n                        }}\n                        InputLabelProps={{\n                            shrink: true,\n                            className: classes.bootstrapFormLabel,\n                        }}\n                    />\n                    <Tooltip title={secretCopied ? 'Copied' : 'Copy to clipboard'} placement='right'>\n                        <CopyToClipboard text={secret.consumerSecret} onCopy={this.onCopy('secretCopied')}>\n                            <FileCopy color='secondary'>file_copy</FileCopy>\n                        </CopyToClipboard>\n                    </Tooltip>\n                </div>\n            </div>\n        );\n    }\n}\n\nViewSecret.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    secret: PropTypes.shape({\n        consumerSecret: PropTypes.string.isRequired,\n    }).isRequired,\n};\n\nexport default withStyles(styles)(ViewSecret);\n","/**\n * Copyright (c) 2018, WSO2 Inc. (http://wso2.com) All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\"use strict\";\nimport APIClientFactory from \"./APIClientFactory\";\nimport Resource from \"./Resource\";\nimport Utils from \"./Utils\";\n\n/***\n * Class to expose Subscription {Resource} related operations\n */\n\nexport default class Subscription extends Resource {\n\n    constructor() {\n        super();\n        this.client = new APIClientFactory().getAPIClient(Utils.getEnvironment().label).client;\n    }\n\n    /**\n     * Get all Subscriptions\n     * @param apiId id of the API\n     * @param applicationId id of the application \n     * @param limit subscription count to return\n     * @returns {promise} With all subscription for given applicationId or apiId.\n     */\n    getSubscriptions(apiId, applicationId, limit = 25) {\n        var promise_get = this.client.then((client) => {\n            return client.apis[\"Subscriptions\"].get_subscriptions(\n                { apiId: apiId, applicationId: applicationId, limit });\n        }\n        );\n        return promise_get;\n    }\n\n    /**\n     * Get a single subscription\n     * @param subscriptionUUID subscription UUID\n     */\n    getSubscription(subscriptionUUID) {\n        var promised_subscription = this.client.then((client) => {\n            return client.apis[\"Subscriptions\"].get_subscriptions__subscriptionId_(\n                { subscriptionId: subscriptionUUID });\n        }\n        );\n        return promised_subscription;\n    }\n\n    /**\n    * Get pending invoice if available * @param {*} subscriptionUUID\n    */\n    getMonetizationInvoice(subscriptionUUID) {\n        const promiseInvoice = this.client.then(client => {\n            return client.apis['API Monetization'].get_subscriptions__subscriptionId__usage( \n                {\n                    subscriptionId: subscriptionUUID \n                }\n            );\n        });\n        return promiseInvoice;\n    }\n\n    /**\n    * Delete subscription\n    * @param subscriptionId id of the subscription\n    * @returns {promise} With 200 OK.\n    */\n    deleteSubscription(subscriptionId) {\n        const promised_delete_subscription = this.client.then((client) => {\n            return client.apis[\"Subscriptions\"].delete_subscriptions__subscriptionId_(\n                {\n                    subscriptionId: subscriptionId,\n                }\n            );\n        });\n        return promised_delete_subscription;\n    }\n\n   /**\n    * Update subscription\n    * @param subscriptionId id of the subscription\n    * @param throttlingPolicy throttling tier\n    * @returns {promise} With 200 OK.\n    */\n    updateSubscription(applicationId, apiId, subscriptionId, throttlingPolicy, status, requestedThrottlingPolicy) {\n        const promised_update_subscription = this.client.then((client) => {\n        let subscriptionData = null;\n\n            subscriptionData = {\n                applicationId, apiId, subscriptionId, throttlingPolicy: throttlingPolicy, status, requestedThrottlingPolicy\n            };\n\n            const payload = { \n                subscriptionId: subscriptionId,\n                body: subscriptionData \n            };\n            return client.apis.Subscriptions.put_subscriptions__subscriptionId_(payload, { 'Content-Type': 'application/json' });\n        });\n        return promised_update_subscription;\n    }\n}\n\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport Typography from '@material-ui/core/Typography';\nimport Chip from '@material-ui/core/Chip';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from '@material-ui/core/Select';\n\n// Styles for Grid and Paper elements\nconst styles = theme => ({\n    FormControl: {\n        padding: theme.spacing(2),\n        width: '100%',\n    },\n    FormControlOdd: {\n        padding: theme.spacing(2),\n        backgroundColor: theme.palette.background.paper,\n        width: '100%',\n    },\n    quotaHelp: {\n        position: 'relative',\n    },\n    chips: {\n        display: 'flex',\n        flexWrap: 'wrap',\n    },\n    chip: {\n        margin: theme.spacing(0.25),\n    },\n});\n\nconst MenuProps = {\n    PaperProps: {\n        style: {\n            maxHeight: 224,\n            width: 250,\n        },\n    },\n};\n\n/**\n * Used to display generate acctoken UI\n */\nconst tokens = (props) => {\n    /**\n    * This method is used to handle the updating of create application\n    * request object.\n    * @param {*} field field that should be updated in appliction request\n    * @param {*} event event fired\n    */\n    const handleChange = (field, event) => {\n        const { accessTokenRequest, updateAccessTokenRequest } = props;\n        const newRequest = { ...accessTokenRequest };\n\n        const { target: currentTarget } = event;\n\n        switch (field) {\n            case 'scopesSelected':\n                newRequest.scopesSelected = currentTarget.value;\n                break;\n            case 'keyType':\n                newRequest.keyType = currentTarget.value;\n                break;\n            default:\n                break;\n        }\n        updateAccessTokenRequest(newRequest);\n    };\n    const {\n        classes, accessTokenRequest, subscriptionScopes,\n    } = props;\n\n    return (\n        <>\n            <FormControl\n                margin='normal'\n                className={classes.FormControlOdd}\n                disabled={subscriptionScopes.length === 0}\n            >\n                <InputLabel htmlFor='quota-helper' className={classes.quotaHelp}>\n                    <FormattedMessage\n                        id='Shared.AppsAndKeys.Tokens.when.you.generate.scopes'\n                        defaultMessage='Scopes'\n                    />\n\n                </InputLabel>\n                <Select\n                    name='scopesSelected'\n                    multiple\n                    value={accessTokenRequest.scopesSelected}\n                    onChange={e => handleChange('scopesSelected', e)}\n                    input={<Input id='select-multiple-chip' />}\n                    renderValue={selected => (\n                        <div className={classes.chips}>\n                            {selected.map(value => (\n                                <Chip key={value} label={value} className={classes.chip} />\n                            ))}\n                        </div>\n                    )}\n                    MenuProps={MenuProps}\n                >\n                    {subscriptionScopes.map(scope => (\n                        <MenuItem\n                            key={scope}\n                            value={scope}\n                        >\n                            {scope}\n                        </MenuItem>\n                    ))}\n                </Select>\n                <Typography variant='caption'>\n                    <FormattedMessage\n                        id='Shared.AppsAndKeys.Tokens.when.you.generate'\n                        defaultMessage={'When you generate access tokens to APIs protected by scope/s,'\n                            + ' you can select the scope/s and then generate the token for it. Scopes enable '\n                            + 'fine-grained access control to API resources based on user roles. You define scopes to '\n                            + 'an API resource. When a user invokes the API, his/her OAuth 2 bearer token cannot grant '\n                            + 'access to any API resource beyond its associated scopes.'}\n                    />\n                </Typography>\n            </FormControl>\n        </>\n    );\n};\ntokens.contextTypes = {\n    intl: PropTypes.shape({}).isRequired,\n};\nexport default withStyles(styles)(tokens);\n","import React from 'react';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport { FormattedMessage } from 'react-intl';\nimport { app } from 'Settings';\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        flexGrow: 1,\n    },\n    messageWrapper: {\n        marginTop: theme.spacing(4),\n        padding: theme.spacing(2),\n        textAlign: 'center',\n        color: theme.palette.text.secondary,\n    },\n}));\n\nexport default function NoApi() {\n    const classes = useStyles();\n    const theme = useTheme();\n\n    return (\n        <div className={classes.root}>\n            <Grid container spacing={3}>\n                <Grid item xs={12} className={classes.messageWrapper}>\n                    <img alt='API icon' src={app.context + theme.custom.noApiImage} className={classes.messageWrapper} />\n                    <Typography variant='h5' gutterBottom>\n                        <FormattedMessage id='Apis.Listing.NoApi.nodata.title' defaultMessage='No APIs Available' />\n                    </Typography>\n                    <Typography variant='subtitle1' gutterBottom>\n                        <FormattedMessage\n                            id='Apis.Listing.NoApi.nodata.content'\n                            defaultMessage='There are no APIs to display right now.'\n                        />\n                    </Typography>\n                </Grid>\n            </Grid>\n        </div>\n    );\n}\n","/* eslint-disable react/prop-types */\n/*\n * Copyright (c) 2017, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useEffect, useState } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport Typography from '@material-ui/core/Typography';\nimport { withStyles } from '@material-ui/core/styles';\nimport CustomIcon from './CustomIcon';\n\nconst styles = (theme) => ({\n    leftLInkText: {\n        color: theme.palette.getContrastText(theme.custom.leftMenu.background),\n        textTransform: 'capitalize',\n        width: '100%',\n        textAlign: 'left',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n        whiteSpace: 'nowrap',\n    },\n    leftLInkText_IconLeft: {\n        paddingLeft: 10,\n    },\n    LeftMenu: {\n        backgroundColor: theme.custom.leftMenu.background,\n        width: theme.custom.leftMenu.width,\n        textAlign: 'center',\n        fontFamily: theme.typography.fontFamily,\n        position: 'absolute',\n        bottom: 0,\n        left: 0,\n        top: 0,\n    },\n    leftLInk: {\n        paddingTop: theme.spacing(0.6),\n        paddingBottom: theme.spacing(0.6),\n        paddingLeft: theme.spacing(1),\n        paddingRight: 0,\n        fontSize: theme.typography.caption.fontSize,\n        cursor: 'pointer',\n        textDecoration: 'none',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    leftLink_Icon: {\n        color: theme.palette.getContrastText(theme.custom.leftMenu.background),\n        fontSize: theme.custom.leftMenu.iconSize + 'px',\n    },\n    leftLink_IconLeft: {\n        display: 'flex',\n        alignItems: 'center',\n    },\n    noIcon: {\n        display: 'none',\n    },\n    leftLInkText_NoText: {\n        display: 'none',\n    },\n    submenu: {\n        paddingLeft: theme.spacing(4),\n    },\n});\n/**\n * Renders the left menu section.\n * @param {JSON} props props passed from parent\n * @returns {JSX} Leftmenu element.\n */\nfunction LeftMenuItem(props) {\n    const [selected, setSelected] = useState(false);\n\n    const {\n        classes, theme, Icon, to, history, text, route, submenu, open\n    } = props;\n    const routeToCheck = route || text;\n    const { leftMenu } = theme.custom;\n    const strokeColor = theme.palette.getContrastText(leftMenu.background);\n    const { iconSize } = leftMenu;\n    const ditectCurrentMenu = (location = null) => {\n        if (!location) {\n            location = window.location;\n        }\n        const { pathname } = location;\n\n        const test1 = new RegExp('/' + routeToCheck + '$', 'g');\n        const test2 = new RegExp('/' + routeToCheck + '/', 'g');\n        if (pathname.match(test1) || pathname.match(test2)) {\n            setSelected(true);\n        } else {\n            setSelected(false);\n        }\n\n\n    };\n    useEffect(() => {\n        ditectCurrentMenu();\n    }, []);\n    history.listen((location) => {\n        ditectCurrentMenu(location);\n    });\n    let activeBackground = '';\n    if (selected && !submenu) {\n        activeBackground = leftMenu.leftMenuActive;\n    } else if (selected && submenu) {\n        activeBackground = leftMenu.leftMenuActiveSubmenu;\n    }\n    return (\n        <Link\n            className={classNames(\n                classes.leftLInk,\n                {\n                    [classes.leftLink_IconLeft]: leftMenu === 'icon left',\n                    [classes.submenu]: submenu,\n                },\n                'leftLInk',\n            )}\n            to={to}\n            style={{ backgroundColor: activeBackground }}\n        >\n            {!submenu && (\n                // If the icon pro ( which is comming from the React Material library )\n                // is coming we add css class and render.\n                // If leftMenu='no icon' at the theme object we hide the icon. Also we add static classes to\n                // allow customers theme\n                // the product without compiling.\n                Icon ? (\n                    React.cloneElement(Icon, {\n                        className: classNames(\n                            classes.leftLink_Icon,\n                            {\n                                [classes.noIcon]: leftMenu.style === 'no icon',\n                                [classes.submenu]: submenu,\n                            },\n                            'leftLink_Icon',\n                        ),\n                    })\n                ) : (\n                        // We can also add custom icons\n                        <CustomIcon\n                            strokeColor={strokeColor}\n                            width={iconSize}\n                            height={iconSize}\n                            aria-label={ props.text + ' icon'}\n                            icon={props.iconText}\n                            className={classNames(\n                                classes.leftLInk,\n                                {\n                                    [classes.noIcon]: leftMenu.style === 'no icon',\n                                },\n                                'leftLink_Icon',\n                            )}\n                        />\n                    ))}\n            {open && (\n                <Typography\n                    className={classNames(\n                        classes.leftLInkText,\n                        {\n                            [classes.leftLInkText_IconLeft]: leftMenu.style === 'icon left',\n                            [classes.leftLInkText_NoText]: leftMenu.style === 'no text',\n                        },\n                        'leftLInkText',\n                    )}\n                >\n                    {props.text}\n                </Typography>\n            )}\n            {!open && (\n                <Typography\n                    className={classNames(\n                        {\n                            [classes.leftLInkText_IconLeft]: leftMenu.style === 'icon left',\n                        },\n                        'leftLInkText',\n                    )}\n                />\n            )}\n            \n\n        </Link>\n    );\n}\nLeftMenuItem.defaultProps = {\n    route: null,\n    iconText: null,\n    Icon: null,\n    submenu: false,\n};\nLeftMenuItem.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    theme: PropTypes.shape({}).isRequired,\n    Icon: PropTypes.element,\n    text: PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.shape({}),\n    ]).isRequired,\n    to: PropTypes.string.isRequired,\n    route: PropTypes.string,\n    iconText: PropTypes.string,\n    history: PropTypes.shape({\n        location: PropTypes.shape({}).isRequired,\n    }).isRequired,\n    submenu: PropTypes.bool,\n};\nexport default withRouter(withStyles(styles, { withTheme: true })(LeftMenuItem));\n","import React from 'react';\nimport { Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle } from '@material-ui/core/';\nimport Slide from '@material-ui/core/Slide';\nimport { FormattedMessage } from 'react-intl';\nimport PropTypes from 'prop-types';\n\nconst DeleteConfirmation = (props) => {\n    const { handleAppDelete, isDeleteOpen, toggleDeleteConfirmation } = props;\n    return (\n        <Dialog open={isDeleteOpen} transition={Slide} role='alertdialog'>\n            <DialogTitle>\n                <FormattedMessage\n                    id='Applications.Listing.DeleteConfirmation.dialog.title'\n                    defaultMessage='Delete Application'\n                />\n            </DialogTitle>\n            <DialogContent>\n                <DialogContentText>\n                    <FormattedMessage\n                        id='Applications.Listing.DeleteConfirmation.dialog.text.description'\n                        defaultMessage='The application will be removed'\n                    />\n                </DialogContentText>\n            </DialogContent>\n            <DialogActions>\n                <Button dense onClick={toggleDeleteConfirmation}>\n                    <FormattedMessage\n                        id='Applications.Listing.DeleteConfirmation.dialog.cancel'\n                        defaultMessage='Cancel'\n                    />\n                </Button>\n                <Button\n                    size='small'\n                    variant='outlined'\n                    color='primary'\n                    onClick={handleAppDelete}\n                >\n                    <FormattedMessage\n                        id='Applications.Listing.DeleteConfirmation.dialog,delete'\n                        defaultMessage='Delete'\n                    />\n                </Button>\n            </DialogActions>\n        </Dialog>\n    );\n};\nDeleteConfirmation.propTypes = {\n    handleAppDelete: PropTypes.func.isRequired,\n    isDeleteOpen: PropTypes.bool.isRequired,\n    toggleDeleteConfirmation: PropTypes.func.isRequired,\n};\nexport default DeleteConfirmation;\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M11 5v5.59H7.5l4.5 4.5 4.5-4.5H13V5h-2zm-5 9c0 3.31 2.69 6 6 6s6-2.69 6-6h-2c0 2.21-1.79 4-4 4s-4-1.79-4-4H6z\"\n}), 'PlayForWork');\n\nexports.default = _default;","/*\n * Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport Typography from '@material-ui/core/Typography';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport PlayForWorkIcon from '@material-ui/icons/PlayForWork';\nimport { ScopeValidation, resourceMethods, resourcePaths } from 'AppComponents/Shared/ScopeValidation';\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\n\nfunction ImportExternalApp(props) {\n    const {\n        consumerKey, consumerSecret, onChange, isUserOwner, key, provideOAuthKeySecret, importDisabled,\n    } = props;\n    const intl = useIntl();\n\n    const [open, setOpen] = React.useState(false);\n\n    const handleClickOpen = () => {\n        setOpen(true);\n    };\n\n    const handleClose = () => {\n        setOpen(false);\n    };\n    /**\n     * Handle onChange of provided consumer key and secret\n     *\n     * @param event\n     */\n    function handleChange(event) {\n        if (onChange) {\n            onChange(event);\n        }\n    }\n    return (\n        <>\n            <Button\n                variant=\"outlined\"\n                color=\"secondary\"\n                startIcon={<PlayForWorkIcon />}\n                onClick={handleClickOpen}\n                disabled={importDisabled}\n            >\n                <FormattedMessage\n                    defaultMessage='Provide Existing OAuth Keys'\n                    id='Shared.AppsAndKeys.ImportExternalApp.provide.oauth'\n                />\n            </Button>\n            <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\n                <DialogTitle id=\"form-dialog-title\"><FormattedMessage\n                    defaultMessage='Provide Existing OAuth Keys'\n                    id='Shared.AppsAndKeys.ImportExternalApp.provide.oauth'\n                /></DialogTitle>\n                <DialogContent>\n\n                    <Grid container spacing={3} direction='column'>\n                        <Grid item xs={12}>\n                            <TextField\n                                id='provided-consumer-key'\n                                name='providedConsumerKey'\n                                label={intl.formatMessage({\n                                    defaultMessage: 'Consumer Key',\n                                    id: 'Shared.AppsAndKeys.ImportExternalApp.consumer.key',\n                                })}\n                                value={consumerKey}\n                                onChange={e => handleChange(e)}\n                                margin='normal'\n                                fullWidth\n                                disabled={!isUserOwner}\n                                variant='outlined'\n                            />\n                            <FormControl>\n                                <FormHelperText id='consumer-key-helper-text'>\n                                    <FormattedMessage\n                                        id='Shared.AppsAndKeys.ImportExternalApp.consumer.key.title'\n                                        defaultMessage='Consumer Key of the OAuth application'\n                                    />\n                                </FormHelperText>\n                            </FormControl>\n                        </Grid>\n                        <Grid item xs={12}>\n                            <TextField\n                                id='provided-consumer-secret'\n                                name='providedConsumerSecret'\n                                label={intl.formatMessage({\n                                    defaultMessage: 'Consumer Secret',\n                                    id: 'Shared.AppsAndKeys.ImportExternalApp.consumer.secret',\n                                })}\n                                value={consumerSecret}\n                                onChange={e => handleChange(e)}\n                                margin='normal'\n                                fullWidth\n                                disabled={!isUserOwner}\n                                variant='outlined'\n                            />\n                            <FormControl>\n                                <FormHelperText id='consumer-secret-helper-text'>\n                                    <FormattedMessage\n                                        id='Shared.AppsAndKeys.ImportExternalApp.consumer.secret.of.application'\n                                        defaultMessage='Consumer Secret of the OAuth application'\n                                    />\n                                </FormHelperText>\n                            </FormControl>\n                        </Grid>\n                    </Grid>\n\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={handleClose} color=\"primary\">\n                        <FormattedMessage\n                            defaultMessage='Cancel'\n                            id='Shared.AppsAndKeys.ImportExternalApp.cancel'\n                        />\n                    </Button>\n                    <ScopeValidation\n                        resourcePath={resourcePaths.APPLICATION_GENERATE_KEYS}\n                        resourceMethod={resourceMethods.POST}\n                    >\n                        {!isUserOwner ? (\n                            <>\n                                <Button\n                                    variant='contained'\n                                    color='primary'\n                                    onClick={() => provideOAuthKeySecret()}\n                                    disabled={!isUserOwner}\n                                >\n                                    {\n                                        key\n                                            ? (\n                                                <FormattedMessage\n                                                    defaultMessage='Update'\n                                                    id='Shared.AppsAndKeys.ImportExternalApp.provide.\n                                                    oauth.button.update'\n                                                />\n                                            )\n                                            : (\n                                                <FormattedMessage\n                                                    defaultMessage='Provide'\n                                                    id='Shared.AppsAndKeys.ImportExternalApp.provide.oauth.button.provide'\n                                                />\n                                            )\n                                    }\n                                </Button>\n                                <Typography variant='caption'>\n                                    <FormattedMessage\n                                        defaultMessage='Only owner can provide keys'\n                                        id='Shared.AppsAndKeys.ImportExternalApp.key.provide.user.owner'\n                                    />\n                                </Typography>\n                            </>\n                        ) : (\n                                <Button\n                                    variant='contained'\n                                    color='primary'\n                                    onClick={() => provideOAuthKeySecret()}\n                                >\n                                    {\n                                        key\n                                            ? (\n                                                <FormattedMessage\n                                                    defaultMessage='Update'\n                                                    id='Shared.AppsAndKeys.ImportExternalApp.provide.oauth.button.update'\n                                                />\n                                            )\n                                            : (\n                                                <FormattedMessage\n                                                    defaultMessage='Provide'\n                                                    id='Shared.AppsAndKeys.ImportExternalApp.provide.oauth.button.provide'\n                                                />\n                                            )\n                                    }\n                                </Button>\n                            )}\n                    </ScopeValidation>\n                </DialogActions>\n            </Dialog>\n        </>\n    );\n}\nImportExternalApp.propTypes = {\n    intl: PropTypes.shape({}).isRequired,\n    onChange: PropTypes.func.isRequired,\n    consumerKey: PropTypes.string,\n    consumerSecret: PropTypes.string,\n    isUserOwner: PropTypes.string,\n    key: PropTypes.shape({}).isRequired,\n    provideOAuthKeySecret: PropTypes.func.isRequired,\n    importDisabled: PropTypes.bool,\n};\n\nImportExternalApp.defaultProps = {\n    consumerKey: '',\n    consumerSecret: '',\n    isUserOwner: false,\n    importDisabled: false,\n};\n\nexport default ImportExternalApp;\n\n\n\n\n","/*\n * Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useState, useEffect } from 'react';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Chip from '@material-ui/core/Chip';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableRow from '@material-ui/core/TableRow';\nimport { withStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Typography from '@material-ui/core/Typography';\nimport PropTypes from 'prop-types';\nimport { injectIntl } from 'react-intl';\nimport Select from '@material-ui/core/Select';\nimport Input from '@material-ui/core/Input';\nimport Box from '@material-ui/core/Box';\n\n\nconst styles = theme => ({\n    FormControl: {\n        paddingTop: theme.spacing(2),\n        paddingBottom: theme.spacing(2),\n        paddingLeft: 0,\n        width: '100%',\n    },\n    FormControlOdd: {\n        padding: theme.spacing(2),\n        width: '100%',\n    },\n    button: {\n        marginLeft: theme.spacing(1),\n    },\n    quotaHelp: {\n        position: 'relative',\n    },\n    checkboxWrapper: {\n        display: 'flex',\n    },\n    checkboxWrapperColumn: {\n        display: 'flex',\n        flexDirection: 'row',\n    },\n    group: {\n        flexDirection: 'row',\n    },\n    removeHelperPadding: {\n        '& p': {\n            margin: '8px 0px',\n        },\n    },\n});\n\n/**\n *\n *\n * @class AppConfiguration\n * @extends {React.Component}\n */\nconst AppConfiguration = (props) => {\n\n    const {\n        classes, config, isUserOwner, previousValue, handleChange,\n    } = props;\n\n    const [selectedValue, setSelectedValue] = useState(previousValue);\n\n    /**\n     * This method is used to handle the updating of key generation\n     * request object.\n     * @param {*} field field that should be updated in key request\n     * @param {*} event event fired\n     */\n    const handleAppRequestChange = (event) => {\n        const { target: currentTarget } = event;\n        setSelectedValue(currentTarget.value);\n        handleChange('additionalProperties', event);\n    }\n    /**\n     * Update the state when new props are available\n     */\n    useEffect(() => {\n        setSelectedValue(previousValue);\n    }, [previousValue])\n    return (\n        <>\n            <TableRow>\n                <TableCell component='th' scope='row' className={classes.leftCol}>\n                    {config.label}\n                </TableCell>\n                <TableCell>\n                    <Box maxWidth={600}>\n                    {config.type === 'select' && config.multiple === false ? (\n                        <TextField\n                            classes={{\n                                root: classes.removeHelperPadding,\n                            }}\n                            fullWidth\n                            id={config.name}\n                            select\n                            label={config.label}\n                            value={selectedValue}\n                            name={config.name}\n                            onChange={e => handleAppRequestChange(e)}\n                            helperText={\n                                <Typography variant='caption'>\n                                    {config.tooltip}\n                                </Typography>\n                            }\n                            margin='dense'\n                            variant='outlined'\n                            disabled={!isUserOwner}\n                        >\n                            {config.values.map(key => (\n                                <MenuItem key={key} value={key}>\n                                    {key}\n                                </MenuItem>\n                            ))}\n                        </TextField>\n                    ) : (config.type === 'select' && config.multiple === true) ? (\n                        <>\n                            <FormControl variant=\"outlined\" className={classes.formControl} fullWidth>\n                                <InputLabel id=\"multi-select-label\">{config.label}</InputLabel>\n                                <Select\n                                    labelId=\"multi-select-label\"\n                                    id=\"multi-select-outlined\"\n                                    margin='dense'\n                                    displayEmpty\n                                    name={config.name}\n                                    multiple\n                                    value={selectedValue}\n                                    onChange={e => handleAppRequestChange(e)}\n                                    input={<Input id='multi-select-outlined' />}\n                                    renderValue={selected => (\n                                        <div className={classes.chips}>\n                                            {selected.map(value => (\n                                                <Chip key={value} label={value} className={classes.chip} />\n                                            ))}\n                                        </div>\n                                    )}\n                                    helperText={\n                                        <Typography variant='caption'>\n                                            {config.tooltip}\n                                        </Typography>\n                                    }\n                                    label={config.label}\n                                >\n                                    {config.values.map(key => (\n                                        <MenuItem key={key} value={key}>\n                                            <Checkbox checked={selectedValue.indexOf(key) > -1} />\n                                            <ListItemText primary={key} />\n                                        </MenuItem>\n                                    ))}\n                                </Select>\n                            </FormControl>\n\n\n                            <Typography variant='caption'>\n                                {config.tooltip}\n                            </Typography>\n                        </>\n                    ) : (config.type === 'input') ? (\n                        <TextField\n                            classes={{\n                                root: classes.removeHelperPadding,\n                            }}\n                            fullWidth\n                            id={config.name}\n                            label={config.label}\n                            value={selectedValue}\n                            name={config.name}\n                            onChange={e => handleAppRequestChange(e)}\n                            helperText={\n                                <Typography variant='caption'>\n                                    {config.tooltip}\n                                </Typography>\n                            }\n                            margin='dense'\n                            variant='outlined'\n                            disabled={!isUserOwner}\n                        />\n                    ) : (\n                                    <TextField\n                                        classes={{\n                                            root: classes.removeHelperPadding,\n                                        }}\n                                        fullWidth\n                                        id={config.name}\n                                        label={config.label}\n                                        value={selectedValue}\n                                        name={config.name}\n                                        onChange={e => handleAppRequestChange(e)}\n                                        helperText={\n                                            <Typography variant='caption'>\n                                                {config.tooltip}\n                                            </Typography>\n                                        }\n                                        margin='dense'\n                                        variant='outlined'\n                                        disabled={!isUserOwner}\n                                    />\n                                )}\n                            </Box>\n                </TableCell>\n            </TableRow>\n        </>\n    );\n};\n\nAppConfiguration.defaultProps = {\n    notFound: false,\n};\n\nAppConfiguration.propTypes = {\n    classes: PropTypes.instanceOf(Object).isRequired,\n    previousValue: PropTypes.any.isRequired,\n    isUserOwner: PropTypes.bool.isRequired,\n    handleChange: PropTypes.func.isRequired,\n    config: PropTypes.any.isRequired,\n    notFound: PropTypes.bool,\n    intl: PropTypes.shape({ formatMessage: PropTypes.func }).isRequired,\n};\n\nexport default injectIntl(withStyles(styles)(AppConfiguration));\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useState } from 'react';\nimport Box from '@material-ui/core/Box';\nimport cloneDeep from 'lodash.clonedeep';\nimport { withStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport CopyToClipboard from 'react-copy-to-clipboard';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport IconButton from '@material-ui/core/IconButton';\nimport Icon from '@material-ui/core/Icon';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableRow from '@material-ui/core/TableRow';\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport Settings from 'Settings';\nimport PropTypes from 'prop-types';\nimport ResourceNotFound from 'AppComponents/Base/Errors/ResourceNotFound';\nimport Validation from 'AppData/Validation';\nimport AppConfiguration from './AppConfiguration';\n\nconst styles = (theme) => ({\n    FormControl: {\n        paddingTop: 0,\n        paddingBottom: theme.spacing(2),\n        paddingLeft: 0,\n        width: '100%',\n    },\n    FormControlOdd: {\n        padding: theme.spacing(2),\n        width: '100%',\n    },\n    button: {\n        marginLeft: theme.spacing(1),\n    },\n    quotaHelp: {\n        position: 'relative',\n    },\n    checkboxWrapper: {\n        display: 'flex',\n    },\n    checkboxWrapperColumn: {\n        display: 'flex',\n        flexWrap: 'wrap',\n        flexDirection: 'row',\n        whiteSpace: 'nowrap',\n    },\n    group: {\n        flexDirection: 'row',\n    },\n    removeHelperPadding: {\n        '& p': {\n            margin: '8px 0px',\n        },\n    },\n    iconStyle: {\n        cursor: 'pointer',\n        padding: '0 0 0 10px',\n    },\n    iconButton: {\n        padding: '0 0 0 10px',\n        '& .material-icons': {\n            fontSize: 16,\n        },\n    },\n    titleColumn: {\n        width: 150,\n        fontWeight: 500,\n    },\n    keyInfoTable: {\n        marginBottom: 20,\n        borderCollapse: 'collapse',\n        '& td': {\n            paddingBottom: 5,\n            borderBottom: 'solid 1px #cccc',\n        },\n    },\n    leftCol: {\n        width: 180,\n    },\n});\n/**\n *\n *\n * @class KeyConfiguration\n * @extends {React.Component}\n */\nconst KeyConfiguration = (props) => {\n    const [urlCopied, setUrlCopied] = useState(false);\n    const [callbackHelper, setCallbackHelper] = useState(false);\n    const intl = useIntl();\n    const {\n        classes, notFound, isUserOwner, keyManagerConfig, updateKeyRequest, keyRequest, updateHasError, callbackError,\n    } = props;\n    const {\n        selectedGrantTypes, callbackUrl,\n    } = keyRequest;\n    let {\n        applicationConfiguration, availableGrantTypes, description, additionalProperties,\n        enableMapOAuthConsumerApps, enableOAuthAppCreation, enableTokenEncryption, enableTokenGeneration,\n        id, name, revokeEndpoint, tokenEndpoint, type, userInfoEndpoint,\n    } = keyManagerConfig;\n    /**\n     * Get the display names for the supported grant types\n     * @param grantTypes\n     * @param grantTypeDisplayNameMap\n     */\n    const getGrantTypeDisplayList = (grantTypes, grantTypeDisplayNameMap) => {\n        const modifiedGrantTypes = {};\n        grantTypes.forEach((grantType) => {\n            modifiedGrantTypes[grantType] = grantTypeDisplayNameMap[grantType];\n            if (!grantTypeDisplayNameMap[grantType]) {\n                modifiedGrantTypes[grantType] = grantType;\n            }\n        });\n        return modifiedGrantTypes;\n    };\n\n    const callBackHasErrors = (callbackUrlLocal) => {\n        if (callbackUrlLocal === '') {\n            updateHasError(true);\n            setCallbackHelper(intl.formatMessage({\n                defaultMessage: 'Call back URL can not be empty when Implicit or Authorization Code grants are selected.',\n                id: 'Shared.AppsAndKeys.KeyConfCiguration.Invalid.callback.empty.error.text',\n            }));\n        } else {\n            setCallbackHelper(false);\n            updateHasError(false);\n        }\n    };\n    /**\n     * This method is used to handle the updating of key generation\n     * request object.\n     * @param {*} field field that should be updated in key request\n     * @param {*} event event fired\n     */\n    const handleChange = (field, event) => {\n        const newRequest = cloneDeep(keyRequest);\n        const { target: currentTarget } = event;\n        let newGrantTypes = [...newRequest.selectedGrantTypes];\n        newRequest.keyManager = name;\n\n        switch (field) {\n            case 'callbackUrl':\n                if (newGrantTypes.includes('implicit') || newGrantTypes.includes('authorization_code')) {\n                    callBackHasErrors(currentTarget.value);\n                }\n                newRequest.callbackUrl = currentTarget.value;\n                break;\n            case 'grantType':\n                if (currentTarget.checked) {\n                    newGrantTypes = [...newGrantTypes, currentTarget.id];\n                } else {\n                    newGrantTypes = newRequest.selectedGrantTypes.filter((item) => item !== currentTarget.id);\n                    if (currentTarget.id === 'implicit' || currentTarget.id === 'authorization_code') {\n                        newRequest.callbackUrl = '';\n                        setCallbackHelper(false);\n                        updateHasError(false);\n                    }\n                }\n                newRequest.selectedGrantTypes = newGrantTypes;\n                break;\n            case 'additionalProperties':\n                const clonedAdditionalProperties = newRequest.additionalProperties;\n                clonedAdditionalProperties[currentTarget.name] = currentTarget.value;\n                newRequest.additionalProperties = clonedAdditionalProperties;\n                break;\n            default:\n                break;\n        }\n        updateKeyRequest(newRequest);\n    };\n\n    const onCopy = () => {\n        setUrlCopied(true);\n\n        const caller = function () {\n            setUrlCopied(false);\n        };\n        setTimeout(caller, 2000);\n    };\n\n    const getPreviousValue = (config) => {\n        const { additionalProperties } = keyRequest;\n        const isPreviousValueSet = !!(additionalProperties && additionalProperties[config.name]);\n        let defaultValue = config.default;\n        if (config.multiple && typeof defaultValue === 'string' && defaultValue === '') {\n            defaultValue = [];\n        }\n        return isPreviousValueSet ? additionalProperties[config.name] : defaultValue;\n    };\n    /**\n     *\n     *\n     * @returns {Component}\n     * @memberof KeyConfiguration\n     */\n\n    if (notFound) {\n        return <ResourceNotFound />;\n    }\n    const grantTypeDisplayListMap = getGrantTypeDisplayList(\n        availableGrantTypes,\n        Settings.grantTypes,\n    );\n\n    // Check for additional properties for token endpoint and revoke endpoints.\n    const propPrefix = keyRequest.keyType.toLowerCase();\n    tokenEndpoint = additionalProperties[`${propPrefix}_token_endpoint`] || tokenEndpoint;\n    revokeEndpoint = additionalProperties[`${propPrefix}_revoke_endpoint`] || revokeEndpoint;\n\n    return (\n        <>\n            <Box display='flex' alignItems='center'>\n                <Table className={classes.table}>\n                    <TableBody>\n                        {(tokenEndpoint && tokenEndpoint !== '') && (\n                            <TableRow>\n                                <TableCell component='th' scope='row' className={classes.leftCol}>\n                                    <FormattedMessage\n                                        defaultMessage='Token Endpoint'\n                                        id='Shared.AppsAndKeys.KeyConfiguration.token.endpoint.label'\n                                    />\n                                </TableCell>\n                                <TableCell>\n                                    {tokenEndpoint}\n                                    <Tooltip\n                                        title={\n                                            urlCopied\n                                                ? intl.formatMessage({\n                                                    defaultMessage: 'Copied',\n                                                    id: 'Shared.AppsAndKeys.KeyConfiguration.copied',\n                                                })\n                                                : intl.formatMessage({\n                                                    defaultMessage: 'Copy to clipboard',\n                                                    id: 'Shared.AppsAndKeys.KeyConfiguration.copy.to.clipboard',\n                                                })\n                                        }\n                                        placement='right'\n                                        className={classes.iconStyle}\n                                    >\n                                        <CopyToClipboard\n                                            text={tokenEndpoint}\n                                            onCopy={onCopy}\n                                        >\n                                            <IconButton\n                                                aria-label='Copy to clipboard'\n                                                classes={{ root: classes.iconButton }}\n                                            >\n                                                <Icon color='secondary'>file_copy</Icon>\n                                            </IconButton>\n                                        </CopyToClipboard>\n                                    </Tooltip>\n                                </TableCell>\n                            </TableRow>\n                        )}\n                        {(revokeEndpoint && revokeEndpoint !== '') && (\n                            <TableRow>\n                                <TableCell component='th' scope='row' className={classes.leftCol}>\n                                    <FormattedMessage\n                                        defaultMessage='Revoke Endpoint'\n                                        id='Shared.AppsAndKeys.KeyConfiguration.revoke.endpoint.label'\n                                    />\n                                </TableCell>\n                                <TableCell>\n                                    {revokeEndpoint}\n                                    <Tooltip\n                                        title={\n                                            urlCopied\n                                                ? intl.formatMessage({\n                                                    defaultMessage: 'Copied',\n                                                    id: 'Shared.AppsAndKeys.KeyConfiguration.copied',\n                                                })\n                                                : intl.formatMessage({\n                                                    defaultMessage: 'Copy to clipboard',\n                                                    id: 'Shared.AppsAndKeys.KeyConfiguration.copy.to.clipboard',\n                                                })\n                                        }\n                                        placement='right'\n                                        className={classes.iconStyle}\n                                    >\n                                        <CopyToClipboard\n                                            text={revokeEndpoint}\n                                            onCopy={onCopy}\n                                        >\n                                            <IconButton\n                                                aria-label='Copy to clipboard'\n                                                classes={{ root: classes.iconButton }}\n                                            >\n                                                <Icon color='secondary'>file_copy</Icon>\n                                            </IconButton>\n                                        </CopyToClipboard>\n                                    </Tooltip>\n                                </TableCell>\n                            </TableRow>\n                        )}\n                        {(userInfoEndpoint && userInfoEndpoint !== '') && (\n                            <TableRow>\n                                <TableCell component='th' scope='row' className={classes.leftCol}>\n                                    <FormattedMessage\n                                        defaultMessage='User Info Endpoint'\n                                        id='Shared.AppsAndKeys.KeyConfiguration.userinfo.endpoint.label'\n                                    />\n                                </TableCell>\n                                <TableCell>\n                                    {userInfoEndpoint}\n                                    <Tooltip\n                                        title={\n                                            urlCopied\n                                                ? intl.formatMessage({\n                                                    defaultMessage: 'Copied',\n                                                    id: 'Shared.AppsAndKeys.KeyConfiguration.copied',\n                                                })\n                                                : intl.formatMessage({\n                                                    defaultMessage: 'Copy to clipboard',\n                                                    id: 'Shared.AppsAndKeys.KeyConfiguration.copy.to.clipboard',\n                                                })\n                                        }\n                                        placement='right'\n                                        className={classes.iconStyle}\n                                    >\n                                        <CopyToClipboard\n                                            text={userInfoEndpoint}\n                                            onCopy={onCopy}\n                                        >\n                                            <IconButton\n                                                aria-label='Copy to clipboard'\n                                                classes={{ root: classes.iconButton }}\n                                            >\n                                                <Icon color='secondary'>file_copy</Icon>\n                                            </IconButton>\n                                        </CopyToClipboard>\n                                    </Tooltip>\n                                </TableCell>\n                            </TableRow>\n                        )}\n                        <TableRow>\n                            <TableCell component='th' scope='row' className={classes.leftCol}>\n                                <FormattedMessage\n                                    id='Shared.AppsAndKeys.KeyConfiguration.grant.types'\n                                    defaultMessage='Grant Types'\n                                />\n\n                            </TableCell>\n                            <TableCell>\n                                <div className={classes.checkboxWrapperColumn}>\n                                    {Object.keys(grantTypeDisplayListMap).map((key) => {\n                                        const value = grantTypeDisplayListMap[key];\n                                        return (\n                                            <FormControlLabel\n                                                control={(\n                                                    <Checkbox\n                                                        id={key}\n                                                        checked={!!(selectedGrantTypes\n                                                                && selectedGrantTypes.includes(key))}\n                                                        onChange={(e) => handleChange('grantType', e)}\n                                                        value={value}\n                                                        disabled={!isUserOwner}\n                                                        color='primary'\n                                                    />\n                                                )}\n                                                label={value}\n                                                key={key}\n                                            />\n                                        );\n                                    })}\n                                </div>\n                                <FormHelperText>\n                                    <FormattedMessage\n                                        defaultMessage={`The application can use the following grant types to generate \n                            Access Tokens. Based on the application requirement,you can enable or disable \n                            grant types for this application.`}\n                                        id='Shared.AppsAndKeys.KeyConfiguration.the.application.can'\n                                    />\n                                </FormHelperText>\n\n                            </TableCell>\n                        </TableRow>\n                        <TableRow>\n                            <TableCell component='th' scope='row' className={classes.leftCol}>\n                                <FormattedMessage\n                                    defaultMessage='Callback URL'\n                                    id='Shared.AppsAndKeys.KeyConfiguration.callback.url.label'\n                                />\n\n                            </TableCell>\n                            <TableCell>\n                                <Box maxWidth={600}>\n                                    <TextField\n                                        margin='dense'\n                                        id='callbackURL'\n                                        label={(\n                                            <FormattedMessage\n                                                defaultMessage='Callback URL'\n                                                id='Shared.AppsAndKeys.KeyConfiguration.callback.url.label'\n                                            />\n                                        )}\n                                        value={callbackUrl}\n                                        name='callbackURL'\n                                        onChange={(e) => handleChange('callbackUrl', e)}\n                                        helperText={callbackHelper || (\n                                            <FormattedMessage\n                                                defaultMessage={`Callback URL is a redirection URI in the client\n                            application which is used by the authorization server to send the\n                            client's user-agent (usually web browser) back after granting access.`}\n                                                id='Shared.AppsAndKeys.KeyConfCiguration.callback.url.helper.text'\n                                            />\n                                        )}\n                                        variant='outlined'\n                                        disabled={!isUserOwner\n                                            || (selectedGrantTypes && !selectedGrantTypes.includes('authorization_code')\n                                                && !selectedGrantTypes.includes('implicit'))}\n                                        error={callbackError}\n                                        placeholder={intl.formatMessage({\n                                            defaultMessage: 'http://url-to-webapp',\n                                            id: 'Shared.AppsAndKeys.KeyConfiguration.url.to.webapp',\n                                        })}\n                                        fullWidth\n                                    />\n                                </Box>\n                            </TableCell>\n                        </TableRow>\n                        {applicationConfiguration.length > 0 && applicationConfiguration.map((config) => (\n                            <AppConfiguration\n                                config={config}\n                                previousValue={getPreviousValue(config)}\n                                isUserOwner={isUserOwner}\n                                handleChange={handleChange}\n                            />\n                        ))}\n                    </TableBody>\n                </Table>\n            </Box>\n        </>\n    );\n};\nKeyConfiguration.defaultProps = {\n    notFound: false,\n    validating: false,\n};\nKeyConfiguration.propTypes = {\n    classes: PropTypes.instanceOf(Object).isRequired,\n    keyRequest: PropTypes.shape({\n        callbackUrl: PropTypes.string,\n        selectedGrantTypes: PropTypes.array,\n    }).isRequired,\n    isUserOwner: PropTypes.bool.isRequired,\n    isKeysAvailable: PropTypes.bool.isRequired,\n    keyManagerConfig: PropTypes.any.isRequired,\n    notFound: PropTypes.bool,\n    setGenerateEnabled: PropTypes.func.isRequired,\n    updateKeyRequest: PropTypes.func.isRequired,\n    validating: PropTypes.bool,\n};\n\n\nexport default withStyles(styles)(KeyConfiguration);\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useState, useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Typography } from '@material-ui/core';\nimport CopyToClipboard from 'react-copy-to-clipboard';\nimport FileCopy from '@material-ui/icons/FileCopy';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { FormattedMessage, injectIntl } from 'react-intl';\n\nconst useStyles = makeStyles(theme => ({\n    code: {\n        padding: theme.spacing(1),\n        marginBottom: theme.spacing(2),\n        background: theme.palette.grey[200],\n        color: '#da2316',\n        flex: 1,\n    },\n    command: {\n        color: '#2b62b0',\n    },\n    encodeVisible: {\n        cursor: 'pointer',\n        textDecoration: 'underline',\n    },\n    contentWrapper: {\n        display: 'flex',\n    },\n}));\n\n/**\n *\n * @param {*} props\n */\nfunction ViewCurl(props) {\n    const classes = useStyles();\n\n    const {\n        keys: { consumerKey, consumerSecret },\n        intl,\n        keyType,\n        keyManagerConfig,\n    } = props;\n    const bas64Encoded = window.btoa(consumerKey + ':' + consumerSecret);\n    const [showReal, setShowReal] = useState(false);\n    const [tokenCopied, setTokenCopied] = useState(false);\n    const onCopy = () => {\n        setTokenCopied(true);\n        const caller = function () {\n            setTokenCopied(false);\n        };\n        setTimeout(caller, 4000);\n    };\n\n    const applyReal = () => {\n        setShowReal(!showReal);\n    };\n\n\n    // Check for additional properties for token endpoint and revoke endpoints.\n    const { additionalProperties } = keyManagerConfig;\n    let { tokenEndpoint } = keyManagerConfig;\n    const propPrefix = keyType.toLowerCase();\n    tokenEndpoint = additionalProperties[`${propPrefix}_token_endpoint`] || tokenEndpoint;\n\n    return (\n        <React.Fragment>\n            <Typography>\n                <FormattedMessage\n                    id='Shared.AppsAndKeys.ViewCurl.help'\n                    defaultMessage='The following cURL command shows how to generate an access token using\n                            the Password Grant type.'\n                />\n            </Typography>\n\n            <div className={classes.contentWrapper}>\n                <div className={classes.code}>\n                    <div>\n                        <span className={classes.command}>curl -k -X POST </span> {tokenEndpoint}\n                        <span className={classes.command}> -d </span>{' '}\n                        {'\"grant_type=password&username=Username&password=Password\"'}\n                    </div>\n                    <div>\n                        <span className={classes.command}> -H </span>\n                        {'\"Authorization: Basic'}\n                        <a onClick={applyReal} className={classes.encodeVisible}>\n                            {showReal ? ' ' + bas64Encoded : ' Base64(consumer-key:consumer-secret)'}\n                        </a>\n                        {'\"'}\n                    </div>\n                </div>\n                <div>\n                    <Tooltip\n                        title={\n                            tokenCopied\n                                ? intl.formatMessage({\n                                    defaultMessage: 'Copied',\n                                    id: 'Shared.AppsAndKeys.ViewCurl.copied',\n                                })\n                                : intl.formatMessage({\n                                    defaultMessage: 'Copy to clipboard',\n                                    id: 'Shared.AppsAndKeys.ViewCurl.copy.to.clipboard',\n                                })\n                        }\n                        placement='right'\n                    >\n                        <CopyToClipboard\n                            text={`curl -k -X POST ${tokenEndpoint} -d ` +\n                                '\"grant_type=password&username=Username&password=Password\" -H ' +\n                                `\"Authorization: Basic ${bas64Encoded}\"`}\n                            onCopy={onCopy}\n                        >\n                            <FileCopy color='secondary' />\n                        </CopyToClipboard>\n                    </Tooltip>\n                </div>\n            </div>\n            <Typography>\n                <FormattedMessage\n                    id='Shared.AppsAndKeys.ViewCurl.help.in.a.similar'\n                    defaultMessage={`In a similar manner, you can generate an access token using the\n                    Client Credentials grant type with the following cURL command.`}\n                />\n            </Typography>\n            <div className={classes.contentWrapper}>\n                <div className={classes.code}>\n                    <div>\n                        <span className={classes.command}>curl -k -X POST </span> {tokenEndpoint}\n                        <span className={classes.command}> -d </span>{' '}\n                        {'\"grant_type=client_credentials\"'}\n                    </div>\n                    <div>\n                        <span className={classes.command}> -H </span>\n                        {'\"Authorization: Basic'}\n                        <a onClick={applyReal} className={classes.encodeVisible}>\n                            {showReal ? ' ' + bas64Encoded : ' Base64(consumer-key:consumer-secret)'}\n                        </a>\n                        {'\"'}\n                    </div>\n                </div>\n                <div>\n                    <Tooltip title={tokenCopied ? 'Copied' : 'Copy to clipboard'} placement='right'>\n                        <CopyToClipboard\n                            text={`curl -k -X POST ${tokenEndpoint} -d ` +\n                                '\"grant_type=client_credentials\" -H' +\n                                `\"Authorization: Basic ${bas64Encoded}\"`}\n                            onCopy={onCopy}\n                        >\n                            <FileCopy color='secondary' />\n                        </CopyToClipboard>\n                    </Tooltip>\n                </div>\n            </div>\n        </React.Fragment>\n    );\n}\n\nViewCurl.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    keys: PropTypes.shape({}).isRequired,\n    apis: PropTypes.shape({}).isRequired,\n};\n\nexport default injectIntl(ViewCurl);\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport IconButton from '@material-ui/core/IconButton';\nimport Button from '@material-ui/core/Button';\nimport Alert1 from 'AppComponents/Shared/Alert';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\nimport Icon from '@material-ui/core/Icon';\nimport Grid from '@material-ui/core/Grid';\nimport CopyToClipboard from 'react-copy-to-clipboard';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport Alert from 'AppComponents/Shared/Alert';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport ResourceNotFound from '../../Base/Errors/ResourceNotFound';\nimport Loading from '../../Base/Loading/Loading';\nimport Application from '../../../data/Application';\nimport Tokens from './Tokens';\nimport ViewToken from './ViewToken';\nimport ViewSecret from './ViewSecret';\nimport ViewCurl from './ViewCurl';\n\nconst styles = (theme) => ({\n    button: {\n        margin: theme.spacing(3),\n        color: theme.palette.getContrastText(theme.palette.background.default),\n        display: 'flex',\n        alignItems: 'center',\n        fontSize: '11px',\n        cursor: 'pointer',\n        '& span': {\n            paddingLeft: 6,\n            display: 'inline-block',\n        },\n    },\n    inputWrapper: {\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems: 'center',\n        '& span, & h5, & label, & td, & li, & div, & input': {\n            color: theme.palette.getContrastText(theme.palette.background.paper),\n        },\n    },\n    copyWrapper: {\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems: 'center',\n    },\n    tokenSection: {\n        marginTop: 0,\n        marginBottom: theme.spacing(0.5),\n    },\n    margin: {\n        marginRight: theme.spacing(2),\n    },\n    dialogWrapper: {\n        '& label,& h5, & label, & td, & li, & input, & h2, & p.MuiTypography-root,& p.MuiFormHelperText-root': {\n            color: theme.palette.getContrastText(theme.palette.background.paper),\n        },\n    },\n    iconButton: {\n        padding: '0 0 0 10px',\n        '& .material-icons': {\n            fontSize: 16,\n        },\n    },\n});\n\n/**\n * Class used to displays in key generation UI\n */\nclass ViewKeys extends React.Component {\n    /**\n     * @param {*} props properties\n     */\n    constructor(props) {\n        super(props);\n        const { selectedApp } = this.props;\n        let appId;\n        if (selectedApp) {\n            appId = selectedApp.appId || selectedApp.value;\n        }\n        this.applicationPromise = Application.get(appId);\n        this.state = {\n            showCS: false,\n            open: false,\n            showToken: false,\n            showCurl: false,\n            showSecretGen: false,\n            accessTokenRequest: {\n                timeout: 3600,\n                scopesSelected: [],\n                keyType: '',\n            },\n            subscriptionScopes: [],\n            isUpdating: false,\n        };\n    }\n\n    /**\n     * Fetch Application object by ID coming from URL path params and fetch related keys to display\n     */\n    componentDidMount() {\n        const { accessTokenRequest } = this.state;\n        const { keyType } = this.props;\n        this.applicationPromise\n            .then((application) => {\n                application.getKeys().then(() => {\n                    const newRequest = { ...accessTokenRequest, keyType };\n                    const subscriptionScopes = application.subscriptionScopes\n                        .map((scope) => { return scope.key; });\n                    this.setState({ accessTokenRequest: newRequest, subscriptionScopes });\n                });\n            })\n            .catch((error) => {\n                if (process.env.NODE_ENV !== 'production') {\n                    console.error(error);\n                }\n                const { status } = error;\n                if (status === 404) {\n                    this.setState({ notFound: true });\n                }\n            });\n    }\n\n    /**\n     * Adding this here becasue it is not possible to add in the render method becasue isKeyJWT in state is used\n     * to close the dialog box and render method will casue this to be always true and cannot close the box.\n     * Rule is ignored becasue according to react docs its ok to setstate as long as we are checking a condition\n     * This is an ani pattern to be fixed later.\n     *  wso2/product-apim#5293\n     * https://reactjs.org/docs/react-component.html#componentdidupdate\n     * @param {*} prevProps previous props\n     * @memberof ViewKeys\n     */\n    componentDidUpdate(prevProps) {\n        const { isKeyJWT } = this.props;\n        if (isKeyJWT && !prevProps.isKeyJWT) {\n            // eslint-disable-next-line react/no-did-update-set-state\n            this.setState({ isKeyJWT: true });\n        }\n    }\n\n    /**\n     * Set accesstoken request in state\n     * @param {*} accessTokenRequest access token request object\n     * @memberof ViewKeys\n     */\n    updateAccessTokenRequest = (accessTokenRequest) => {\n        this.setState({ accessTokenRequest });\n    }\n\n    /**\n     * Handle onClick of the copy icon\n     * @param {*} name name of what is copied\n     * */\n    onCopy = (name) => {\n        this.setState({\n            [name]: true,\n        });\n        const that = this;\n        const elementName = name;\n        const caller = () => {\n            that.setState({\n                [elementName]: false,\n            });\n        };\n        setTimeout(caller, 4000);\n    };\n\n    /**\n     * Handle onClick of the show consumer secret icon\n     * @param data\n     * */\n    handleShowHidden = (data) => {\n        this.setState({ [data]: !this.state[data] });\n    };\n\n    /**\n     * Avoid conflict with `onClick`\n     * @param event\n     */\n    handleMouseDownGeneric = (event) => {\n        event.preventDefault();\n    };\n\n    /**\n     * Handle onCLick of generate access token\n     * */\n    handleClickOpen = () => {\n        this.setState({ open: true, showToken: false });\n    };\n\n    /**\n     * Handle onCLick of regenerate consumer secret\n     * */\n    handleSecretRegenerate = (consumerKey, keyType, keyMappingId, selectedTab) => {\n        this.applicationPromise\n            .then((application) => application.regenerateSecret(consumerKey, keyType, keyMappingId, selectedTab))\n            .then((response) => {\n                console.log('consumer secret regenerated successfully ' + response);\n                this.setState({\n                    open: true,\n                    showSecretGen: true,\n                    secretGenResponse: response,\n                });\n            })\n            .catch((error) => {\n                if (process.env.NODE_ENV !== 'production') {\n                    console.error(error);\n                }\n                const { status } = error;\n                if (status === 404) {\n                    this.setState({ notFound: true });\n                }\n            });\n    };\n\n    /**\n     * Handle onClick of get curl\n     * */\n    handleClickOpenCurl = () => {\n        this.setState({ open: true, showCurl: true });\n    };\n\n    /**\n     * Handle on close of dialog for generating access token and get curl\n     * */\n    handleClose = () => {\n        this.setState({\n            open: false, showCurl: false, isKeyJWT: false, showSecretGen: false,\n        });\n    };\n\n    /**\n     * Generate access token\n     * */\n    generateAccessToken = () => {\n        const { accessTokenRequest, isUpdating } = this.state;\n        const { selectedTab, intl } = this.props;\n        this.setState({ isUpdating: true });\n        this.applicationPromise\n            .then((application) => application.generateToken(\n                selectedTab,\n                accessTokenRequest.keyType,\n                accessTokenRequest.timeout,\n                accessTokenRequest.scopesSelected,\n            ))\n            .then((response) => {\n                console.log('token generated successfully ' + response);\n                this.setState({\n                    showToken: true,\n                    tokenResponse: response,\n                    token: response.accessToken,\n                    tokenScopes: response.tokenScopes,\n                    tokenValidityTime: response.validityTime,\n                });\n                this.setState({ isUpdating: false });\n            })\n            .catch((error) => {\n                if (process.env.NODE_ENV !== 'production') {\n                    console.error(error);\n                }\n                const { status } = error;\n                if (status === 404) {\n                    this.setState({ notFound: true });\n                } else if (status === 400) {\n                     Alert1.error(error.description ||\n                         intl.formatMessage({\n                             id: 'Shared.AppsAndKeys.TokenManager.key.generate.bad.request.error',\n                              defaultMessage: 'Error occurred when generating Access Token',\n                         })\n                     );\n                }\n                this.setState({ isUpdating: false });\n                const { response } = error;\n                if (response && response.body) {\n                    Alert.error(response.body.message);\n                }\n            });\n    };\n\n    viewKeyAndSecret = (consumerKey, consumerSecret, keyMappingId, selectedTab, isUserOwner) => {\n        const { classes, intl, selectedApp: { hashEnabled }, keyType } = this.props;\n        const { keyCopied, secretCopied, showCS } = this.state;\n        return (\n            <>\n                <Grid item xs={6}>\n                    <div className={classes.copyWrapper}>\n                        <TextField\n                            id='consumer-key'\n                            value={consumerKey}\n                            margin='dense'\n                            label={(\n                                <FormattedMessage\n                                    id='Shared.AppsAndKeys.ViewKeys.consumer.key'\n                                    defaultMessage='Consumer Key'\n                                />\n                            )}\n                            fullWidth\n                            variant='outlined'\n                            InputProps={{\n                                readOnly: true,\n                                endAdornment: (\n                                    <InputAdornment position='end'>\n                                        <Tooltip\n                                            title={\n                                                keyCopied\n                                                    ? intl.formatMessage({\n                                                        defaultMessage: 'Copied',\n                                                        id: 'Shared.AppsAndKeys.ViewKeys.copied',\n                                                    })\n                                                    : intl.formatMessage({\n                                                        defaultMessage: 'Copy to clipboard',\n                                                        id: 'Shared.AppsAndKeys.ViewKeys.copy.to',\n                                                    })\n                                            }\n                                            placement='right'\n                                        >\n                                            <CopyToClipboard\n                                                text={consumerKey}\n                                                onCopy={() => this.onCopy('keyCopied')}\n                                                classes={{ root: classes.iconButton }}\n                                            >\n                                                <IconButton aria-label='Copy to clipboard' classes={{ root: classes.iconButton }}>\n                                                    <Icon color='secondary'>\n                                                        file_copy\n                                                    </Icon>\n                                                </IconButton>\n                                            </CopyToClipboard>\n                                        </Tooltip>\n                                    </InputAdornment>\n                                ),\n                            }}\n                        />\n                    </div>\n                    <FormControl>\n                        <FormHelperText id='consumer-key-helper-text'>\n                            <FormattedMessage\n                                id='Shared.AppsAndKeys.ViewKeys.consumer.key.title'\n                                defaultMessage='Consumer Key of the application'\n                            />\n                        </FormHelperText>\n                    </FormControl>\n                </Grid>\n                <Grid item xs={6}>\n                    <div className={classes.copyWrapper}>\n                        {!hashEnabled ? (\n                            <TextField\n                                id='consumer-secret'\n                                label={(\n                                    <FormattedMessage\n                                        id='Shared.AppsAndKeys.ViewKeys.consumer.secret'\n                                        defaultMessage='Consumer Secret'\n                                    />\n                                )}\n                                type={showCS || !consumerSecret ? 'text' : 'password'}\n                                value={consumerSecret}\n                                margin='dense'\n                                fullWidth\n                                variant='outlined'\n                                InputProps={{\n                                    readOnly: true,\n                                    endAdornment: (\n                                        <InputAdornment position='end'>\n                                            <IconButton\n                                                classes={{ root: classes.iconButton }}\n                                                onClick={() => this.handleShowHidden('showCS')}\n                                                onMouseDown={this.handleMouseDownGeneric}\n                                            >\n                                                {showCS ? <Icon>visibility_off</Icon> : <Icon>visibility</Icon>}\n                                            </IconButton>\n                                            <Tooltip\n                                                title={secretCopied ? 'Copied' : 'Copy to clipboard'}\n                                                placement='right'\n                                            >\n                                                <CopyToClipboard\n                                                    text={consumerSecret}\n                                                    onCopy={() => this.onCopy('secretCopied')}\n                                                    classes={{ root: classes.iconButton }}\n                                                >\n                                                    <IconButton aria-label='Copy to clipboard' classes={{ root: classes.iconButton }}>\n                                                        <Icon color='secondary'>file_copy</Icon>\n                                                    </IconButton>\n                                                </CopyToClipboard>\n                                            </Tooltip>\n                                        </InputAdornment>\n                                    ),\n                                }}\n                            />\n                        ) : (\n                                <Button\n                                    variant='contained'\n                                    color='primary'\n                                    className={classes.button}\n                                    onClick={() => this.handleSecretRegenerate(consumerKey, keyType, keyMappingId, selectedTab)}\n                                    disabled={!isUserOwner}\n                                >\n                                    <FormattedMessage\n                                        defaultMessage='Regenerate Consumer Secret'\n                                        id='Shared.AppsAndKeys.ViewKeys.consumer.secret.button.regenerate'\n                                    />\n                                </Button>\n                            )}\n                    </div>\n                    {!hashEnabled && (\n                        <FormControl>\n                            <FormHelperText id='consumer-secret-helper-text'>\n                                <FormattedMessage\n                                    id='Shared.AppsAndKeys.ViewKeys.consumer.secret.of.application'\n                                    defaultMessage='Consumer Secret of the application'\n                                />\n                            </FormHelperText>\n                        </FormControl>\n                    )}\n                </Grid>\n            </>\n        );\n    }\n\n    /**\n     * @inheritdoc\n     */\n    render() {\n        const {\n            notFound, showToken, showCurl, showSecretGen, tokenCopied, open,\n            token, tokenScopes, tokenValidityTime, accessTokenRequest, subscriptionScopes,\n            isKeyJWT, tokenResponse, secretGenResponse, isUpdating,\n        } = this.state;\n        const {\n            intl, keyType, classes, fullScreen, keys, selectedApp: { tokenType }, selectedGrantTypes, isUserOwner, summary,\n            selectedTab, hashEnabled, keyManagerConfig\n        } = this.props;\n\n        if (notFound) {\n            return <ResourceNotFound />;\n        }\n        if (!keys) {\n            return <Loading />;\n        }\n\n        const csCkKeys = keys.size > 0 && keys.get(selectedTab) && (keys.get(selectedTab).keyType === keyType) && keys.get(selectedTab);\n        const consumerKey = csCkKeys && csCkKeys.consumerKey;\n        const consumerSecret = csCkKeys && csCkKeys.consumerSecret;\n        const keyMappingId = csCkKeys && csCkKeys.keyMappingId;\n\n        let accessToken;\n        let accessTokenScopes;\n        let validityPeriod;\n        let tokenDetails;\n\n        if (token) {\n            accessToken = token;\n            accessTokenScopes = tokenScopes;\n            validityPeriod = tokenValidityTime;\n        } else if (keys.get(selectedTab) && keys.get(selectedTab).keyType === keyType && keys.get(selectedTab).token) {\n            ({ accessToken } = keys.get(selectedTab).token);\n            accessTokenScopes = keys.get(selectedTab).token.tokenScopes;\n            validityPeriod = keys.get(selectedTab).token.validityTime;\n            tokenDetails = keys.get(selectedTab).token;\n        }\n\n        let dialogHead = 'Undefined';\n        if (showCurl) {\n            dialogHead = 'Get CURL to Generate Access Token';\n        } else if (showSecretGen) {\n            dialogHead = 'Generate Consumer Secret';\n        } else {\n            dialogHead = 'Generate Access Token';\n        }\n        if (!consumerKey) {\n            return (\n                <Typography variant='caption' gutterBottom>\n                    {keyType === 'PRODUCTION' ? 'Production ' : 'Sandbox '}\n                    <FormattedMessage\n                        id='Shared.AppsAndKeys.ViewKeys.key.secret.title'\n                        defaultMessage='Key and Secret is not generated for this application'\n                    />\n                </Typography>\n            );\n        }\n        if (summary) {\n            return (\n                <Grid container spacing={3}>\n                    {this.viewKeyAndSecret(consumerKey, consumerSecret, keyMappingId, selectedTab, isUserOwner)}\n                </Grid>\n            );\n        }\n\n        // Get the grant types for the generated keys\n        const { supportedGrantTypes: supportedGrantTypesUnchanged } = keys.get(selectedTab);\n\n        return consumerKey && (\n            <div className={classes.inputWrapper}>\n                <Grid container spacing={3}>\n                    {this.viewKeyAndSecret(consumerKey, consumerSecret, keyMappingId, selectedTab, isUserOwner)}\n                    <Grid item xs={12}>\n                        <Dialog\n                            fullScreen={fullScreen}\n                            open={(open || (isKeyJWT && tokenDetails))}\n                            onClose={this.handleClose}\n                            aria-labelledby='responsive-dialog-title'\n                            className={classes.dialogWrapper}\n                        >\n                            <DialogTitle id='responsive-dialog-title'>\n                                {dialogHead}\n                            </DialogTitle>\n                            <DialogContent>\n                                {!showCurl && !isKeyJWT && !showSecretGen && (\n                                    <DialogContentText>\n                                        {!showToken && (\n                                            <Tokens\n                                                updateAccessTokenRequest={this.updateAccessTokenRequest}\n                                                accessTokenRequest={accessTokenRequest}\n                                                subscriptionScopes={subscriptionScopes}\n                                            />\n                                        )}\n                                        {showToken && <ViewToken token={{ ...tokenResponse, isOauth: true }} />}\n                                    </DialogContentText>\n                                )}\n                                {showCurl && (\n                                    <DialogContentText>\n                                        <ViewCurl \n                                            keys={{ consumerKey, consumerSecret }} \n                                            keyType={keyType} \n                                            keyManagerConfig={keyManagerConfig} \n                                        />\n                                    </DialogContentText>\n                                )}\n                                {showSecretGen && (\n                                    <DialogContentText>\n                                        <ViewSecret secret={{ ...secretGenResponse }} />\n                                    </DialogContentText>\n                                )}\n                                {(isKeyJWT && tokenDetails && hashEnabled) && (\n                                    <DialogContentText>\n                                        <ViewToken token={{ ...tokenDetails, isOauth: true }} consumerSecret={consumerSecret} />\n                                    </DialogContentText>\n                                )}\n                                {(isKeyJWT && tokenDetails && !hashEnabled) && (\n                                    <DialogContentText>\n                                        <ViewToken token={{ ...tokenDetails, isOauth: true }} />\n                                    </DialogContentText>\n                                )}\n                            </DialogContent>\n                            <DialogActions>\n                                {isUpdating && <CircularProgress size={24} />}\n                                {!showToken && !showCurl && !isKeyJWT && !showSecretGen && (\n                                    <Button onClick={this.generateAccessToken} color='primary' disabled={isUpdating}>\n                                        <FormattedMessage\n                                            id='Shared.AppsAndKeys.ViewKeys.consumer.generate.btn'\n                                            defaultMessage='Generate'\n                                        />\n                                    </Button>\n                                )}\n                                <Button onClick={this.handleClose} color='primary' autoFocus>\n                                    <FormattedMessage\n                                        id='Shared.AppsAndKeys.ViewKeys.consumer.close.btn'\n                                        defaultMessage='Close'\n                                    />\n                                </Button>\n                            </DialogActions>\n                        </Dialog>\n                        {!hashEnabled && (\n                            <div className={classes.tokenSection}>\n                                {keyManagerConfig.enableTokenGeneration &&\n                                    supportedGrantTypesUnchanged.find(a => a.includes('client_credentials')) &&\n                                    (<Button\n                                        variant='outlined'\n                                        size='small'\n                                        color='primary'\n                                        className={classes.margin}\n                                        onClick={this.handleClickOpen}\n                                        disabled={!supportedGrantTypesUnchanged.includes('client_credentials')}\n                                    >\n                                        <FormattedMessage\n                                            id='Shared.AppsAndKeys.ViewKeys.generate.access.token'\n                                            defaultMessage='Generate Access Token'\n                                        />\n                                    </Button>)}\n                                <Button\n                                    variant='outlined'\n                                    size='small'\n                                    color='primary'\n                                    className={classes.margin}\n                                    onClick={this.handleClickOpenCurl}\n                                >\n                                    <FormattedMessage\n                                        id='Shared.AppsAndKeys.ViewKeys.curl.to.generate'\n                                        defaultMessage='CURL to Generate Access Token'\n                                    />\n                                </Button>\n                            </div>\n                        )}\n                        {!supportedGrantTypesUnchanged.includes('client_credentials') && !hashEnabled && (\n                            <Typography variant='caption' gutterBottom>\n                                <FormattedMessage\n                                    id='Shared.AppsAndKeys.ViewKeys.client.enable.client.credentials'\n                                    defaultMessage={'Enable Client Credentials grant '\n                                        + 'type to generate test access tokens'}\n                                />\n                            </Typography>\n                        )}\n                    </Grid>\n                </Grid>\n            </div>\n        )\n    }\n}\nViewKeys.defaultProps = {\n    fullScreen: false,\n    summary: false,\n};\nViewKeys.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    fullScreen: PropTypes.bool,\n    isKeyJWT: PropTypes.bool.isRequired,\n    isUserOwner: PropTypes.bool.isRequired,\n    summary: PropTypes.bool,\n};\n\nexport default injectIntl(withStyles(styles)(ViewKeys));\n","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport { injectIntl } from 'react-intl';\n\nconst styles = theme => ({\n    root: {\n        padding: theme.spacing(3),\n    },\n});\n\nconst waitingForApproval = (props) => {\n    const {\n        classes, keyState, states, intl,\n    } = props;\n    let message = intl.formatMessage({\n        defaultMessage: 'A request to register this application has been sent and is pending approval.',\n        id: 'Shared.AppsAndKeys.WaitingForApproval.msg.ok',\n    });\n    if (keyState === states.REJECTED) {\n        message = intl.formatMessage({\n            defaultMessage: 'This application has been rejected from generating keys',\n            id: 'Shared.AppsAndKeys.WaitingForApproval.msg.reject',\n        });\n    }\n    return <div className={classes.root}>{message}</div>;\n};\n\nexport default injectIntl(withStyles(styles)(waitingForApproval));\n","/* eslint-disable react/prop-types */\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport { app } from 'Settings';\nimport WaitingForApproval from './WaitingForApproval';\nimport ViewKeys from './ViewKeys';\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        padding: theme.spacing(3, 2),\n    },\n    noKeysRoot: {\n        backgroundImage: `url(${app.context + theme.custom.overviewPage.keysBackground})`,\n        height: '100%',\n        backgroundPosition: 'center',\n        backgroundRepeat: 'no-repeat',\n        backgroundSize: 'cover',\n        minHeight: 192,\n        display: 'flex',\n        alignItems: 'center',\n    },\n}));\n\n/**\n * Render a compressed view of the key gneration view.\n * @param {JSON} props Input params.\n * @returns {JSX} Rendered output.\n */\nexport default function TokenManagerSummary(props) {\n    const classes = useStyles();\n    const { keys, keyStates, key, selectedApp, keyType, isKeyJWT, isUserOwner, selectedTab } = props;\n    if (keys.size > 0 && key && key.keyState === 'APPROVED' && !key.consumerKey) {\n        return (\n            <div className={classes.emptyBox}>\n                <Typography variant=\"h5\" component=\"h3\">\n                    Error\n                </Typography>\n                <Typography variant='body2'>\n                    <FormattedMessage\n                        id='Shared.AppsAndKeys.TokenManagerSummary'\n                        defaultMessage='Error! You have partially-created keys. Use `Clean Up` option.'\n                    />\n                </Typography>\n            </div>\n        );\n    }\n    if (key && (key.keyState === keyStates.CREATED || key.keyState === keyStates.REJECTED)) {\n        return (\n            <div className={classes.emptyBox}>\n                <Typography variant='body2'>\n                    <WaitingForApproval keyState={key.keyState} states={keyStates} />\n                </Typography>\n            </div>\n        );\n    }\n    const keyGrantTypes = key ? key.supportedGrantTypes : [];\n\n    return (\n        <ViewKeys\n            selectedApp={selectedApp}\n            selectedTab={selectedTab}\n            keyType={keyType}\n            keys={keys}\n            isKeyJWT={isKeyJWT}\n            selectedGrantTypes={keyGrantTypes}\n            isUserOwner={isUserOwner}\n            summary\n        />\n    );\n}\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Box from '@material-ui/core/Box';\nimport Typography from '@material-ui/core/Typography';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport Loading from 'AppComponents/Base/Loading/Loading';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Alert from 'AppComponents/Shared/Alert';\nimport ImportExternalApp from 'AppComponents/Shared/AppsAndKeys/ImportExternalApp';\nimport Application from 'AppData/Application';\nimport AuthManager from 'AppData/AuthManager';\nimport InlineMessage from 'AppComponents/Shared/InlineMessage';\nimport WarningIcon from '@material-ui/icons/Warning';\nimport API from 'AppData/api';\nimport Validation from 'AppData/Validation';\nimport KeyConfiguration from './KeyConfiguration';\nimport ViewKeys from './ViewKeys';\nimport WaitingForApproval from './WaitingForApproval';\nimport { ScopeValidation, resourceMethods, resourcePaths } from '../ScopeValidation';\nimport TokenMangerSummary from './TokenManagerSummary';\nimport Progress from '../Progress';\n\nconst styles = (theme) => ({\n    root: {\n        padding: theme.spacing(3),\n        '& span, & h6, & label, & input': {\n            color: theme.palette.getContrastText(theme.palette.background.paper),\n        },\n        '& .Mui-disabled span': {\n            color: theme.palette.grey[500],\n        },\n        '& input:disabled': {\n            backgroundColor: theme.palette.grey[100],\n            color: theme.palette.grey[500],\n        },\n        position: 'relative',\n    },\n    button: {\n        marginLeft: 0,\n        '& span': {\n            color: theme.palette.getContrastText(theme.palette.primary.main),\n        },\n    },\n    cleanUpButton: {\n        marginLeft: 15,\n    },\n    cleanUpInfoText: {\n        padding: '10px 0px 10px 15px',\n    },\n    tokenSection: {\n        marginTop: theme.spacing(2),\n        marginBottom: theme.spacing(2),\n    },\n    margin: {\n        marginRight: theme.spacing(2),\n    },\n    keyConfigWrapper: {\n        flexDirection: 'column',\n        marginBottom: 0,\n    },\n    generateWrapper: {\n        padding: '10px 0px',\n        marginLeft: theme.spacing(1.25),\n    },\n    paper: {\n        background: 'none',\n        marginBottom: theme.spacing(2),\n        marginTop: theme.spacing(2),\n    },\n    muiFormGroupRoot: {\n        flexDirection: 'row',\n    },\n    formControl: {\n    },\n    subTitle: {\n        fontWeight: 400,\n    },\n    tabPanel: {\n        paddingLeft: theme.spacing(2),\n        '& .MuiBox-root': {\n            padding: 0,\n        },\n    },\n    warningIcon: {\n        color: '#ff9a00',\n        fontSize: 20,\n        marginRight: 10,\n    },\n});\n\nfunction TabPanel(props) {\n    const {\n        children, value, index, ...other\n    } = props;\n\n    return (\n        <div\n            role='tabpanel'\n            hidden={value !== index}\n            id={`nav-tabpanel-${index}`}\n            aria-labelledby={`nav-tab-${index}`}\n            {...other}\n        >\n            {value === index && (\n                <Box p={3}>\n                    {children}\n                </Box>\n            )}\n        </div>\n    );\n}\n\nTabPanel.propTypes = {\n    children: PropTypes.node,\n    index: PropTypes.any.isRequired,\n    value: PropTypes.any.isRequired,\n};\n\nconst StyledTabs = withStyles({\n    indicator: {\n        display: 'flex',\n        justifyContent: 'center',\n        backgroundColor: 'transparent',\n        '& > span': {\n            width: '98%',\n            backgroundColor: '#ffffff',\n        },\n        transition: 'none',\n    },\n    flexContainer: {\n        borderBottom: 'solid 1px #666',\n        backgroundColor: '#efefef',\n        '& button:first-child': {\n            borderLeft: 'none',\n        },\n    },\n})((props) => <Tabs {...props} TabIndicatorProps={{ children: <span /> }} />);\n\n\nconst StyledTab = withStyles((theme) => ({\n    root: {\n        textTransform: 'none',\n        color: '#666',\n        fontWeight: theme.typography.fontWeightRegular,\n        fontSize: theme.typography.pxToRem(15),\n        marginRight: theme.spacing(1),\n        '&:focus': {\n            opacity: 1,\n        },\n    },\n    selected: {\n        backgroundColor: '#fff',\n        borderLeft: 'solid 1px #666',\n        borderRight: 'solid 1px #666',\n    },\n}))((props) => <Tab disableRipple {...props} />);\n\n/**\n *  @param {event} event event\n *  @param {String} value description\n */\nclass TokenManager extends React.Component {\n    static contextType = Settings;\n\n    /**\n     *\n     * @param {*} props props\n     */\n    constructor(props) {\n        super(props);\n        const { selectedApp, keyType } = this.props;\n        this.state = {\n            isLoading: false,\n            keys: null,\n            isKeyJWT: false,\n            hasError: false,\n            keyRequest: {\n                keyType,\n                selectedGrantTypes: null,\n                callbackUrl: '',\n                additionalProperties: {},\n                keyManager: '',\n                validityTime: 3600,\n                scopes: ['default'],\n            },\n            keyManagers: null,\n            selectedTab: null,\n            providedConsumerKey: '',\n            providedConsumerSecret: '',\n            validating: false,\n            importDisabled: false,\n            mode: null,\n        };\n        this.keyStates = {\n            COMPLETED: 'COMPLETED',\n            APPROVED: 'APPROVED',\n            CREATED: 'CREATED',\n            REJECTED: 'REJECTED',\n        };\n        if (selectedApp) {\n            this.appId = selectedApp.appId || selectedApp.value;\n            this.application = Application.get(this.appId);\n        }\n        this.updateKeyRequest = this.updateKeyRequest.bind(this);\n        this.generateKeys = this.generateKeys.bind(this);\n        this.updateKeys = this.updateKeys.bind(this);\n        this.cleanUpKeys = this.cleanUpKeys.bind(this);\n        this.handleOnChangeProvidedOAuth = this.handleOnChangeProvidedOAuth.bind(this);\n        this.provideOAuthKeySecret = this.provideOAuthKeySecret.bind(this);\n    }\n\n    /**\n     *\n     *\n     * @memberof TokenManager\n     */\n    componentDidMount() {\n        this.loadApplication();\n    }\n\n    componentDidUpdate(nextProps) {\n        const { keyType: nextKeyType } = nextProps;\n        const { keyType: prevKeyType } = this.props;\n        if (nextKeyType !== prevKeyType) {\n            this.loadApplication();\n        }\n    }\n\n    getDefaultAdditionalProperties(selectedKM) {\n        const { availableGrantTypes, applicationConfiguration } = selectedKM;\n        // Fill the keyRequest.additionalProperties from the selectedKM.applicationConfiguration defaultValues.\n        const additionalProperties = {};\n\n        applicationConfiguration.forEach((confItem) => {\n            additionalProperties[confItem.name] = confItem.default || '';\n        });\n        return additionalProperties;\n    }\n\n    handleTabChange = (event, newSelectedTab) => {\n        const { keys, keyManagers, keyRequest } = this.state;\n        const { keyType } = this.props;\n        const selectedKM = keyManagers.find((x) => x.name === newSelectedTab);\n        const { availableGrantTypes } = selectedKM;\n\n        if (keys.size > 0 && keys.get(newSelectedTab) && keys.get(newSelectedTab).keyType === keyType) {\n            const { callbackUrl, supportedGrantTypes, additionalProperties } = keys.get(newSelectedTab);\n            const newRequest = {\n                ...keyRequest,\n                callbackUrl,\n                selectedGrantTypes: supportedGrantTypes || availableGrantTypes.filter((type) => (type !== 'authorization_code' && type !== 'implicit')),\n                additionalProperties: additionalProperties || this.getDefaultAdditionalProperties(selectedKM),\n            };\n            this.setState({ keyRequest: newRequest, selectedTab: newSelectedTab });\n        } else {\n            // Fill the keyRequest.additionalProperties from the selectedKM.applicationConfiguration defaultValues.\n            this.setState({\n                keyRequest: {\n                    ...keyRequest,\n                    selectedGrantTypes: availableGrantTypes.filter((type) => (type !== 'authorization_code' && type !== 'implicit')),\n                    additionalProperties: this.getDefaultAdditionalProperties(selectedKM),\n                },\n                selectedTab: newSelectedTab,\n            });\n        }\n    };\n\n    /**\n     * load application key generation ui\n     */\n    loadApplication = () => {\n        const { keyType } = this.props;\n        if (this.appId) {\n            const api = new API();\n            const promisedKeyManagers = api.getKeyManagers();\n            const promisedGetKeys = this.application\n                .then((application) => application.getKeys(keyType));\n            Promise.all([promisedKeyManagers, promisedGetKeys])\n                .then((response) => {\n                    // processing promisedKeyManagers response\n                    const responseKeyManagerList = [];\n                    response[0].body.list.map((item) => {\n                        if (item.enabled) responseKeyManagerList.push(item);\n                    });\n\n                    if (responseKeyManagerList.length === 0) {\n                        this.setState({ keyManagers: [] });\n                        return;\n                    }\n                    // Selecting a key manager from the list of key managers.\n                    let { selectedTab } = this.state;\n                    if (!selectedTab && responseKeyManagerList.length > 0) {\n                        selectedTab = responseKeyManagerList.find((x) => x.name === 'Resident Key Manager') ? 'Resident Key Manager'\n                            : responseKeyManagerList[0].name;\n                    }\n                    const selectdKM = responseKeyManagerList.find((x) => x.name === selectedTab);\n                    // processing promisedGetKeys response\n                    const keys = response[1];\n                    const { keyRequest } = this.state;\n\n                    if (keys.size > 0 && keys.get(selectedTab) && keys.get(selectedTab).keyType === keyType) {\n                        const { callbackUrl, supportedGrantTypes, additionalProperties, mode } = keys.get(selectedTab);\n                        const newRequest = {\n                            ...keyRequest,\n                            callbackUrl: callbackUrl || '',\n                            selectedGrantTypes: supportedGrantTypes || [],\n                            additionalProperties: additionalProperties || this.getDefaultAdditionalProperties(selectdKM),\n                        };\n                        this.setState({\n                            keys, keyRequest: newRequest, keyManagers: responseKeyManagerList, selectedTab,\n                            importDisabled: (mode === 'MAPPED' || mode === 'CREATED'),\n                            mode,\n                        });\n                    } else {\n                        const selectdKMGrants = selectdKM.availableGrantTypes || [];\n\n                        this.setState({\n                            keys,\n                            keyRequest: {\n                                ...keyRequest,\n                                selectedGrantTypes: selectdKMGrants.filter((type) => (type !== 'authorization_code' && type !== 'implicit')),\n                                additionalProperties: this.getDefaultAdditionalProperties(selectdKM),\n                            },\n                            keyManagers: responseKeyManagerList,\n                            selectedTab,\n                        });\n                    }\n                })\n                .catch((error) => {\n                    if (process.env.NODE_ENV !== 'production') {\n                        console.error(error);\n                    }\n                    if (error.status === 404) {\n                        this.setState({ notFound: true });\n                    }\n                });\n        }\n    }\n\n    /**\n     * Update keyRequest state\n     * @param {Object} keyRequest parameters requried for key generation request\n     */\n    updateKeyRequest(keyRequest) {\n        this.setState({ keyRequest });\n    }\n\n    /**\n     * Generate keys for application,\n     *\n     * @memberof KeyConfiguration\n     */\n    generateKeys() {\n        const { keyRequest, keys, selectedTab } = this.state;\n        const {\n            keyType, updateSubscriptionData, selectedApp: { tokenType, hashEnabled }, intl,\n        } = this.props;\n\n        if ((keyRequest.selectedGrantTypes.includes('implicit')\n            || keyRequest.selectedGrantTypes.includes('authorization_code'))) {\n            if (keyRequest.callbackUrl === '') {\n                Alert.error(intl.formatMessage({\n                    id: 'Shared.AppsAndKeys.TokenManager.key.generate.error.callbackempty',\n                    defaultMessage: 'Callback URL can not be empty when the Implicit or Application Code grant types selected',\n                }));\n                return;\n            }\n        }\n        this.setState({ isLoading: true });\n\n        this.application\n            .then((application) => {\n                return application.generateKeys(\n                    keyType, keyRequest.selectedGrantTypes,\n                    keyRequest.callbackUrl,\n                    keyRequest.additionalProperties, this.getKeyManagerIdentifier(),\n                );\n            })\n            .then((response) => {\n                if (updateSubscriptionData) {\n                    updateSubscriptionData();\n                }\n                const newKeys = new Map([...keys]);\n                // in case token hashing is enabled, isKeyJWT is set to true even if the token type is JWT.\n                // This is to mimic the behavior of JWT tokens (by showing the token in a dialog)\n                const isKeyJWT = (tokenType === 'JWT') || hashEnabled;\n                newKeys.set(selectedTab, response);\n                this.setState({ keys: newKeys, isKeyJWT });\n                if (response.keyState === this.keyStates.CREATED || response.keyState === this.keyStates.REJECTED) {\n                    Alert.info(intl.formatMessage({\n                        id: 'Shared.AppsAndKeys.TokenManager.key.generate.success.blocked',\n                        defaultMessage: 'Application keys generate request is currently pending approval by the site administrator.',\n                    }));\n                } else {\n                    Alert.info(intl.formatMessage({\n                        id: 'Shared.AppsAndKeys.TokenManager.key.generate.success',\n                        defaultMessage: 'Application keys generated successfully',\n                    }));\n                    this.loadApplication();\n                }\n            })\n            .catch((error) => {\n                if (process.env.NODE_ENV !== 'production') {\n                    console.error(error);\n                }\n                const { status } = error;\n                if (status === 404) {\n                    this.setState({ notFound: true });\n                } else if (status === 500) {\n                    this.loadApplication();\n                }\n                Alert.error(intl.formatMessage({\n                    id: 'Shared.AppsAndKeys.TokenManager.key.generate.error',\n                    defaultMessage: 'Error occurred when generating application keys',\n                }));\n            }).finally(() => this.setState({ isLoading: false }));\n    }\n\n    /**\n     *\n     * @memberof KeyConfiguration\n     */\n    updateKeys() {\n        const { keys, keyRequest, selectedTab } = this.state;\n        const { keyType, intl } = this.props;\n        const applicationKey = (keys.get(selectedTab).keyType === keyType) && keys.get(selectedTab);\n        if ((keyRequest.selectedGrantTypes.includes('implicit')\n            || keyRequest.selectedGrantTypes.includes('authorization_code'))) {\n            if (keyRequest.callbackUrl === '') {\n                Alert.error(intl.formatMessage({\n                    id: 'Shared.AppsAndKeys.TokenManager.key.generate.error.callbackempty',\n                    defaultMessage: 'Callback URL can not be empty when the Implicit or Application Code grant types selected',\n                }));\n                return;\n            }\n        }\n        this.setState({ isLoading: true });\n        this.application\n            .then((application) => {\n                return application.updateKeys(\n                    applicationKey.tokenType,\n                    keyType,\n                    keyRequest.selectedGrantTypes,\n                    keyRequest.callbackUrl,\n                    applicationKey.consumerKey,\n                    applicationKey.consumerSecret,\n                    keyRequest.additionalProperties,\n                    selectedTab,\n                    applicationKey.keyMappingId,\n                );\n            })\n            .then((response) => {\n                const newKeys = new Map([...keys]);\n                newKeys.set(selectedTab, response);\n                this.setState({ keys: newKeys });\n                Alert.info(intl.formatMessage({\n                    id: 'Shared.AppsAndKeys.TokenManager.key.update.success',\n                    defaultMessage: 'Application keys updated successfully',\n                }));\n            })\n            .catch((error) => {\n                if (process.env.NODE_ENV !== 'production') {\n                    console.error(error);\n                }\n                const { status } = error;\n                if (status === 404) {\n                    this.setState({ notFound: true });\n                } else if (status === 500) {\n                    this.loadApplication();\n                }\n                const { response } = error;\n                if (response && response.body) {\n                    Alert.error(response.body.message);\n                }\n            }).finally(() => this.setState({ isLoading: false }));\n    }\n\n    /**\n     * Cleanup application keys\n     */\n    cleanUpKeys(selectedTab, keyMappingId) {\n        const { keyType, intl } = this.props;\n        this.application\n            .then((application) => {\n                return application.cleanUpKeys(keyType, selectedTab, keyMappingId);\n            })\n            .then(() => {\n                this.loadApplication();\n                Alert.info(intl.formatMessage({\n                    id: 'Shared.AppsAndKeys.TokenManager.key.cleanup.success',\n                    defaultMessage: 'Application keys cleaned successfully',\n                }));\n            })\n            .catch((error) => {\n                if (process.env.NODE_ENV !== 'production') {\n                    console.error(error);\n                }\n                const { status } = error;\n                if (status === 404) {\n                    this.setState({ notFound: true });\n                }\n                Alert.error(intl.formatMessage({\n                    id: 'Shared.AppsAndKeys.TokenManager.key.cleanup.error',\n                    defaultMessage: 'Error occurred while cleaning up application keys',\n                }));\n            });\n    }\n\n    /**\n     * Handle on change of provided consumer key and consumer secret\n     *\n     * @param event onChange event\n     */\n    handleOnChangeProvidedOAuth(event) {\n        this.setState({ [event.target.name]: event.target.value });\n    }\n\n    /**\n     * Provide consumer key and secret of an existing OAuth app to an application\n     */\n    provideOAuthKeySecret() {\n        const { keyType, intl } = this.props;\n        const { providedConsumerKey, providedConsumerSecret, selectedTab } = this.state;\n\n        this.application\n            .then((application) => {\n                return application.provideKeys(keyType, providedConsumerKey, providedConsumerSecret, selectedTab);\n            })\n            .then(() => {\n                this.setState({ providedConsumerKey: '', providedConsumerSecret: '' });\n                this.loadApplication();\n                Alert.info(intl.formatMessage({\n                    id: 'Shared.AppsAndKeys.TokenManager.key.provide.success',\n                    defaultMessage: 'Application keys provided successfully',\n                }));\n            })\n            .catch((error) => {\n                if (process.env.NODE_ENV !== 'production') {\n                    console.error(error);\n                }\n                const { status } = error;\n                if (status === 404) {\n                    this.setState({ notFound: true });\n                }\n                Alert.error(intl.formatMessage({\n                    id: 'Shared.AppsAndKeys.TokenManager.key.provide.error',\n                    defaultMessage: 'Error occurred when providing application keys',\n                }));\n            });\n    }\n\n    getKeyManagerDescription() {\n        const { keyManagers, selectedTab } = this.state;\n        const selectedKMObject = keyManagers.filter((item) => item.name === selectedTab);\n        if (selectedKMObject && selectedKMObject.length === 1) {\n            return selectedKMObject[0].description;\n        }\n        return '';\n    }\n\n    getKeyManagerIdentifier() {\n        const { keyManagers, selectedTab } = this.state;\n        const selectedKMObject = keyManagers.filter((item) => item.name === selectedTab);\n        if (selectedKMObject && selectedKMObject.length === 1) {\n            return selectedKMObject[0].id;\n        }\n        return selectedTab;\n    }\n\n    setValidating = (validatingState) => {\n        this.setState({ validating: validatingState });\n    }\n\n    toTitleCase = (str) => {\n        return str.replace(\n            /\\w\\S*/g,\n            (txt) => {\n                return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase();\n            },\n        );\n    };\n\n     updateHasError = (state) => {\n         this.setState({ hasError: state });\n     }\n\n     /**\n     *  @returns {Component}\n     * @memberof Tokenemanager\n     */\n     render() {\n         const {\n             classes, selectedApp, keyType, summary, selectedApp: { hashEnabled },\n         } = this.props;\n         const {\n             keys, keyRequest, isLoading, isKeyJWT, providedConsumerKey,\n             providedConsumerSecret, selectedTab, keyManagers, validating, hasError,\n             importDisabled, mode,\n         } = this.state;\n         if (keyManagers && keyManagers.length === 0) {\n             return (\n                 <div className={classes.root}>\n                     <Box mb={1}>\n                         <Typography variant='h5' className={classes.keyTitle}>\n                             {this.toTitleCase(keyType)}\n                             <FormattedMessage\n                                 id='Shared.AppsAndKeys.TokenManager.oauth2.keys.main.title'\n                                 defaultMessage=' OAuth2 Keys'\n                             />\n                         </Typography>\n                     </Box>\n                     <InlineMessage type='info' className={classes.dialogContainer}>\n                         <Typography variant='h5' component='h3'>\n                             <FormattedMessage id='Shared.AppsAndKeys.TokenManager.no.km' defaultMessage='No Key Managers' />\n                         </Typography>\n                         <Typography component='p'>\n                             <FormattedMessage\n                                 id='Shared.AppsAndKeys.TokenManager.no.km.content'\n                                 defaultMessage='No Key Managers active to generate keys.'\n                             />\n                         </Typography>\n                     </InlineMessage>\n                 </div>\n             );\n         }\n         if (!keys || !selectedTab || !keyRequest.selectedGrantTypes) {\n             return <Loading />;\n         }\n         const username = AuthManager.getUser().name;\n         let isUserOwner = false;\n\n         if (selectedApp.owner && username.toLowerCase() === selectedApp.owner.toLowerCase()) {\n             isUserOwner = true;\n         }\n         const key = keys.size > 0 && keys.get(selectedTab) && (keys.get(selectedTab).keyType === keyType) ? keys.get(selectedTab) : null;\n\n         if (summary) {\n             if (keys) {\n                 return (\n                     <TokenMangerSummary\n                         keys={keys}\n                         key={key}\n                         keyStates={this.keyStates}\n                         selectedApp={selectedApp}\n                         selectedTab={selectedTab}\n                         keyType={keyType}\n                         isKeyJWT={isKeyJWT}\n                         isUserOwner={isUserOwner}\n                     />\n                 );\n             } else {\n                 return (<Progress />);\n             }\n         }\n         if (key && key.keyState === 'APPROVED' && !key.consumerKey) {\n             return (\n                 <>\n                     <Typography className={classes.cleanUpInfoText} variant='subtitle1'>\n                         <FormattedMessage\n                             id='Shared.AppsAndKeys.TokenManager.cleanup.text'\n                             defaultMessage='Error! You have partially-created keys.\n                            Please click `Clean Up` button and try again.'\n                         />\n                     </Typography>\n                     <Button\n                         variant='contained'\n                         color='primary'\n                         className={classes.cleanUpButton}\n                         onClick={this.cleanUpKeys(selectedTab, keys.get(selectedTab).keyMappingId)}\n                     >\n                         <FormattedMessage\n                             defaultMessage='Clean up'\n                             id='Shared.AppsAndKeys.TokenManager.cleanup'\n                         />\n                     </Button>\n                 </>\n             );\n         }\n         if (key && (key.keyState === this.keyStates.CREATED || key.keyState === this.keyStates.REJECTED)) {\n             return <WaitingForApproval keyState={key.keyState} states={this.keyStates} />;\n         }\n         return (\n             <>\n                 {(keyManagers && keyManagers.length > 1) && (\n                     <StyledTabs\n                         value={selectedTab}\n                         indicatorColor='primary'\n                         textColor='primary'\n                         onChange={this.handleTabChange}\n                         aria-label='key manager tabs'\n                     >\n                         {keyManagers.map((keymanager) => (\n                             <StyledTab\n                                 label={keymanager.displayName || keymanager.name}\n                                 value={keymanager.name}\n                                 disabled={!keymanager.enabled}\n                             />\n                         ))}\n                     </StyledTabs>\n                 )}\n                 <div className={classes.root}>\n                     <Box mb={1}>\n                         <Typography variant='h5' className={classes.keyTitle}>\n                             {this.toTitleCase(keyType)}\n                             <FormattedMessage\n                                 id='Shared.AppsAndKeys.TokenManager.oauth2.keys.main.title'\n                                 defaultMessage=' OAuth2 Keys'\n                             />\n                         </Typography>\n                     </Box>\n                     {(keyManagers && keyManagers.length > 0) && keyManagers.map((keymanager) => (\n                         <TabPanel value={selectedTab} index={keymanager.name} className={classes.tabPanel}>\n                             <Box display='flex' flexDirection='row'>\n                                 <Typography className={classes.heading} variant='h6' component='h6' className={classes.subTitle}>\n                                     <FormattedMessage\n                                         defaultMessage='Key and Secret'\n                                         id='Shared.AppsAndKeys.TokenManager.key.and.secret'\n                                     />\n                                 </Typography>\n                                 {\n                                     keymanager.enableMapOAuthConsumerApps && (\n                                         <Box ml={2}>\n                                             <ImportExternalApp\n                                                 onChange={this.handleOnChangeProvidedOAuth}\n                                                 consumerKey={providedConsumerKey}\n                                                 consumerSecret={providedConsumerSecret}\n                                                 isUserOwner={isUserOwner}\n                                                 key={key}\n                                                 provideOAuthKeySecret={this.provideOAuthKeySecret}\n                                                 importDisabled={importDisabled}\n                                             />\n                                         </Box>\n                                     )\n                                 }\n                             </Box>\n                             <Box m={2}>\n                                 <ViewKeys\n                                     selectedApp={selectedApp}\n                                     selectedTab={selectedTab}\n                                     keyType={keyType}\n                                     keys={keys}\n                                     selectedGrantTypes={keyRequest.selectedGrantTypes}\n                                     isUserOwner={isUserOwner}\n                                     hashEnabled={keymanager.enableTokenHashing || hashEnabled}\n                                     keyManagerConfig={keymanager}\n                                 />\n                             </Box>\n                             <Typography className={classes.heading} variant='h6' component='h6' className={classes.subTitle}>\n                                 {\n                                     key\n                                         ? (\n                                             <FormattedMessage\n                                                 defaultMessage='Key Configurations'\n                                                 id='Shared.AppsAndKeys.TokenManager.update.configuration'\n                                             />\n                                         )\n                                         : (\n                                             <FormattedMessage\n                                                 defaultMessage='Key Configuration'\n                                                 id='Shared.AppsAndKeys.TokenManager.key.configuration'\n                                             />\n                                         )\n                                 }\n                             </Typography>\n                             <Box m={2}>\n                                 <KeyConfiguration\n                                     keys={keys}\n                                     key={key}\n                                     selectedApp={selectedApp}\n                                     selectedTab={selectedTab}\n                                     keyType={keyType}\n                                     updateKeyRequest={this.updateKeyRequest}\n                                     keyRequest={keyRequest}\n                                     isUserOwner={isUserOwner}\n                                     isKeysAvailable={key}\n                                     keyManagerConfig={keymanager}\n                                     validating={validating}\n                                     updateHasError={this.updateHasError}\n                                     callbackError={hasError}\n                                     setValidating={this.setValidating}\n                                 />\n                                 <div className={classes.generateWrapper}>\n                                     <ScopeValidation\n                                         resourcePath={resourcePaths.APPLICATION_GENERATE_KEYS}\n                                         resourceMethod={resourceMethods.POST}\n                                     >\n                                         {!isUserOwner ? (\n                                             <>\n                                                 <Button\n                                                     variant='contained'\n                                                     color='primary'\n                                                     className={classes.button}\n                                                     onClick={\n                                                         key ? this.updateKeys : this.generateKeys\n                                                     }\n                                                     disabled={!isUserOwner || isLoading || !keymanager.enableOAuthAppCreation}\n                                                 >\n                                                     {key ? 'Update keys' : 'Generate Keys'}\n                                                     {isLoading && <CircularProgress size={20} />}\n                                                 </Button>\n                                                 <Typography variant='caption'>\n                                                     <FormattedMessage\n                                                         defaultMessage='Only owner can generate or update keys'\n                                                         id='Shared.AppsAndKeys.TokenManager.key.and.user.owner'\n                                                     />\n                                                 </Typography>\n                                             </>\n                                         ) : (\n                                             <Box display='flex'>\n                                                 <Button\n                                                     variant='contained'\n                                                     color='primary'\n                                                     className={classes.button}\n                                                     onClick={key ? this.updateKeys : this.generateKeys}\n                                                     disabled={hasError || (isLoading || !keymanager.enableOAuthAppCreation) || (mode && mode === 'MAPPED')}\n                                                 >\n                                                     {key ? 'Update' : 'Generate Keys'}\n                                                     {isLoading && <CircularProgress size={20} />}\n                                                 </Button>\n                                                 {!keymanager.enableOAuthAppCreation && (\n                                                     <Box m={2} display='flex'>\n                                                         <WarningIcon className={classes.warningIcon} />\n                                                         <Typography variant='body1'>\n                                                             <FormattedMessage\n                                                                 defaultMessage='Oauth app creation disabled for {kmName} key manager'\n                                                                 id='Shared.AppsAndKeys.TokenManager.app.creation.disable.warn'\n                                                                 values={{ kmName: keymanager.displayName || keymanager.name }}\n                                                             />\n                                                         </Typography>\n                                                     </Box>\n                                                 )}\n                                             </Box>\n                                         )}\n                                     </ScopeValidation>\n                                 </div>\n\n                             </Box>\n                         </TabPanel>\n                     ))}\n                 </div>\n             </>\n         );\n     }\n}\nTokenManager.defaultProps = {\n    updateSubscriptionData: () => { },\n    summary: false,\n};\nTokenManager.propTypes = {\n    classes: PropTypes.instanceOf(Object).isRequired,\n    selectedApp: PropTypes.shape({\n        tokenType: PropTypes.string.isRequired,\n        appId: PropTypes.string,\n        value: PropTypes.string,\n        owner: PropTypes.string,\n        hashEnabled: PropTypes.bool,\n    }).isRequired,\n    keyType: PropTypes.string.isRequired,\n    updateSubscriptionData: PropTypes.func,\n    intl: PropTypes.shape({ formatMessage: PropTypes.func }).isRequired,\n    summary: PropTypes.bool,\n};\n\nexport default injectIntl(withStyles(styles)(TokenManager));\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z\"\n}), 'Add');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M14.59 8L12 10.59 9.41 8 8 9.41 10.59 12 8 14.59 9.41 16 12 13.41 14.59 16 16 14.59 13.41 12 16 9.41 14.59 8zM12 2C6.47 2 2 6.47 2 12s4.47 10 10 10 10-4.47 10-10S17.53 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8z\"\n}), 'HighlightOff');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M11 15h2v2h-2zm0-8h2v6h-2zm.99-5C6.47 2 2 6.48 2 12s4.47 10 9.99 10C17.52 22 22 17.52 22 12S17.52 2 11.99 2zM12 20c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z\"\n}), 'ErrorOutline');\n\nexports.default = _default;","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useState } from 'react';\nimport { injectIntl } from 'react-intl';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Validation from 'AppData/Validation';\n\n// Styles for Grid and Paper elements\nconst styles = theme => ({\n    FormControl: {\n        'margin-bottom': '8px',\n        width: '100%',\n        padding: '0px 10px',\n    },\n});\n\n/**\n * Used to display generate api key in UI\n */\nconst tokens = (props) => {\n    const [infiniteValidity, setInfiniteValidity] = useState(true);\n    const [invalidTimeout, setInvaildTimeout] = useState(false);\n\n    /**\n    * This method is used to handle the updating of create api key\n    * request object.\n    * @param {*} field\n    * @param {*} event event fired\n    */\n    const handleChange = (field, event) => {\n        const { accessTokenRequest, updateAccessTokenRequest } = props;\n        const newRequest = { ...accessTokenRequest };\n\n        const { target: currentTarget } = event;\n\n        switch (field) {\n            case 'infiniteValidity':\n                setInfiniteValidity(currentTarget.checked);\n                if (currentTarget.checked) {\n                    newRequest.timeout = -1;\n                } else {\n                    newRequest.timeout = null;\n                }\n                break;\n            case 'timeout':\n                if (Validation.number.validate(currentTarget.value).error === undefined) {\n                    newRequest.timeout = currentTarget.value;\n                    setInvaildTimeout(false);\n                } else {\n                    newRequest.timeout = null;\n                    setInvaildTimeout(true);\n                }\n                break;\n            default:\n                break;\n        }\n        updateAccessTokenRequest(newRequest);\n    };\n    const { classes, intl, accessTokenRequest } = props;\n\n    return (\n        <React.Fragment>\n            <FormControl margin='normal' className={classes.FormControl}>\n                <FormControlLabel\n                    control={<Checkbox\n                        checked={infiniteValidity}\n                        onChange={e => handleChange('infiniteValidity', e)}\n                        value={accessTokenRequest.timeout}\n                        color='primary'\n                    />}\n                    label='API Key with infinite validity period'\n                />\n                {!infiniteValidity && <TextField\n                    required\n                    label={intl.formatMessage({\n                        defaultMessage: 'API Key validity period',\n                        id: 'Shared.AppsAndKeys.Tokens.apikey',\n                    })}\n                    InputLabelProps={{\n                        shrink: true,\n                    }}\n                    helperText={\n                        invalidTimeout ? (\n                            intl.formatMessage({\n                                defaultMessage: 'Please use a valid number for API Key expiry time',\n                                id: 'Shared.AppsAndKeys.Tokens.apikey.set.validity.error',\n                            })\n                        ) : (\n                            intl.formatMessage({\n                                defaultMessage: 'You can set an expiration period to determine the validity period of '\n                                + 'the token after generation. Set this as -1 to ensure that the '\n                                + 'apikey never expires.',\n                                id: 'Shared.AppsAndKeys.Tokens.apikey.set.validity.help',\n                            })\n                        )\n                    }\n                    fullWidth\n                    name='timeout'\n                    onChange={e => handleChange('timeout', e)}\n                    placeholder={intl.formatMessage({\n                        defaultMessage: 'Enter time in seconds',\n                        id: 'Shared.AppsAndKeys.Tokens.apikey.enter.time',\n                    })}\n                    value={accessTokenRequest.timeout}\n                    autoFocus\n                    className={classes.inputText}\n                    error={invalidTimeout}\n                />\n                }\n            </FormControl>\n        </React.Fragment>\n    );\n};\ntokens.contextTypes = {\n    intl: PropTypes.shape({}).isRequired,\n};\nexport default injectIntl(withStyles(styles)(tokens));\n","/*\n * Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useState } from \"react\";\nimport { injectIntl, FormattedMessage } from \"react-intl\";\nimport PropTypes from \"prop-types\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Fab from \"@material-ui/core/Fab\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Box from \"@material-ui/core/Box\";\nimport Radio from \"@material-ui/core/Radio\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Validation from 'AppData/Validation';\n\nconst styles = (theme) => ({\n  FormControl: {\n    \"margin-bottom\": theme.spacing(1),\n    width: \"100%\",\n    padding: theme.spacing(0, 1),\n  },\n  outterBox: {\n    margin: theme.spacing(1),\n    padding: theme.spacing(1),\n    borderColor: theme.palette.text.secondary,\n    marginLeft: 20,\n    borderColor: '#cccccc',\n  },\n  Fab: {\n    marginLeft: theme.spacing(2),\n    marginRight: theme.spacing(2),\n  },\n});\n\n/**\n * Used to display IP address and Http Referer restrictions in generate api key UI\n */\nconst apiKeyRestrictions = (props) => {\n  const [invalidIP, setInvalidIP] = useState(false);\n  const [invalidReferer, setInvalidReferer] = useState(false);\n\n  const {\n    intl,\n    classes,\n    newIP,\n    updateNewIp,\n    ipList,\n    updateIpList,\n    restrictSchema,\n    updateRestrictSchema,\n    newReferer,\n    updateNewReferer,\n    refererList,\n    updateRefererList,\n  } = props;\n\n  const onRefererTextUpdate = (e) => {\n    updateNewReferer(e.target.value.trim());\n    if (e.target.value.trim() === \"\") {\n      setInvalidReferer(false);\n    }\n  };\n\n  const addRefererItem = () => {\n    if (newReferer !== null && newReferer !== \"\") {\n      setInvalidReferer(false);\n      refererList.push(newReferer.trim());\n      updateRefererList(refererList);\n      updateNewReferer(\"\");\n    } else {\n      setInvalidReferer(true);\n    }\n  };\n\n  const deleteRefererItem = (refererItem) => {\n    refererList.splice(refererList.indexOf(refererItem), 1);\n    updateRefererList(refererList);\n  };\n\n  const onIpTextUpdate = (e) => {\n    updateNewIp(e.target.value.trim());\n    if (e.target.value.trim() === \"\") {\n      setInvalidIP(false);\n    }\n  };\n\n  const addIpItem = () => {\n    if (newIP !== null && newIP !== \"\") {\n      if (Validation.ipAddress.validate(newIP).error) {\n        setInvalidIP(true);\n      } else {\n        setInvalidIP(false);\n        ipList.push(newIP);\n        updateIpList(ipList);\n        updateNewIp(\"\");\n      }\n    }\n  };\n\n  const deleteIpItem = (ipItem) => {\n    ipList.splice(ipList.indexOf(ipItem), 1);\n    updateIpList(ipList);\n  };\n\n  const onRestrictSchemaChange = (e) => {\n    updateRestrictSchema(e.target.value);\n    updateIpList([]);\n    updateRefererList([]);\n    updateNewIp(\"\");\n    updateNewReferer(\"\");\n    setInvalidIP(false);\n    setInvalidReferer(false);\n  };\n\n  return (\n    <React.Fragment>\n      <Box border={1} borderRadius={5} className={classes.outterBox}>\n        <Typography variant=\"body1\">\n          <FormattedMessage\n              defaultMessage='Key Restrictions'\n              id='Shared.ApiKeyRestriction.key.restrictions'\n          />\n        </Typography>\n        <FormControl component=\"fieldset\">\n          <RadioGroup\n            aria-label=\"API Key Restrictions\"\n            value={restrictSchema}\n            row\n            onChange={onRestrictSchemaChange}\n          >\n            <FormControlLabel\n              value=\"none\"\n              control={<Radio color=\"primary\" />}\n              label=\"None\"\n              labelPlacement=\"end\"\n            />\n            <FormControlLabel\n              value=\"ip\"\n              control={<Radio color=\"primary\" />}\n              label=\"IP Addresses\"\n              labelPlacement=\"end\"\n            />\n            <FormControlLabel\n              value=\"referer\"\n              control={<Radio color=\"primary\" />}\n              label=\"HTTP Referrers (Web Sites)\"\n              labelPlacement=\"end\"\n            />\n          </RadioGroup>\n        </FormControl>\n\n        {restrictSchema === \"ip\" && (\n          <Box component=\"div\" id=\"ipPanel\">\n            <Grid\n              container\n              direction=\"row\"\n              spacing={0}\n              justify=\"left\"\n              alignItems=\"left\"\n            >\n              <Grid item md={10} xs={10}>\n                <TextField\n                  label=\"IP Address\"\n                  value={newIP}\n                  onChange={onIpTextUpdate}\n                  className={classes.inputText}\n                  helperText={\n                    invalidIP\n                      ? intl.formatMessage({\n                          defaultMessage: \"Invalid IP Address\",\n                          id:\n                            \"Shared.AppsAndKeys.Tokens.apiKeyRestriction.ip.validity.error\",\n                        })\n                      : \"\"\n                  }\n                  error={invalidIP}\n                  margin=\"dense\"\n                  variant=\"outlined\"\n                  placeholder={intl.formatMessage({\n                    defaultMessage: \"Enter IP Address\",\n                    id: \"Shared.AppsAndKeys.Tokens.apiKeyRestriction.enter.ip\",\n                  })}\n                  fullWidth\n                />\n              </Grid>\n              <Grid item md={2} xs={2}>\n                <span>\n                  <Fab\n                    className={classes.Fab}\n                    size=\"small\"\n                    color=\"primary\"\n                    aria-label=\"add\"\n                    onClick={addIpItem}\n                  >\n                    <AddIcon />\n                  </Fab>\n                </span>\n              </Grid>\n            </Grid>\n            <Grid\n              container\n              direction=\"row\"\n              spacing={0}\n              justify=\"left\"\n              alignItems=\"left\"\n              md={10}\n              xs={10}\n            >\n              {ipList.length > 0 && (\n                <List>\n                  {ipList.map((ip, index) => (\n                    <ListItem>\n                      <ListItemText primary={ip} />\n                      <ListItemSecondaryAction>\n                        <Tooltip title=\"Delete task\" placement=\"top\">\n                          <IconButton\n                            edge=\"end\"\n                            aria-label=\"delete\"\n                            onClick={() => deleteIpItem(ip)}\n                          >\n                            <DeleteIcon />\n                          </IconButton>\n                        </Tooltip>\n                      </ListItemSecondaryAction>\n                    </ListItem>\n                  ))}\n                </List>\n              )}\n            </Grid>\n          </Box>\n        )}\n\n        {restrictSchema === \"referer\" && (\n          <Box component=\"div\" id=\"refererPanel\">\n            <Grid\n              container\n              direction=\"row\"\n              spacing={0}\n              justify=\"left\"\n              alignItems=\"left\"\n            >\n              <Grid item md={10} xs={10}>\n                <TextField\n                  label=\"Referer\"\n                  value={newReferer}\n                  onChange={onRefererTextUpdate}\n                  className={classes.inputText}\n                  helperText={\n                    invalidReferer\n                      ? intl.formatMessage({\n                          defaultMessage: \"Invalid Http Referer\",\n                          id: \"Shared.AppsAndKeys.Tokens.apiKeyRestriction.referer.validity.error\",\n                        })\n                      : \"\"\n                  }\n                  error={invalidReferer}\n                  margin=\"dense\"\n                  variant=\"outlined\"\n                  placeholder={intl.formatMessage({\n                    defaultMessage: \"Enter Http Referer\",\n                    id: \"Shared.AppsAndKeys.Tokens.apiKeyRestriction.enter.referer\",\n                  })}\n                  fullWidth\n                />\n              </Grid>\n              <Grid item md={2} xs={2}>\n                <span>\n                  <Fab\n                  size=\"small\"\n                    className={classes.Fab}\n                    color=\"primary\"\n                    aria-label=\"add\"\n                    onClick={addRefererItem}\n                  >\n                    <AddIcon />\n                  </Fab>\n                </span>\n              </Grid>\n            </Grid>\n            <Grid\n              container\n              direction=\"row\"\n              spacing={0}\n              justify=\"left\"\n              alignItems=\"left\"\n              md={10}\n              xs={10}\n            >\n              {refererList.length > 0 && (\n                <List>\n                  {refererList.map((referer, index) => (\n                    <ListItem>\n                      <ListItemText primary={referer} />\n                      <ListItemSecondaryAction>\n                        <Tooltip title=\"Delete task\" placement=\"top\">\n                          <IconButton\n                            edge=\"end\"\n                            aria-label=\"delete\"\n                            onClick={() => deleteRefererItem(referer)}\n                          >\n                            <DeleteIcon />\n                          </IconButton>\n                        </Tooltip>\n                      </ListItemSecondaryAction>\n                    </ListItem>\n                  ))}\n                </List>\n              )}\n            </Grid>\n          </Box>\n        )}\n      </Box>\n    </React.Fragment>\n  );\n};\napiKeyRestrictions.contextTypes = {\n  intl: PropTypes.shape({}).isRequired,\n};\nexport default injectIntl(withStyles(styles)(apiKeyRestrictions));\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport API from 'AppData/api';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport Grid from '@material-ui/core/Grid';\nimport ViewToken from './ViewToken';\nimport ApiKey from '../ApiKey';\nimport ApiKeyRestriction from '../ApiKeyRestriction';\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nconst styles = (theme) => ({\n  root: {\n    padding: theme.spacing(3),\n    '& span, & h5, & label, & input': {\n      color: theme.palette.getContrastText(theme.palette.background.paper),\n    },\n  },\n  dialog: {\n    '& span, & h2, & label': {\n      color: theme.palette.getContrastText(theme.palette.background.paper),\n    },\n  },\n  button: {\n    '& span': {\n      color: theme.palette.getContrastText(theme.palette.primary.main),\n    }\n  },\n  tokenSection: {\n    marginTop: theme.spacing(2),\n    marginBottom: theme.spacing(2),\n  },\n  margin: {\n    marginRight: theme.spacing(2),\n  },\n  keyConfigWrapper: {\n    flexDirection: 'column',\n    marginBottom: 0,\n  },\n  generateWrapper: {\n    padding: '10px',\n    'margin-inline-end': 'auto',\n  },\n  paper: {\n    display: 'flex',\n    marginTop: theme.spacing(2),\n    marginBottom: theme.spacing(2),\n    marginLeft: theme.spacing(10),\n  },\n  dialogTitle: {\n    padding: '24px 24px 0px',\n  },\n  dialogContent: {\n    padding: '0 24px 0px',\n  },\n  formGroup: {\n    padding: '20px',\n  },\n  gridWrapper: {\n    'align-self': 'center',\n  },\n  keyTitle: {\n    textTransform: 'capitalize',\n  },\n  cardBody: {\n    padding: theme.spacing(1),\n    lineHeight: 2,\n  },\n  generateKey: {\n    '& span': {\n      color: theme.palette.getContrastText(theme.palette.primary.main),\n    }\n  },\n});\n\nclass ApiKeyManager extends React.Component {\n  constructor(props) {\n    super(props);\n    const { classes, selectedApp, keyType } = this.props;\n    this.state = {\n      apikey: null,\n      open: false,\n      showToken: false,\n      accessTokenRequest: {\n        timeout: -1,\n      },\n      ipList: [],\n      newIP: null,\n      restrictSchema: 'none',\n      refererList: [],\n      newReferer: null,\n      isGenerating: false,\n    };\n  }\n\n  updateIpList = (ipList) => {\n    this.setState(() => ({ ipList }));\n  };\n\n  updateNewIp = (newIP) => {\n    this.setState(() => ({ newIP }));\n  };\n\n  updateRefererList = (refererList) => {\n    this.setState(() => ({ refererList }));\n  };\n\n  updateNewReferer = (newReferer) => {\n    this.setState(() => ({ newReferer }));\n  };\n\n  updateRestrictSchema = (restrictSchema) => {\n    this.setState(() => ({ restrictSchema }));\n  }\n\n  handleClose = () => {\n    this.setState(() => ({ open: false, accessTokenRequest: { timeout: -1 } }));\n  }\n\n  handleClickOpen = () => {\n    this.setState(() => ({ open: true, showToken: false }));\n  }\n\n  updateAccessTokenRequest = (accessTokenRequest) => {\n    this.setState(() => ({ accessTokenRequest }));\n  }\n\n  generateKeys = () => {\n    const { selectedApp, keyType } = this.props;\n    this.setState({isGenerating: true});\n    const client = new API();\n    const restrictions = {\n      permittedIP: this.state.ipList.join(\",\"),\n      permittedReferer: this.state.refererList.join(\",\"),\n    };\n    const promisedKey = client.generateApiKey(selectedApp.appId, keyType,\n      this.state.accessTokenRequest.timeout, restrictions);\n\n    promisedKey\n      .then((response) => {\n        console.log('Non empty response received');\n        const apikey = { accessToken: response.body.apikey, validityTime: response.body.validityTime, isOauth: false };\n        this.setState(() => ({\n          apikey, open: true, showToken: true,\n          ipList: [], refererList: []\n        }));\n        this.setState({isGenerating: false});\n      })\n      .catch((error) => {\n        if (process.env.NODE_ENV !== 'production') {\n          console.log(error);\n        }\n        const { status } = error;\n        if (status === 404) {\n          this.setState({\n            notFound: true, ipList: [],\n            refererList: []\n          });\n        }\n        this.setState({isGenerating: false});\n      });\n  }\n\n  render() {\n    const { classes, keyType } = this.props;\n    const {\n      showToken, accessTokenRequest, open, apikey, newIP, ipList,\n      newReferer, refererList, restrictSchema, isGenerating,\n    } = this.state;\n    return (\n      <Grid container direction=\"row\" spacing={0} justify=\"left\" alignItems=\"left\">\n        <Grid item md={5} xs={12}>\n          <ApiKeyRestriction\n            updateNewIp={this.updateNewIp}\n            newIP={newIP}\n            updateIpList={this.updateIpList}\n            ipList={ipList}\n            restrictSchema={restrictSchema}\n            updateRestrictSchema={this.updateRestrictSchema}\n            refererList={refererList}\n            newReferer={newReferer}\n            updateNewReferer={this.updateNewReferer}\n            updateRefererList={this.updateRefererList}\n          />\n          <FormGroup row className={classes.formGroup}>\n\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              onClick={this.handleClickOpen}\n              className={classes.generateKey}\n            >\n              {\"Generate Key\"}\n            </Button>\n            <Typography\n              component=\"div\"\n              variant=\"body2\"\n              className={classes.formLabel}\n            >\n              <FormattedMessage\n                id=\"Shared.AppsAndKeys.ApiKeyManager.generate.key.help\"\n                defaultMessage=\"Use the Generate Key button to generate a self-contained JWT token.\"\n              />\n            </Typography>\n          </FormGroup>\n          <Dialog\n            open={open}\n            onClose={this.handleClose}\n            aria-labelledby=\"form-dialog-title\"\n            className={classes.dialog}\n          >\n            <DialogTitle id=\"responsive-dialog-title\" className={classes.dialogTitle}>\n              {\"Generate API Key\"}\n            </DialogTitle>\n            <DialogContent className={classes.dialogContent}>\n              <DialogContentText>\n                {!showToken && (\n                  <ApiKey\n                    updateAccessTokenRequest={this.updateAccessTokenRequest}\n                    accessTokenRequest={accessTokenRequest}\n                  />\n                )}\n                {showToken && <ViewToken token={apikey} />}\n              </DialogContentText>\n            </DialogContent>\n            <DialogActions>\n              {!showToken && (\n                <Button\n                  onClick={this.generateKeys}\n                  disabled={!accessTokenRequest.timeout || isGenerating}\n                  color=\"primary\"\n                  variant='contained'\n                  className={classes.button}\n                >\n                  <FormattedMessage\n                    id=\"Shared.AppsAndKeys.ViewKeys.consumer.generate.btn\"\n                    defaultMessage=\"Generate\"\n                  />\n                   {isGenerating && <CircularProgress size={24} />}\n                </Button>\n              )}\n              <Button onClick={this.handleClose} color=\"primary\" autoFocus>\n                <FormattedMessage\n                  id=\"Shared.AppsAndKeys.ViewKeys.consumer.close.btn\"\n                  defaultMessage=\"Close\"\n                />\n              </Button>\n            </DialogActions>\n          </Dialog>\n        </Grid>\n        {restrictSchema === \"ip\" && (\n          <Grid item md={5} xs={12}>\n            <Card>\n              <CardContent>\n                <Typography variant=\"h5\" component=\"h2\">\n                  <FormattedMessage\n                    id=\"Shared.AppsAndKeys.ViewKeys.apiKeyRestriction.ip.example.heading\"\n                    defaultMessage=\"Examples of IP Addresses allowed\"\n                  />\n                </Typography>\n                <Typography variant=\"body1\" component=\"p\" className={classes.cardBody}>\n                  <FormattedMessage\n                    id=\"Shared.AppsAndKeys.ViewKeys.apiKeyRestriction.ip.example.content\"\n                    defaultMessage={\n                      \"Specify one IPv4 or IPv6 or a subnet using CIDR notation{linebreak}Examples: {ip1}, {ip2}, {ip3} or {ip4}\"\n                    }\n                    values={{\n                      linebreak: <br />,\n                      ip1: <b>192.168.1.2</b>,\n                      ip2: <b>152.12.0.0/13</b>,\n                      ip3: <b>2002:eb8::2</b>,\n                      ip4: <b>1001:ab8::/44</b>,\n                    }}\n                  />\n                </Typography>\n\n              </CardContent>\n            </Card>\n          </Grid>\n        )}\n        {restrictSchema === \"referer\" && (\n          <Grid item md={5} xs={12}>\n            <Card>\n              <CardContent>\n                <Typography variant=\"h5\" component=\"h2\">\n                  <FormattedMessage\n                    id=\"Shared.AppsAndKeys.ViewKeys.apiKeyRestriction.referer.example.heading\"\n                    defaultMessage=\"Examples of URLs allowed to restrict websites\"\n                  />\n                </Typography>\n                <Typography variant=\"body1\" component=\"p\" className={classes.cardBody}>\n                  <FormattedMessage\n                    id=\"Shared.AppsAndKeys.ViewKeys.apiKeyRestriction.ip.example.content.message\"\n                    defaultMessage={\n                      \"A specific URL with an exact path: {url1}{linebreak}Any URL in a single subdomain, using a wildcard asterisk (*): {url2}{linebreak}Any subdomain or path URLs in a single domain, using wildcard asterisks (*): {url3}\"\n                    }\n                    values={{\n                      linebreak: <br />,\n                      url1: <b>www.example.com/path</b>,\n                      url2: <b>sub.example.com/*</b>,\n                      url3: <b>*.example.com/*</b>,\n                    }}\n                  />\n                </Typography>\n              </CardContent>\n            </Card>\n          </Grid>\n        )}\n      </Grid>\n    );\n  }\n}\n\nApiKeyManager.propTypes = {\n  classes: PropTypes.shape({}).isRequired,\n  selectedApp: PropTypes.shape({\n    tokenType: PropTypes.string.isRequired,\n  }).isRequired,\n  keyType: PropTypes.string.isRequired,\n  intl: PropTypes.shape({ formatMessage: PropTypes.func }).isRequired,\n};\n\nexport default injectIntl(withStyles(styles)(ApiKeyManager));\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Button from '@material-ui/core/Button';\nimport { FormattedMessage } from 'react-intl';\nimport { ScopeValidation, resourceMethods, resourcePaths } from '../../Shared/ScopeValidation';\n\n/**\n *\n *\n * @param {*} theme\n */\nconst styles = theme => ({\n    root: {\n        display: 'flex',\n    },\n    buttonGap: {\n        marginLeft: 20,\n    },\n    select: {\n        width: 100,\n    },\n});\n\n/**\n *\n *\n * @class SubscriptionPolicySelect\n * @extends {React.Component}\n */\nclass SubscriptionPolicySelect extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            selectedPolicy: null,\n        };\n    }\n\n    /**\n     *\n     *\n     * @returns\n     * @memberof SubscriptionPolicySelect\n     */\n    componentDidMount() {\n        const { policies } = this.props;\n\n        this.setState({ selectedPolicy: policies[0] });\n    }\n\n    /**\n     *\n     *\n     * @returns\n     * @memberof SubscriptionPolicySelect\n     */\n    render() {\n        const {\n            classes, policies, apiId, handleSubscribe, applicationId,\n        } = this.props;\n        const { selectedPolicy } = this.state;\n\n        return (\n            policies\n            && (\n                <div className={classes.root}>\n                    <Select\n                        className={classes.select}\n                        value={selectedPolicy}\n                        onChange={(e) => {\n                            this.setState({ selectedPolicy: e.target.value });\n                        }}\n                    >\n                        {policies.map(policy => (\n                            <MenuItem value={policy} key={policy}>\n                                {policy}\n                            </MenuItem>\n                        ))}\n\n                    </Select>\n                    <ScopeValidation\n                        resourcePath={resourcePaths.SUBSCRIPTIONS}\n                        resourceMethod={resourceMethods.POST}\n                    >\n                        <Button\n                            variant='contained'\n                            size='small'\n                            className={classes.buttonGap}\n                            onClick={() => {\n                                handleSubscribe(applicationId, apiId, selectedPolicy);\n                            }}\n                        >\n                            <FormattedMessage defaultMessage='Subscribe' id='Apis.Listing.SubscriptionPolicySelect.subscribe' />\n                        </Button>\n                    </ScopeValidation>\n                </div>\n            )\n        );\n    }\n}\n\nSubscriptionPolicySelect.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles, { withTheme: true })(SubscriptionPolicySelect);\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport MUIDataTable from 'mui-datatables';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport API from 'AppData/api';\nimport NoApi from 'AppComponents/Apis/Listing/NoApi';\nimport Loading from 'AppComponents/Base/Loading/Loading';\nimport ResourceNotFound from '../../Base/Errors/ResourceNotFound';\nimport SubscriptionPolicySelect from './SubscriptionPolicySelect';\n\n\n/**\n *\n *\n * @param {*} theme\n */\nconst styles = theme => ({\n    root: {\n        display: 'flex',\n    },\n    buttonGap: {\n        marginRight: 10,\n    },\n});\n\n/**\n *\n *\n * @class APICardView\n * @extends {React.Component}\n */\nclass APICardView extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            data: null,\n            loading: true,\n        };\n        this.page = 0;\n        this.count = 100;\n        this.rowsPerPage = 10;\n        this.pageType = null;\n    }\n    componentDidMount() {\n        this.getData();\n    }\n\n    componentDidUpdate(prevProps) {\n        const { subscriptions, searchText } = this.props;\n        if ( subscriptions.length !== prevProps.subscriptions.length ) {\n            this.getData();\n        } else if (searchText !== prevProps.searchText) {\n            this.page = 0;\n            this.getData();\n        }\n    }\n\n    // get data\n    getData = () => {\n        const { intl } = this.props;\n        this.xhrRequest()\n            .then((data) => {\n                const { body } = data;\n                const { list, pagination } = body;\n                const { total } = pagination;\n                this.count = total;\n                this.setState({ data: this.updateUnsubscribedAPIsList(list) });\n            })\n            .catch((error) => {\n                const { response } = error;\n                const { setTenantDomain } = this.props;\n                if (response && response.body.code === 901300) {\n                    setTenantDomain('INVALID');\n                    Alert.error(intl.formatMessage({\n                        defaultMessage: 'Invalid tenant domain',\n                        id: 'Apis.Listing.ApiTableView.invalid.tenant.domain',\n                    }));\n                } else {\n                    Alert.error(intl.formatMessage({\n                        defaultMessage: 'Error While Loading APIs',\n                        id: 'Apis.Listing.ApiTableView.error.loading',\n                    }));\n                }\n            })\n            .finally(() => {\n                this.setState({ loading: false });\n            });\n    };\n\n    xhrRequest = () => {\n        const { searchText } = this.props;\n        const { page, rowsPerPage } = this;\n        const api = new API();\n\n        if (searchText && searchText !== '') {\n            return api.getAllAPIs({ query: `${searchText} status:published`, limit: this.rowsPerPage, offset: page * rowsPerPage });\n        } else {\n            return api.getAllAPIs({ query: 'status:published', limit: this.rowsPerPage, offset: page * rowsPerPage });\n        }\n    };\n\n    changePage = (page) => {\n        const { intl } = this.props;\n        this.page = page;\n        this.setState({ loading: true });\n        this.xhrRequest()\n            .then((data) => {\n                const { body } = data;\n                const { list } = body;\n                this.setState({\n                    data: this.updateUnsubscribedAPIsList(list),\n                });\n            })\n            .catch((e) => {\n                Alert.error(intl.formatMessage({\n                    defaultMessage: 'Error While Loading APIs',\n                    id: 'Apis.Listing.ApiTableView.error.loading',\n                }));\n            })\n            .finally(() => {\n                this.setState({ loading: false });\n            });\n    };\n\n    /**\n        *\n        * Get List of the Ids of all APIs that have been already subscribed\n        *\n        * @returns {*} Ids of respective APIs\n        * @memberof APICardView\n        */\n    getIdsOfSubscribedEntities() {\n        const { subscriptions } = this.props;\n\n        // Get arrays of the API Ids and remove all null/empty references by executing 'fliter(Boolean)'\n        const subscribedAPIIds = subscriptions.map((sub) => sub.apiId).filter(Boolean);\n\n        return subscribedAPIIds;\n    }\n\n    /**\n    *\n    * Update list of unsubscribed APIs\n    * @memberof APICardView\n    */\n    updateUnsubscribedAPIsList(list) {\n\n        const subscribedIds = this.getIdsOfSubscribedEntities();\n        for (let i = 0; i < list.length; i++) {\n            if ((!subscribedIds.includes(list[i].id) && !list[i].advertiseInfo.advertised)\n                && list[i].isSubscriptionAvailable) {\n            } else {\n                list[i].throttlingPolicies = null;\n            }\n        }\n        return list;\n        //return unsubscribedAPIList;\n\n    }\n\n    /**\n     *\n     *\n     * @returns\n     * @memberof APICardView\n     */\n    render() {\n        const { apisNotFound } = this.props;\n        const { loading, data } = this.state;\n        const { page, count, rowsPerPage } = this;\n\n        if (apisNotFound) {\n            return <ResourceNotFound />;\n        }\n\n        const {\n            theme, handleSubscribe, applicationId, intl,\n        } = this.props;\n        const columns = [\n            {\n                name: 'id',\n                label: intl.formatMessage({\n                    id: 'Apis.Listing.APIList.id',\n                    defaultMessage: 'Id',\n                }),\n                options: {\n                    display: 'excluded',\n                },\n            },\n            {\n                name: 'name',\n                label: intl.formatMessage({\n                    id: 'Apis.Listing.APIList.name',\n                    defaultMessage: 'Name',\n                }),\n            },\n            {\n                name: 'version',\n                label: intl.formatMessage({\n                    id: 'Apis.Listing.APIList.version',\n                    defaultMessage: 'Version',\n                }),\n            },\n            {\n                name: 'throttlingPolicies',\n                label: intl.formatMessage({\n                    id: 'Apis.Listing.APIList.policy',\n                    defaultMessage: 'Policy',\n                }),\n                options: {\n                    customBodyRender: (value, tableMeta, updateValue) => {\n                        if (tableMeta.rowData) {\n                            const apiId = tableMeta.rowData[0];\n                            const policies = value;\n                            if (!policies) {\n                                return (intl.formatMessage({\n                                    id: 'Apis.Listing.APICardView.already.subscribed',\n                                    defaultMessage: 'Subscribed',\n                                }))\n                            }\n                            return (\n                                <SubscriptionPolicySelect\n                                    key={apiId}\n                                    policies={policies}\n                                    apiId={apiId}\n                                    handleSubscribe={(app, api, policy) => handleSubscribe(app, api, policy)}\n                                    applicationId={applicationId}\n                                />\n                            );\n                        }\n                    },\n                },\n            },\n        ];\n        const options = {\n            search: false,\n            title: false,\n            filter: false,\n            print: false,\n            download: false,\n            viewColumns: false,\n            customToolbar: false,\n            responsive: 'stacked',\n            serverSide: true,\n            count,\n            page,\n            onTableChange: (action, tableState) => {\n                switch (action) {\n                    case 'changePage':\n                        this.changePage(tableState.page);\n                        break;\n                }\n            },\n            selectableRows: 'none',\n            rowsPerPage,\n            onChangeRowsPerPage: (numberOfRows) => {\n                const { page, count } = this;\n                if (page * numberOfRows > count) {\n                    this.page = 0;\n                }\n                this.rowsPerPage = numberOfRows;\n                this.getData();\n            },\n        };\n        if (loading) {\n            return <Loading />;\n        }\n        if ((data && data.length === 0) || !data) {\n            return <NoApi />;\n        }\n        return (\n            <MUIDataTable\n                title={''}\n                data={data}\n                columns={columns}\n                options={options}\n            />\n        );\n    }\n}\n\nAPICardView.propTypes = {\n    classes: PropTypes.object.isRequired,\n    theme: PropTypes.object.isRequired,\n    intl: PropTypes.shape({\n        formatMessage: PropTypes.func,\n    }).isRequired,\n};\nexport default injectIntl(withStyles(styles, { withTheme: true })(APICardView));\n","/*\n * Copyright (c), WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport Dialog from '@material-ui/core/Dialog';\nimport Button from '@material-ui/core/Button';\nimport MUIDataTable from 'mui-datatables';\nimport Icon from '@material-ui/core/Icon';\nimport { FormattedMessage } from 'react-intl';\nimport Subscription from 'AppData/Subscription';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport { withStyles } from '@material-ui/core/styles';\nimport { string } from 'prop-types';\n\nconst styles = (theme) => ({\n    dialogWrapper: {\n        '& span,& p , & h5, & label, & td, & li, & div, & input, & p.MuiFormHelperText-root': {\n            color: theme.palette.getContrastText(theme.palette.background.paper),\n        }\n    },\n});\n\nconst columns = ['Name', 'Value'];\n\nconst options = {\n    filterType: 'checkbox',\n    sort: false,\n    search: false,\n    viewColumns: false,\n    filter: false,\n    selectableRowsHeader: false,\n    selectableRows: 'none',\n    pagination: false,\n    download: false,\n};\n\nfunction Invoice(props) {\n    const { subscriptionId, isMonetizedAPI, isDynamicUsagePolicy, classes, tiers } = props;\n    const [showPopup, setShowPopup] = useState(false);\n    const [showErrorPopup, setShowErrorPopup] = useState(false);\n    const [invoice, setInvoice] = useState(null);\n\n    /**\n     * Handle the popup for invoice\n     */\n    const handlePopup = () => {\n        setShowPopup(true);\n        setInvoice(null);\n        const client = new Subscription();\n        const promiseInvoice = client.getMonetizationInvoice(subscriptionId);\n        promiseInvoice.then((response) => {\n            if (response && response.obj) {\n                const invoiceData = [];\n                const { obj: { properties } } = response;\n                Object.keys(properties).map((invoiveItem) => {\n                    const insideArray = [];\n                    insideArray.push(invoiveItem);\n                    insideArray.push(properties[invoiveItem]);\n                    invoiceData.push(insideArray);\n                });\n                setInvoice(invoiceData);\n            }\n        }).catch((error) => {\n            console.error(error);\n            setShowErrorPopup(true);\n        });\n    };\n\n    /**\n     * Handle closing the popup for invoice\n     */\n    const handleClose = () => {\n        setShowPopup(false);\n    };\n\n    const handleAlertClose = () => {\n        setShowErrorPopup(false);\n    };\n\n    return (\n        <React.Fragment>\n            <Button\n                color=\"default\"\n                onClick={handlePopup}\n                startIcon={<Icon>receipt</Icon>}\n                disabled={tiers.length === 0}\n            >\n                <FormattedMessage\n                    id='Applications.Details.Invoice.view.btn'\n                    defaultMessage='View Invoice'\n                />\n            </Button>\n            {invoice ? (\n                <Dialog open={showPopup} onClose={handleClose} fullWidth='true' className={classes.dialogWrapper}>\n                    {invoice && (<MUIDataTable\n                        title='Upcoming Invoice'\n                        data={invoice}\n                        columns={columns}\n                        options={options}\n                    />)}\n                </Dialog>\n            ) : (\n                    <Dialog open={showErrorPopup} onClose={handleAlertClose} fullWidth='true' className={classes.dialogWrapper}>\n                        <DialogTitle>\n                            <FormattedMessage\n                                id='Applications.Details.Invoice.no.data.available'\n                                defaultMessage='No Data Available'\n                            /></DialogTitle>\n                        <DialogContent>\n                            <DialogContentText id='invoice-dialog-description'>\n                                <FormattedMessage\n                                    id='Applications.Details.Invoice.pending.invoice.data'\n                                    defaultMessage='Pending invoice data not found for this subscription.'\n                                />\n\n                            </DialogContentText>\n                        </DialogContent>\n                        <DialogActions>\n                            <Button onClick={handleAlertClose} color='primary'>\n                                <FormattedMessage\n                                    id='Applications.Details.Invoice.close'\n                                    defaultMessage='Close'\n                                />\n\n                            </Button>\n                        </DialogActions>\n                    </Dialog>)}\n        </React.Fragment>\n    );\n}\n\nInvoice.defaultProps = {\n    tiers: [],\n}\nInvoice.propTypes = {\n    subscriptionId: PropTypes.string.isRequired,\n    tiers: PropTypes.arrayOf(string),\n};\n\nexport default withStyles(styles)(Invoice);\n","/*\n * Copyright (c), WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableRow from '@material-ui/core/TableRow';\nimport IconButton from '@material-ui/core/IconButton';\nimport Icon from '@material-ui/core/Icon';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Dialog from '@material-ui/core/Dialog';\nimport Select from '@material-ui/core/Select';\nimport Slide from '@material-ui/core/Slide';\nimport Button from '@material-ui/core/Button';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport TextField from '@material-ui/core/TextField';\nimport { FormattedMessage } from 'react-intl';\nimport { ScopeValidation, resourceMethods, resourcePaths } from 'AppComponents/Shared/ScopeValidation';\nimport PropTypes from 'prop-types';\nimport Api from 'AppData/api';\nimport Subscription from 'AppData/Subscription';\nimport Invoice from './Invoice';\n\n/**\n *\n *\n * @class SubscriptionTableData\n * @extends {React.Component}\n */\nclass SubscriptionTableData extends React.Component {\n    /**\n     *Creates an instance of SubscriptionTableData.\n     * @param {*} props properties\n     * @memberof SubscriptionTableData\n     */\n    constructor(props) {\n        super(props);\n        this.state = {\n            openMenu: false,\n            openMenuEdit: false,\n            isMonetizedAPI: false,\n            isDynamicUsagePolicy: false,\n            tiers: [],\n            selectedTier: \"\",\n        };\n        this.handleRequestClose = this.handleRequestClose.bind(this);\n        this.handleRequestOpen = this.handleRequestOpen.bind(this);\n        this.handleRequestDelete = this.handleRequestDelete.bind(this);\n        this.checkIfDynamicUsagePolicy = this.checkIfDynamicUsagePolicy.bind(this);\n        this.checkIfMonetizedAPI = this.checkIfMonetizedAPI.bind(this);\n        this.populateSubscriptionTiers = this.populateSubscriptionTiers.bind(this);\n        this.handleSubscriptionTierUpdate = this.handleSubscriptionTierUpdate.bind(this);\n        this.handleRequestCloseEditMenu = this.handleRequestCloseEditMenu.bind(this);\n        this.handleRequestOpenEditMenu = this.handleRequestOpenEditMenu.bind(this);\n        this.setSelectedTier = this.setSelectedTier.bind(this);\n    }\n\n    /**\n     *\n     *\n     * @memberof SubscriptionTableData\n     */\n    handleRequestClose() {\n        this.setState({ openMenu: false });\n    }\n\n    /**\n    *\n    *\n    * @memberof SubscriptionTableData\n    */\n    handleRequestOpen() {\n        this.setState({ openMenu: true });\n    }\n\n    /**\n     *\n     * Handle onclick for subscription delete\n     * @param {*} subscriptionId subscription id\n     * @memberof SubscriptionTableData\n     */\n    handleRequestDelete(subscriptionId) {\n        const { handleSubscriptionDelete } = this.props;\n        this.setState({ openMenu: false });\n        if (handleSubscriptionDelete) {\n            handleSubscriptionDelete(subscriptionId);\n        }\n    }\n\n    /**\n     *\n     *\n     * @memberof SubscriptionTableData\n     */\n    handleRequestCloseEditMenu() {\n        this.setState({ openMenuEdit: false });\n    }\n\n    /**\n    *\n    *\n    * @memberof SubscriptionTableData\n    */\n    handleRequestOpenEditMenu() {\n        this.setState({ openMenuEdit: true });\n    }\n\n    /**\n    *\n    *\n    * @memberof SubscriptionTableData\n    */\n    setSelectedTier (e) {\n    this.setState({ selectedTier: e });\n    }\n\n/**\n     *\n     * Handle onclick for subscription update\n     * @param {*} apiId subscription id\n     * @param {*} subscriptionId subscription id\n     * @param {*} throttlingPolicy throttling tier\n     * @param {*} status subscription status\n     * @memberof SubscriptionTableData\n     */\n    handleSubscriptionTierUpdate(apiId, subscriptionId, requestedThrottlingPolicy, status, currentThrottlingPolicy) {\n        const { handleSubscriptionUpdate } = this.props;\n        this.setState({ openMenuEdit: false });\n        if (handleSubscriptionUpdate) {\n            handleSubscriptionUpdate(apiId, subscriptionId, currentThrottlingPolicy, status, requestedThrottlingPolicy);\n        }\n    }\n\n    /**\n     * Getting the policies from api details\n     *\n     */\n    populateSubscriptionTiers(apiUUID){\n        const apiClient = new Api();\n        const promisedApi = apiClient.getAPIById(apiUUID);\n        promisedApi.then((response) => {\n            if (response && response.data) {\n                const api = JSON.parse(response.data);\n                const apiTiers = api.tiers;\n                const tiers = [];\n                for (let i = 0; i < apiTiers.length; i++) {\n                    const tierName = apiTiers[i].tierName;\n                    tiers.push({ value: tierName, label: tierName });\n                }\n                this.setState({ tiers });\n                if (tiers.length > 0) {\n                    this.setState({ policyName: tiers[0].value });\n                }\n            }\n        });\n    }\n\n    /**\n     * Check if the API is monetized\n     * @param apiUUID API UUID\n     */\n    checkIfMonetizedAPI(apiUUID) {\n        const apiClient = new Api();\n        const promisedApi = apiClient.getAPIById(apiUUID);\n        promisedApi.then((response) => {\n            if (response && response.data) {\n                const apiData = JSON.parse(response.data);\n                this.setState({ isMonetizedAPI: apiData.monetization.enabled });\n            }\n        });\n    }\n\n    /**\n     * Check if the policy is dynamic usage type\n     * @param subscriptionUUID subscription UUID\n     */\n    checkIfDynamicUsagePolicy(subscriptionUUID) {\n        const client = new Subscription();\n        const promisedSubscription = client.getSubscription(subscriptionUUID);\n        promisedSubscription.then((response) => {\n            if (response && response.body) {\n                const subscriptionData = JSON.parse(response.data);\n                if (subscriptionData.throttlingPolicy) {\n                    const apiClient = new Api();\n                    const promisedPolicy = apiClient.getTierByName(subscriptionData.throttlingPolicy, 'subscription');\n                    promisedPolicy.then((policyResponse) => {\n                        const policyData = JSON.parse(policyResponse.data);\n                        if (policyData.monetizationAttributes.billingType && (policyData.monetizationAttributes.billingType === 'DYNAMICRATE')) {\n                            this.setState({ isDynamicUsagePolicy: true });\n                        }\n                    });\n                }\n            }\n        });\n    }\n\n    componentDidMount() {\n        this.checkIfMonetizedAPI(this.props.subscription.apiId);\n        this.checkIfDynamicUsagePolicy(this.props.subscription.subscriptionId);\n        this.populateSubscriptionTiers(this.props.subscription.apiId);\n    }\n\n    /**\n    * @inheritdoc\n    * @memberof SubscriptionTableData\n    */\n    render() {\n        const {\n            subscription: {\n                apiInfo, status, throttlingPolicy, subscriptionId, apiId, requestedThrottlingPolicy\n            },\n        } = this.props;\n        const { openMenu, isMonetizedAPI, isDynamicUsagePolicy, openMenuEdit, selectedTier, tiers, } = this.state;\n        const link = <Link \n            to={tiers.length === 0 ? '': '/apis/' + apiId}\n            style={{cursor: tiers.length === 0 ? 'default': ''}}\n            >{apiInfo.name + ' - ' + apiInfo.version}</Link>;\n\n        return (\n            <TableRow hover>\n                <TableCell>\n                    { link }\n                </TableCell>\n                <TableCell>{apiInfo.lifeCycleStatus}</TableCell>\n                <TableCell>{throttlingPolicy}</TableCell>\n                <TableCell>{status}</TableCell>\n                <TableCell>\n                    <ScopeValidation\n                        resourcePath={resourcePaths.SINGLE_SUBSCRIPTION}\n                        resourceMethod={resourceMethods.PUT}\n                    >  \n                        <Button\n                            color=\"default\"\n                            onClick={this.handleRequestOpenEditMenu}\n                            startIcon={<Icon>edit</Icon>}\n                            disabled={tiers.length === 0}\n                        >\n                            <FormattedMessage\n                                id='Applications.Details.SubscriptionTableData.edit.text'\n                                defaultMessage='Edit'\n                            />\n                        </Button>  \n                    </ScopeValidation>               \n                        <Dialog open={openMenuEdit} transition={Slide}>\n                            <DialogTitle><FormattedMessage\n                                        id='Applications.Details.SubscriptionTableData.update.subscription'\n                                        defaultMessage='Update Subscription'\n                                    /></DialogTitle>\n                            <DialogContent>\n                                <DialogContentText>\n                                    <FormattedMessage\n                                        id='Applications.Details.SubscriptionTableData.update.throttling.policy'\n                                        defaultMessage='Current Subscription Tier : '\n                                    />\n                                        {throttlingPolicy}\n                                    <div>\n                                        {   (status === 'BLOCKED')\n                                            ? (\n                                                <FormattedMessage\n                                                    id='Applications.Details.SubscriptionTableData.update.throttling.policy.blocked'\n                                                    defaultMessage='Subscription is in BLOCKED state. You need to unblock the subscription inorder to edit the tier'\n                                                />\n                                            )\n                                             : (status === 'ON_HOLD')\n                                            ? (\n                                                <FormattedMessage\n                                                    id='Applications.Details.SubscriptionTableData.update.throttling.policy.onHold'\n                                                    defaultMessage='Subscription is currently ON_HOLD state. You need to get approval to the subscription before editing the tier'\n                                                />\n                                            )\n                                             : (status === 'REJECTED')\n                                            ? (\n                                                <FormattedMessage\n                                                    id='Applications.Details.SubscriptionTableData.update.throttling.policy.rejected'\n                                                    defaultMessage='Subscription is currently REJECTED state. You need to get approval to the subscription before editing the tier'\n                                                />\n                                            )\n                                             :(   \n                                                <div>\n                                                    <TextField\n                                                        required\n                                                        fullWidth\n                                                        id='outlined-select-currency'\n                                                        select\n                                                        label={(\n                                                            <FormattedMessage\n                                                                defaultMessage='Throttling Tier'\n                                                                id='Applications.Details.SubscriptionTableData.update.throttling.policy.name'\n                                                            />\n                                                        )}\n                                                        value={selectedTier}\n                                                        name='throttlingPolicy'\n                                                        onChange={e => this.setSelectedTier(e.target.value)}\n                                                        helperText={(\n                                                            <FormattedMessage\n                                                                defaultMessage={`Assign a new Throttling policy tier to the existing subscription`}\n                                                                id='Applications.Details.SubscriptionTableData.update.throttling.policy.helper'\n                                                            />\n                                                        )}\n                                                        margin='normal'\n                                                        variant='outlined'\n                                                    >\n                                                        {this.state.tiers.map((tier) => (\n                                                            <MenuItem key={tier.value} value={tier.value}>\n                                                                {tier.label}\n                                                            </MenuItem>\n                                                        ))}\n                                                    </TextField>\n                                                    { (status === 'TIER_UPDATE_PENDING')\n                                                    &&  (\n                                                        <div>\n                                                            <FormattedMessage\n                                                                id='Applications.Details.SubscriptionTableData.update.throttling.policy.tier.update'\n                                                                defaultMessage='Pending Tier Update : '\n                                                            />\n                                                            {requestedThrottlingPolicy}\n                                                        </div>     \n                                                    )}\n                                                </div>\n                                            )}\n                                    </div>\n                                </DialogContentText>\n                            </DialogContent>\n                            <DialogActions>\n                                <Button dense onClick={this.handleRequestCloseEditMenu}>\n                                    <FormattedMessage\n                                        id='Applications.Details.SubscriptionTableData.cancel'\n                                        defaultMessage='Cancel'\n                                    />\n                                </Button>\n                                <Button\n                                    variant=\"contained\"\n                                    disabled={(\n                                        status === 'BLOCKED' ||\n                                        status === 'ON_HOLD' ||\n                                        status === 'REJECTED'\n                                        )}\n                                    dense\n                                    color='primary'\n                                    onClick={() => this.handleSubscriptionTierUpdate(\n                                        apiId,\n                                        subscriptionId,\n                                        selectedTier,\n                                        status,\n                                    throttlingPolicy)}\n                                    >\n                                    <FormattedMessage\n                                        id='Applications.Details.SubscriptionTableData.update'\n                                        defaultMessage='Update'\n                                    />\n                                </Button>\n                            </DialogActions>\n                        </Dialog>\n                        <ScopeValidation\n                            resourcePath={resourcePaths.SINGLE_SUBSCRIPTION}\n                            resourceMethod={resourceMethods.DELETE}\n                        >\n                            <Button\n                                color=\"default\"\n                                onClick={this.handleRequestOpen}\n                                startIcon={<Icon>delete</Icon>}\n                            >\n                                <FormattedMessage\n                                    id='Applications.Details.SubscriptionTableData.delete.text'\n                                    defaultMessage='Delete'\n                                />\n                            </Button>\n                        </ScopeValidation>\n\n                        <Dialog open={openMenu} transition={Slide}>\n                            <DialogTitle>Confirm</DialogTitle>\n                            <DialogContent>\n                                <DialogContentText>\n                                    <FormattedMessage\n                                        id='Applications.Details.SubscriptionTableData.delete.subscription.confirmation'\n                                        defaultMessage='Are you sure you want to delete the Subscription?'\n                                    />\n                                </DialogContentText>\n                            </DialogContent>\n                            <DialogActions>\n                                <Button dense onClick={this.handleRequestClose}>\n                                    <FormattedMessage\n                                        id='Applications.Details.SubscriptionTableData.cancel'\n                                        defaultMessage='Cancel'\n                                    />\n                                </Button>\n                                <Button dense variant=\"contained\" color='primary' onClick={() => this.handleRequestDelete(subscriptionId)}>\n                                    <FormattedMessage\n                                        id='Applications.Details.SubscriptionTableData.delete'\n                                        defaultMessage='Delete'\n                                    />\n                                </Button>\n                            </DialogActions>\n                        </Dialog>\n                    <Invoice tiers={tiers} subscriptionId={subscriptionId} isMonetizedAPI={isMonetizedAPI} isDynamicUsagePolicy={isDynamicUsagePolicy} />\n                </TableCell>\n            </TableRow>\n        );\n    }\n}\nSubscriptionTableData.propTypes = {\n    subscription: PropTypes.shape({\n        apiInfo: PropTypes.shape({\n            name: PropTypes.string.isRequired,\n            version: PropTypes.string.isRequired,\n            lifeCycleStatus: PropTypes.string.isRequired,\n        }).isRequired,\n        throttlingPolicy: PropTypes.string.isRequired,\n        subscriptionId: PropTypes.string.isRequired,\n        apiId: PropTypes.string.isRequired,\n        status: PropTypes.string.isRequired,\n        requestedThrottlingPolicy: PropTypes.string.isRequired,\n    }).isRequired,\n    handleSubscriptionDelete: PropTypes.func.isRequired,\n    handleSubscriptionUpdate: PropTypes.func.isRequired,\n};\nexport default SubscriptionTableData;\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Icon from '@material-ui/core/Icon';\nimport IconButton from '@material-ui/core/IconButton';\nimport Divider from '@material-ui/core/Divider';\nimport Dialog from '@material-ui/core/Dialog';\nimport Button from '@material-ui/core/Button';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport Box from '@material-ui/core/Box';\nimport Paper from '@material-ui/core/Paper';\nimport InputBase from '@material-ui/core/InputBase';\nimport HighlightOffIcon from '@material-ui/icons/HighlightOff';\nimport SearchIcon from '@material-ui/icons/Search';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport Progress from 'AppComponents/Shared/Progress';\nimport Alert from 'AppComponents/Shared/Alert';\nimport APIList from 'AppComponents/Apis/Listing/APICardView';\nimport ResourceNotFound from 'AppComponents/Base/Errors/ResourceNotFound';\nimport Subscription from 'AppData/Subscription';\nimport Api from 'AppData/api';\nimport { app } from 'Settings';\nimport InlineMessage from 'AppComponents/Shared/InlineMessage';\nimport SubscriptionTableData from './SubscriptionTableData';\n\n/**\n *\n * @inheritdoc\n * @param {*} theme theme\n */\nconst styles = (theme) => ({\n    searchRoot: {\n        padding: '2px 4px',\n        display: 'flex',\n        alignItems: 'center',\n        width: 400,\n        flex: 1,\n        marginLeft: theme.spacing(2),\n        marginRight: theme.spacing(2),\n    },\n    input: {\n        marginLeft: theme.spacing(1),\n        flex: 1,\n    },\n    iconButton: {\n        padding: 10,\n    },\n    divider: {\n        height: 28,\n        margin: 4,\n    },\n    root: {\n        padding: theme.spacing(3),\n        '& h5': {\n            color: theme.palette.getContrastText(theme.palette.background.default),\n        },\n    },\n    subscribePop: {\n        '& span, & h5, & label, & input, & td, & li': {\n            color: theme.palette.getContrastText(theme.palette.background.paper),\n        },\n    },\n    firstCell: {\n        paddingLeft: 0,\n    },\n    cardTitle: {\n        paddingLeft: theme.spacing(2),\n    },\n    cardContent: {\n        '& table tr td':{\n            paddingLeft: theme.spacing(1),\n        },\n        '& table tr:nth-child(even)': {\n            backgroundColor: theme.custom.listView.tableBodyEvenBackgrund,\n            '& td, & a': {\n                color: theme.palette.getContrastText(theme.custom.listView.tableBodyEvenBackgrund),\n            },\n        },\n        '& table tr:nth-child(odd)': {\n            backgroundColor: theme.custom.listView.tableBodyOddBackgrund,\n            '& td, & a': {\n                color: theme.palette.getContrastText(theme.custom.listView.tableBodyOddBackgrund),\n            },\n        },\n        '& table th': {\n            backgroundColor: theme.custom.listView.tableHeadBackground,\n            color: theme.palette.getContrastText(theme.custom.listView.tableHeadBackground),\n            paddingLeft: theme.spacing(1),\n        },\n\n    },\n    titleWrapper: {\n        display: 'flex',\n        alignItems: 'center',\n        paddingBottom: theme.spacing(2),\n        '& h5': {\n            marginRight: theme.spacing(1),\n        },\n    },\n    dialogTitle: {\n        display: 'flex',\n        alignItems: 'flex-start',\n        padding: theme.spacing(1),\n    },\n    genericMessageWrapper: {\n        margin: theme.spacing(2),\n    },\n    searchWrapper: {\n        flex: 1,\n    },\n    searchResults: {\n        height: 30,\n        display: 'flex',\n        paddingTop: theme.spacing(1),\n        paddingRight: 0,\n        paddingBottom: 0,\n        paddingLeft: theme.spacing(2),\n    },\n    clearSearchIcon: {\n        cursor: 'pointer',\n    },\n    subsTable: {\n        '& td': {\n            padding: '4px 8px',\n        },\n    },\n});\n/**\n *\n *\n * @class Subscriptions\n * @extends {React.Component}\n */\nclass Subscriptions extends React.Component {\n    /**\n     *Creates an instance of Subscriptions.\n     * @param {*} props properties\n     * @memberof Subscriptions\n     */\n    constructor(props) {\n        super(props);\n        this.state = {\n            subscriptions: null,\n            unsubscribedAPIList: [],\n            apisNotFound: false,\n            subscriptionsNotFound: false,\n            isAuthorize: true,\n            openDialog: false,\n            searchText: '',\n        };\n        this.handleSubscriptionDelete = this.handleSubscriptionDelete.bind(this);\n        this.handleSubscriptionUpdate = this.handleSubscriptionUpdate.bind(this);\n        this.updateSubscriptions = this.updateSubscriptions.bind(this);\n        this.handleSubscribe = this.handleSubscribe.bind(this);\n        this.handleOpenDialog = this.handleOpenDialog.bind(this);\n        this.handleSearchTextChange = this.handleSearchTextChange.bind(this);\n        this.handleSearchTextTmpChange = this.handleSearchTextTmpChange.bind(this);\n        this.handleClearSearch = this.handleClearSearch.bind(this);\n        this.handleEnterPress = this.handleEnterPress.bind(this);\n        this.searchTextTmp = '';\n    }\n\n    /**\n     *\n     *\n     * @memberof Subscriptions\n     */\n    componentDidMount() {\n        const { applicationId } = this.props.application;\n        this.updateSubscriptions(applicationId);\n    }\n\n    handleOpenDialog() {\n        this.setState((prevState) => ({ openDialog: !prevState.openDialog, searchText: '' }));\n    }\n\n    /**\n     *\n     * Update subscriptions list of Application\n     * @param {*} applicationId application id\n     * @memberof Subscriptions\n     */\n    updateSubscriptions(applicationId) {\n        const client = new Subscription();\n        const subscriptionLimit = app.subscriptionLimit || 1000;\n        const promisedSubscriptions = client.getSubscriptions(null, applicationId, subscriptionLimit);\n        promisedSubscriptions\n            .then((response) => {\n                this.setState({ subscriptions: response.body.list });\n            })\n            .catch((error) => {\n                const { status } = error;\n                if (status === 404) {\n                    this.setState({ subscriptionsNotFound: true });\n                } else if (status === 401) {\n                    this.setState({ isAuthorize: false });\n                }\n            });\n    }\n\n    /**\n     *\n     * Handle subscription deletion of application\n     * @param {*} subscriptionId subscription id\n     * @memberof Subscriptions\n     */\n    handleSubscriptionDelete(subscriptionId) {\n        const client = new Subscription();\n        const promisedDelete = client.deleteSubscription(subscriptionId);\n\n        promisedDelete\n            .then((response) => {\n                if (response.status !== 200) {\n                    console.log(response);\n                    Alert.info('Something went wrong while deleting the Subscription!');\n                    return;\n                }\n                Alert.info('Subscription deleted successfully!');\n                const { subscriptions } = this.state;\n                for (const endpointIndex in subscriptions) {\n                    if (\n                        Object.prototype.hasOwnProperty.call(subscriptions, endpointIndex)\n                        && subscriptions[endpointIndex].subscriptionId === subscriptionId\n                    ) {\n                        subscriptions.splice(endpointIndex, 1);\n                        break;\n                    }\n                }\n                this.setState({ subscriptions });\n                this.props.getApplication();\n            })\n            .catch((error) => {\n                const { status } = error;\n                if (status === 401) {\n                    this.setState({ isAuthorize: false });\n                }\n                Alert.error('Error occurred when deleting subscription');\n            });\n    }\n\n    /**\n     *\n     * Handle subscription update of application\n     *\n     * @param {*} apiId API id\n     * @param {*} subscriptionId subscription id\n     * @param {*} throttlingPolicy throttling tier\n     * @param {*} status subscription status\n     * @memberof Subscriptions\n     */\n    handleSubscriptionUpdate(apiId, subscriptionId, currentThrottlingPolicy, status, requestedThrottlingPolicy) {\n        const { applicationId } = this.props.application;\n        const client = new Subscription();\n        const promisedUpdate = client.updateSubscription(applicationId, apiId, subscriptionId, currentThrottlingPolicy, status, requestedThrottlingPolicy);\n\n        promisedUpdate\n            .then((response) => {\n                if (response.status !== 200 && response.status !== 201) {\n                    console.log(response);\n                    Alert.info('Something went wrong while updating the Subscription!');\n                    return;\n                }\n                Alert.info('Subscription Tier updated successfully!');\n                this.updateSubscriptions(applicationId);\n            })\n            .catch((error) => {\n                const { status } = error;\n                if (status === 401) {\n                    this.setState({ isAuthorize: false });\n                }\n                Alert.error('Error occurred when updating subscription');\n            });\n    }\n\n    /**\n     * Handle onClick of subscribing to an API\n     * @param {*} applicationId application id\n     * @param {*} apiId api id\n     * @param {*} policy policy\n     * @memberof Subscriptions\n     */\n    handleSubscribe(applicationId, apiId, policy) {\n        const api = new Api();\n        const { intl } = this.props;\n        if (!policy) {\n            Alert.error(intl.formatMessage({\n                id: 'Applications.Details.Subscriptions.select.a.subscription.policy',\n                defaultMessage: 'Select a subscription policy',\n            }));\n            return;\n        }\n\n        const promisedSubscribe = api.subscribe(apiId, applicationId, policy);\n        promisedSubscribe\n            .then((response) => {\n                if (response.status !== 201) {\n                    Alert.error(intl.formatMessage({\n                        id: 'Applications.Details.Subscriptions.error.occurred.during.subscription.not.201',\n                        defaultMessage: 'Error occurred during subscription',\n                    }));\n                } else {\n                    if (response.body.status === 'ON_HOLD') {\n                        Alert.info(intl.formatMessage({\n                            defaultMessage: 'Your subscription request has been submitted and is now awaiting '\n                                + 'approval.',\n                            id: 'subscription.pending',\n                        }));\n                    } else {\n                        Alert.info(intl.formatMessage({\n                            id: 'Applications.Details.Subscriptions.subscription.successful',\n                            defaultMessage: 'Subscription successful',\n                        }));\n                    }\n                    this.updateSubscriptions(applicationId);\n                    this.props.getApplication();\n                }\n            })\n            .catch((error) => {\n                const { status } = error;\n                if (status === 401) {\n                    this.setState({ isAuthorize: false });\n                }\n                Alert.error(intl.formatMessage({\n                    id: 'Applications.Details.Subscriptions.error.occurred.during.subscription',\n                    defaultMessage: 'Error occurred during subscription',\n                }));\n            });\n    }\n    handleSearchTextChange() {\n        this.setState({ searchText: this.searchTextTmp });\n    };\n    handleSearchTextTmpChange(event) {\n        this.searchTextTmp = event.target.value;\n    };\n    handleClearSearch() {\n        this.setState({ searchText: '' });\n    };\n    handleEnterPress(e) {\n        if (e.keyCode === 13) {\n            e.preventDefault();\n            this.handleSearchTextChange();\n        }\n    }\n    /**\n     * @inheritdoc\n     * @memberof Subscriptions\n     */\n    render() {\n        const { isAuthorize, openDialog, searchText } = this.state;\n\n        if (!isAuthorize) {\n            window.location = app.context + '/services/configs';\n        }\n\n        const {\n            subscriptions, apisNotFound, subscriptionsNotFound,\n        } = this.state;\n        const { applicationId } = this.props.application;\n        const { classes, intl } = this.props;\n\n        if (subscriptions) {\n            return (\n                <div className={classes.root}>\n                    <div className={classes.titleWrapper}>\n                        <Typography variant='h5' className={classes.keyTitle}>\n                            <FormattedMessage\n                                id='Applications.Details.Subscriptions.subscription.management'\n                                defaultMessage='Subscription Management'\n                            />\n                        </Typography>\n                        <Button\n                            color='secondary'\n                            className={classes.buttonElm}\n                            size='small'\n                            onClick={this.handleOpenDialog}\n                        >\n                            <Icon>add_circle_outline</Icon>\n                            <FormattedMessage\n                                id='Applications.Details.Subscriptions.subscription.management.add'\n                                defaultMessage='Subscribe APIs'\n                            />\n                        </Button>\n                    </div>\n                    <Grid container className='tab-grid' spacing={2}>\n                        <Grid item xs={12} xl={11}>\n                            {(subscriptions && subscriptions.length === 0)\n                                ? (\n                                    <div className={classes.genericMessageWrapper}>\n                                        <InlineMessage type='info' className={classes.dialogContainer}>\n                                            <Typography variant='h5' component='h3'>\n                                                <FormattedMessage\n                                                    id='Applications.Details.Subscriptions.no.subscriptions'\n                                                    defaultMessage='No Subscriptions Available'\n                                                />\n                                            </Typography>\n                                            <Typography component='p'>\n                                                <FormattedMessage\n                                                    id='Applications.Details.Subscriptions.no.subscriptions.content'\n                                                    defaultMessage='No subscriptions are available for this Application'\n                                                />\n                                            </Typography>\n                                        </InlineMessage>\n                                    </div>\n                                )\n                                : (\n                                    <div className={classes.cardContent}>\n                                            {subscriptionsNotFound ? (\n                                                <ResourceNotFound />\n                                            ) : (\n                                                    <Table className={classes.subsTable}>\n                                                        <TableHead>\n                                                            <TableRow>\n                                                                <TableCell className={classes.firstCell}>\n                                                                    <FormattedMessage\n                                                                        id='Applications.Details.Subscriptions.api.name'\n                                                                        defaultMessage='API'\n                                                                    />\n                                                                </TableCell>\n                                                                <TableCell>\n                                                                    <FormattedMessage\n                                                                        id={`Applications.Details.Subscriptions\n                                                                        .subscription.state`}\n                                                                        defaultMessage='Lifecycle State'\n                                                                    />\n                                                                </TableCell>\n                                                                <TableCell>\n                                                                    <FormattedMessage\n                                                                        id={`Applications.Details.Subscriptions\n                                                                        .subscription.tier`}\n                                                                        defaultMessage='Subscription Tier'\n                                                                    />\n                                                                </TableCell>\n                                                                <TableCell>\n                                                                    <FormattedMessage\n                                                                        id='Applications.Details.Subscriptions.Status'\n                                                                        defaultMessage='Subscription Status'\n                                                                    />\n                                                                </TableCell>\n                                                                <TableCell>\n                                                                    <FormattedMessage\n                                                                        id='Applications.Details.Subscriptions.action'\n                                                                        defaultMessage='Action'\n                                                                    />\n                                                                </TableCell>\n                                                            </TableRow>\n                                                        </TableHead>\n                                                        <TableBody>\n                                                            {subscriptions\n                                                                && subscriptions.map((subscription) => {\n                                                                    return (\n                                                                        <SubscriptionTableData\n                                                                            key={subscription.subscriptionId}\n                                                                            subscription={subscription}\n                                                                            handleSubscriptionDelete={this.handleSubscriptionDelete}\n                                                                            handleSubscriptionUpdate={this.handleSubscriptionUpdate}\n                                                                        />\n                                                                    );\n                                                                })}\n                                                        </TableBody>\n                                                    </Table>\n                                                )}\n                                        </div>\n                                )}\n                        </Grid>\n                    </Grid>\n                    <Dialog\n                        onClose={this.handleOpenDialog}\n                        aria-labelledby='simple-dialog-title'\n                        open={openDialog}\n                        maxWidth='lg'\n                        className={classes.subscribePop}\n                    >\n                        <MuiDialogTitle disableTypography className={classes.dialogTitle}>\n                            <Typography variant='h6'>\n                                <FormattedMessage\n                                    id='Applications.Details.Subscriptions.subscription.management.add'\n                                    defaultMessage='Subscribe APIs'\n                                />\n                            </Typography>\n                            <Box className={classes.searchWrapper}>\n                                <Paper component=\"form\" className={classes.searchRoot}>\n                                    {searchText && <HighlightOffIcon className={classes.clearSearchIcon}\n                                        onClick={this.handleClearSearch}\n                                    />}\n                                    <InputBase\n                                        className={classes.input}\n                                        placeholder={intl.formatMessage({ defaultMessage: 'Search APIs', id: 'Applications.Details.Subscriptions.search' })}\n                                        inputProps={{ 'aria-label': intl.formatMessage({ defaultMessage: 'Search APIs', id: 'Applications.Details.Subscriptions.search' }) }}\n                                        onChange={this.handleSearchTextTmpChange}\n                                        onKeyDown={this.handleEnterPress}\n                                    />\n                                    <IconButton className={classes.iconButton} aria-label=\"search\" onClick={this.handleSearchTextChange}>\n                                        <SearchIcon />\n                                    </IconButton>\n                                </Paper>\n                                <Box className={classes.searchResults}>\n                                    {(searchText && searchText !== '') ? <>\n                                        <Typography variant='caption'>\n                                            <FormattedMessage\n                                                id='Applications.Details.Subscriptions.filter.msg'\n                                                defaultMessage='Filtered APIs for '\n                                            />{searchText}</Typography>\n                                    </> : (<Typography variant='caption'>\n                                        <FormattedMessage\n                                            id='Applications.Details.Subscriptions.filter.msg.all.apis'\n                                            defaultMessage='Displaying all APIs'\n                                        /></Typography>)}\n                                </Box>\n\n                            </Box>\n\n                            <IconButton aria-label='close' className={classes.closeButton} onClick={this.handleOpenDialog}>\n                                <Icon>cancel</Icon>\n                            </IconButton>\n                        </MuiDialogTitle>\n                        <Box padding={2}>\n                            <APIList\n                                apisNotFound={apisNotFound}\n                                subscriptions={subscriptions}\n                                applicationId={applicationId}\n                                handleSubscribe={(app, api, policy) => this.handleSubscribe(app, api, policy)}\n                                searchText={searchText}\n                            />\n                        </Box>\n                    </Dialog>\n                </div>\n            );\n        } else {\n            return (\n              <Progress />  \n            );\n        }\n    }\n}\nSubscriptions.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    intl: PropTypes.shape({}).isRequired,\n};\n\nexport default injectIntl(withStyles(styles)(Subscriptions));\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport { withRouter, Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Collapse from '@material-ui/core/Collapse';\nimport Icon from '@material-ui/core/Icon';\nimport IconButton from '@material-ui/core/IconButton';\nimport Button from '@material-ui/core/Button';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport Loading from 'AppComponents/Base/Loading/Loading';\nimport ResourceNotFound from 'AppComponents/Base/Errors/ResourceNotFound';\nimport VerticalDivider from 'AppComponents/Shared/VerticalDivider';\nimport Grid from '@material-ui/core/Grid';\nimport API from 'AppData/api';\nimport Application from 'AppData/Application';\nimport Alert from 'AppComponents/Shared/Alert';\nimport DeleteConfirmation from '../Listing/DeleteConfirmation';\nimport AuthManager from 'AppData/AuthManager';\nimport { ScopeValidation, resourceMethods, resourcePaths } from 'AppComponents/Shared/ScopeValidation';\n\n/**\n * @param {*} theme theme details\n * @returns {Object}\n */\nconst styles = (theme) => {\n    const mainBack = theme.custom.infoBar.background || '#ffffff';\n    const infoBarHeight = theme.custom.infoBar.height || 70;\n    const starColor = theme.custom.infoBar.starColor || theme.palette.getContrastText(mainBack);\n\n    return {\n        root: {\n            height: infoBarHeight,\n            background: mainBack,\n            color: theme.palette.getContrastText(mainBack),\n            borderBottom: 'solid 1px ' + theme.palette.grey.A200,\n            display: 'flex',\n            alignItems: 'center',\n            paddingLeft: theme.spacing(2),\n        },\n        backIcon: {\n            color: theme.palette.primary.main,\n            fontSize: 56,\n            cursor: 'pointer',\n        },\n        backText: {\n            color: theme.palette.primary.main,\n            cursor: 'pointer',\n            fontFamily: theme.typography.fontFamily,\n        },\n        starRate: {\n            fontSize: 40,\n            color: starColor,\n        },\n        starRateMy: {\n            fontSize: 70,\n            color: theme.palette.primary.main,\n        },\n        rateLink: {\n            cursor: 'pointer',\n            lineHeight: '70px',\n        },\n        topBar: {\n            display: 'flex',\n            paddingBottom: theme.spacing(2),\n        },\n        infoContent: {\n            color: theme.palette.getContrastText(mainBack),\n            background: mainBack,\n            padding: theme.spacing(3),\n            '& td, & th': {\n                color: theme.palette.getContrastText(mainBack),\n            },\n        },\n        infoContentBottom: {\n            background: theme.custom.infoBar.sliderBackground,\n            color: theme.palette.getContrastText(theme.custom.infoBar.sliderBackground),\n            borderBottom: 'solid 1px ' + theme.palette.grey.A200,\n        },\n        bootstrapRoot: {\n            padding: 0,\n            'label + &': {\n                marginTop: theme.spacing(3),\n            },\n        },\n        bootstrapInput: {\n            borderRadius: 4,\n            backgroundColor: theme.palette.common.white,\n            border: '1px solid #ced4da',\n            padding: '5px 12px',\n            width: 350,\n            transition: theme.transitions.create(['border-color', 'box-shadow']),\n            fontFamily: [\n                '-apple-system',\n                'BlinkMacSystemFont',\n                '\"Segoe UI\"',\n                'Roboto',\n                '\"Helvetica Neue\"',\n                'Arial',\n                'sans-serif',\n                '\"Apple Color Emoji\"',\n                '\"Segoe UI Emoji\"',\n                '\"Segoe UI Symbol\"',\n            ].join(','),\n            '&:focus': {\n                borderColor: '#80bdff',\n                boxShadow: '0 0 0 0.2rem rgba(0,123,255,.25)',\n            },\n        },\n        epWrapper: {\n            display: 'flex',\n        },\n        prodLabel: {\n            lineHeight: '30px',\n            marginRight: 10,\n            width: 100,\n        },\n        contentWrapper: {\n            maxWidth: theme.custom.contentAreaWidth - theme.custom.leftMenu.width,\n            alignItems: 'center',\n        },\n        ratingBoxWrapper: {\n            position: 'relative',\n            display: 'flex',\n            alignItems: 'center',\n        },\n        ratingBox: {\n            backgroundColor: theme.custom.leftMenu.background,\n            border: '1px solid rgb(71, 211, 244)',\n            borderRadius: '5px',\n            display: 'flex',\n            position: 'absolute',\n            top: 14,\n            height: '40px',\n            color: theme.palette.getContrastText(theme.custom.leftMenu.background),\n            alignItems: 'center',\n            left: '0',\n            paddingLeft: '5px',\n            paddingRight: '5px',\n        },\n        userRating: {\n            display: 'flex',\n            alignItems: 'flex-end',\n        },\n        verticalDividerStar: {\n            borderLeft: 'solid 1px ' + theme.palette.grey.A200,\n            height: 40,\n            marginRight: theme.spacing(1),\n            marginLeft: theme.spacing(1),\n        },\n        backLink: {\n            alignItems: 'center',\n            textDecoration: 'none',\n            display: 'flex',\n        },\n        ratingSummery: {\n            alignItems: 'center',\n            flexDirection: 'column',\n            display: 'flex',\n        },\n        infoBarMain: {\n            width: '100%',\n        },\n        buttonView: {\n            textAlign: 'left',\n            justifyContent: 'left',\n            display: 'flex',\n            paddingLeft: theme.spacing(2),\n            cursor: 'pointer',\n        },\n        buttonOverviewText: {\n            display: 'inline-block',\n            paddingTop: 3,\n        },\n        button: {\n            display: 'inline-grid',\n            cursor: 'pointer',\n            '& .material-icons, & span': {\n                color: theme.palette.getContrastText(theme.custom.infoBar.background),\n            },\n        },\n        editButton: {\n            display: 'inline-grid',\n            cursor: 'pointer',\n            '& .material-icons, & span': {\n                color: theme.palette.getContrastText(theme.custom.infoBar.background),\n            },\n        },\n        iconButton: {\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'center',\n            flexDirection: 'column',\n        },\n        appNameXSmall: {\n            whiteSpace: 'nowrap',\n            overflowX: 'auto',\n            overflowY: 'hidden',\n            maxWidth: 200,\n            lineHeight: 1.3,\n        },\n        appNameSmall: {\n            whiteSpace: 'nowrap',\n            overflowX: 'auto',\n            overflowY: 'hidden',\n            maxWidth: 310,\n            lineHeight: 1.3,\n        },\n        appNameMid: {\n            whiteSpace: 'nowrap',\n            overflowX: 'auto',\n            overflowY: 'hidden',\n            maxWidth: 640,\n            lineHeight: 1.3,\n        },\n        appNameBig: {\n            whiteSpace: 'nowrap',\n            overflowX: 'auto',\n            overflowY: 'hidden',\n            maxWidth: 980,\n            lineHeight: 1.3,\n        },\n        linkTitle: {\n            color: theme.palette.getContrastText(theme.custom.infoBar.background),\n        },\n    };\n};\n/**\n *\n *\n * @class InfoBar\n * @extends {React.Component}\n */\nclass InfoBar extends React.Component {\n    /**\n     * @param {Object} props props passed from above\n     */\n    constructor(props) {\n        super(props);\n        this.state = {\n            notFound: false,\n            showOverview: true,\n            isDeleteOpen: false,\n            applicationOwner: '',\n        };\n        this.toggleOverview = this.toggleOverview.bind(this);\n        this.handleAppDelete = this.handleAppDelete.bind(this);\n        this.handleDeleteConfimation = this.handleDeleteConfimation.bind(this);\n        this.toggleDeleteConfirmation = this.toggleDeleteConfirmation.bind(this);\n    }\n\n    /**\n     * Toggles the showOverview state\n     * @param {boolean} todo toggle state\n     * @memberof InfoBar\n     */\n    toggleOverview(todo) {\n        if (typeof todo === 'boolean') {\n            this.setState({ showOverview: todo });\n        } else {\n            this.setState(prevState => ({ showOverview: !prevState.showOverview }));\n        }\n    }\n\n    /**\n     * Handles delete confimation\n     * @memberof InfoBar\n     */\n    handleDeleteConfimation() {\n        const { isDeleteOpen } = this.state;\n        this.setState({ isDeleteOpen: !isDeleteOpen });\n    }\n\n    /**\n     * Handles application deletion\n     * @memberof InfoBar\n     */\n    handleAppDelete() {\n        const { applicationId, intl, application } = this.props;\n        const promisedDelete = Application.deleteApp(applicationId);\n        let message = intl.formatMessage({\n            defaultMessage: 'Application {name} deleted successfully!',\n            id: 'Applications.Details.InfoBar.application.deleted.successfully',\n        }, {name: application.name});\n        promisedDelete.then((ok) => {\n            if (ok) {\n                Alert.info(message);\n                this.toggleDeleteConfirmation();\n            }\n            this.props.history.push('/applications');\n        }).catch((error) => {\n            console.log(error);\n            message = intl.formatMessage({\n                defaultMessage: 'Error while deleting application {name}',\n                id: 'Applications.Details.InfoBar.application.deleting.error',\n            }, {name: application.name});\n            Alert.error(message);\n        });\n    }\n\n    toggleDeleteConfirmation = () => {\n        this.setState(({ isDeleteOpen }) => ({ isDeleteOpen: !isDeleteOpen }));\n    }\n\n\n    /**\n     * @returns {div}\n     * @memberof InfoBar\n     */\n    render() {\n        const {\n            classes, theme, applicationId, application\n        } = this.props;\n        const applicationOwner = this.props.application.owner;\n        const {\n            tierDescription, showOverview, notFound, isDeleteOpen,\n        } = this.state;\n        const {\n            custom: {\n                leftMenu: { position },\n            },\n        } = theme;\n\n        if (notFound) {\n            return (\n              <ResourceNotFound\n                message={\n                  <FormattedMessage\n                    id=\"Applications.Details.InfoBar.listing.resource.not.found\"\n                    defaultMessage=\"Resource Not Fount\"\n                  />\n                }\n              />\n            );\n        }\n\n        if (!application) {\n            return <Loading />;\n        }\n        const isUserOwner = AuthManager.getUser().name === applicationOwner;\n\n        return (\n            <div className={classes.infoBarMain}>\n                <div className={classes.root}>\n                    <Grid item xs={10}>\n                        <div style={{ marginLeft: theme.spacing(1) }}>\n                            <Link to={'/applications/' + applicationId + '/overview'} className={classes.linkTitle}>\n                                <Typography variant='h4'>{application.name}</Typography>\n                            </Link>\n                        </div>\n                        <div style={{ marginLeft: theme.spacing(1) }}>\n                            <Typography variant='caption' gutterBottom align='left'>\n                                {application.subscriptionCount}{' '}\n                                <FormattedMessage\n                                    id='Applications.Details.InfoBar.subscriptions'\n                                    defaultMessage='Subscriptions'\n                                />\n                            </Typography>\n                        </div>\n                    </Grid>\n                    {isUserOwner && (\n                    <ScopeValidation\n                        resourcePath={resourcePaths.SINGLE_APPLICATION}\n                        resourceMethod={resourceMethods.PUT}\n                    >\n                        <VerticalDivider height={70} />\n                        <Grid item xs={1} m={1} className={classes.editButton}>\n                                <Link to={`/applications/${applicationId}/edit/fromView`} className={classes.editButton}>\n                                    <Button\n                                        style={{ padding: '4px' }}\n                                        color='default'\n                                        classes={{ label: classes.iconButton }}\n                                        aria-label={(\n                                            <FormattedMessage\n                                                id='Applications.Details.InfoBar.edit'\n                                                defaultMessage='Edit'\n                                            />\n                                        )}\n                                    >\n                                        <Icon>edit</Icon>\n                                        <Typography variant='caption' style={{ marginTop: '2px' }} >\n                                            <FormattedMessage\n                                                id='Applications.Details.InfoBar.edit.text'\n                                                defaultMessage='Edit'\n                                            />\n                                        </Typography>\n                                    </Button>\n                                </Link>\n                        </Grid>\n                        <VerticalDivider height={70} />\n                        <Grid item xs={1} m={1} className={classes.button}>\n                            <Button\n                                onClick={this.handleDeleteConfimation}\n                                disabled={AuthManager.getUser().name !== applicationOwner}\n                                color='default'\n                                classes={{ label: classes.iconButton }}\n                                aria-label={(\n                                    <FormattedMessage\n                                        id='Applications.Details.InfoBar.delete'\n                                        defaultMessage='Delete'\n                                    />\n                                )}\n                            >\n                                <Icon>delete</Icon>\n                                <Typography variant='caption' style={{ marginTop: '2px' }} >\n                                    <FormattedMessage\n                                        id='Applications.Details.InfoBar.text'\n                                        defaultMessage='Delete'\n                                    />\n                                </Typography>\n                            </Button>\n                            <DeleteConfirmation\n                                handleAppDelete={this.handleAppDelete}\n                                isDeleteOpen={isDeleteOpen}\n                                toggleDeleteConfirmation={this.toggleDeleteConfirmation}\n                            />\n                        </Grid>\n                     </ScopeValidation>\n                     )}\n                </div>\n            </div>\n        );\n    }\n}\nInfoBar.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    theme: PropTypes.shape({}).isRequired,\n    applicationId: PropTypes.string.isRequired,\n};\n\nexport default injectIntl(withRouter(withStyles(styles, { withTheme: true })(InfoBar)));\n","import React, { useEffect, useState } from 'react';\nimport classNames from 'classnames';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableRow from '@material-ui/core/TableRow';\nimport Icon from '@material-ui/core/Icon';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport { app } from 'Settings';\nimport Loading from 'AppComponents/Base/Loading/Loading';\nimport API from 'AppData/api';\nimport ResourceNotFound from 'AppComponents/Base/Errors/ResourceNotFound';\nimport Application from 'AppData/Application';\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        padding: theme.spacing(3, 2),\n        '& td, & th': {\n            color: theme.palette.getContrastText(theme.custom.infoBar.background),\n        },\n        background: theme.custom.infoBar.background,\n    },\n    table: {\n        minWidth: '100%',\n    },\n    leftCol: {\n        width: 200,\n    },\n    iconAligner: {\n        display: 'flex',\n        justifyContent: 'flex-start',\n        alignItems: 'center',\n    },\n    iconTextWrapper: {\n        display: 'inline-block',\n        paddingLeft: 20,\n    },\n    iconEven: {\n        color: theme.custom.infoBar.iconOddColor,\n        width: theme.spacing(3),\n    },\n    iconOdd: {\n        color: theme.custom.infoBar.iconOddColor,\n        width: theme.spacing(3),\n    },\n    noKeysRoot: {\n        backgroundImage: `url(${app.context + theme.custom.overviewPage.keysBackground})`,\n        height: '100%',\n        backgroundPosition: 'center',\n        backgroundRepeat: 'no-repeat',\n        backgroundSize: 'cover',\n        minHeight: 192,\n        display: 'flex',\n        alignItems: 'center',\n    },\n    heading: {\n        color: theme.palette.getContrastText(theme.palette.background.paper),\n        paddingLeft: theme.spacing(1),\n    },\n    emptyBox: {\n        background: '#ffffff55',\n        color: theme.palette.getContrastText(theme.palette.background.paper),\n        border: 'solid 1px #fff',\n        padding: theme.spacing(2),\n        width: '100%',\n    },\n    summaryRoot: {\n        display: 'flex',\n        alignItems: 'center',\n    },\n    actionPanel: {\n        justifyContent: 'flex-start',\n    },\n    disabledTier: {\n        color: '#999999',\n        fontWeight: '400',\n    }\n}));\n\n/**\n * Render application overview page.\n * @param {JSON} props Props passed down from parent.\n * @returns {JSX} jsx output from render.\n */\nfunction Overview(props) {\n    const classes = useStyles();\n    const [application, setApplication] = useState(null);\n    const [tierDescription, setTierDescription] = useState(null);\n    const [tierDisabled, setTierDisabled] = useState(false);\n    const [notFound, setNotFound] = useState(false);\n    const { match: { params: { applicationId } } } = props;\n    useEffect(() => {\n        const client = new API();\n        // Get application\n        const promisedApplication = client.getApplication(applicationId);\n        promisedApplication\n            .then((response) => {\n                const app = response.obj;\n                setApplication(app);\n                const promisedTier = client.getTierByName(response.obj.throttlingPolicy, 'application');\n                promisedTier.then((tierResponse) => {\n                    setTierDescription(tierResponse.obj.description);\n                }).catch((error) => {\n                    setTierDisabled(true);\n                    setTierDescription('Tier is disabled.');\n                });\n            }).catch((error) => {\n                if (process.env.NODE_ENV !== 'production') {\n                    console.log(error);\n                }\n                const { status } = error;\n                if (status === 404) {\n                    setNotFound(true);\n                } else {\n                    setNotFound(false);\n                }\n            });\n    }, []);\n    if (notFound) {\n        return <ResourceNotFound />;\n    }\n    if (!application) {\n        return <Loading />;\n    }\n    const pathPrefix = '/applications/' + applicationId;\n    return (\n        <>\n            <div className={classes.root}>\n                <Table className={classes.table}>\n                    <TableBody>\n                        <TableRow>\n                            <TableCell component='th' scope='row' className={classes.leftCol}>\n                                <div className={classes.iconAligner}>\n                                    <Icon className={classes.iconEven}>description</Icon>\n                                    <span className={classes.iconTextWrapper}>\n                                        <Typography variant='caption' gutterBottom align='left'>\n                                            <FormattedMessage\n                                                id='Applications.Details.Overview.description'\n                                                defaultMessage='Description'\n                                            />\n                                        </Typography>\n                                    </span>\n                                </div>\n                            </TableCell>\n                            <TableCell>\n                                {application.description}\n                            </TableCell>\n                        </TableRow>\n                        {tierDescription\n                            && (\n                                <TableRow>\n                                    <TableCell component='th' scope='row' className={classes.leftCol}>\n                                        <div className={classes.iconAligner}>\n                                            <Icon className={classes.iconOdd}>settings_input_component</Icon>\n                                            <span className={classes.iconTextWrapper}>\n                                                <Typography variant='caption' gutterBottom align='left'>\n                                                    <FormattedMessage\n                                                        id='Applications.Details.InfoBar.throttling.tier'\n                                                        defaultMessage='Throttling Tier'\n                                                    />\n                                                </Typography>\n                                            </span>\n                                        </div>\n                                    </TableCell>\n                                    {application\n                                        && (\n                                            <TableCell>\n                                                {application.throttlingPolicy}\n                                                {' '}\n                                                <span className= {tierDisabled ? classes.disabledTier: \"\"}>{`(${tierDescription})`}</span>\n                                            </TableCell>\n                                        )}\n                                </TableRow>\n                            )}\n                        <TableRow>\n                            <TableCell component='th' scope='row' className={classes.leftCol}>\n                                <div className={classes.iconAligner}>\n                                    <Icon className={classes.iconEven}>vpn_key</Icon>\n                                    <span className={classes.iconTextWrapper}>\n                                        <Typography variant='caption' gutterBottom align='left'>\n                                            <FormattedMessage\n                                                id='Applications.Details.Overview.token.type'\n                                                defaultMessage='Token Type'\n                                            />\n                                        </Typography>\n                                    </span>\n                                </div>\n                            </TableCell>\n                            <TableCell>\n                                {Application.TOKEN_TYPES[application.tokenType].displayName}\n                            </TableCell>\n                        </TableRow>\n                        <TableRow>\n                            <TableCell component='th' scope='row' className={classes.leftCol}>\n                                <div className={classes.iconAligner}>\n                                    <Icon className={classes.iconOdd}>assignment_turned_in</Icon>\n                                    <span className={classes.iconTextWrapper}>\n                                        <Typography variant='caption' gutterBottom align='left'>\n                                            <FormattedMessage\n                                                id='Applications.Details.Overview.workflow.status'\n                                                defaultMessage='Workflow Status'\n                                            />\n                                        </Typography>\n                                    </span>\n                                </div>\n                            </TableCell>\n                            <TableCell>\n                                {application.status}\n                            </TableCell>\n                        </TableRow>\n                        <TableRow>\n                            <TableCell component='th' scope='row' className={classes.leftCol}>\n                                <div className={classes.iconAligner}>\n                                    <Icon className={classes.iconEven}>account_box</Icon>\n                                    <span className={classes.iconTextWrapper}>\n                                        <Typography variant='caption' gutterBottom align='left'>\n                                            <FormattedMessage\n                                                id='Applications.Details.Overview.application.owner'\n                                                defaultMessage='Application Owner'\n                                            />\n                                        </Typography>\n                                    </span>\n                                </div>\n                            </TableCell>\n                            <TableCell>\n                                {application.owner}\n                            </TableCell>\n                        </TableRow>\n                        {application.attributes\n                            && (\n                                Object.keys(application.attributes).map((attr, index) => {\n                                    const attrValue = application.attributes[attr];\n                                    return (\n                                        <TableRow key={attr}>\n                                            <TableCell component='th' scope='row' className={classes.leftCol}>\n                                                <div className={classes.iconAligner}>\n                                                    <Icon className={classNames(\n                                                        { [classes.iconEven]: index % 2 !== 0 },\n                                                        { [classes.iconOdd]: index % 2 === 0 },\n                                                    )}\n                                                    >\n                                                        web_asset\n                                                    </Icon>\n                                                    <span className={classes.iconTextWrapper}>\n                                                        <Typography variant='caption' gutterBottom align='left'>\n                                                            {attr}\n                                                        </Typography>\n                                                    </span>\n                                                </div>\n                                            </TableCell>\n                                            <TableCell>\n                                                {attrValue}\n                                            </TableCell>\n                                        </TableRow>\n                                    );\n                                }))}\n\n                    </TableBody>\n                </Table>\n            </div>\n        </>\n    );\n}\nexport default injectIntl(Overview);\n","/* eslint-disable react/prop-types */\n/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n    Route, Switch, Redirect, Link,\n} from 'react-router-dom';\nimport VpnKeyIcon from '@material-ui/icons/VpnKey';\nimport { withStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport ErrorOutlineIcon from '@material-ui/icons/ErrorOutline';\nimport Box from '@material-ui/core/Box';\nimport { FormattedMessage } from 'react-intl';\nimport API from 'AppData/api';\nimport { app } from 'Settings';\nimport Loading from 'AppComponents/Base/Loading/Loading';\nimport ResourceNotFound from 'AppComponents/Base/Errors/ResourceNotFound';\nimport CustomIcon from 'AppComponents/Shared/CustomIcon';\nimport LeftMenuItem from 'AppComponents/Shared/LeftMenuItem';\nimport TokenManager from 'AppComponents/Shared/AppsAndKeys/TokenManager';\nimport ApiKeyManager from 'AppComponents/Shared/AppsAndKeys/ApiKeyManager';\nimport classNames from 'classnames';\nimport Paper from '@material-ui/core/Paper';\nimport { Helmet } from 'react-helmet';\nimport Subscriptions from './Subscriptions';\nimport InfoBar from './InfoBar';\nimport Overview from './Overview';\n\n/**\n *\n *\n * @param {*} theme theme details\n * @returns {Object}\n */\nconst styles = (theme) => {\n    const {\n        custom: {\n            leftMenu: { width, position },\n        },\n    } = theme;\n    const shiftToLeft = position === 'vertical-left' ? (width - 4) : 0;\n    const shiftToRight = position === 'vertical-right' ? width : 0;\n    const leftMenuPaddingLeft = position === 'horizontal' ? theme.spacing(3) : 0;\n\n    return {\n        LeftMenu: {\n            backgroundColor: theme.custom.leftMenu.background,\n            backgroundImage: `url(${app.context}${theme.custom.leftMenu.backgroundImage})`,\n            textAlign: 'left',\n            fontFamily: theme.typography.fontFamily,\n            position: 'absolute',\n            bottom: 0,\n            paddingLeft: leftMenuPaddingLeft,\n        },\n        leftMenuHorizontal: {\n            top: theme.custom.infoBar.height,\n            width: '100%',\n            overflowX: 'auto',\n            height: 60,\n            display: 'flex',\n            left: 0,\n        },\n        leftMenuVerticalLeft: {\n            width: theme.custom.leftMenu.width,\n            top: 0,\n            left: 0,\n            overflowY: 'auto',\n        },\n        leftMenuVerticalRight: {\n            width: theme.custom.leftMenu.width,\n            top: 0,\n            right: 0,\n            overflowY: 'auto',\n        },\n        leftLInkMain: {\n            borderRight: 'solid 1px ' + theme.custom.leftMenu.background,\n            cursor: 'pointer',\n            background: theme.custom.leftMenu.rootBackground,\n            color: theme.palette.getContrastText(theme.custom.leftMenu.rootBackground),\n            textDecoration: 'none',\n            alignItems: 'center',\n            justifyContent: 'center',\n            display: 'flex',\n            height: theme.custom.infoBar.height,\n            textDecoration: 'none',\n        },\n        leftLInkMainText: {\n            fontSize: 18,\n            color: theme.palette.grey[500],\n            textDecoration: 'none',\n            paddingLeft: theme.spacing(2),\n        },\n        detailsContent: {\n            display: 'flex',\n            flex: 1,\n        },\n        content: {\n            display: 'flex',\n            flex: 1,\n            flexDirection: 'column',\n            marginLeft: shiftToLeft,\n            marginRight: shiftToRight,\n            paddingBottom: theme.spacing(3),\n            overflowX: 'hidden',\n        },\n        contentLoader: {\n            paddingTop: theme.spacing(3),\n        },\n        contentLoaderRightMenu: {\n            paddingRight: theme.custom.leftMenu.width,\n        },\n        titleWrapper: {\n            paddingLeft: 25,\n            paddingTop: 28,\n            textTransform: 'capitalize',\n        },\n        contentWrapper: {\n            paddingLeft: 25,\n        },\n        keyTitle: {\n            textTransform: 'capitalize',\n        },\n        errorBox: {\n            background: 'rgb(253, 236, 234)',\n            color: 'rgb(97, 26, 21)',\n            padding: '6px 16px',\n            display: 'flex',\n            flexDirection: 'row',\n            height: 50,\n            width: '100%',\n            margin: 20,\n            alignItems: 'center',\n            '& svg': {\n                color: '#f44336',\n                marginRight: 5,\n            }\n        },\n    };\n};\n/**\n *\n *\n * @class Details\n * @extends {Component}\n */\nclass Details extends Component {\n    /**\n     *\n     * @param {Object} props props passed from above\n     */\n    constructor(props) {\n        super(props);\n        this.state = {\n            application: null,\n            active: 'overview',\n            open: true,\n            error: '',\n        };\n        this.getApplication = this.getApplication.bind(this);\n    }\n\n    /**\n     *\n     *\n     * @memberof Details\n     */\n    componentDidMount() {\n        const { match } = this.props;\n        this.getApplication();\n    }\n\n    getApplication = () => {\n        const client = new API();\n        const  applicationId  = this.props.match.params.application_uuid;\n        const promisedApplication = client.getApplication(applicationId);\n        promisedApplication\n            .then((response) => {\n                this.setState({ application: response.obj });\n            })\n            .catch((error) => {\n                if (process.env.NODE_ENV !== 'production') {\n                    console.log(error);\n                }\n                const { status, response } = error;\n                if (status === 404) {\n                    this.setState({ notFound: true });\n                } else {\n                    this.setState({ error: response.body.description });\n                }\n            });\n    }\n\n    /**\n     *\n     * @param {String} menuLink selected menu name\n     * @memberof Details\n     */\n    handleMenuSelect = (menuLink) => {\n        const { history, match } = this.props;\n        history.push({ pathname: '/applications/' + match.params.application_uuid + '/' + menuLink });\n        this.setState({ active: menuLink });\n    };\n    toTitleCase = (str) => {\n        return str.replace(\n            /\\w\\S*/g,\n            function(txt) {\n                return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase();\n            }\n        );\n    };\n    renderManager = (application, keyType, secScheme) => {\n        const { classes } = this.props;\n        return (\n            <Paper>\n                {secScheme === 'oauth' && (\n                    <TokenManager\n                        keyType={keyType}\n                        selectedApp={{\n                            appId: application.applicationId,\n                            label: application.name,\n                            tokenType: application.tokenType,\n                            owner: application.owner,\n                            hashEnabled: application.hashEnabled,\n                        }}\n                    />\n                       \n                )}\n                {secScheme === 'apikey' && (\n                    <div className={classes.root}>\n                        <div className={classes.titleWrapper}>\n                            <Typography variant='h5' className={classes.keyTitle}>\n                                {this.toTitleCase(keyType)}\n                                <FormattedMessage\n                                    id='Applications.Details.api.keys.title'\n                                    defaultMessage=' API Key'\n                                />\n                            </Typography>\n                        </div>\n                        <div className={classes.contentWrapper}>\n                            <ApiKeyManager\n                                keyType={keyType}\n                                selectedApp={{\n                                    appId: application.applicationId,\n                                    label: application.name,\n                                    tokenType: application.tokenType,\n                                    owner: application.owner,\n                                }}\n                            />\n                        </div>\n                    </div>\n                )}\n            </Paper>\n        );\n    }\n\n    /**\n     *\n     *\n     * @returns {Component}\n     * @memberof Details\n     */\n    render() {\n        const { classes, match, theme } = this.props;\n        const { notFound, application, error } = this.state;\n        const pathPrefix = '/applications/' + match.params.application_uuid;\n        const redirectUrl = pathPrefix + '/overview';\n        const {\n            custom: {\n                leftMenu: {\n                    rootIconSize, rootIconTextVisible, rootIconVisible, position,\n                },\n                title: {\n                    prefix, sufix,\n                },\n            },\n        } = theme;\n        if (notFound) {\n            return <ResourceNotFound />;\n        } else if (error !== '') {\n            return <Box className={classes.errorBox}>\n                <ErrorOutlineIcon />{ error }\n            </Box>;\n        } else if (!application) {\n            return <Loading />;\n        }\n        return (\n            <>\n                <Helmet>\n                    <title>{`${prefix} ${application.name}${sufix}`}</title>\n                </Helmet>\n                <div\n                    className={classNames(\n                        classes.LeftMenu,\n                        {\n                            [classes.leftMenuHorizontal]: position === 'horizontal',\n                        },\n                        {\n                            [classes.leftMenuVerticalLeft]: position === 'vertical-left',\n                        },\n                        {\n                            [classes.leftMenuVerticalRight]: position === 'vertical-right',\n                        },\n                        'left-menu',\n                    )}\n                >\n                    {rootIconVisible && (\n                        <Link to='/applications' className={classes.leftLInkMain}>\n                            <CustomIcon width={rootIconSize} height={rootIconSize} icon='applications' />\n                            {rootIconTextVisible && (\n                                <Typography className={classes.leftLInkMainText}>\n                                    <FormattedMessage id='Applications.Details.applications.all' defaultMessage='ALL APPs' />\n                                </Typography>\n                            )}\n                        </Link>\n                    )}\n                    <LeftMenuItem text={<FormattedMessage id='Applications.Details.menu.overview' defaultMessage='Overview' />} iconText='overview' route='overview' to={pathPrefix + '/overview'} open={open} />\n                    <LeftMenuItem text={<FormattedMessage id='Applications.Details.menu.prod.keys' defaultMessage='Production Keys' />} iconText='productionkeys' route='productionkeys' to={pathPrefix + '/productionkeys/oauth'} open={open} />\n                    <LeftMenuItem text={<FormattedMessage id='Applications.Details.menu.oauth.tokens' defaultMessage='OAuth2 Tokens' />} route='productionkeys/oauth' to={pathPrefix + '/productionkeys/oauth'} submenu open={open} />\n                    <LeftMenuItem text={<FormattedMessage id='Applications.Details.menu.api.key' defaultMessage='Api Key' />} route='productionkeys/apikey' to={pathPrefix + '/productionkeys/apikey'} submenu open={open} />\n                    <LeftMenuItem text={<FormattedMessage id='Applications.Details.menu.sandbox.keys' defaultMessage='Sandbox Keys' />} iconText='productionkeys' route='sandboxkeys' to={pathPrefix + '/sandboxkeys/oauth'} open={open} />\n                    <LeftMenuItem text={<FormattedMessage id='Applications.Details.menu.oauth.tokens' defaultMessage='OAuth2 Tokens' />} route='sandboxkeys/oauth' to={pathPrefix + '/sandboxkeys/oauth'} submenu open={open} />\n                    <LeftMenuItem text={<FormattedMessage id='Applications.Details.menu.api.key' defaultMessage='Api Key' />} route='sandboxkeys/apikey' to={pathPrefix + '/sandboxkeys/apikey'} submenu open={open} />\n                    <LeftMenuItem text={<FormattedMessage id='Applications.Details.menu.subscriptions' defaultMessage='Subscriptions' />} iconText='subscriptions' route='subscriptions' to={pathPrefix + '/subscriptions'} open={open} />\n                </div>\n                <div className={classes.content}>\n                    <InfoBar \n                        application={application} \n                        applicationId={match.params.application_uuid} \n                        innerRef={node => (this.infoBar = node)} \n                    />\n                    <div\n                        className={classNames(\n                            { [classes.contentLoader]: position === 'horizontal' },\n                            { [classes.contentLoaderRightMenu]: position === 'vertical-right' },\n                        )}\n                    >\n                        <Switch>\n                            <Redirect exact from='/applications/:applicationId' to={redirectUrl} />\n                            <Route\n                                path='/applications/:applicationId/overview'\n                                component={Overview}\n                            />\n                            <Route\n                                path='/applications/:applicationId/productionkeys/oauth'\n                                component={() => (this.renderManager(application, 'PRODUCTION', 'oauth'))}\n                            />\n                            <Route\n                                path='/applications/:applicationId/productionkeys/apikey'\n                                component={() => (this.renderManager(application, 'PRODUCTION', 'apikey'))}\n                            />\n                            <Route\n                                path='/applications/:applicationId/sandboxkeys/oauth'\n                                component={() => (this.renderManager(application, 'SANDBOX', 'oauth'))}\n                            />\n                            <Route\n                                path='/applications/:applicationId/sandboxkeys/apikey'\n                                component={() => (this.renderManager(application, 'SANDBOX', 'apikey'))}\n                            />\n                            <Route \n                                path='/applications/:applicationId/subscriptions' \n                                render={() => (<Subscriptions application={ application } getApplication={ this.getApplication } \n                            />)} />\n                            <Route component={ResourceNotFound} />\n                        </Switch>\n                    </div>\n                </div>\n            </>\n        );\n    }\n}\n\nDetails.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    theme: PropTypes.shape({}).isRequired,\n    match: PropTypes.shape({\n        params: PropTypes.shape({\n            application_uuid: PropTypes.string.isRequired,\n        }).isRequired,\n    }).isRequired,\n    history: PropTypes.shape({\n        push: PropTypes.func.isRequired,\n    }).isRequired,\n};\n\nexport default withStyles(styles, { withTheme: true })(Details);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Icon from '@material-ui/core/Icon';\nimport VerticalDivider from './VerticalDivider';\n/**\n * Main style object\n *\n * @param {*} theme\n */\nconst styles = theme => ({\n    root: {\n        display: 'flex',\n        minHeight: 100,\n        alignItems: 'center',\n        paddingLeft: theme.spacing(2),\n        borderRadius: theme.shape.borderRadius,\n        border: 'solid 1px #ddd',\n        '& span.material-icons': {\n            fontSize: 60,\n            color: theme.custom.info.color,\n        },\n        '& span, & h5, & label, & input': {\n            color: theme.palette.getContrastText(theme.palette.background.paper),\n        },\n    },\n    iconItem: {\n        paddingRight: theme.spacing(2),\n        fontSize: 60,\n    },\n    button: {\n        marginTop: theme.spacing(1),\n        marginBottom: theme.spacing(1),\n    },\n    content: {\n        paddingTop: theme.spacing(1),\n        paddingBottom: theme.spacing(1),\n    },\n});\n/**\n *  Renders a inline massage\n *\n * @class InlineMessage\n * @extends {React.Component}\n */\nclass InlineMessage extends React.Component {\n    state = {\n        value: 0,\n    };\n\n    handleExpandClick = () => {\n        this.setState(state => ({ expanded: !state.expanded }));\n    };\n\n    render() {\n        const { classes, type } = this.props;\n        const messgeType = type || 'info';\n        return (\n            <Paper className={classes.root} elevation={1}>\n                {messgeType === 'info' && <Icon className={classes.iconItem}>info</Icon>}\n                {messgeType === 'warn' && <Icon className={classes.iconItem}>warning</Icon>}\n                <VerticalDivider height={100} />\n                <div className={classes.content}>{this.props.children}</div>\n            </Paper>\n        );\n    }\n}\nInlineMessage.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    type: PropTypes.string.isRequired,\n};\n\nexport default withStyles(styles)(InlineMessage);\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nimport AuthManager from '../../data/AuthManager';\n\nconst resourcePaths = {\n    APIS: '/apis',\n    SINGLE_API: '/apis/{apiId}',\n    API_SWAGGER: '/apis/{apiId}/swagger',\n    API_WSDL: '/apis/{apiId}/wsdl',\n    API_GW_CONFIG: '/apis/{apiId}/gateway-config',\n    API_THUMBNAIL: '/apis/{apiId}/thumbnail',\n    API_COPY: '/apis/copy-api',\n    API_LC_HISTORY: '/apis/{apiId}/lifecycle-history',\n    API_CHANGE_LC: '/apis/change-lifecycle',\n    API_LC: '/apis/{apiId}/lifecycle',\n    API_LC_PENDING_TASK: '/apis/{apiId}/lifecycle/lifecycle-pending-task',\n    API_DEF: '/apis/import-definition',\n    API_VALIDATE_DEF: '/apis/validate-definition',\n    API_DOCS: '/apis/{apiId}/documents',\n    API_DOC: \"'/apis/{apiId}/documents/{documentId}'\",\n    API_DOC_CONTENT: \"'/apis/{apiId}/documents/{documentId}/content'\",\n    APPLICATIONS: '/applications',\n    SINGLE_APPLICATION: '/applications/{applicationId}',\n    APPLICATION_GENERATE_KEYS: '/applications/{applicationId}/generate-keys',\n    APPLICATION_GENERATE_KEY_TYPE: '/applications/{applicationId}/keys/{keyType}',\n    EXPORT_APIS: '/export/apis',\n    IMPORT_APIS: '/import/apis',\n    SUBSCRIPTION: '/subscriptions',\n    SINGLE_SUBSCRIPTION: '/subscriptions/{subscriptionId}',\n    SUBSCRIPTIONS: '/subscriptions',\n    BLOCK_SUBSCRIPTION: '/subscriptions/block-subscription:',\n    UNBLOCK_SUBSCRIPTION: '/subscriptions/unblock-subscription',\n    POLICIES: \"'/policies/{tierLevel}'\",\n    POLICY: \"'/policies/{tierLevel}/{tierName}'\",\n    ENDPOINTS: '/endpoints',\n    ENDPOINT: '/endpoints/{endpointId}',\n    LABLES: '/labels',\n    WORKFLOW: '/workflows/{workflowReferenceId}',\n    SERVICE_DISCOVERY: '/external-resources/services',\n};\n\nconst resourceMethods = {\n    POST: 'post',\n    PUT: 'put',\n    GET: 'get',\n    DELETE: 'delete',\n};\n\n/**\n * Show element iff user has proper scope for the view/action\n * @class ScopeValidation\n * @extends {React.Component}\n */\nclass ScopeValidation extends React.Component {\n    /**\n     * Creates an instance of ScopeValidation.\n     * @param {any} props @inheritDoc\n     * @memberof ScopeValidation\n     */\n    constructor(props) {\n        super(props);\n        this.state = {};\n    }\n\n    /**\n     * @inheritDoc\n     * @memberof ScopeValidation\n     */\n    componentDidMount() {\n        const { resourcePath, resourceMethod } = this.props;\n        const hasScope = AuthManager.hasScopes(resourcePath, resourceMethod);\n        if (hasScope) {\n            hasScope.then((haveScope) => {\n                this.setState({ haveScope });\n            });\n        }\n    }\n\n    /**\n     * @inheritDoc\n     * @returns {React.Component} Return react component\n     * @memberof ScopeValidation\n     */\n    render() {\n        const { children } = this.props;\n        if (this.state.haveScope) {\n            return children || null;\n        }\n        return null;\n    }\n}\n\nScopeValidation.propTypes = {\n    children: PropTypes.node.isRequired,\n    resourcePath: PropTypes.string.isRequired,\n    resourceMethod: PropTypes.string.isRequired,\n};\n\nexport {\n    ScopeValidation,\n    resourceMethods,\n    resourcePaths,\n};\n"],"sourceRoot":""}