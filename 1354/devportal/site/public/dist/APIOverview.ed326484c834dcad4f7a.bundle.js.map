{"version":3,"sources":["webpack:///./node_modules/js-file-download/file-download.js","webpack:///./source/src/app/components/Apis/Details/Documents/View.jsx","webpack:///./source/src/app/components/Apis/Details/Sdk.jsx","webpack:///./source/src/app/components/Apis/Details/Resources.jsx","webpack:///./source/src/app/components/Apis/Details/Operations.jsx","webpack:///./source/src/app/components/Apis/Details/OverviewDocuments.jsx","webpack:///./source/src/app/components/Apis/Details/Overview.jsx"],"names":["module","exports","data","filename","mime","bom","blob","Blob","type","window","navigator","msSaveBlob","blobURL","URL","createObjectURL","tempLink","document","createElement","style","display","href","setAttribute","download","body","appendChild","click","removeChild","revokeObjectURL","View","props","classes","doc","apiId","fullScreen","intl","api","useContext","ApiContext","code","setCode","useState","isFileAvailable","setIsFileAvailable","restAPI","API","skipHtml","Settings","app","markdown","useEffect","sourceType","loadContentForDoc","getFileForDocument","documentId","then","catch","getInlineContentOfDocument","text","Object","keys","map","fieldName","regex","RegExp","replace","error","process","Fragment","className","docBadge","summary","variant","docSummary","source","html","displayURL","sourceUrl","target","displayURLLink","color","button","disabled","onClick","done","response","fileName","contentDisposition","headers","indexOf","matches","exec","contentType","webkitURL","downloadUrl","aTag","location","setTimeout","downloadFile","id","defaultMessage","fileAvailability","propTypes","PropTypes","shape","isRequired","string","formatMessage","func","bool","injectIntl","withStyles","theme","root","paddingTop","spacing","paddingBottom","docTitle","fontWeight","fontSize","palette","grey","padding","background","primary","main","position","top","marginTop","getContrastText","paddingLeft","marginLeft","Sdk","React","Component","constructor","super","event","item","this","api_uuid","language","getSdkForApi","updatedList","state","sdkLanguages","filter","toLowerCase","search","value","setState","items","ev","src","context","match","params","apiUuid","filter_threshold","bind","handleClick","handleChange","addDefaultSrc","componentDidMount","Api","AuthManager","getUser","getSdkLanguages","obj","length","status","notFound","getSdk","sdkZipName","sdkZip","JSFileDownload","badRequest","serverError","render","languageList","onlyIcons","custom","apiDetailPages","onlyShowSdks","filteredLanguageList","lang","includes","index","xs","key","cursor","aria-label","alt","String","width","height","margin","titleWrappper","component","titleSub","label","name","onChange","container","gridRoot","sm","md","lg","xl","justify","textAlign","cardRoot","toString","toUpperCase","title","cardTitle","onError","area-label","genericMessageWrapper","dialogContainer","instanceOf","default","alignItems","marginRight","sdkBackground","withTheme","RenderMethodBase","method","chipColor","resourceChipColors","chipTextColor","console","log","Chip","backgroundColor","RenderMethod","Resources","paths","swagger","promisedApi","getSwaggerByAPIId","undefined","isAuthorize","qs","stringify","reference","pathname","history","push","contentWrapper","path","Typography","heading","innerKey","CONSTS","HTTP_METHODS","contextType","object","flexDirection","marginBottom","infoBar","sliderBackground","operationChipColor","Operations","operations","Table","TableRow","borderStyle","verb","TableCell","OverviewDocuments","docs","setDocs","setDocsCount","useHistory","truncateString","n","str","substr","getDocumentsByAPIId","list","count","Alert","Grid","emptyBox","List","subheader","ListSubheader","listItemStyle","listWrapper","ListItem","gotoDoc","ListItemIcon","Icon","ListItemText","secondary","maxWidth","contentAreaWidth","iconClass","boxBadge","A400","typography","h5","subscriptionBox","linkStyle","subscriptionTop","resourceWrapper","overflow","actionPanel","justifyContent","linkToTest","textDecoration","border","marging","ExpansionPanelSummary","borderBottom","minHeight","content","expanded","Overview","showCredentials","showComments","showTryout","showDocuments","showSdks","subscribedApplications","totalComments","setCount","totalDocuments","overviewDocOverride","setOverviewDocOverride","isOnlyMutualSSL","securityScheme","isOnlyBasicAuth","overviewDoc","otherTypeName","Paper","paperWithDoc","titleIconColor","overview","titleIconSize","user","advertiseInfo","advertised","ExpansionPanel","defaultExpanded","aria-controls","CustomIcon","strokeColor","icon","lifeCycleStatus","ExpansionPanelDetails","noCredentialsRoot","expansionRoot","Box","mt","mr","Button","size","Link","to","isSubscriptionAvailable","mutualsslMessage","apiType","getTitleForAPIOperationType","apiObject","getResourcesForAPIs","Divider","ExpansionPanelActions","aria-labelledby","subheading","classNames","noCommentRoot","commentRoot","Comments","showLatest","isOverview","noDocumentRoot","muiName","paper","verticalSpace","subsToApp","backgroundImage","overviewPage","commentsBackground","backgroundPosition","backgroundRepeat","backgroundSize","documentsBackground","credentialsBackground","noContentBackground"],"mappings":"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","file":"APIOverview.ed326484c834dcad4f7a.bundle.js","sourcesContent":["module.exports = function(data, filename, mime, bom) {\n    var blobData = (typeof bom !== 'undefined') ? [bom, data] : [data]\n    var blob = new Blob(blobData, {type: mime || 'application/octet-stream'});\n    if (typeof window.navigator.msSaveBlob !== 'undefined') {\n        // IE workaround for \"HTML7007: One or more blob URLs were \n        // revoked by closing the blob for which they were created. \n        // These URLs will no longer resolve as the data backing \n        // the URL has been freed.\"\n        window.navigator.msSaveBlob(blob, filename);\n    }\n    else {\n        var blobURL = window.URL.createObjectURL(blob);\n        var tempLink = document.createElement('a');\n        tempLink.style.display = 'none';\n        tempLink.href = blobURL;\n        tempLink.setAttribute('download', filename); \n        \n        // Safari thinks _blank anchor are pop ups. We only want to set _blank\n        // target if the browser does not support the HTML5 download attribute.\n        // This allows you to download files in desktop safari if pop up blocking \n        // is enabled.\n        if (typeof tempLink.download === 'undefined') {\n            tempLink.setAttribute('target', '_blank');\n        }\n        \n        document.body.appendChild(tempLink);\n        tempLink.click();\n        document.body.removeChild(tempLink);\n        window.URL.revokeObjectURL(blobURL);\n    }\n}\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useState, useEffect, useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Icon from '@material-ui/core/Icon';\nimport Button from '@material-ui/core/Button';\nimport ReactMarkdown from 'react-markdown';\nimport ReactSafeHtml from 'react-safe-html';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport { ApiContext } from '../ApiContext';\nimport API from 'AppData/api';\nimport Alert from '../../../Shared/Alert';\nimport { app } from 'Settings';\n\nconst styles = theme => ({\n    root: {\n        paddingTop: theme.spacing(2),\n        paddingBottom: theme.spacing(2),\n    },\n    docTitle: {\n        fontWeight: 100,\n        fontSize: 50,\n        color: theme.palette.grey[500],\n    },\n    docBadge: {\n        padding: theme.spacing(1),\n        background: theme.palette.primary.main,\n        position: 'absolute',\n        top: 0,\n        marginTop: -22,\n        color: theme.palette.getContrastText(theme.palette.primary.main),\n    },\n    button: {\n        padding: theme.spacing(2),\n        marginTop: theme.spacing(2),\n    },\n    displayURL: {\n        padding: theme.spacing(2),\n        marginTop: theme.spacing(2),\n        background: theme.palette.grey[200],\n        color: theme.palette.getContrastText(theme.palette.grey[200]),\n        display: 'flex',\n    },\n    displayURLLink: {\n        paddingLeft: theme.spacing(2),\n    },\n    docSummary: {\n        marginTop: theme.spacing(2),\n        color: theme.palette.text.primary,\n    },\n    fileAvailability: {\n        marginTop: theme.spacing(1),\n        marginLeft: theme.spacing(0.8),\n    }\n});\n/**\n *\n *\n * @param {*} props\n * @returns\n */\nfunction View(props) {\n    const {\n        classes, doc, apiId, fullScreen, intl,\n    } = props;\n    const { api } = useContext(ApiContext);\n    const [code, setCode] = useState('');\n    const [isFileAvailable,setIsFileAvailable] = useState(false);\n    const restAPI = new API();\n    const skipHtml = Settings.app.markdown.skipHtml;\n\n    useEffect(() => {\n        if (doc.sourceType === 'MARKDOWN' || doc.sourceType === 'INLINE') loadContentForDoc();\n        if (doc.sourceType === 'FILE') {\n            const promised_get_content = restAPI.getFileForDocument(apiId, doc.documentId);\n            promised_get_content\n                .then(() => {\n                    setIsFileAvailable(true);\n                })\n                .catch(() => {\n                    setIsFileAvailable(false);\n                });\n        } \n    }, [props.doc]);\n\n    const loadContentForDoc = () => {\n        const docPromise = restAPI.getInlineContentOfDocument(apiId, doc.documentId);\n        docPromise\n            .then((doc) => {\n                let text = doc.text;\n\n                Object.keys(api).map( fieldName => {\n                    let regex = new RegExp('\\_\\_\\_'+ fieldName +'\\_\\_\\_', 'g');\n                    text = text.replace(regex, api[fieldName]);\n                });\n                setCode(text);\n            })\n            .catch((error) => {\n                if (process.env.NODE_ENV !== 'production') {\n                    console.log(error);\n                }\n            });\n    };\n    /**\n     * Download the document related file\n     * @param {any} response Response of download file\n     */\n    const downloadFile = (response, doc) => {\n        let fileName = '';\n        const contentDisposition = response.headers['content-disposition'];\n\n        if (contentDisposition && contentDisposition.indexOf('attachment') !== -1) {\n            const fileNameReg = /filename[^;=\\n]*=((['\"]).*?\\2|[^;\\n]*)/;\n            const matches = fileNameReg.exec(contentDisposition);\n            if (matches != null && matches[1]) fileName = matches[1].replace(/['\"]/g, '');\n        }\n        const contentType = response.headers['content-type'];\n        const blob = new Blob([response.data], {\n            type: contentType,\n        });\n        if (typeof window.navigator.msSaveBlob !== 'undefined') {\n            window.navigator.msSaveBlob(blob, fileName);\n        } else {\n            const URL = window.URL || window.webkitURL;\n            const downloadUrl = URL.createObjectURL(blob);\n\n            if (fileName) {\n                const aTag = document.createElement('a');\n                if (typeof aTag.download === 'undefined') {\n                    window.location = downloadUrl;\n                } else {\n                    aTag.href = downloadUrl;\n                    aTag.download = fileName;\n                    document.body.appendChild(aTag);\n                    aTag.click();\n                }\n            } else {\n                window.location = downloadUrl;\n            }\n\n            setTimeout(() => {\n                URL.revokeObjectURL(downloadUrl);\n            }, 100);\n        }\n    };\n    const handleDownload = () => {\n        const promised_get_content = restAPI.getFileForDocument(apiId, doc.documentId);\n        promised_get_content\n            .then((done) => {\n                downloadFile(done, document);\n            })\n            .catch((error) => {\n                if (process.env.NODE_ENV !== 'production') {\n                    console.log(error);\n                    Alert.error(intl.formatMessage({\n                        id: 'Apis.Details.Documents.View.error.downloading',\n                        defaultMessage: 'Error downloading the file',\n                    }));\n                }\n            });\n    };\n    return (\n        <React.Fragment>\n            {!fullScreen && <div className={classes.docBadge}>{doc.type}</div>}\n\n            {doc.summary && (\n                <Typography variant='body1' className={classes.docSummary}>\n                    {doc.summary}\n                </Typography>\n            )}\n\n            {doc.sourceType === 'MARKDOWN' && <ReactMarkdown skipHtml={skipHtml} source={code} />}\n            {doc.sourceType === 'INLINE' && <ReactSafeHtml html={code} />}\n            {doc.sourceType === 'URL' && (\n                <a className={classes.displayURL} href={doc.sourceUrl} target='_blank'>\n                    {doc.sourceUrl}\n                    <Icon className={classes.displayURLLink}>open_in_new</Icon>\n                </a>\n            )}\n            {doc.sourceType === 'FILE' && (\n                <Button variant='contained' color='default' className={classes.button} \n                disabled={!isFileAvailable} onClick={handleDownload} >\n                    <FormattedMessage id='Apis.Details.Documents.View.btn.download' defaultMessage='Download' />\n\n                    <Icon>arrow_downward</Icon>\n                </Button>\n            )}\n            {doc.sourceType === 'FILE' && !isFileAvailable && (\n                <Typography className={classes.fileAvailability}>\n                    <FormattedMessage\n                        id='Apis.Details.Documents.View.file.availability'\n                        defaultMessage='No file available'\n                    />\n                </Typography>\n            )}\n        </React.Fragment>\n    );\n}\n\nView.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    doc: PropTypes.shape({}).isRequired,\n    apiId: PropTypes.string.isRequired,\n    intl: PropTypes.shape({\n        formatMessage: PropTypes.func,\n    }).isRequired,\n    fullScreen: PropTypes.bool.isRequired,\n};\n\nexport default injectIntl(withStyles(styles)(View));\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\n\nimport Button from '@material-ui/core/Button';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Icon from '@material-ui/core/Icon';\nimport Divider from '@material-ui/core/Divider';\nimport Grid from '@material-ui/core/Grid';\nimport JSFileDownload from 'js-file-download';\nimport TextField from '@material-ui/core/TextField';\nimport Typography from '@material-ui/core/Typography';\nimport PropTypes from 'prop-types';\nimport { withStyles, withTheme } from '@material-ui/core/styles';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport InlineMessage from 'AppComponents/Shared/InlineMessage';\nimport AuthManager from 'AppData/AuthManager';\nimport { app } from 'Settings';\nimport Api from '../../../data/api';\n\nconst styles = theme => ({\n    genericMessageWrapper: {\n        margin: theme.spacing(2),\n    },\n    titleSub: {\n        marginLeft: theme.spacing(3),\n        paddingTop: theme.spacing(2),\n        paddingBottom: theme.spacing(2),\n        color: theme.palette.getContrastText(theme.palette.background.default),\n    },\n    gridRoot: {\n        marginLeft: theme.spacing(2),\n    },\n    titleWrappper: {\n        display: 'flex',\n        alignItems: 'center',\n        '& h4' : {\n            marginRight: theme.spacing(1),\n        },\n    },\n    cardTitle: {\n        background: theme.palette.grey[50],\n    },\n    cardRoot: {\n        background: theme.custom.apiDetailPages.sdkBackground,\n    }\n});\n\n/**\n *\n *\n * @class Sdk\n * @extends {React.Component}\n */\nclass Sdk extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            sdkLanguages: null,\n            items: null,\n        };\n        const { match, apiId } = this.props;\n        this.api_uuid = match ? match.params.apiUuid : apiId;\n        this.filter_threshold = 5;\n        this.getSdkForApi = this.getSdkForApi.bind(this);\n        this.handleClick = this.handleClick.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n        this.addDefaultSrc = this.addDefaultSrc.bind(this);\n    }\n\n    /**\n     *\n     *\n     * @memberof Sdk\n     */\n    componentDidMount() {\n        const api = new Api();\n        const user = AuthManager.getUser();\n        if (user != null) {\n            const promised_languages = api.getSdkLanguages();\n\n            promised_languages\n                .then((response) => {\n                    if (response.obj.length === 0) {\n                        this.setState({ sdkLanguages: false });\n                        return;\n                    }\n                    this.setState({ sdkLanguages: response.obj });\n                    this.setState({ items: response.obj });\n                })\n                .catch((error) => {\n                    if (process.env.NODE_ENV !== 'production') {\n                        console.log(error);\n                    }\n                    const status = error.status;\n                    if (status === 404) {\n                        this.setState({ notFound: true });\n                    }\n                });\n        }\n    }\n\n    /**\n     * Call the REST API to generate the SDK\n     *\n     * @param {*} apiId\n     * @param {*} language\n     * @memberof Sdk\n     */\n    getSdkForApi(apiId, language) {\n        const api = new Api();\n        const promised_sdk = api.getSdk(apiId, language);\n\n        promised_sdk\n            .then((response) => {\n                const sdkZipName = response.headers['content-disposition'].match(/filename=\"(.+)\"/)[1];\n                const sdkZip = response.data;\n                // Prompt to download zip file for the SDK\n                JSFileDownload(sdkZip, sdkZipName);\n            })\n            .catch((error) => {\n                if (process.env.NODE_ENV !== 'production') {\n                    console.log(error);\n                }\n                const status = error.status;\n                if (status === 404) {\n                    this.setState({ notFound: true });\n                } else if (status === 400) {\n                    this.setState({ badRequest: true });\n                } else if (status === 500) {\n                    this.setState({ serverError: true });\n                }\n            });\n    }\n\n    /**\n     * Handle the click event of the download button\n     *\n     * @memberof Sdk\n     */\n    handleClick = (event, item) => {\n        const apiId = this.api_uuid;\n        const language = item;\n        this.getSdkForApi(apiId, language);\n    };\n\n    /**\n     * Handle the change event of the Search input field\n     *\n     * @memberof Sdk\n     */\n    handleChange = (event) => {\n        let updatedList = this.state.sdkLanguages;\n        updatedList = updatedList.filter((item) => {\n            return item.toLowerCase().search(event.target.value.toLowerCase()) !== -1;\n        });\n        this.setState({ items: updatedList });\n    };\n\n    /**\n     * Handle sdk image not found issue. Point to a default image\n     */\n    addDefaultSrc = (ev) => {\n        ev.target.src = app.context + '/site/public/images/sdks/default.svg';\n    };\n\n    /**\n     *\n     *\n     * @returns\n     * @memberof Sdk\n     */\n    render() {\n        const languageList = this.state.items;\n        const {\n            onlyIcons, intl, classes, theme,\n        } = this.props;\n        const {\n            custom: {\n                apiDetailPages: { onlyShowSdks },\n            },\n        } = theme;\n        const filteredLanguageList =\n        languageList && languageList.length > 0 && onlyShowSdks && onlyShowSdks.length > 0\n                ? languageList.filter(lang => onlyShowSdks.includes(lang.toLowerCase()))\n                : languageList;\n        if (onlyIcons) {\n            return (\n                filteredLanguageList && (\n                    <React.Fragment>\n                        {filteredLanguageList.map((language, index) =>\n                            index < 3 && (\n                                <Grid item xs={4} key={index}>\n                                    <Button\n                                        onClick={event => this.handleClick(event, language)}\n                                        style={{ cursor: 'pointer' }}\n                                        aria-label={'Download ' + language + ' SDK'}\n                                    >\n                                        <img\n                                            alt={language}\n                                            src={\n                                                app.context +\n                                                    '/site/public/images/sdks/' +\n                                                    new String(language) +\n                                                    '.svg'\n                                            }\n                                            style={{\n                                                width: 80,\n                                                height: 80,\n                                                margin: 10,\n                                            }}\n                                        />\n                                    </Button>\n                                </Grid>\n                            ))}\n                    </React.Fragment>\n                )\n            );\n        }\n        return (\n            <React.Fragment>\n                <div className={classes.titleWrappper}>\n                    <Typography variant='h4' component='h2' className={classes.titleSub}>\n                        <FormattedMessage id='Apis.Details.Sdk.title' defaultMessage='Software Development Kits (SDKs)' />\n                    </Typography>\n                    {filteredLanguageList && this.state.sdkLanguages.length >= this.filter_threshold && (\n                        <TextField\n                            variant=\"outlined\"\n                            id='search'\n                            label={intl.formatMessage({\n                                defaultMessage: 'Search SDK',\n                                id: 'Apis.Details.Sdk.search.sdk',\n                            })}\n                            type='text'\n                            margin='normal'\n                            name='searchSdk'\n                            onChange={this.handleChange}\n                        />\n                    )}\n                </div>\n                {filteredLanguageList ? (\n                    <Grid container className='tab-grid' spacing={0} className={classes.gridRoot}>\n                        <Grid item xs={12} sm={6} md={9} lg={9} xl={10}>\n                            <Grid container justify='flex-start' spacing={4}>\n                                {filteredLanguageList.map((language, index) => (\n                                    <Grid key={index} item key={index}>\n                                        <div style={{ width: 'auto', textAlign: 'center', margin: '10px' }}>\n                                            <Card className={classes.cardRoot}>\n                                                <div>{language.toString().toUpperCase()}</div>\n                                                <Divider />\n                                                <CardMedia\n                                                    title={language.toString().toUpperCase()}\n                                                    src={\n                                                        app.context + '/site/public/images/sdks/' +\n                                                        new String(language) +\n                                                        '.svg'\n                                                    }\n                                                    classes={{root: classes.cardTitle}}\n                                                >\n                                                    <img\n                                                        alt={language}\n                                                        onError={this.addDefaultSrc}\n                                                        src={`${app.context}/site/public/images/sdks/${language}.svg`}\n                                                        style={{ width: '100px', height: '100px', margin: '30px' }}\n                                                    />\n                                                </CardMedia>\n                                                <CardActions>\n                                                    <Grid container justify='center'>\n                                                        <Button\n                                                            color='secondary'\n                                                            onClick={event => this.handleClick(event, language)}\n                                                            area-label={'Download ' + language + ' SDK'}\n                                                        >\n                                                            <Icon>arrow_downward</Icon>\n                                                            {'Download'}\n                                                        </Button>\n                                                    </Grid>\n                                                </CardActions>\n                                            </Card>\n                                        </div>\n                                    </Grid>\n                                ))}\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                ) : (\n                    <div className={classes.genericMessageWrapper}>\n                        <InlineMessage type='info' className={classes.dialogContainer}>\n                            <Typography variant='h5' component='h3'>\n                                <FormattedMessage id='Apis.Details.Sdk.no.sdks' defaultMessage='No SDKs' />\n                            </Typography>\n                            <Typography component='p'>\n                                <FormattedMessage\n                                    id='Apis.Details.Sdk.no.sdks.content'\n                                    defaultMessage='No SDKs available for this API'\n                                />\n                            </Typography>\n                        </InlineMessage>\n                    </div>\n                )}\n            </React.Fragment>\n        );\n    }\n}\n\nSdk.propTypes = {\n    classes: PropTypes.instanceOf(Object).isRequired,\n};\n\nexport default injectIntl(withStyles(styles, { withTheme: true })(Sdk));\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport { withStyles, withTheme } from '@material-ui/core/styles';\n\nimport PropTypes from 'prop-types';\nimport Chip from '@material-ui/core/Chip';\nimport { injectIntl } from 'react-intl';\nimport CONSTS from 'AppData/Constants';\nimport Api from 'AppData/api';\nimport { ApiContext } from './ApiContext';\n\n/**\n *\n *\n * @param {*} props\n * @returns\n */\nfunction RenderMethodBase(props) {\n    const { theme, method } = props;\n    let chipColor = theme.custom.resourceChipColors ? theme.custom.resourceChipColors[method] : null;\n    let chipTextColor = '#000000';\n    if (!chipColor) {\n        console.log('Check the theme settings. The resourceChipColors is not populated properly');\n        chipColor = '#cccccc';\n    } else {\n        chipTextColor = theme.palette.getContrastText(theme.custom.resourceChipColors[method]);\n    }\n    return (<Chip\n        label={method.toUpperCase()}\n        style={{ \n            backgroundColor: chipColor,\n            color: chipTextColor,\n            height: 20,\n            margin: '5px',\n        }}\n    />);\n}\n\nRenderMethodBase.propTypes = {\n    theme: PropTypes.shape({}).isRequired,\n    method: PropTypes.string.isRequired,\n};\n\nconst RenderMethod = withTheme(RenderMethodBase);\n/**\n *\n *\n * @param {*} theme\n */\nconst styles = theme => ({\n    root: {\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems: 'center',\n        marginBottom: 10,\n    },\n    heading: {\n        marginRight: 20,\n        color: theme.palette.getContrastText(theme.custom.infoBar.sliderBackground),\n    },\n});\n/**\n *\n *\n * @class Resources\n * @extends {React.Component}\n */\nclass Resources extends React.Component {\n    /**\n     *Creates an instance of Resources.\n     * @param {*} props\n     * @memberof Resources\n     */\n    constructor(props) {\n        super(props);\n        this.state = {\n            paths: null,\n            swagger: {},\n        };\n        this.api = new Api();\n    }\n\n    /**\n     *\n     *\n     * @memberof Resources\n     */\n    componentDidMount() {\n        const { api } = this.props;\n        let promisedApi = null;\n\n        const apiClient = new Api();\n        promisedApi = apiClient.getSwaggerByAPIId(api.id);\n\n        promisedApi\n            .then((response) => {\n                if (response.obj.paths !== undefined) {\n                    this.setState({ paths: response.obj.paths });\n                }\n            })\n            .catch((error) => {\n                if (process.env.NODE_ENV !== 'production') console.log(error);\n                const status = error.status;\n                if (status === 404) {\n                    this.setState({ notFound: true });\n                } else if (status === 401) {\n                    this.setState({ isAuthorize: false });\n                    const params = qs.stringify({ reference: this.props.location.pathname });\n                    this.props.history.push({ pathname: '/login', search: params });\n                }\n            });\n    }\n\n    /**\n     *\n     *\n     * @returns\n     * @memberof Resources\n     */\n    render() {\n        const { paths } = this.state;\n        if (this.state.notFound) {\n            return <div>resource not found...</div>;\n        }\n        if (!paths) {\n            return <div>loading...</div>;\n        }\n        const { classes } = this.props;\n\n        return (\n            <div className={classes.root}>\n                <div className={classes.contentWrapper}>\n                    {Object.keys(paths).map((key) => {\n                        const path = paths[key];\n                        return (\n                            <div className={classes.root} key={key}>\n                                <Typography className={classes.heading} variant='body1'>\n                                    {key}\n                                </Typography>\n                                {Object.keys(path).map((innerKey) => {\n                                    return CONSTS.HTTP_METHODS.includes(innerKey) ? (\n                                        <RenderMethod method={innerKey} key={innerKey} />\n                                    ) : null;\n                                })}\n                            </div>\n                        );\n                    })}\n                </div>\n            </div>\n        );\n    }\n}\n\nResources.contextType = ApiContext;\n\nResources.propTypes = {\n    classes: PropTypes.object.isRequired,\n    intl: PropTypes.shape({\n        formatMessage: PropTypes.func,\n    }).isRequired,\n};\n\nexport default injectIntl(withStyles(styles)(Resources));\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport { withStyles, withTheme } from '@material-ui/core/styles';\nimport { FormattedMessage } from 'react-intl';\nimport { injectIntl } from 'react-intl';\nimport Table from '@material-ui/core/Table';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableRow from '@material-ui/core/TableRow';\n\nimport PropTypes from 'prop-types';\nimport Chip from '@material-ui/core/Chip';\nimport Api from 'AppData/api';\n\n/**\n *\n *\n * @param {*} props\n * @returns\n */\nfunction RenderMethodBase(props) {\n    const { theme, method } = props;\n    let chipColor = theme.custom.operationChipColor\n        ? theme.custom.operationChipColor[method]\n        : null;\n    let chipTextColor = '#000000';\n    if (!chipColor) {\n        console.log('Check the theme settings. The resourceChipColors is not populated properlly');\n        chipColor = '#cccccc';\n    } else {\n        chipTextColor = theme.palette.getContrastText(theme.custom.operationChipColor[method]);\n    }\n    return <Chip label={method} style={{ backgroundColor: chipColor, color: chipTextColor, height: 20 }} />;\n}\n\nRenderMethodBase.propTypes = {\n    theme: PropTypes.object.isRequired,\n    method: PropTypes.object.isRequired,\n};\n\nconst RenderMethod = withTheme(RenderMethodBase);\n/**\n *\n *\n * @param {*} theme\n */\nconst styles = {\n    root: {\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems: 'center',\n        marginBottom: 10,\n    },\n    heading: {\n        marginRight: 20,\n    },\n};\n/**\n *\n *\n * @class Operations\n * @extends {React.Component}\n */\nclass Operations extends React.Component {\n    /**\n     *Creates an instance of Operations.\n     * @param {*} props\n     * @memberof Operations\n     */\n    constructor(props) {\n        super(props);\n        this.state = {\n            operations: null,\n        };\n        this.api = new Api();\n    }\n\n    /**\n     *\n     *\n     * @memberof Operations\n     */\n    componentDidMount() {\n        const { api } = this.props;\n        this.setState({ operations: api.operations });\n    }\n\n    /**\n     *\n     *\n     * @returns\n     * @memberof Operations\n     */\n    render() {\n        const { operations } = this.state;\n        if (!operations) {\n            return <div>\n                <FormattedMessage\n                    id='Apis.Details.Operations.notFound'\n                    defaultMessage='Operations Not Found'\n                />\n            </div>;\n        }\n        const { classes } = this.props;\n\n        return (\n            <Table>\n                {operations && operations.length !== 0 && operations.map(item => (\n                    <TableRow style={{ borderStyle: 'hidden' }} key={item.target + '_' + item.verb}>\n                        <TableCell>\n                            <Typography className={classes.heading} component='p' variant='body1'>\n                                {item.target}\n                            </Typography>\n                        </TableCell>\n                        <TableCell>\n                            <RenderMethod method={item.verb.toLowerCase()} />\n                        </TableCell>\n                    </TableRow>\n                ))}\n            </Table>\n        );\n    }\n}\nOperations.propTypes = {\n    classes: PropTypes.object.isRequired,\n    intl: PropTypes.shape({\n        formatMessage: PropTypes.func,\n    }).isRequired,\n   \n};\n\nexport default injectIntl(withStyles(styles)(Operations));\n","/* eslint-disable react/prop-types */\n/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { useHistory } from 'react-router-dom';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport ListSubheader from '@material-ui/core/ListSubheader';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Icon from '@material-ui/core/Icon';\nimport { withStyles } from '@material-ui/core/styles';\nimport { FormattedMessage } from 'react-intl';\nimport API from 'AppData/api';\n\n/**\n * Add two numbers.\n * @param {JSON} theme The second number.\n * @returns {JSON} The theme object.\n */\nconst styles = (theme) => ({\n    root: {\n        padding: theme.spacing(3),\n        maxWidth: theme.custom.contentAreaWidth,\n    },\n    iconClass: {\n        marginRight: 10,\n        color: theme.palette.secondary.main,\n    },\n    boxBadge: {\n        background: theme.palette.grey.A400,\n        color: theme.palette.getContrastText(theme.palette.grey.A400),\n        fontSize: theme.typography.h5.fontSize,\n        padding: theme.spacing(1),\n        width: 30,\n        height: 30,\n        marginRight: 20,\n        textAlign: 'center',\n    },\n    subscriptionBox: {\n        paddingLeft: theme.spacing(2),\n    },\n    linkStyle: {\n        color: theme.palette.getContrastText(theme.palette.background.default),\n        fontSize: theme.typography.fontSize,\n    },\n    subscriptionTop: {\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems: 'center',\n    },\n    resourceWrapper: {\n        height: 192,\n        overflow: 'auto',\n    },\n    actionPanel: {\n        justifyContent: 'flex-start',\n    },\n    linkToTest: {\n        textDecoration: 'none',\n    },\n    emptyBox: {\n        background: '#ffffff55',\n        color: '#444',\n        border: 'solid 1px #fff',\n        padding: theme.spacing(2),\n        marginTop: 50,\n    },\n    listWrapper: {\n        padding: 0,\n        margin: 0,\n        width: '100%',\n    },\n    listItemStyle: {\n        padding: 0,\n        marging: 0,\n    },\n});\n\n/**\n * Add two numbers.\n * @param {number} props The second number.\n * @returns {JSX} jsx.\n */\nfunction OverviewDocuments(props) {\n    const [docs, setDocs] = useState([]);\n    const { apiId, setDocsCount } = props;\n    const history = useHistory();\n    const truncateString = (n, str) => {\n        return (str.length > n) ? str.substr(0, n - 1) + '...' : str;\n    };\n    useEffect(() => {\n        const restApi = new API();\n        const promisedApi = restApi.getDocumentsByAPIId(apiId);\n        promisedApi\n            .then((response) => {\n                if (response.obj.list.length > 0) {\n                    // Rearanging the response to group them by the sourceType property.\n                    setDocs(response.obj.list);\n                    setDocsCount(response.obj.count);\n                }\n            })\n            .catch((error) => {\n                if (process.env.NODE_ENV !== 'production') {\n                    console.log(error);\n                }\n                const { status } = error;\n                if (status === 404) {\n                    Alert.error('Error occurred');\n                }\n            });\n    }, []);\n\n    const gotoDoc = (documentId) => {\n        history.push('/apis/' + apiId + '/documents/' + documentId);\n    };\n    /**\n     *\n     *\n     * @returns\n     * @memberof Overview\n     */\n\n    const { classes } = props;\n    if (docs.length === 0) {\n        return (\n            <Grid container className={classes.root} spacing={2}>\n                <Grid item xs={12}>\n                    <div className={classes.emptyBox}>\n                        <Typography variant='body2'>\n                            <FormattedMessage\n                                id='Apis.Details.Overview.documents.no.content'\n                                defaultMessage='No Documents Available'\n                            />\n                        </Typography>\n                    </div>\n                </Grid>\n            </Grid>\n        );\n    }\n\n    return (\n        docs.length > 0 && (\n            <List\n                component='nav'\n                aria-label='Available documents'\n                subheader={(\n                    <ListSubheader component='div' id='nested-list-subheader' className={classes.listItemStyle}>\n                        <FormattedMessage\n                            id='Apis.Details.Overview.documents.list.title.prefix'\n                            defaultMessage='Showing '\n                        />\n                        {docs.length === 1 && (\n                            <>\n                                1\n                                <FormattedMessage\n                                    id='Apis.Details.Overview.documents.list.title.sufix.document'\n                                    defaultMessage=' Document'\n                                />\n                            </>\n                        )}\n                        {docs.length === 2 && (\n                            <>\n                                2\n                                <FormattedMessage\n                                    id='Apis.Details.Overview.documents.list.title.sufix.documents'\n                                    defaultMessage=' Documents'\n                                />\n                            </>\n                        )}\n                        {docs.length > 2 && (\n                            <>\n                                3\n                                <FormattedMessage\n                                    id='Apis.Details.Overview.documents.list.title.sufix.documents.multiple'\n                                    defaultMessage=' Documents out of '\n                                />\n                                {docs.length}\n                            </>\n                        )}\n                    </ListSubheader>\n                )}\n                className={classes.listWrapper}\n            >\n                {docs.map((doc, index) => (\n                    index <= 2\n                    && (\n                        <ListItem button onClick={() => gotoDoc(doc.documentId)} className={classes.listItemStyle} key={doc.name}>\n                            <ListItemIcon>\n                                <Icon>insert_drive_file</Icon>\n                            </ListItemIcon>\n                            <ListItemText primary={doc.name} secondary={truncateString(100, doc.summary)} />\n                        </ListItem>\n                    )\n                ))}\n            </List>\n        )\n    );\n}\n\nOverviewDocuments.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    theme: PropTypes.shape({}).isRequired,\n};\n\nexport default withStyles(styles, { withTheme: true })(OverviewDocuments);\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useState, useEffect, useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport { withStyles } from '@material-ui/core/styles';\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport MuiExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport { Link } from 'react-router-dom';\nimport Divider from '@material-ui/core/Divider';\nimport Paper from '@material-ui/core/Paper';\nimport ExpansionPanelActions from '@material-ui/core/ExpansionPanelActions';\nimport Button from '@material-ui/core/Button';\nimport Alert from 'AppComponents/Shared/Alert';\nimport { FormattedMessage } from 'react-intl';\nimport API from 'AppData/api';\nimport AuthManager from 'AppData/AuthManager';\nimport View from 'AppComponents/Apis/Details/Documents/View';\nimport CustomIcon from 'AppComponents/Shared/CustomIcon';\nimport Box from '@material-ui/core/Box';\nimport { app } from 'Settings';\nimport { ApiContext } from './ApiContext';\nimport Resources from './Resources';\nimport Operations from './Operations';\nimport Comments from './Comments/Comments';\nimport Sdk from './Sdk';\nimport OverviewDocuments from './OverviewDocuments';\n\n/**\n *\n *\n * @param {*} theme\n */\nconst styles = (theme) => ({\n    root: {\n        padding: theme.spacing(3),\n        color: theme.palette.getContrastText(theme.palette.background.paper),\n        margin: -1 * theme.spacing(0, 2),\n    },\n    iconClass: {\n        marginRight: 10,\n    },\n    boxBadge: {\n        background: theme.palette.grey.A400,\n        fontSize: theme.typography.h5.fontSize,\n        padding: theme.spacing(1),\n        width: 30,\n        height: 30,\n        marginRight: 20,\n        textAlign: 'center',\n    },\n    subscriptionBox: {\n        paddingLeft: theme.spacing(2),\n    },\n    linkStyle: {\n        color: theme.palette.getContrastText(theme.palette.background.default),\n        fontSize: theme.typography.fontSize,\n    },\n    subscriptionTop: {\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems: 'center',\n    },\n    resourceWrapper: {\n        height: 192,\n        overflow: 'auto',\n    },\n    actionPanel: {\n        justifyContent: 'flex-start',\n    },\n    linkToTest: {\n        textDecoration: 'none',\n    },\n    button: {\n        textDecoration: 'none',\n    },\n    verticalSpace: {\n        marginLeft: theme.spacing(60),\n    },\n    subheading: {\n        marginLeft: theme.spacing(2),\n        color: theme.palette.getContrastText(theme.palette.background.paper),\n    },\n    marginTop: {\n        marginTop: theme.spacing(8),\n    },\n    subsToApp: {\n        marginTop: theme.spacing(2),\n    },\n    expansionRoot: {\n        minHeight: 238,\n    },\n    noCommentRoot: {\n        backgroundImage: `url(${app.context + theme.custom.overviewPage.commentsBackground})`,\n        height: '100%',\n        backgroundPosition: 'center',\n        backgroundRepeat: 'no-repeat',\n        backgroundSize: 'cover',\n        minHeight: 192,\n    },\n    commentRoot: {\n        height: '100%',\n        minHeight: 192,\n    },\n    noDocumentRoot: {\n        backgroundImage: `url(${app.context + theme.custom.overviewPage.documentsBackground})`,\n        height: '100%',\n        backgroundPosition: 'center',\n        backgroundRepeat: 'no-repeat',\n        backgroundSize: 'cover',\n        minHeight: 192,\n    },\n    noCredentialsRoot: {\n        backgroundImage: `url(${app.context + theme.custom.overviewPage.credentialsBackground})`,\n        height: '100%',\n        backgroundPosition: 'center',\n        backgroundRepeat: 'no-repeat',\n        backgroundSize: 'cover',\n        minHeight: 236,\n    },\n    emptyBox: {\n        background: theme.custom.overview.noContentBackground,\n        color: theme.palette.getContrastText(theme.custom.overview.noContentBackground),\n        border: 'solid 1px #fff',\n        padding: theme.spacing(2),\n        '& span': {\n            color: theme.palette.getContrastText(theme.custom.overview.noContentBackground),\n        }\n    },\n    paper: {\n        margin: theme.spacing(2),\n        padding: theme.spacing(2),\n    },\n    paperWithDoc: {\n        margin: theme.spacing(2),\n        padding: theme.spacing(2),\n        color: theme.palette.getContrastText(theme.palette.background.paper),\n    },\n    heading: {\n        color: theme.palette.getContrastText(theme.palette.background.paper),\n    },\n    mutualsslMessage: {\n        marginTop: theme.spacing(2),\n    }\n});\nconst ExpansionPanelSummary = withStyles({\n    root: {\n        borderBottom: '1px solid rgba(0,0,0,.125)',\n        marginBottom: -1,\n        minHeight: 56,\n        '&$expanded': {\n            minHeight: 56,\n        },\n    },\n    content: {\n        '&$expanded': {\n            margin: '12px 0',\n        },\n        alignItems: 'center',\n    },\n    expanded: {},\n})((props) => <MuiExpansionPanelSummary {...props} />);\n\nExpansionPanelSummary.muiName = 'ExpansionPanelSummary';\n\n/**\n * Handles the Overview page for APIs and API Products.\n * @param {*} props properties passed by parent element\n * @memberof Overview\n */\nfunction Overview(props) {\n    const { classes, theme } = props;\n    const {\n        custom: {\n            apiDetailPages: {\n                showCredentials, showComments, showTryout, showDocuments, showSdks,\n            },\n        },\n    } = theme;\n    const { api, subscribedApplications } = useContext(ApiContext);\n    const [totalComments, setCount] = useState(0);\n    const [totalDocuments, setDocsCount] = useState(0);\n    const [overviewDocOverride, setOverviewDocOverride] = useState(null);\n    const isOnlyMutualSSL = api.securityScheme.includes('mutualssl') && !api.securityScheme.includes('oauth2') &&\n        !api.securityScheme.includes('api_key') && !api.securityScheme.includes('basic_auth');\n    const isOnlyBasicAuth = api.securityScheme.includes('basic_auth') && !api.securityScheme.includes('oauth2') &&\n        !api.securityScheme.includes('api_key');\n    useEffect(() => {\n        const restApi = new API();\n        const promisedApi = restApi.getDocumentsByAPIId(api.id);\n        promisedApi\n            .then((response) => {\n                const overviewDoc = response.body.list.filter((item) => item.otherTypeName === '_overview');\n                if (overviewDoc.length > 0) {\n                    // We can override the UI with this content\n                    setOverviewDocOverride(overviewDoc[0]); // Only one doc we can render\n                }\n            })\n            .catch((error) => {\n                if (process.env.NODE_ENV !== 'production') {\n                    console.log(error);\n                }\n                const { status } = error;\n                if (status === 404) {\n                    Alert.error('Error occurred');\n                }\n            });\n    }, []);\n    const getResourcesForAPIs = (apiType, apiObject) => {\n        switch (apiType) {\n            case 'GRAPHQL':\n                return <Operations api={apiObject} />;\n            case 'WS':\n                return '';\n            default:\n                return <Resources api={apiObject} />;\n        }\n    };\n\n    const getTitleForAPIOperationType = (apiType) => {\n        switch (apiType) {\n            case 'GRAPHQL':\n                return <FormattedMessage id='Apis.Details.Overview.operations.title' defaultMessage='Operations' />;\n            default:\n                return <FormattedMessage id='Apis.Details.Overview.resources.title' defaultMessage='Resources' />;\n        }\n    };\n    if (overviewDocOverride) {\n        return (\n            <>\n                <Paper className={classes.paperWithDoc}>\n                    <View doc={overviewDocOverride} apiId={api.id} fullScreen />\n                </Paper>\n            </>\n        );\n    }\n    const { titleIconColor } = theme.custom.overview;\n    const { titleIconSize } = theme.custom.overview;\n    const user = AuthManager.getUser();\n    return (\n        <Grid container className={classes.root} spacing={2}>\n            {!api.advertiseInfo.advertised && showCredentials && (\n                <Grid item xs={12} lg={6}>\n                    <ExpansionPanel defaultExpanded>\n                        <ExpansionPanelSummary\n                            aria-controls='panelSubscriptions-content'\n                            id='panelSubscriptions-header'\n                        >\n                            <CustomIcon\n                                strokeColor={titleIconColor}\n                                className={classes.iconClass}\n                                width={titleIconSize}\n                                height={titleIconSize}\n                                icon='credentials'\n                            />\n                            <Typography className={classes.heading} variant='h6' component='h2'>\n                                <FormattedMessage\n                                    id='Apis.Details.Overview.api.subscriptions'\n                                    defaultMessage='Subscriptions'\n                                />\n                            </Typography>\n                        </ExpansionPanelSummary>\n                        {api.lifeCycleStatus && api.lifeCycleStatus.toLowerCase() === 'prototyped' ? (\n                            <ExpansionPanelDetails\n                                classes={{\n                                    root: classes.noCredentialsRoot,\n                                }}\n                            >\n                                <Grid container className={classes.root} spacing={2}>\n                                    <Grid item xs={12} className={classes.marginTop}>\n                                        <div className={classes.emptyBox}>\n                                            <Typography variant='body2'>\n                                                <FormattedMessage\n                                                    id='Apis.Details.Overview.no.subscription.message'\n                                                    defaultMessage='Subscriptions Are Not Allowed'\n                                                />\n                                            </Typography>\n                                        </div>\n                                    </Grid>\n                                </Grid>\n                            </ExpansionPanelDetails>\n                        ) : (\n                                <ExpansionPanelDetails classes={{ root: classes.expansionRoot }}>\n                                    <Grid container className={classes.root} spacing={2}>\n                                        <Grid item xs={12}>\n                                            <Typography variant='subtitle2' component='h3'>\n                                                <FormattedMessage\n                                                    id='Apis.Details.Overview.subscriptions.title'\n                                                    defaultMessage='Subscriptions'\n                                                />\n                                            </Typography>\n                                            <Typography variant='body2'>\n                                                <FormattedMessage\n                                                    id='Apis.Details.Overview.subscribe.info'\n                                                    defaultMessage={\n                                                        'Subscription enables you to receive access'\n                                                        + ' tokens and be authenticated to invoke this API.'\n                                                    }\n                                                />\n                                            </Typography>\n                                            <Box display='block' mt={2}>\n                                                <Grid item xs={12}>\n                                                    {user ? (\n                                                        <Box display='flex' flexDirection='column' mr={2}>\n                                                            <Button\n                                                                variant='contained'\n                                                                color='primary'\n                                                                size='large'\n                                                                component={Link}\n                                                                to={'/apis/' + api.id + '/credentials'}\n                                                                disabled={!api.isSubscriptionAvailable || isOnlyMutualSSL ||\n                                                                        isOnlyBasicAuth }\n                                                            >\n                                                                <FormattedMessage\n                                                                    id={'Apis.Details.Overview.subscribe' +\n                                                                        'btn.link'}\n                                                                    defaultMessage='Subscribe'\n                                                                />\n                                                            </Button>\n                                                            {subscribedApplications && (<Typography variant='caption' component='div'>\n                                                                {subscribedApplications.length === 0 ? (<FormattedMessage\n                                                                    id='Apis.Details.Overview.subscribe.count.zero'\n                                                                    defaultMessage={\n                                                                        'No application subscriptions.'\n                                                                    }\n                                                                />): (\n                                                                    subscribedApplications.length    \n                                                                )}\n                                                                {(isOnlyMutualSSL || isOnlyBasicAuth) && (\n                                                                    <Grid className={classes.mutualsslMessage}>\n                                                                    <Typography variant='body2'>\n                                                                    <FormattedMessage\n                                                                        id='Apis.Details.Overview.mutualssl.basicauth'\n                                                                        defaultMessage={'Subscription is not required for Mutual SSL APIs' + \n                                                                        ' or APIs with only Basic Authentication.'}\n                                                                    />\n                                                                    </Typography>\n                                                                    </Grid>\n                                                                )}\n                                                                {' '}\n                                                                {subscribedApplications.length === 1 && (<>\n                                                                    <FormattedMessage\n                                                                        id='Apis.Details.Overview.subscribe.count.singular'\n                                                                        defaultMessage={\n                                                                            'Application subscribed.'\n                                                                        }\n                                                                    /></>)}\n                                                                {subscribedApplications.length > 1 && (<>\n                                                                     <FormattedMessage\n                                                                        id='Apis.Details.Overview.subscribe.count.plural'\n                                                                        defaultMessage={\n                                                                            'Applications subscribed.'\n                                                                        }\n                                                                    /></>)}\n                                                            </Typography>)}\n                                                        </Box>\n                                                    ) : (\n                                                            <Box display='inline' mr={2}>\n                                                                    <Button\n                                                                        variant='contained'\n                                                                        color='primary'\n                                                                        size='large'\n                                                                        disabled={!api.isSubscriptionAvailable}\n                                                                        component='a'\n                                                                        href={app.context + '/services/configs'}\n                                                                    >\n                                                                        <FormattedMessage\n                                                                            id={'Apis.Details.Overview.signin' +\n                                                                                '.subscribe.btn.link'}\n                                                                            defaultMessage='Sign in to Subscribe'\n                                                                        />\n                                                                    </Button>\n                                                            </Box>\n                                                        )}\n                                                </Grid>\n                                            </Box>\n                                        </Grid>\n\n                                    </Grid>\n                                </ExpansionPanelDetails>\n                            )}\n                    </ExpansionPanel>\n                </Grid>\n            )}\n            {api.type !== 'WS' && showTryout && (\n                <Grid item xs={12} lg={6}>\n                    <ExpansionPanel defaultExpanded>\n                        <ExpansionPanelSummary\n                            aria-controls='panelTryout-content'\n                            id='paneltryout-header'\n                        >\n                            <CustomIcon\n                                strokeColor={titleIconColor}\n                                className={classes.iconClass}\n                                width={titleIconSize}\n                                height={titleIconSize}\n                                icon='credentials'\n                            />\n                            <Typography id='APIOperationTitle' className={classes.heading} variant='h6' component='h2'>\n                                {getTitleForAPIOperationType(api.type)}\n                            </Typography>\n                        </ExpansionPanelSummary>\n                        <ExpansionPanelDetails className={classes.resourceWrapper}>\n                            {getResourcesForAPIs(api.type, api)}\n                        </ExpansionPanelDetails>\n                        {!api.advertiseInfo.advertised && (\n                            <>\n                                <Divider />\n                                <ExpansionPanelActions className={classes.actionPanel}>\n                                    <Button\n                                        id='test'\n                                        size='small'\n                                        color='primary'\n                                        aria-labelledby='test APIOperationTitle'\n                                        className={classes.linkToTest}\n                                        component={Link}\n                                        to={'/apis/' + api.id + '/test'}\n                                    >\n                                        <FormattedMessage\n                                            id='Apis.Details.Overview.resources.show.more'\n                                            defaultMessage='Test >>'\n                                        />\n                                    </Button>\n                                </ExpansionPanelActions>\n                            </>\n                        )}\n                    </ExpansionPanel>\n                </Grid>\n            )}\n            {!api.advertiseInfo.advertised && (\n                <>\n                    {showComments && (\n                        <Grid item xs={12} lg={6}>\n                            <ExpansionPanel defaultExpanded>\n                                <ExpansionPanelSummary\n                                    aria-controls='panelComments-content'\n                                    id='panelComments-header'\n                                >\n                                    <CustomIcon\n                                        strokeColor={titleIconColor}\n                                        className={classes.iconClass}\n                                        width={titleIconSize}\n                                        height={titleIconSize}\n                                        icon='comments'\n                                    />\n                                    <Typography id='comments' className={classes.heading} variant='h6' component='h2'>\n                                        <FormattedMessage\n                                            id='Apis.Details.Overview.comments.title'\n                                            defaultMessage='Comments'\n                                        />\n                                    </Typography>\n                                    <Typography className={classes.subheading}>\n                                        {' ' + (totalComments > 3 ? 3 : totalComments) + ' of ' + totalComments}\n                                    </Typography>\n                                </ExpansionPanelSummary>\n                                <ExpansionPanelDetails\n                                    classes={{\n                                        root: classNames(\n                                            { [classes.noCommentRoot]: totalComments === 0 },\n                                            { [classes.commentRoot]: totalComments !== 0 },\n                                        ),\n                                    }}\n                                >\n                                    <Grid container className={classes.root} spacing={2}>\n                                        {api && (\n                                            <Grid item xs={12}>\n                                                <Comments apiId={api.id} showLatest isOverview setCount={setCount} />\n                                            </Grid>\n                                        )}\n                                        {totalComments === 0 && (\n                                            <Grid item xs={12}>\n                                                <div className={classes.emptyBox}>\n                                                    <Typography variant='body2'>\n                                                        <FormattedMessage\n                                                            id='Apis.Details.Overview.comments.no.content'\n                                                            defaultMessage='No Comments Yet'\n                                                        />\n                                                    </Typography>\n                                                </div>\n                                            </Grid>\n                                        )}\n                                    </Grid>\n                                </ExpansionPanelDetails>\n                                <Divider />\n                                <ExpansionPanelActions className={classes.actionPanel}>\n                                    <Button\n                                        id='more'\n                                        aria-labelledby='more comments'\n                                        size='small'\n                                        color='primary'\n                                        className={classes.button}\n                                        component={Link}\n                                        to={'/apis/' + api.id + '/comments'}\n                                    >\n                                        <FormattedMessage\n                                            id='Apis.Details.Overview.comments.show.more'\n                                            defaultMessage='Show More >>'\n                                        />\n                                    </Button>\n                                </ExpansionPanelActions>\n                            </ExpansionPanel>\n                        </Grid>\n                    )}\n                    {api.type !== 'WS' && showSdks && (\n                        <Grid item xs={6}>\n                            <ExpansionPanel defaultExpanded>\n                                <ExpansionPanelSummary\n                                    aria-controls='panelsdk-content'\n                                    id='panelsdk-header'\n                                >\n                                    <CustomIcon\n                                        strokeColor={titleIconColor}\n                                        className={classes.iconClass}\n                                        width={titleIconSize}\n                                        height={titleIconSize}\n                                        icon='sdk'\n                                    />\n                                    <Typography id='SDKGeneration' className={classes.heading} variant='h6' component='h2'>\n                                        <FormattedMessage\n                                            id='Apis.Details.Overview.sdk.generation.title'\n                                            defaultMessage='SDK Generation'\n                                        />\n                                    </Typography>\n                                </ExpansionPanelSummary>\n                                <ExpansionPanelDetails className={classes.resourceWrapper}>\n                                    <Grid container className={classes.root} spacing={2}>\n                                        {api && <Sdk apiId={api.id} onlyIcons />}\n                                        <Grid item xs={12}>\n                                            <Typography>\n                                                <FormattedMessage\n                                                    id='Apis.Details.Overview.sdk.generation.description'\n                                                    defaultMessage={`If you want to create a software application\n                                                     to consume the subscribed APIs, you can generate client side\n                                                      SDK for a supported language/framework and use it as a start\n                                                       point to write the software application.`}\n                                                />\n                                            </Typography>\n                                        </Grid>\n                                    </Grid>\n                                </ExpansionPanelDetails>\n                                <Divider />\n                                <ExpansionPanelActions className={classes.actionPanel}>\n                                    <Button\n                                        id='SDKMore'\n                                        size='small'\n                                        color='primary'\n                                        aria-labelledby='SDKMore SDKGeneration'\n                                        className={classes.linkToTest}\n                                        component={Link}\n                                        to={'/apis/' + api.id + '/sdk'}\n                                    >\n                                        <FormattedMessage\n                                            id='Apis.Details.Overview.sdk.generation.show.more'\n                                            defaultMessage='Show More >>'\n                                        />\n                                    </Button>\n                                </ExpansionPanelActions>\n                            </ExpansionPanel>\n                        </Grid>\n                    )}\n                </>\n            )}\n            {showDocuments && (\n                <Grid item xs={12} lg={6}>\n                    <ExpansionPanel defaultExpanded>\n                        <ExpansionPanelSummary\n                            aria-controls='paneldocs-content'\n                            id='paneldocs-header'\n                        >\n                            <CustomIcon\n                                strokeColor={titleIconColor}\n                                className={classes.iconClass}\n                                width={titleIconSize}\n                                height={titleIconSize}\n                                icon='docs'\n                            />\n\n                            <Typography id='Documents' className={classes.heading} variant='h6' component='h2'>\n                                <FormattedMessage\n                                    id='Apis.Details.Overview.documents.title'\n                                    defaultMessage='Documents'\n                                />\n                            </Typography>\n                        </ExpansionPanelSummary>\n                        <ExpansionPanelDetails\n                            classes={{ root: classNames({ [classes.noDocumentRoot]: totalDocuments === 0 }) }}\n                        >\n                            <OverviewDocuments apiId={api.id} setDocsCount={setDocsCount} />\n                        </ExpansionPanelDetails>\n                        <Divider />\n                        <ExpansionPanelActions className={classes.actionPanel}>\n                            <Button\n                                id='DMore'\n                                size='small'\n                                color='primary'\n                                aria-labelledby='DMore Documents'\n                                className={classes.button}\n                                component={Link}\n                                to={'/apis/' + api.id + '/documents'}\n                            >\n                                <FormattedMessage\n                                    id='Apis.Details.Overview.comments.show.more'\n                                    defaultMessage='Show More >>'\n                                />\n                            </Button>\n                        </ExpansionPanelActions>\n                    </ExpansionPanel>\n                </Grid>\n            )}\n        </Grid>\n    );\n}\n\nOverview.propTypes = {\n    classes: PropTypes.instanceOf(Object).isRequired,\n    theme: PropTypes.instanceOf(Object).isRequired,\n};\n\nexport default withStyles(styles, { withTheme: true })(Overview);\n"],"sourceRoot":""}